if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}

var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2411";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__17921__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.call(null, args));
    };
    var G__17921 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__17921__delegate.call(this, args);
    };
    G__17921.cljs$lang$maxFixedArity = 0;
    G__17921.cljs$lang$applyTo = function(arglist__17922) {
      var args = cljs.core.seq(arglist__17922);
      return G__17921__delegate(args);
    };
    G__17921.cljs$core$IFn$_invoke$arity$variadic = G__17921__delegate;
    return G__17921;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3749__auto__ = ty;
    if (cljs.core.truth_(and__3749__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3749__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
if (typeof Symbol !== "undefined" && goog.typeOf(Symbol) === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4643__auto___17923 = len;
  var i_17924 = 0;
  while (true) {
    if (i_17924 < n__4643__auto___17923) {
      new_arr[i_17924] = arr[i_17924];
      var G__17925 = i_17924 + 1;
      i_17924 = G__17925;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments);
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__17926__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs);
    };
    var G__17926 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__17926__delegate.call(this, array, i, idxs);
    };
    G__17926.cljs$lang$maxFixedArity = 2;
    G__17926.cljs$lang$applyTo = function(arglist__17927) {
      var array = cljs.core.first(arglist__17927);
      arglist__17927 = cljs.core.next(arglist__17927);
      var i = cljs.core.first(arglist__17927);
      var idxs = cljs.core.rest(arglist__17927);
      return G__17926__delegate(array, i, idxs);
    };
    G__17926.cljs$core$IFn$_invoke$arity$variadic = G__17926__delegate;
    return G__17926;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__17928__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv);
    };
    var G__17928 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__17928__delegate.call(this, array, idx, idx2, idxv);
    };
    G__17928.cljs$lang$maxFixedArity = 3;
    G__17928.cljs$lang$applyTo = function(arglist__17929) {
      var array = cljs.core.first(arglist__17929);
      arglist__17929 = cljs.core.next(arglist__17929);
      var idx = cljs.core.first(arglist__17929);
      arglist__17929 = cljs.core.next(arglist__17929);
      var idx2 = cljs.core.first(arglist__17929);
      var idxv = cljs.core.rest(arglist__17929);
      return G__17928__delegate(array, idx, idx2, idxv);
    };
    G__17928.cljs$core$IFn$_invoke$arity$variadic = G__17928__delegate;
    return G__17928;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a;
    }, [], aseq);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.js_invoke = function() {
  var js_invoke__delegate = function(obj, s, args) {
    return obj[s].apply(obj, cljs.core.into_array.call(null, args));
  };
  var js_invoke = function(obj, s, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return js_invoke__delegate.call(this, obj, s, args);
  };
  js_invoke.cljs$lang$maxFixedArity = 2;
  js_invoke.cljs$lang$applyTo = function(arglist__17930) {
    var obj = cljs.core.first(arglist__17930);
    arglist__17930 = cljs.core.next(arglist__17930);
    var s = cljs.core.first(arglist__17930);
    var args = cljs.core.rest(arglist__17930);
    return js_invoke__delegate(obj, s, args);
  };
  js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
  return js_invoke;
}();
cljs.core.Fn = function() {
  var obj17932 = {};
  return obj17932;
}();
cljs.core.IFn = function() {
  var obj17934 = {};
  return obj17934;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3749__auto__ = this$;
      if (and__3749__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4400__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3761__auto__ = cljs.core._invoke[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = cljs.core._invoke["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3749__auto__ = this$;
      if (and__3749__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4400__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3761__auto__ = cljs.core._invoke[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = cljs.core._invoke["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3749__auto__ = this$;
      if (and__3749__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4400__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3761__auto__ = cljs.core._invoke[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = cljs.core._invoke["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3749__auto__ = this$;
      if (and__3749__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4400__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3761__auto__ = cljs.core._invoke[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = cljs.core._invoke["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3749__auto__ = this$;
      if (and__3749__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4400__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3761__auto__ = cljs.core._invoke[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = cljs.core._invoke["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3749__auto__ = this$;
      if (and__3749__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4400__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3761__auto__ = cljs.core._invoke[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = cljs.core._invoke["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3749__auto__ = this$;
      if (and__3749__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4400__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3761__auto__ = cljs.core._invoke[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = cljs.core._invoke["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3749__auto__ = this$;
      if (and__3749__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4400__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3761__auto__ = cljs.core._invoke[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = cljs.core._invoke["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3749__auto__ = this$;
      if (and__3749__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4400__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3761__auto__ = cljs.core._invoke[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = cljs.core._invoke["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3749__auto__ = this$;
      if (and__3749__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4400__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3761__auto__ = cljs.core._invoke[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = cljs.core._invoke["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3749__auto__ = this$;
      if (and__3749__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4400__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3761__auto__ = cljs.core._invoke[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = cljs.core._invoke["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3749__auto__ = this$;
      if (and__3749__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4400__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3761__auto__ = cljs.core._invoke[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = cljs.core._invoke["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3749__auto__ = this$;
      if (and__3749__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4400__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3761__auto__ = cljs.core._invoke[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = cljs.core._invoke["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3749__auto__ = this$;
      if (and__3749__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4400__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3761__auto__ = cljs.core._invoke[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = cljs.core._invoke["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3749__auto__ = this$;
      if (and__3749__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4400__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3761__auto__ = cljs.core._invoke[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = cljs.core._invoke["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3749__auto__ = this$;
      if (and__3749__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4400__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3761__auto__ = cljs.core._invoke[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = cljs.core._invoke["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3749__auto__ = this$;
      if (and__3749__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4400__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3761__auto__ = cljs.core._invoke[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = cljs.core._invoke["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3749__auto__ = this$;
      if (and__3749__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4400__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3761__auto__ = cljs.core._invoke[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = cljs.core._invoke["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    if (function() {
      var and__3749__auto__ = this$;
      if (and__3749__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var x__4400__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3761__auto__ = cljs.core._invoke[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = cljs.core._invoke["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    if (function() {
      var and__3749__auto__ = this$;
      if (and__3749__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var x__4400__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3761__auto__ = cljs.core._invoke[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = cljs.core._invoke["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    if (function() {
      var and__3749__auto__ = this$;
      if (and__3749__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var x__4400__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3761__auto__ = cljs.core._invoke[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = cljs.core._invoke["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    }
  };
  var _invoke__22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    if (function() {
      var and__3749__auto__ = this$;
      if (and__3749__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$22;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var x__4400__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3761__auto__ = cljs.core._invoke[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = cljs.core._invoke["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return _invoke__22.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  _invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj17936 = {};
  return obj17936;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3749__auto__ = value;
    if (and__3749__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4400__auto__ = value == null ? null : value;
    return function() {
      var or__3761__auto__ = cljs.core._clone[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._clone["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj17938 = {};
  return obj17938;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3749__auto__ = coll;
    if (and__3749__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4400__auto__ = coll == null ? null : coll;
    return function() {
      var or__3761__auto__ = cljs.core._count[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._count["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj17940 = {};
  return obj17940;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3749__auto__ = coll;
    if (and__3749__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4400__auto__ = coll == null ? null : coll;
    return function() {
      var or__3761__auto__ = cljs.core._empty[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._empty["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj17942 = {};
  return obj17942;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3749__auto__ = coll;
    if (and__3749__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4400__auto__ = coll == null ? null : coll;
    return function() {
      var or__3761__auto__ = cljs.core._conj[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._conj["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj17944 = {};
  return obj17944;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3749__auto__ = coll;
      if (and__3749__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4400__auto__ = coll == null ? null : coll;
      return function() {
        var or__3761__auto__ = cljs.core._nth[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = cljs.core._nth["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3749__auto__ = coll;
      if (and__3749__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4400__auto__ = coll == null ? null : coll;
      return function() {
        var or__3761__auto__ = cljs.core._nth[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = cljs.core._nth["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj17946 = {};
  return obj17946;
}();
cljs.core.ISeq = function() {
  var obj17948 = {};
  return obj17948;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3749__auto__ = coll;
    if (and__3749__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4400__auto__ = coll == null ? null : coll;
    return function() {
      var or__3761__auto__ = cljs.core._first[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._first["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3749__auto__ = coll;
    if (and__3749__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4400__auto__ = coll == null ? null : coll;
    return function() {
      var or__3761__auto__ = cljs.core._rest[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._rest["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj17950 = {};
  return obj17950;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3749__auto__ = coll;
    if (and__3749__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4400__auto__ = coll == null ? null : coll;
    return function() {
      var or__3761__auto__ = cljs.core._next[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._next["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj17952 = {};
  return obj17952;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3749__auto__ = o;
      if (and__3749__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4400__auto__ = o == null ? null : o;
      return function() {
        var or__3761__auto__ = cljs.core._lookup[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = cljs.core._lookup["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3749__auto__ = o;
      if (and__3749__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4400__auto__ = o == null ? null : o;
      return function() {
        var or__3761__auto__ = cljs.core._lookup[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = cljs.core._lookup["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj17954 = {};
  return obj17954;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3749__auto__ = coll;
    if (and__3749__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4400__auto__ = coll == null ? null : coll;
    return function() {
      var or__3761__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3749__auto__ = coll;
    if (and__3749__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4400__auto__ = coll == null ? null : coll;
    return function() {
      var or__3761__auto__ = cljs.core._assoc[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._assoc["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj17956 = {};
  return obj17956;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3749__auto__ = coll;
    if (and__3749__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4400__auto__ = coll == null ? null : coll;
    return function() {
      var or__3761__auto__ = cljs.core._dissoc[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._dissoc["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj17958 = {};
  return obj17958;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3749__auto__ = coll;
    if (and__3749__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4400__auto__ = coll == null ? null : coll;
    return function() {
      var or__3761__auto__ = cljs.core._key[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._key["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3749__auto__ = coll;
    if (and__3749__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4400__auto__ = coll == null ? null : coll;
    return function() {
      var or__3761__auto__ = cljs.core._val[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._val["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj17960 = {};
  return obj17960;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3749__auto__ = coll;
    if (and__3749__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4400__auto__ = coll == null ? null : coll;
    return function() {
      var or__3761__auto__ = cljs.core._disjoin[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._disjoin["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj17962 = {};
  return obj17962;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3749__auto__ = coll;
    if (and__3749__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4400__auto__ = coll == null ? null : coll;
    return function() {
      var or__3761__auto__ = cljs.core._peek[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._peek["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3749__auto__ = coll;
    if (and__3749__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4400__auto__ = coll == null ? null : coll;
    return function() {
      var or__3761__auto__ = cljs.core._pop[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._pop["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj17964 = {};
  return obj17964;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3749__auto__ = coll;
    if (and__3749__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4400__auto__ = coll == null ? null : coll;
    return function() {
      var or__3761__auto__ = cljs.core._assoc_n[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj17966 = {};
  return obj17966;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3749__auto__ = o;
    if (and__3749__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4400__auto__ = o == null ? null : o;
    return function() {
      var or__3761__auto__ = cljs.core._deref[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._deref["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj17968 = {};
  return obj17968;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3749__auto__ = o;
    if (and__3749__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4400__auto__ = o == null ? null : o;
    return function() {
      var or__3761__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj17970 = {};
  return obj17970;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3749__auto__ = o;
    if (and__3749__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4400__auto__ = o == null ? null : o;
    return function() {
      var or__3761__auto__ = cljs.core._meta[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._meta["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj17972 = {};
  return obj17972;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3749__auto__ = o;
    if (and__3749__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4400__auto__ = o == null ? null : o;
    return function() {
      var or__3761__auto__ = cljs.core._with_meta[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._with_meta["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj17974 = {};
  return obj17974;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3749__auto__ = coll;
      if (and__3749__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4400__auto__ = coll == null ? null : coll;
      return function() {
        var or__3761__auto__ = cljs.core._reduce[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = cljs.core._reduce["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3749__auto__ = coll;
      if (and__3749__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4400__auto__ = coll == null ? null : coll;
      return function() {
        var or__3761__auto__ = cljs.core._reduce[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = cljs.core._reduce["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj17976 = {};
  return obj17976;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3749__auto__ = coll;
    if (and__3749__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4400__auto__ = coll == null ? null : coll;
    return function() {
      var or__3761__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj17978 = {};
  return obj17978;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3749__auto__ = o;
    if (and__3749__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4400__auto__ = o == null ? null : o;
    return function() {
      var or__3761__auto__ = cljs.core._equiv[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._equiv["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj17980 = {};
  return obj17980;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3749__auto__ = o;
    if (and__3749__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4400__auto__ = o == null ? null : o;
    return function() {
      var or__3761__auto__ = cljs.core._hash[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._hash["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj17982 = {};
  return obj17982;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3749__auto__ = o;
    if (and__3749__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4400__auto__ = o == null ? null : o;
    return function() {
      var or__3761__auto__ = cljs.core._seq[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._seq["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj17984 = {};
  return obj17984;
}();
cljs.core.IList = function() {
  var obj17986 = {};
  return obj17986;
}();
cljs.core.IRecord = function() {
  var obj17988 = {};
  return obj17988;
}();
cljs.core.IReversible = function() {
  var obj17990 = {};
  return obj17990;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3749__auto__ = coll;
    if (and__3749__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4400__auto__ = coll == null ? null : coll;
    return function() {
      var or__3761__auto__ = cljs.core._rseq[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._rseq["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj17992 = {};
  return obj17992;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3749__auto__ = coll;
    if (and__3749__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4400__auto__ = coll == null ? null : coll;
    return function() {
      var or__3761__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3749__auto__ = coll;
    if (and__3749__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4400__auto__ = coll == null ? null : coll;
    return function() {
      var or__3761__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3749__auto__ = coll;
    if (and__3749__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4400__auto__ = coll == null ? null : coll;
    return function() {
      var or__3761__auto__ = cljs.core._entry_key[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._entry_key["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3749__auto__ = coll;
    if (and__3749__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4400__auto__ = coll == null ? null : coll;
    return function() {
      var or__3761__auto__ = cljs.core._comparator[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._comparator["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj17994 = {};
  return obj17994;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3749__auto__ = writer;
    if (and__3749__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4400__auto__ = writer == null ? null : writer;
    return function() {
      var or__3761__auto__ = cljs.core._write[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._write["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3749__auto__ = writer;
    if (and__3749__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4400__auto__ = writer == null ? null : writer;
    return function() {
      var or__3761__auto__ = cljs.core._flush[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._flush["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj17996 = {};
  return obj17996;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3749__auto__ = o;
    if (and__3749__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4400__auto__ = o == null ? null : o;
    return function() {
      var or__3761__auto__ = cljs.core._pr_writer[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj17998 = {};
  return obj17998;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3749__auto__ = d;
    if (and__3749__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4400__auto__ = d == null ? null : d;
    return function() {
      var or__3761__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj18000 = {};
  return obj18000;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3749__auto__ = this$;
    if (and__3749__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4400__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3761__auto__ = cljs.core._notify_watches[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3749__auto__ = this$;
    if (and__3749__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4400__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3761__auto__ = cljs.core._add_watch[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._add_watch["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3749__auto__ = this$;
    if (and__3749__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4400__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3761__auto__ = cljs.core._remove_watch[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj18002 = {};
  return obj18002;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3749__auto__ = coll;
    if (and__3749__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4400__auto__ = coll == null ? null : coll;
    return function() {
      var or__3761__auto__ = cljs.core._as_transient[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._as_transient["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj18004 = {};
  return obj18004;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3749__auto__ = tcoll;
    if (and__3749__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4400__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3761__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3749__auto__ = tcoll;
    if (and__3749__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4400__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3761__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj18006 = {};
  return obj18006;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3749__auto__ = tcoll;
    if (and__3749__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4400__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3761__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj18008 = {};
  return obj18008;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3749__auto__ = tcoll;
    if (and__3749__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4400__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3761__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj18010 = {};
  return obj18010;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3749__auto__ = tcoll;
    if (and__3749__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4400__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3761__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3749__auto__ = tcoll;
    if (and__3749__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4400__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3761__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj18012 = {};
  return obj18012;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3749__auto__ = tcoll;
    if (and__3749__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4400__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3761__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj18014 = {};
  return obj18014;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3749__auto__ = x;
    if (and__3749__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4400__auto__ = x == null ? null : x;
    return function() {
      var or__3761__auto__ = cljs.core._compare[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._compare["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj18016 = {};
  return obj18016;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3749__auto__ = coll;
    if (and__3749__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4400__auto__ = coll == null ? null : coll;
    return function() {
      var or__3761__auto__ = cljs.core._drop_first[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._drop_first["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj18018 = {};
  return obj18018;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3749__auto__ = coll;
    if (and__3749__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4400__auto__ = coll == null ? null : coll;
    return function() {
      var or__3761__auto__ = cljs.core._chunked_first[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3749__auto__ = coll;
    if (and__3749__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4400__auto__ = coll == null ? null : coll;
    return function() {
      var or__3761__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj18020 = {};
  return obj18020;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3749__auto__ = coll;
    if (and__3749__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4400__auto__ = coll == null ? null : coll;
    return function() {
      var or__3761__auto__ = cljs.core._chunked_next[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj18022 = {};
  return obj18022;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3749__auto__ = x;
    if (and__3749__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4400__auto__ = x == null ? null : x;
    return function() {
      var or__3761__auto__ = cljs.core._name[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._name["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3749__auto__ = x;
    if (and__3749__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4400__auto__ = x == null ? null : x;
    return function() {
      var or__3761__auto__ = cljs.core._namespace[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._namespace["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj18024 = {};
  return obj18024;
}();
cljs.core.IReset = function() {
  var obj18026 = {};
  return obj18026;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3749__auto__ = o;
    if (and__3749__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4400__auto__ = o == null ? null : o;
    return function() {
      var or__3761__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj18028 = {};
  return obj18028;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3749__auto__ = o;
      if (and__3749__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4400__auto__ = o == null ? null : o;
      return function() {
        var or__3761__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3749__auto__ = o;
      if (and__3749__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4400__auto__ = o == null ? null : o;
      return function() {
        var or__3761__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3749__auto__ = o;
      if (and__3749__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4400__auto__ = o == null ? null : o;
      return function() {
        var or__3761__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3749__auto__ = o;
      if (and__3749__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4400__auto__ = o == null ? null : o;
      return function() {
        var or__3761__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.IIterable = function() {
  var obj18030 = {};
  return obj18030;
}();
cljs.core._iterator = function _iterator(coll) {
  if (function() {
    var and__3749__auto__ = coll;
    if (and__3749__auto__) {
      return coll.cljs$core$IIterable$_iterator$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4400__auto__ = coll == null ? null : coll;
    return function() {
      var or__3761__auto__ = cljs.core._iterator[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._iterator["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IIterable.-iterator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return[cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul.call(null, 4294967295, 5) === 0)) {
  cljs.core.imul = function imul(a, b) {
    return Math.imul.call(null, a, b);
  };
} else {
  cljs.core.imul = function imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353;
cljs.core.m3_C2 = 461845907;
cljs.core.m3_mix_K1 = function m3_mix_K1(k1) {
  return cljs.core.imul.call(null, cljs.core.int_rotate_left.call(null, cljs.core.imul.call(null, k1, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function m3_mix_H1(h1, k1) {
  return cljs.core.imul.call(null, cljs.core.int_rotate_left.call(null, h1 ^ k1, 13), 5) + 3864292196;
};
cljs.core.m3_fmix = function m3_fmix(h1, len) {
  var h1__$1 = h1;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul.call(null, h1__$3, 2246822507);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul.call(null, h1__$5, 3266489909);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1.call(null, in$);
    var h1 = cljs.core.m3_mix_H1.call(null, cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix.call(null, h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__18031 = i + 2;
        var G__18032 = cljs.core.m3_mix_H1.call(null, h1, cljs.core.m3_mix_K1.call(null, in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__18031;
        h1 = G__18032;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1.call(null, in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix.call(null, h1__$1, cljs.core.imul.call(null, 2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj18034 = {};
  return obj18034;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__18035 = i + 1;
          var G__18036 = cljs.core.imul.call(null, 31, hash) + s.charCodeAt(i);
          i = G__18035;
          hash = G__18036;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_.call(null, k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj18040 = {};
      return obj18040;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache.call(null, k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__18042 = o;
    if (G__18042) {
      var bit__4430__auto__ = G__18042.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4430__auto__ || G__18042.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._hash.call(null, o);
  } else {
    if (typeof o === "number") {
      return Math.floor.call(null, o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int.call(null, cljs.core.hash_string.call(null, o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash.call(null, o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.m3_hash_unencoded_chars.call(null, sym.name), cljs.core.hash_string.call(null, sym.ns));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (cljs.core.truth_(cljs.core._EQ_.call(null, a, b))) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3749__auto__ = cljs.core.not.call(null, a.ns);
      if (and__3749__auto__) {
        return b.ns;
      } else {
        return and__3749__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not.call(null, b.ns)) {
          return 1;
        } else {
          var nsc = cljs.core.compare.call(null, a.ns, b.ns);
          if (nsc === 0) {
            return cljs.core.compare.call(null, a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        return cljs.core.compare.call(null, a.name, b.name);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4177__auto__ = self__._hash;
  if (!(h__4177__auto__ == null)) {
    return h__4177__auto__;
  } else {
    var h__4177__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__4177__auto____$1;
    return h__4177__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__18044 = null;
  var G__18044__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null);
  };
  var G__18044__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found);
  };
  G__18044 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__18044__2.call(this, self__, coll);
      case 3:
        return G__18044__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18044.cljs$core$IFn$_invoke$arity$2 = G__18044__2;
  G__18044.cljs$core$IFn$_invoke$arity$3 = G__18044__3;
  return G__18044;
}();
cljs.core.Symbol.prototype.apply = function(self__, args18043) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args18043)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.call(null, null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.iterable_QMARK_ = function iterable_QMARK_(x) {
  var G__18046 = x;
  if (G__18046) {
    var bit__4437__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3761__auto__ = bit__4437__auto__;
      if (cljs.core.truth_(or__3761__auto__)) {
        return or__3761__auto__;
      } else {
        return G__18046.cljs$core$IIterable$;
      }
    }())) {
      return true;
    } else {
      if (!G__18046.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIterable, G__18046);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIterable, G__18046);
  }
};
cljs.core.clone = function clone(value) {
  return cljs.core._clone.call(null, value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__18048 = value;
  if (G__18048) {
    var bit__4437__auto__ = G__18048.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4437__auto__ || G__18048.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__18048.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__18048);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__18048);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__18050 = coll;
      if (G__18050) {
        var bit__4430__auto__ = G__18050.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4430__auto__ || G__18050.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._seq.call(null, coll);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__18052 = coll;
      if (G__18052) {
        var bit__4430__auto__ = G__18052.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4430__auto__ || G__18052.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._first.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first.call(null, s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__18054 = coll;
      if (G__18054) {
        var bit__4430__auto__ = G__18054.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4430__auto__ || G__18054.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._rest.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s) {
        return cljs.core._rest.call(null, s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__18056 = coll;
      if (G__18056) {
        var bit__4430__auto__ = G__18056.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4430__auto__ || G__18056.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._next.call(null, coll);
    } else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv.call(null, x, y);
    }
  };
  var _EQ___3 = function() {
    var G__18057__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__18058 = y;
            var G__18059 = cljs.core.first.call(null, more);
            var G__18060 = cljs.core.next.call(null, more);
            x = G__18058;
            y = G__18059;
            more = G__18060;
            continue;
          } else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__18057 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18057__delegate.call(this, x, y, more);
    };
    G__18057.cljs$lang$maxFixedArity = 2;
    G__18057.cljs$lang$applyTo = function(arglist__18061) {
      var x = cljs.core.first(arglist__18061);
      arglist__18061 = cljs.core.next(arglist__18061);
      var y = cljs.core.first(arglist__18061);
      var more = cljs.core.rest(arglist__18061);
      return G__18057__delegate(x, y, more);
    };
    G__18057.cljs$core$IFn$_invoke$arity$variadic = G__18057__delegate;
    return G__18057;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first.call(null, self__.s);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function __GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq.call(null, coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = cljs.core.es6_iterator_seq.call(null, self__.iter);
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function __GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1.call(null, hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1.call(null, h1, k1);
  return cljs.core.m3_fmix.call(null, h1__$1, count);
};
cljs.core.hash_ordered_coll = function hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__18062 = n + 1;
      var G__18063 = cljs.core.imul.call(null, 31, hash_code) + cljs.core.hash.call(null, cljs.core.first.call(null, coll__$1)) | 0;
      var G__18064 = cljs.core.next.call(null, coll__$1);
      n = G__18062;
      hash_code = G__18063;
      coll__$1 = G__18064;
      continue;
    } else {
      return cljs.core.mix_collection_hash.call(null, hash_code, n);
    }
    break;
  }
};
cljs.core.hash_unordered_coll = function hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__18065 = n + 1;
      var G__18066 = hash_code + cljs.core.hash.call(null, cljs.core.first.call(null, coll__$1)) | 0;
      var G__18067 = cljs.core.next.call(null, coll__$1);
      n = G__18065;
      hash_code = G__18066;
      coll__$1 = G__18067;
      continue;
    } else {
      return cljs.core.mix_collection_hash.call(null, hash_code, n);
    }
    break;
  }
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_.call(null, x)) {
    return x;
  } else {
    return cljs.core.reduced.call(null, x);
  }
};
cljs.core.unreduced = function unreduced(x) {
  if (cljs.core.reduced_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o);
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if (cnt === 0) {
      return f.call(null);
    } else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__18068 = nval;
            var G__18069 = n + 1;
            val = G__18068;
            n = G__18069;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__18070 = nval;
          var G__18071 = n + 1;
          val__$1 = G__18070;
          n = G__18071;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__18072 = nval;
          var G__18073 = n + 1;
          val__$1 = G__18072;
          n = G__18073;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__18074 = nval;
            var G__18075 = n + 1;
            val = G__18074;
            n = G__18075;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__18076 = nval;
          var G__18077 = n + 1;
          val__$1 = G__18076;
          n = G__18077;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__18078 = nval;
          var G__18079 = n + 1;
          val__$1 = G__18078;
          n = G__18079;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__18081 = x;
  if (G__18081) {
    var bit__4437__auto__ = G__18081.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4437__auto__ || G__18081.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__18081.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__18081);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__18081);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__18083 = x;
  if (G__18083) {
    var bit__4437__auto__ = G__18083.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4437__auto__ || G__18083.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__18083.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__18083);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__18083);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function __GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4734__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4734__auto__);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4734__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4734__auto__);
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next.call(null, s);
    if (!(sn == null)) {
      var G__18084 = sn;
      s = G__18084;
      continue;
    } else {
      return cljs.core.first.call(null, s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__0 = function() {
    return cljs.core.PersistentVector.EMPTY;
  };
  var conj__1 = function(coll) {
    return coll;
  };
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj.call(null, coll, x);
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__18085__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__18086 = conj.call(null, coll, x);
          var G__18087 = cljs.core.first.call(null, xs);
          var G__18088 = cljs.core.next.call(null, xs);
          coll = G__18086;
          x = G__18087;
          xs = G__18088;
          continue;
        } else {
          return conj.call(null, coll, x);
        }
        break;
      }
    };
    var G__18085 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18085__delegate.call(this, coll, x, xs);
    };
    G__18085.cljs$lang$maxFixedArity = 2;
    G__18085.cljs$lang$applyTo = function(arglist__18089) {
      var coll = cljs.core.first(arglist__18089);
      arglist__18089 = cljs.core.next(arglist__18089);
      var x = cljs.core.first(arglist__18089);
      var xs = cljs.core.rest(arglist__18089);
      return G__18085__delegate(coll, x, xs);
    };
    G__18085.cljs$core$IFn$_invoke$arity$variadic = G__18085__delegate;
    return G__18085;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return conj__0.call(this);
      case 1:
        return conj__1.call(this, coll);
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
  conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty.call(null, coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s);
    } else {
      var G__18090 = cljs.core.next.call(null, s);
      var G__18091 = acc + 1;
      s = G__18090;
      acc = G__18091;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__18093 = coll;
      if (G__18093) {
        var bit__4430__auto__ = G__18093.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4430__auto__ || G__18093.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._count.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll);
          } else {
            return cljs.core.accumulating_seq_count.call(null, coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__18094 = cljs.core.next.call(null, coll);
              var G__18095 = n - 1;
              coll = G__18094;
              n = G__18095;
              continue;
            } else {
              throw new Error("Index out of bounds");
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__18096 = cljs.core.next.call(null, coll);
              var G__18097 = n - 1;
              var G__18098 = not_found;
              coll = G__18096;
              n = G__18097;
              not_found = G__18098;
              continue;
            } else {
              return not_found;
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__18103 = coll;
          if (G__18103) {
            var bit__4430__auto__ = G__18103.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4430__auto__ || G__18103.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__18104 = coll;
                  if (G__18104) {
                    var bit__4437__auto__ = G__18104.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4437__auto__ || G__18104.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__18104.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__18104);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__18104);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__18105 = coll;
          if (G__18105) {
            var bit__4430__auto__ = G__18105.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4430__auto__ || G__18105.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__18106 = coll;
                  if (G__18106) {
                    var bit__4437__auto__ = G__18106.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4437__auto__ || G__18106.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__18106.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__18106);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__18106);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.nthrest = function nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq.call(null, xs)) {
      var G__18107 = n__$1 - 1;
      var G__18108 = cljs.core.rest.call(null, xs);
      n__$1 = G__18107;
      xs = G__18108;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__18111 = o;
        if (G__18111) {
          var bit__4430__auto__ = G__18111.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4430__auto__ || G__18111.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__18112 = o;
        if (G__18112) {
          var bit__4430__auto__ = G__18112.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4430__auto__ || G__18112.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found);
            } else {
              return not_found;
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays([k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__18113__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.call(null, coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__18114 = ret;
          var G__18115 = cljs.core.first.call(null, kvs);
          var G__18116 = cljs.core.second.call(null, kvs);
          var G__18117 = cljs.core.nnext.call(null, kvs);
          coll = G__18114;
          k = G__18115;
          v = G__18116;
          kvs = G__18117;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__18113 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__18113__delegate.call(this, coll, k, v, kvs);
    };
    G__18113.cljs$lang$maxFixedArity = 3;
    G__18113.cljs$lang$applyTo = function(arglist__18118) {
      var coll = cljs.core.first(arglist__18118);
      arglist__18118 = cljs.core.next(arglist__18118);
      var k = cljs.core.first(arglist__18118);
      arglist__18118 = cljs.core.next(arglist__18118);
      var v = cljs.core.first(arglist__18118);
      var kvs = cljs.core.rest(arglist__18118);
      return G__18113__delegate(coll, k, v, kvs);
    };
    G__18113.cljs$core$IFn$_invoke$arity$variadic = G__18113__delegate;
    return G__18113;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc.call(null, coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__18119__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__18120 = ret;
            var G__18121 = cljs.core.first.call(null, ks);
            var G__18122 = cljs.core.next.call(null, ks);
            coll = G__18120;
            k = G__18121;
            ks = G__18122;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__18119 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18119__delegate.call(this, coll, k, ks);
    };
    G__18119.cljs$lang$maxFixedArity = 2;
    G__18119.cljs$lang$applyTo = function(arglist__18123) {
      var coll = cljs.core.first(arglist__18123);
      arglist__18123 = cljs.core.next(arglist__18123);
      var k = cljs.core.first(arglist__18123);
      var ks = cljs.core.rest(arglist__18123);
      return G__18119__delegate(coll, k, ks);
    };
    G__18119.cljs$core$IFn$_invoke$arity$variadic = G__18119__delegate;
    return G__18119;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3761__auto__ = goog.isFunction(f);
  if (or__3761__auto__) {
    return or__3761__auto__;
  } else {
    var G__18127 = f;
    if (G__18127) {
      var bit__4437__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3761__auto____$1 = bit__4437__auto__;
        if (cljs.core.truth_(or__3761__auto____$1)) {
          return or__3761__auto____$1;
        } else {
          return G__18127.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__18127.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__18127);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__18127);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.prototype.call = function() {
  var G__18129 = null;
  var G__18129__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null);
  };
  var G__18129__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a);
  };
  var G__18129__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b);
  };
  var G__18129__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c);
  };
  var G__18129__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d);
  };
  var G__18129__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e);
  };
  var G__18129__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__18129__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__18129__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__18129__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__18129__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__18129__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__18129__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__18129__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__18129__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__18129__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__18129__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__18129__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__18129__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__18129__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__18129__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__18129__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__18129 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__18129__1.call(this, self__);
      case 2:
        return G__18129__2.call(this, self__, a);
      case 3:
        return G__18129__3.call(this, self__, a, b);
      case 4:
        return G__18129__4.call(this, self__, a, b, c);
      case 5:
        return G__18129__5.call(this, self__, a, b, c, d);
      case 6:
        return G__18129__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__18129__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__18129__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__18129__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__18129__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__18129__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__18129__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__18129__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__18129__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__18129__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__18129__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__18129__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__18129__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__18129__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__18129__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__18129__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__18129__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18129.cljs$core$IFn$_invoke$arity$1 = G__18129__1;
  G__18129.cljs$core$IFn$_invoke$arity$2 = G__18129__2;
  G__18129.cljs$core$IFn$_invoke$arity$3 = G__18129__3;
  G__18129.cljs$core$IFn$_invoke$arity$4 = G__18129__4;
  G__18129.cljs$core$IFn$_invoke$arity$5 = G__18129__5;
  G__18129.cljs$core$IFn$_invoke$arity$6 = G__18129__6;
  G__18129.cljs$core$IFn$_invoke$arity$7 = G__18129__7;
  G__18129.cljs$core$IFn$_invoke$arity$8 = G__18129__8;
  G__18129.cljs$core$IFn$_invoke$arity$9 = G__18129__9;
  G__18129.cljs$core$IFn$_invoke$arity$10 = G__18129__10;
  G__18129.cljs$core$IFn$_invoke$arity$11 = G__18129__11;
  G__18129.cljs$core$IFn$_invoke$arity$12 = G__18129__12;
  G__18129.cljs$core$IFn$_invoke$arity$13 = G__18129__13;
  G__18129.cljs$core$IFn$_invoke$arity$14 = G__18129__14;
  G__18129.cljs$core$IFn$_invoke$arity$15 = G__18129__15;
  G__18129.cljs$core$IFn$_invoke$arity$16 = G__18129__16;
  G__18129.cljs$core$IFn$_invoke$arity$17 = G__18129__17;
  G__18129.cljs$core$IFn$_invoke$arity$18 = G__18129__18;
  G__18129.cljs$core$IFn$_invoke$arity$19 = G__18129__19;
  G__18129.cljs$core$IFn$_invoke$arity$20 = G__18129__20;
  G__18129.cljs$core$IFn$_invoke$arity$21 = G__18129__21;
  G__18129.cljs$core$IFn$_invoke$arity$22 = G__18129__22;
  return G__18129;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args18128) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args18128)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function __GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__18133 = o;
    if (G__18133) {
      var bit__4437__auto__ = G__18133.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4437__auto__ || G__18133.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__18133.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__18133);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__18133);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta.call(null, o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3749__auto__ = !(o == null);
    if (and__3749__auto__) {
      var G__18137 = o;
      if (G__18137) {
        var bit__4437__auto__ = G__18137.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4437__auto__ || G__18137.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__18137.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__18137);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__18137);
      }
    } else {
      return and__3749__auto__;
    }
  }()) {
    return cljs.core._meta.call(null, o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek.call(null, coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop.call(null, coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin.call(null, coll, k);
    }
  };
  var disj__3 = function() {
    var G__18138__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__18139 = ret;
            var G__18140 = cljs.core.first.call(null, ks);
            var G__18141 = cljs.core.next.call(null, ks);
            coll = G__18139;
            k = G__18140;
            ks = G__18141;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__18138 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18138__delegate.call(this, coll, k, ks);
    };
    G__18138.cljs$lang$maxFixedArity = 2;
    G__18138.cljs$lang$applyTo = function(arglist__18142) {
      var coll = cljs.core.first(arglist__18142);
      arglist__18142 = cljs.core.next(arglist__18142);
      var k = cljs.core.first(arglist__18142);
      var ks = cljs.core.rest(arglist__18142);
      return G__18138__delegate(coll, k, ks);
    };
    G__18138.cljs$core$IFn$_invoke$arity$variadic = G__18138__delegate;
    return G__18138;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__18144 = x;
    if (G__18144) {
      var bit__4437__auto__ = G__18144.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4437__auto__ || G__18144.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__18144.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__18144);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__18144);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__18146 = x;
    if (G__18146) {
      var bit__4437__auto__ = G__18146.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4437__auto__ || G__18146.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__18146.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__18146);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__18146);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__18148 = x;
  if (G__18148) {
    var bit__4437__auto__ = G__18148.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4437__auto__ || G__18148.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__18148.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__18148);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__18148);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__18150 = x;
  if (G__18150) {
    var bit__4437__auto__ = G__18150.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4437__auto__ || G__18150.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__18150.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__18150);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__18150);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__18152 = x;
  if (G__18152) {
    var bit__4437__auto__ = G__18152.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4437__auto__ || G__18152.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__18152.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__18152);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__18152);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__18154 = x;
  if (G__18154) {
    var bit__4437__auto__ = G__18154.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4437__auto__ || G__18154.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__18154.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__18154);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__18154);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__18156 = x;
    if (G__18156) {
      var bit__4437__auto__ = G__18156.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4437__auto__ || G__18156.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__18156.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__18156);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__18156);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__18158 = x;
  if (G__18158) {
    var bit__4437__auto__ = G__18158.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4437__auto__ || G__18158.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__18158.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__18158);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__18158);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__18160 = x;
  if (G__18160) {
    var bit__4430__auto__ = G__18160.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4430__auto__ || G__18160.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj18164 = {};
    return obj18164;
  };
  var js_obj__1 = function() {
    var G__18165__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals);
    };
    var G__18165 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__18165__delegate.call(this, keyvals);
    };
    G__18165.cljs$lang$maxFixedArity = 0;
    G__18165.cljs$lang$applyTo = function(arglist__18166) {
      var keyvals = cljs.core.seq(arglist__18166);
      return G__18165__delegate(keyvals);
    };
    G__18165.cljs$core$IFn$_invoke$arity$variadic = G__18165__delegate;
    return G__18165;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(keys));
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__18167 = i__$1 + 1;
      var G__18168 = j__$1 + 1;
      var G__18169 = len__$1 - 1;
      i__$1 = G__18167;
      j__$1 = G__18168;
      len__$1 = G__18169;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__18170 = i__$1 - 1;
      var G__18171 = j__$1 - 1;
      var G__18172 = len__$1 - 1;
      i__$1 = G__18170;
      j__$1 = G__18171;
      len__$1 = G__18172;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj18174 = {};
  return obj18174;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__18176 = s;
    if (G__18176) {
      var bit__4437__auto__ = G__18176.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4437__auto__ || G__18176.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__18176.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__18176);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__18176);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__18178 = s;
  if (G__18178) {
    var bit__4437__auto__ = G__18178.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4437__auto__ || G__18178.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__18178.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__18178);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__18178);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3761__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if (or__3761__auto__) {
    return or__3761__auto__;
  } else {
    var G__18182 = f;
    if (G__18182) {
      var bit__4437__auto__ = G__18182.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4437__auto__ || G__18182.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__18182.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__18182);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__18182);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.call(null, coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__18183__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false;
            } else {
              var G__18184 = cljs.core.conj.call(null, s, x__$1);
              var G__18185 = etc;
              s = G__18184;
              xs = G__18185;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__18183 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18183__delegate.call(this, x, y, more);
    };
    G__18183.cljs$lang$maxFixedArity = 2;
    G__18183.cljs$lang$applyTo = function(arglist__18186) {
      var x = cljs.core.first(arglist__18186);
      arglist__18186 = cljs.core.next(arglist__18186);
      var y = cljs.core.first(arglist__18186);
      var more = cljs.core.rest(arglist__18186);
      return G__18183__delegate(x, y, more);
    };
    G__18183.cljs$core$IFn$_invoke$arity$variadic = G__18183__delegate;
    return G__18183;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.sequence = function sequence(coll) {
  if (cljs.core.seq_QMARK_.call(null, coll)) {
    return coll;
  } else {
    var or__3761__auto__ = cljs.core.seq.call(null, coll);
    if (or__3761__auto__) {
      return or__3761__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if (function() {
            var G__18188 = x;
            if (G__18188) {
              var bit__4430__auto__ = G__18188.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4430__auto__ || G__18188.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._compare.call(null, x, y);
          } else {
            return goog.array.defaultCompare(x, y);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        return compare_indexed.call(null, xs, ys, xl, 0);
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if (d === 0 && n + 1 < len) {
        var G__18189 = xs;
        var G__18190 = ys;
        var G__18191 = len;
        var G__18192 = n + 1;
        xs = G__18189;
        ys = G__18190;
        len = G__18191;
        n = G__18192;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y));
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s));
    } else {
      return f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__18193 = nval;
          var G__18194 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__18193;
          coll__$1 = G__18194;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__18197 = coll;
      if (G__18197) {
        var bit__4430__auto__ = G__18197.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4430__auto__ || G__18197.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f);
          } else {
            return cljs.core.seq_reduce.call(null, f, coll);
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__18198 = coll;
      if (G__18198) {
        var bit__4430__auto__ = G__18198.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4430__auto__ || G__18198.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val);
          } else {
            return cljs.core.seq_reduce.call(null, f, val, coll);
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce.call(null, coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.completing = function() {
  var completing = null;
  var completing__1 = function(f) {
    return completing.call(null, f, cljs.core.identity);
  };
  var completing__2 = function(f, cf) {
    return function() {
      var G__18199 = null;
      var G__18199__0 = function() {
        return f.call(null);
      };
      var G__18199__1 = function(x) {
        return cf.call(null, x);
      };
      var G__18199__2 = function(x, y) {
        return f.call(null, x, y);
      };
      G__18199 = function(x, y) {
        switch(arguments.length) {
          case 0:
            return G__18199__0.call(this);
          case 1:
            return G__18199__1.call(this, x);
          case 2:
            return G__18199__2.call(this, x, y);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18199.cljs$core$IFn$_invoke$arity$0 = G__18199__0;
      G__18199.cljs$core$IFn$_invoke$arity$1 = G__18199__1;
      G__18199.cljs$core$IFn$_invoke$arity$2 = G__18199__2;
      return G__18199;
    }();
  };
  completing = function(f, cf) {
    switch(arguments.length) {
      case 1:
        return completing__1.call(this, f);
      case 2:
        return completing__2.call(this, f, cf);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
  completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
  return completing;
}();
cljs.core.transduce = function() {
  var transduce = null;
  var transduce__3 = function(xform, f, coll) {
    return transduce.call(null, xform, f, f.call(null), coll);
  };
  var transduce__4 = function(xform, f, init, coll) {
    var f__$1 = xform.call(null, f);
    var ret = cljs.core.reduce.call(null, f__$1, init, coll);
    return f__$1.call(null, ret);
  };
  transduce = function(xform, f, init, coll) {
    switch(arguments.length) {
      case 3:
        return transduce__3.call(this, xform, f, init);
      case 4:
        return transduce__4.call(this, xform, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
  transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
  return transduce;
}();
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__18200__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more);
    };
    var G__18200 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18200__delegate.call(this, x, y, more);
    };
    G__18200.cljs$lang$maxFixedArity = 2;
    G__18200.cljs$lang$applyTo = function(arglist__18201) {
      var x = cljs.core.first(arglist__18201);
      arglist__18201 = cljs.core.next(arglist__18201);
      var y = cljs.core.first(arglist__18201);
      var more = cljs.core.rest(arglist__18201);
      return G__18200__delegate(x, y, more);
    };
    G__18200.cljs$core$IFn$_invoke$arity$variadic = G__18200__delegate;
    return G__18200;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__18202__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more);
    };
    var G__18202 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18202__delegate.call(this, x, y, more);
    };
    G__18202.cljs$lang$maxFixedArity = 2;
    G__18202.cljs$lang$applyTo = function(arglist__18203) {
      var x = cljs.core.first(arglist__18203);
      arglist__18203 = cljs.core.next(arglist__18203);
      var y = cljs.core.first(arglist__18203);
      var more = cljs.core.rest(arglist__18203);
      return G__18202__delegate(x, y, more);
    };
    G__18202.cljs$core$IFn$_invoke$arity$variadic = G__18202__delegate;
    return G__18202;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__18204__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more);
    };
    var G__18204 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18204__delegate.call(this, x, y, more);
    };
    G__18204.cljs$lang$maxFixedArity = 2;
    G__18204.cljs$lang$applyTo = function(arglist__18205) {
      var x = cljs.core.first(arglist__18205);
      arglist__18205 = cljs.core.next(arglist__18205);
      var y = cljs.core.first(arglist__18205);
      var more = cljs.core.rest(arglist__18205);
      return G__18204__delegate(x, y, more);
    };
    G__18204.cljs$core$IFn$_invoke$arity$variadic = G__18204__delegate;
    return G__18204;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__18206__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more);
    };
    var G__18206 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18206__delegate.call(this, x, y, more);
    };
    G__18206.cljs$lang$maxFixedArity = 2;
    G__18206.cljs$lang$applyTo = function(arglist__18207) {
      var x = cljs.core.first(arglist__18207);
      arglist__18207 = cljs.core.next(arglist__18207);
      var y = cljs.core.first(arglist__18207);
      var more = cljs.core.rest(arglist__18207);
      return G__18206__delegate(x, y, more);
    };
    G__18206.cljs$core$IFn$_invoke$arity$variadic = G__18206__delegate;
    return G__18206;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__18208__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next.call(null, more)) {
            var G__18209 = y;
            var G__18210 = cljs.core.first.call(null, more);
            var G__18211 = cljs.core.next.call(null, more);
            x = G__18209;
            y = G__18210;
            more = G__18211;
            continue;
          } else {
            return y < cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__18208 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18208__delegate.call(this, x, y, more);
    };
    G__18208.cljs$lang$maxFixedArity = 2;
    G__18208.cljs$lang$applyTo = function(arglist__18212) {
      var x = cljs.core.first(arglist__18212);
      arglist__18212 = cljs.core.next(arglist__18212);
      var y = cljs.core.first(arglist__18212);
      var more = cljs.core.rest(arglist__18212);
      return G__18208__delegate(x, y, more);
    };
    G__18208.cljs$core$IFn$_invoke$arity$variadic = G__18208__delegate;
    return G__18208;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__18213__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next.call(null, more)) {
            var G__18214 = y;
            var G__18215 = cljs.core.first.call(null, more);
            var G__18216 = cljs.core.next.call(null, more);
            x = G__18214;
            y = G__18215;
            more = G__18216;
            continue;
          } else {
            return y <= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__18213 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18213__delegate.call(this, x, y, more);
    };
    G__18213.cljs$lang$maxFixedArity = 2;
    G__18213.cljs$lang$applyTo = function(arglist__18217) {
      var x = cljs.core.first(arglist__18217);
      arglist__18217 = cljs.core.next(arglist__18217);
      var y = cljs.core.first(arglist__18217);
      var more = cljs.core.rest(arglist__18217);
      return G__18213__delegate(x, y, more);
    };
    G__18213.cljs$core$IFn$_invoke$arity$variadic = G__18213__delegate;
    return G__18213;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__18218__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next.call(null, more)) {
            var G__18219 = y;
            var G__18220 = cljs.core.first.call(null, more);
            var G__18221 = cljs.core.next.call(null, more);
            x = G__18219;
            y = G__18220;
            more = G__18221;
            continue;
          } else {
            return y > cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__18218 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18218__delegate.call(this, x, y, more);
    };
    G__18218.cljs$lang$maxFixedArity = 2;
    G__18218.cljs$lang$applyTo = function(arglist__18222) {
      var x = cljs.core.first(arglist__18222);
      arglist__18222 = cljs.core.next(arglist__18222);
      var y = cljs.core.first(arglist__18222);
      var more = cljs.core.rest(arglist__18222);
      return G__18218__delegate(x, y, more);
    };
    G__18218.cljs$core$IFn$_invoke$arity$variadic = G__18218__delegate;
    return G__18218;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__18223__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next.call(null, more)) {
            var G__18224 = y;
            var G__18225 = cljs.core.first.call(null, more);
            var G__18226 = cljs.core.next.call(null, more);
            x = G__18224;
            y = G__18225;
            more = G__18226;
            continue;
          } else {
            return y >= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__18223 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18223__delegate.call(this, x, y, more);
    };
    G__18223.cljs$lang$maxFixedArity = 2;
    G__18223.cljs$lang$applyTo = function(arglist__18227) {
      var x = cljs.core.first(arglist__18227);
      arglist__18227 = cljs.core.next(arglist__18227);
      var y = cljs.core.first(arglist__18227);
      var more = cljs.core.rest(arglist__18227);
      return G__18223__delegate(x, y, more);
    };
    G__18223.cljs$core$IFn$_invoke$arity$variadic = G__18223__delegate;
    return G__18223;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__4073__auto__ = x;
    var y__4074__auto__ = y;
    return x__4073__auto__ > y__4074__auto__ ? x__4073__auto__ : y__4074__auto__;
  };
  var max__3 = function() {
    var G__18228__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__4073__auto__ = x;
        var y__4074__auto__ = y;
        return x__4073__auto__ > y__4074__auto__ ? x__4073__auto__ : y__4074__auto__;
      }(), more);
    };
    var G__18228 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18228__delegate.call(this, x, y, more);
    };
    G__18228.cljs$lang$maxFixedArity = 2;
    G__18228.cljs$lang$applyTo = function(arglist__18229) {
      var x = cljs.core.first(arglist__18229);
      arglist__18229 = cljs.core.next(arglist__18229);
      var y = cljs.core.first(arglist__18229);
      var more = cljs.core.rest(arglist__18229);
      return G__18228__delegate(x, y, more);
    };
    G__18228.cljs$core$IFn$_invoke$arity$variadic = G__18228__delegate;
    return G__18228;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__4080__auto__ = x;
    var y__4081__auto__ = y;
    return x__4080__auto__ < y__4081__auto__ ? x__4080__auto__ : y__4081__auto__;
  };
  var min__3 = function() {
    var G__18230__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__4080__auto__ = x;
        var y__4081__auto__ = y;
        return x__4080__auto__ < y__4081__auto__ ? x__4080__auto__ : y__4081__auto__;
      }(), more);
    };
    var G__18230 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18230__delegate.call(this, x, y, more);
    };
    G__18230.cljs$lang$maxFixedArity = 2;
    G__18230.cljs$lang$applyTo = function(arglist__18231) {
      var x = cljs.core.first(arglist__18231);
      arglist__18231 = cljs.core.next(arglist__18231);
      var y = cljs.core.first(arglist__18231);
      var more = cljs.core.rest(arglist__18231);
      return G__18230__delegate(x, y, more);
    };
    G__18230.cljs$core$IFn$_invoke$arity$variadic = G__18230__delegate;
    return G__18230;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__18232__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more);
    };
    var G__18232 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18232__delegate.call(this, x, y, more);
    };
    G__18232.cljs$lang$maxFixedArity = 2;
    G__18232.cljs$lang$applyTo = function(arglist__18233) {
      var x = cljs.core.first(arglist__18233);
      arglist__18233 = cljs.core.next(arglist__18233);
      var y = cljs.core.first(arglist__18233);
      var more = cljs.core.rest(arglist__18233);
      return G__18232__delegate(x, y, more);
    };
    G__18232.cljs$core$IFn$_invoke$arity$variadic = G__18232__delegate;
    return G__18232;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__18234__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more);
    };
    var G__18234 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18234__delegate.call(this, x, y, more);
    };
    G__18234.cljs$lang$maxFixedArity = 2;
    G__18234.cljs$lang$applyTo = function(arglist__18235) {
      var x = cljs.core.first(arglist__18235);
      arglist__18235 = cljs.core.next(arglist__18235);
      var y = cljs.core.first(arglist__18235);
      var more = cljs.core.rest(arglist__18235);
      return G__18234__delegate(x, y, more);
    };
    G__18234.cljs$core$IFn$_invoke$arity$variadic = G__18234__delegate;
    return G__18234;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__18236__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more);
    };
    var G__18236 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18236__delegate.call(this, x, y, more);
    };
    G__18236.cljs$lang$maxFixedArity = 2;
    G__18236.cljs$lang$applyTo = function(arglist__18237) {
      var x = cljs.core.first(arglist__18237);
      arglist__18237 = cljs.core.next(arglist__18237);
      var y = cljs.core.first(arglist__18237);
      var more = cljs.core.rest(arglist__18237);
      return G__18236__delegate(x, y, more);
    };
    G__18236.cljs$core$IFn$_invoke$arity$variadic = G__18236__delegate;
    return G__18236;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__18238__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more);
    };
    var G__18238 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18238__delegate.call(this, x, y, more);
    };
    G__18238.cljs$lang$maxFixedArity = 2;
    G__18238.cljs$lang$applyTo = function(arglist__18239) {
      var x = cljs.core.first(arglist__18239);
      arglist__18239 = cljs.core.next(arglist__18239);
      var y = cljs.core.first(arglist__18239);
      var more = cljs.core.rest(arglist__18239);
      return G__18238__delegate(x, y, more);
    };
    G__18238.cljs$core$IFn$_invoke$arity$variadic = G__18238__delegate;
    return G__18238;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__18240__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more);
    };
    var G__18240 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18240__delegate.call(this, x, y, more);
    };
    G__18240.cljs$lang$maxFixedArity = 2;
    G__18240.cljs$lang$applyTo = function(arglist__18241) {
      var x = cljs.core.first(arglist__18241);
      arglist__18241 = cljs.core.next(arglist__18241);
      var y = cljs.core.first(arglist__18241);
      var more = cljs.core.rest(arglist__18241);
      return G__18240__delegate(x, y, more);
    };
    G__18240.cljs$core$IFn$_invoke$arity$variadic = G__18240__delegate;
    return G__18240;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function() {
  var unchecked_subtract = null;
  var unchecked_subtract__1 = function(x) {
    return-x;
  };
  var unchecked_subtract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract__3 = function() {
    var G__18242__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_subtract, x - y, more);
    };
    var G__18242 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18242__delegate.call(this, x, y, more);
    };
    G__18242.cljs$lang$maxFixedArity = 2;
    G__18242.cljs$lang$applyTo = function(arglist__18243) {
      var x = cljs.core.first(arglist__18243);
      arglist__18243 = cljs.core.next(arglist__18243);
      var y = cljs.core.first(arglist__18243);
      var more = cljs.core.rest(arglist__18243);
      return G__18242__delegate(x, y, more);
    };
    G__18242.cljs$core$IFn$_invoke$arity$variadic = G__18242__delegate;
    return G__18242;
  }();
  unchecked_subtract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract__1.call(this, x);
      case 2:
        return unchecked_subtract__2.call(this, x, y);
      default:
        return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract.cljs$lang$maxFixedArity = 2;
  unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract;
}();
cljs.core.unchecked_subtract_int = function() {
  var unchecked_subtract_int = null;
  var unchecked_subtract_int__1 = function(x) {
    return-x;
  };
  var unchecked_subtract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract_int__3 = function() {
    var G__18244__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_subtract_int, x - y, more);
    };
    var G__18244 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18244__delegate.call(this, x, y, more);
    };
    G__18244.cljs$lang$maxFixedArity = 2;
    G__18244.cljs$lang$applyTo = function(arglist__18245) {
      var x = cljs.core.first(arglist__18245);
      arglist__18245 = cljs.core.next(arglist__18245);
      var y = cljs.core.first(arglist__18245);
      var more = cljs.core.rest(arglist__18245);
      return G__18244__delegate(x, y, more);
    };
    G__18244.cljs$core$IFn$_invoke$arity$variadic = G__18244__delegate;
    return G__18244;
  }();
  unchecked_subtract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract_int__1.call(this, x);
      case 2:
        return unchecked_subtract_int__2.call(this, x, y);
      default:
        return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
  unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    return Math.floor.call(null, q);
  } else {
    return Math.ceil.call(null, q);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q;
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null);
  };
  var rand__1 = function(n) {
    return n * rand.call(null);
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n));
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y;
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y;
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y;
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y;
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__18246__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__18247 = y;
            var G__18248 = cljs.core.first.call(null, more);
            var G__18249 = cljs.core.next.call(null, more);
            x = G__18247;
            y = G__18248;
            more = G__18249;
            continue;
          } else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__18246 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18246__delegate.call(this, x, y, more);
    };
    G__18246.cljs$lang$maxFixedArity = 2;
    G__18246.cljs$lang$applyTo = function(arglist__18250) {
      var x = cljs.core.first(arglist__18250);
      arglist__18250 = cljs.core.next(arglist__18250);
      var y = cljs.core.first(arglist__18250);
      var more = cljs.core.rest(arglist__18250);
      return G__18246__delegate(x, y, more);
    };
    G__18246.cljs$core$IFn$_invoke$arity$variadic = G__18246__delegate;
    return G__18246;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__18251 = n__$1 - 1;
      var G__18252 = cljs.core.next.call(null, xs);
      n__$1 = G__18251;
      xs = G__18252;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      return "" + x;
    }
  };
  var str__2 = function() {
    var G__18253__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__18254 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__18255 = cljs.core.next.call(null, more);
          sb = G__18254;
          more = G__18255;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__18253 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__18253__delegate.call(this, x, ys);
    };
    G__18253.cljs$lang$maxFixedArity = 1;
    G__18253.cljs$lang$applyTo = function(arglist__18256) {
      var x = cljs.core.first(arglist__18256);
      var ys = cljs.core.rest(arglist__18256);
      return G__18253__delegate(x, ys);
    };
    G__18253.cljs$core$IFn$_invoke$arity$variadic = G__18253__delegate;
    return G__18253;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? cljs.core.counted_QMARK_.call(null, x) && cljs.core.counted_QMARK_.call(null, y) && !(cljs.core.count.call(null, x) === cljs.core.count.call(null, y)) ? false : function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__18257 = cljs.core.next.call(null, xs);
            var G__18258 = cljs.core.next.call(null, ys);
            xs = G__18257;
            ys = G__18258;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__18259 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__18260 = cljs.core.next.call(null, s);
        res = G__18259;
        s = G__18260;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while (true) {
    if (s) {
      var e = cljs.core.first.call(null, s);
      var G__18261 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__18262 = cljs.core.next.call(null, s);
      h = G__18261;
      s = G__18262;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__18263 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__18264 = cljs.core.next.call(null, s__$1);
      h = G__18263;
      s__$1 = G__18264;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__18271_18277 = cljs.core.seq.call(null, fn_map);
  var chunk__18272_18278 = null;
  var count__18273_18279 = 0;
  var i__18274_18280 = 0;
  while (true) {
    if (i__18274_18280 < count__18273_18279) {
      var vec__18275_18281 = cljs.core._nth.call(null, chunk__18272_18278, i__18274_18280);
      var key_name_18282 = cljs.core.nth.call(null, vec__18275_18281, 0, null);
      var f_18283 = cljs.core.nth.call(null, vec__18275_18281, 1, null);
      var str_name_18284 = cljs.core.name.call(null, key_name_18282);
      obj[str_name_18284] = f_18283;
      var G__18285 = seq__18271_18277;
      var G__18286 = chunk__18272_18278;
      var G__18287 = count__18273_18279;
      var G__18288 = i__18274_18280 + 1;
      seq__18271_18277 = G__18285;
      chunk__18272_18278 = G__18286;
      count__18273_18279 = G__18287;
      i__18274_18280 = G__18288;
      continue;
    } else {
      var temp__4126__auto___18289 = cljs.core.seq.call(null, seq__18271_18277);
      if (temp__4126__auto___18289) {
        var seq__18271_18290__$1 = temp__4126__auto___18289;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__18271_18290__$1)) {
          var c__4543__auto___18291 = cljs.core.chunk_first.call(null, seq__18271_18290__$1);
          var G__18292 = cljs.core.chunk_rest.call(null, seq__18271_18290__$1);
          var G__18293 = c__4543__auto___18291;
          var G__18294 = cljs.core.count.call(null, c__4543__auto___18291);
          var G__18295 = 0;
          seq__18271_18277 = G__18292;
          chunk__18272_18278 = G__18293;
          count__18273_18279 = G__18294;
          i__18274_18280 = G__18295;
          continue;
        } else {
          var vec__18276_18296 = cljs.core.first.call(null, seq__18271_18290__$1);
          var key_name_18297 = cljs.core.nth.call(null, vec__18276_18296, 0, null);
          var f_18298 = cljs.core.nth.call(null, vec__18276_18296, 1, null);
          var str_name_18299 = cljs.core.name.call(null, key_name_18297);
          obj[str_name_18299] = f_18298;
          var G__18300 = cljs.core.next.call(null, seq__18271_18290__$1);
          var G__18301 = null;
          var G__18302 = 0;
          var G__18303 = 0;
          seq__18271_18277 = G__18300;
          chunk__18272_18278 = G__18301;
          count__18273_18279 = G__18302;
          i__18274_18280 = G__18303;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4177__auto__ = self__.__hash;
  if (!(h__4177__auto__ == null)) {
    return h__4177__auto__;
  } else {
    var h__4177__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4177__auto____$1;
    return h__4177__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4734__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4734__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4734__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4734__auto__);
};
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__18305 = coll;
  if (G__18305) {
    var bit__4437__auto__ = G__18305.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4437__auto__ || G__18305.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__18305.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__18305);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__18305);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__18306 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__18306;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__18307 = i - 1;
        var G__18308 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__18307;
        r = G__18308;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__18309) {
    var xs = cljs.core.seq(arglist__18309);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq.call(null, self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4177__auto__ = self__.__hash;
  if (!(h__4177__auto__ == null)) {
    return h__4177__auto__;
  } else {
    var h__4177__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4177__auto____$1;
    return h__4177__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4734__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4734__auto__);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3761__auto__ = coll == null;
    if (or__3761__auto__) {
      return or__3761__auto__;
    } else {
      var G__18313 = coll;
      if (G__18313) {
        var bit__4430__auto__ = G__18313.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4430__auto__ || G__18313.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__18315 = x;
  if (G__18315) {
    var bit__4437__auto__ = G__18315.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4437__auto__ || G__18315.cljs$core$IList$) {
      return true;
    } else {
      if (!G__18315.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__18315);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__18315);
  }
};
cljs.core.hash_keyword = function hash_keyword(k) {
  return cljs.core.hash_symbol.call(null, k) + 2654435769 | 0;
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4177__auto__ = self__._hash;
  if (!(h__4177__auto__ == null)) {
    return h__4177__auto__;
  } else {
    var h__4177__auto____$1 = cljs.core.hash_keyword.call(null, this$__$1);
    self__._hash = h__4177__auto____$1;
    return h__4177__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__18317 = null;
  var G__18317__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw);
  };
  var G__18317__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found);
  };
  G__18317 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__18317__2.call(this, self__, coll);
      case 3:
        return G__18317__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18317.cljs$core$IFn$_invoke$arity$2 = G__18317__2;
  G__18317.cljs$core$IFn$_invoke$arity$3 = G__18317__3;
  return G__18317;
}();
cljs.core.Keyword.prototype.apply = function(self__, args18316) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args18316)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__18319 = x;
    if (G__18319) {
      var bit__4430__auto__ = G__18319.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4430__auto__ || G__18319.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._namespace.call(null, x);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace.call(null, name), cljs.core.name.call(null, name), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4177__auto__ = self__.__hash;
  if (!(h__4177__auto__ == null)) {
    return h__4177__auto__;
  } else {
    var h__4177__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4177__auto____$1;
    return h__4177__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__18320 = ls.sval();
        ls = G__18320;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4734__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4734__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4177__auto__ = self__.__hash;
  if (!(h__4177__auto__ == null)) {
    return h__4177__auto__;
  } else {
    var h__4177__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4177__auto____$1;
    return h__4177__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4734__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4734__auto__);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count.call(null, chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__18322 = s;
    if (G__18322) {
      var bit__4430__auto__ = G__18322.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4430__auto__ || G__18322.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next.call(null, s);
  } else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__18323 = cljs.core.next.call(null, s__$1);
      s__$1 = G__18323;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_18324 = 0;
  var xs_18325 = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs_18325) {
      ret[i_18324] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_18325));
      var G__18326 = i_18324 + 1;
      var G__18327 = cljs.core.next.call(null, xs_18325);
      i_18324 = G__18326;
      xs_18325 = G__18327;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__18328 = i + 1;
          var G__18329 = cljs.core.next.call(null, s__$1);
          i = G__18328;
          s__$1 = G__18329;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4643__auto___18330 = size;
      var i_18331 = 0;
      while (true) {
        if (i_18331 < n__4643__auto___18330) {
          a[i_18331] = init_val_or_seq;
          var G__18332 = i_18331 + 1;
          i_18331 = G__18332;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__18333 = i + 1;
          var G__18334 = cljs.core.next.call(null, s__$1);
          i = G__18333;
          s__$1 = G__18334;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4643__auto___18335 = size;
      var i_18336 = 0;
      while (true) {
        if (i_18336 < n__4643__auto___18335) {
          a[i_18336] = init_val_or_seq;
          var G__18337 = i_18336 + 1;
          i_18336 = G__18337;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__18338 = i + 1;
          var G__18339 = cljs.core.next.call(null, s__$1);
          i = G__18338;
          s__$1 = G__18339;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4643__auto___18340 = size;
      var i_18341 = 0;
      while (true) {
        if (i_18341 < n__4643__auto___18340) {
          a[i_18341] = init_val_or_seq;
          var G__18342 = i_18341 + 1;
          i_18341 = G__18342;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__18343 = i + 1;
          var G__18344 = cljs.core.next.call(null, s__$1);
          i = G__18343;
          s__$1 = G__18344;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4643__auto___18345 = size;
      var i_18346 = 0;
      while (true) {
        if (i_18346 < n__4643__auto___18345) {
          a[i_18346] = init_val_or_seq;
          var G__18347 = i_18346 + 1;
          i_18346 = G__18347;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__18348 = cljs.core.next.call(null, s__$1);
        var G__18349 = i - 1;
        var G__18350 = sum + 1;
        s__$1 = G__18348;
        i = G__18349;
        sum = G__18350;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist));
    } else {
      return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)));
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y));
        } else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__18351__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1));
            } else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat.call(null, concat.call(null, x, y), zs);
    };
    var G__18351 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18351__delegate.call(this, x, y, zs);
    };
    G__18351.cljs$lang$maxFixedArity = 2;
    G__18351.cljs$lang$applyTo = function(arglist__18352) {
      var x = cljs.core.first(arglist__18352);
      arglist__18352 = cljs.core.next(arglist__18352);
      var y = cljs.core.first(arglist__18352);
      var zs = cljs.core.rest(arglist__18352);
      return G__18351__delegate(x, y, zs);
    };
    G__18351.cljs$core$IFn$_invoke$arity$variadic = G__18351__delegate;
    return G__18351;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)));
  };
  var list_STAR___5 = function() {
    var G__18353__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))));
    };
    var G__18353 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__18353__delegate.call(this, a, b, c, d, more);
    };
    G__18353.cljs$lang$maxFixedArity = 4;
    G__18353.cljs$lang$applyTo = function(arglist__18354) {
      var a = cljs.core.first(arglist__18354);
      arglist__18354 = cljs.core.next(arglist__18354);
      var b = cljs.core.first(arglist__18354);
      arglist__18354 = cljs.core.next(arglist__18354);
      var c = cljs.core.first(arglist__18354);
      arglist__18354 = cljs.core.next(arglist__18354);
      var d = cljs.core.first(arglist__18354);
      var more = cljs.core.rest(arglist__18354);
      return G__18353__delegate(a, b, c, d, more);
    };
    G__18353.cljs$core$IFn$_invoke$arity$variadic = G__18353__delegate;
    return G__18353;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___0 = function() {
    return cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  };
  var conj_BANG___1 = function(coll) {
    return coll;
  };
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_.call(null, tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__18355__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__18356 = ntcoll;
          var G__18357 = cljs.core.first.call(null, vals);
          var G__18358 = cljs.core.next.call(null, vals);
          tcoll = G__18356;
          val = G__18357;
          vals = G__18358;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__18355 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18355__delegate.call(this, tcoll, val, vals);
    };
    G__18355.cljs$lang$maxFixedArity = 2;
    G__18355.cljs$lang$applyTo = function(arglist__18359) {
      var tcoll = cljs.core.first(arglist__18359);
      arglist__18359 = cljs.core.next(arglist__18359);
      var val = cljs.core.first(arglist__18359);
      var vals = cljs.core.rest(arglist__18359);
      return G__18355__delegate(tcoll, val, vals);
    };
    G__18355.cljs$core$IFn$_invoke$arity$variadic = G__18355__delegate;
    return G__18355;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 0:
        return conj_BANG___0.call(this);
      case 1:
        return conj_BANG___1.call(this, tcoll);
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
  conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_.call(null, tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__18360__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_.call(null, tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__18361 = ntcoll;
          var G__18362 = cljs.core.first.call(null, kvs);
          var G__18363 = cljs.core.second.call(null, kvs);
          var G__18364 = cljs.core.nnext.call(null, kvs);
          tcoll = G__18361;
          key = G__18362;
          val = G__18363;
          kvs = G__18364;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__18360 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__18360__delegate.call(this, tcoll, key, val, kvs);
    };
    G__18360.cljs$lang$maxFixedArity = 3;
    G__18360.cljs$lang$applyTo = function(arglist__18365) {
      var tcoll = cljs.core.first(arglist__18365);
      arglist__18365 = cljs.core.next(arglist__18365);
      var key = cljs.core.first(arglist__18365);
      arglist__18365 = cljs.core.next(arglist__18365);
      var val = cljs.core.first(arglist__18365);
      var kvs = cljs.core.rest(arglist__18365);
      return G__18360__delegate(tcoll, key, val, kvs);
    };
    G__18360.cljs$core$IFn$_invoke$arity$variadic = G__18360__delegate;
    return G__18360;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_.call(null, tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__18366__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_.call(null, tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__18367 = ntcoll;
          var G__18368 = cljs.core.first.call(null, ks);
          var G__18369 = cljs.core.next.call(null, ks);
          tcoll = G__18367;
          key = G__18368;
          ks = G__18369;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__18366 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18366__delegate.call(this, tcoll, key, ks);
    };
    G__18366.cljs$lang$maxFixedArity = 2;
    G__18366.cljs$lang$applyTo = function(arglist__18370) {
      var tcoll = cljs.core.first(arglist__18370);
      arglist__18370 = cljs.core.next(arglist__18370);
      var key = cljs.core.first(arglist__18370);
      var ks = cljs.core.rest(arglist__18370);
      return G__18366__delegate(tcoll, key, ks);
    };
    G__18366.cljs$core$IFn$_invoke$arity$variadic = G__18366__delegate;
    return G__18366;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_.call(null, tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__18371__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__18372 = ntcoll;
          var G__18373 = cljs.core.first.call(null, vals);
          var G__18374 = cljs.core.next.call(null, vals);
          tcoll = G__18372;
          val = G__18373;
          vals = G__18374;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__18371 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18371__delegate.call(this, tcoll, val, vals);
    };
    G__18371.cljs$lang$maxFixedArity = 2;
    G__18371.cljs$lang$applyTo = function(arglist__18375) {
      var tcoll = cljs.core.first(arglist__18375);
      arglist__18375 = cljs.core.next(arglist__18375);
      var val = cljs.core.first(arglist__18375);
      var vals = cljs.core.rest(arglist__18375);
      return G__18371__delegate(tcoll, val, vals);
    };
    G__18371.cljs$core$IFn$_invoke$arity$variadic = G__18371__delegate;
    return G__18371;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if (argc === 0) {
    return f.call(null);
  } else {
    var a4687 = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4687);
      } else {
        return f.call(null, a4687);
      }
    } else {
      var b4688 = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4687, b4688);
        } else {
          return f.call(null, a4687, b4688);
        }
      } else {
        var c4689 = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4687, b4688, c4689);
          } else {
            return f.call(null, a4687, b4688, c4689);
          }
        } else {
          var d4690 = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4687, b4688, c4689, d4690);
            } else {
              return f.call(null, a4687, b4688, c4689, d4690);
            }
          } else {
            var e4691 = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4687, b4688, c4689, d4690, e4691);
              } else {
                return f.call(null, a4687, b4688, c4689, d4690, e4691);
              }
            } else {
              var f4692 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4687, b4688, c4689, d4690, e4691, f4692);
                } else {
                  return f.call(null, a4687, b4688, c4689, d4690, e4691, f4692);
                }
              } else {
                var g4693 = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4687, b4688, c4689, d4690, e4691, f4692, g4693);
                  } else {
                    return f.call(null, a4687, b4688, c4689, d4690, e4691, f4692, g4693);
                  }
                } else {
                  var h4694 = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4687, b4688, c4689, d4690, e4691, f4692, g4693, h4694);
                    } else {
                      return f.call(null, a4687, b4688, c4689, d4690, e4691, f4692, g4693, h4694);
                    }
                  } else {
                    var i4695 = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4687, b4688, c4689, d4690, e4691, f4692, g4693, h4694, i4695);
                      } else {
                        return f.call(null, a4687, b4688, c4689, d4690, e4691, f4692, g4693, h4694, i4695);
                      }
                    } else {
                      var j4696 = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4687, b4688, c4689, d4690, e4691, f4692, g4693, h4694, i4695, j4696);
                        } else {
                          return f.call(null, a4687, b4688, c4689, d4690, e4691, f4692, g4693, h4694, i4695, j4696);
                        }
                      } else {
                        var k4697 = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4687, b4688, c4689, d4690, e4691, f4692, g4693, h4694, i4695, j4696, k4697);
                          } else {
                            return f.call(null, a4687, b4688, c4689, d4690, e4691, f4692, g4693, h4694, i4695, j4696, k4697);
                          }
                        } else {
                          var l4698 = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4687, b4688, c4689, d4690, e4691, f4692, g4693, h4694, i4695, j4696, k4697, l4698);
                            } else {
                              return f.call(null, a4687, b4688, c4689, d4690, e4691, f4692, g4693, h4694, i4695, j4696, k4697, l4698);
                            }
                          } else {
                            var m4699 = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4687, b4688, c4689, d4690, e4691, f4692, g4693, h4694, i4695, j4696, k4697, l4698, m4699);
                              } else {
                                return f.call(null, a4687, b4688, c4689, d4690, e4691, f4692, g4693, h4694, i4695, j4696, k4697, l4698, m4699);
                              }
                            } else {
                              var n4700 = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4687, b4688, c4689, d4690, e4691, f4692, g4693, h4694, i4695, j4696, k4697, l4698, m4699, n4700);
                                } else {
                                  return f.call(null, a4687, b4688, c4689, d4690, e4691, f4692, g4693, h4694, i4695, j4696, k4697, l4698, m4699, n4700);
                                }
                              } else {
                                var o4701 = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4687, b4688, c4689, d4690, e4691, f4692, g4693, h4694, i4695, j4696, k4697, l4698, m4699, n4700, o4701);
                                  } else {
                                    return f.call(null, a4687, b4688, c4689, d4690, e4691, f4692, g4693, h4694, i4695, j4696, k4697, l4698, m4699, n4700, o4701);
                                  }
                                } else {
                                  var p4702 = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4687, b4688, c4689, d4690, e4691, f4692, g4693, h4694, i4695, j4696, k4697, l4698, m4699, n4700, o4701, p4702);
                                    } else {
                                      return f.call(null, a4687, b4688, c4689, d4690, e4691, f4692, g4693, h4694, i4695, j4696, k4697, l4698, m4699, n4700, o4701, p4702);
                                    }
                                  } else {
                                    var q4703 = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4687, b4688, c4689, d4690, e4691, f4692, g4693, h4694, i4695, j4696, k4697, l4698, m4699, n4700, o4701, p4702, q4703);
                                      } else {
                                        return f.call(null, a4687, b4688, c4689, d4690, e4691, f4692, g4693, h4694, i4695, j4696, k4697, l4698, m4699, n4700, o4701, p4702, q4703);
                                      }
                                    } else {
                                      var r4704 = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4687, b4688, c4689, d4690, e4691, f4692, g4693, h4694, i4695, j4696, k4697, l4698, m4699, n4700, o4701, p4702, q4703, r4704);
                                        } else {
                                          return f.call(null, a4687, b4688, c4689, d4690, e4691, f4692, g4693, h4694, i4695, j4696, k4697, l4698, m4699, n4700, o4701, p4702, q4703, r4704);
                                        }
                                      } else {
                                        var s4705 = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4687, b4688, c4689, d4690, e4691, f4692, g4693, h4694, i4695, j4696, k4697, l4698, m4699, n4700, o4701, p4702, q4703, r4704, s4705);
                                          } else {
                                            return f.call(null, a4687, b4688, c4689, d4690, e4691, f4692, g4693, h4694, i4695, j4696, k4697, l4698, m4699, n4700, o4701, p4702, q4703, r4704, s4705);
                                          }
                                        } else {
                                          var t4706 = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4687, b4688, c4689, d4690, e4691, f4692, g4693, h4694, i4695, j4696, k4697, l4698, m4699, n4700, o4701, p4702, q4703, r4704, s4705, t4706);
                                            } else {
                                              return f.call(null, a4687, b4688, c4689, d4690, e4691, f4692, g4693, h4694, i4695, j4696, k4697, l4698, m4699, n4700, o4701, p4702, q4703, r4704, s4705, t4706);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__6 = function() {
    var G__18376__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array.call(null, arglist));
      }
    };
    var G__18376 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__18376__delegate.call(this, f, a, b, c, d, args);
    };
    G__18376.cljs$lang$maxFixedArity = 5;
    G__18376.cljs$lang$applyTo = function(arglist__18377) {
      var f = cljs.core.first(arglist__18377);
      arglist__18377 = cljs.core.next(arglist__18377);
      var a = cljs.core.first(arglist__18377);
      arglist__18377 = cljs.core.next(arglist__18377);
      var b = cljs.core.first(arglist__18377);
      arglist__18377 = cljs.core.next(arglist__18377);
      var c = cljs.core.first(arglist__18377);
      arglist__18377 = cljs.core.next(arglist__18377);
      var d = cljs.core.first(arglist__18377);
      var args = cljs.core.rest(arglist__18377);
      return G__18376__delegate(f, a, b, c, d, args);
    };
    G__18376.cljs$core$IFn$_invoke$arity$variadic = G__18376__delegate;
    return G__18376;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj)));
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a));
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b));
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c));
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c, d));
  };
  var vary_meta__7 = function() {
    var G__18378__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), a, b, c, d, args));
    };
    var G__18378 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__18378__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__18378.cljs$lang$maxFixedArity = 6;
    G__18378.cljs$lang$applyTo = function(arglist__18379) {
      var obj = cljs.core.first(arglist__18379);
      arglist__18379 = cljs.core.next(arglist__18379);
      var f = cljs.core.first(arglist__18379);
      arglist__18379 = cljs.core.next(arglist__18379);
      var a = cljs.core.first(arglist__18379);
      arglist__18379 = cljs.core.next(arglist__18379);
      var b = cljs.core.first(arglist__18379);
      arglist__18379 = cljs.core.next(arglist__18379);
      var c = cljs.core.first(arglist__18379);
      arglist__18379 = cljs.core.next(arglist__18379);
      var d = cljs.core.first(arglist__18379);
      var args = cljs.core.rest(arglist__18379);
      return G__18378__delegate(obj, f, a, b, c, d, args);
    };
    G__18378.cljs$core$IFn$_invoke$arity$variadic = G__18378__delegate;
    return G__18378;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var not_EQ___3 = function() {
    var G__18380__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more));
    };
    var G__18380 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18380__delegate.call(this, x, y, more);
    };
    G__18380.cljs$lang$maxFixedArity = 2;
    G__18380.cljs$lang$applyTo = function(arglist__18381) {
      var x = cljs.core.first(arglist__18381);
      arglist__18381 = cljs.core.next(arglist__18381);
      var y = cljs.core.first(arglist__18381);
      var more = cljs.core.rest(arglist__18381);
      return G__18380__delegate(x, y, more);
    };
    G__18380.cljs$core$IFn$_invoke$arity$variadic = G__18380__delegate;
    return G__18380;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq.call(null, coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function nil_iter() {
  if (typeof cljs.core.t18385 !== "undefined") {
  } else {
    cljs.core.t18385 = function(nil_iter, meta18386) {
      this.nil_iter = nil_iter;
      this.meta18386 = meta18386;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t18385.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t18385.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t18385.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t18385.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18387) {
      var self__ = this;
      var _18387__$1 = this;
      return self__.meta18386;
    };
    cljs.core.t18385.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18387, meta18386__$1) {
      var self__ = this;
      var _18387__$1 = this;
      return new cljs.core.t18385(self__.nil_iter, meta18386__$1);
    };
    cljs.core.t18385.cljs$lang$type = true;
    cljs.core.t18385.cljs$lang$ctorStr = "cljs.core/t18385";
    cljs.core.t18385.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
      return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/t18385");
    };
    cljs.core.__GT_t18385 = function __GT_t18385(nil_iter__$1, meta18386) {
      return new cljs.core.t18385(nil_iter__$1, meta18386);
    };
  }
  return new cljs.core.t18385(nil_iter, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 54, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 2986, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 2982, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/tim/clojure/logging-dashboard/resources/public/js/cljs/core.cljs"], null));
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function __GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function __GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq.call(null, self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next.call(null, self__._seq);
    } else {
    }
  }
  return!(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not.call(null, this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first.call(null, self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function __GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter.call(null);
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_iter.call(null, coll);
      } else {
        if (cljs.core.iterable_QMARK_.call(null, coll)) {
          return cljs.core._iterator.call(null, coll);
        } else {
          if (cljs.core.seqable_QMARK_.call(null, coll)) {
            return cljs.core.seq_iter.call(null, coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3749__auto__ = !(lt.stepper == null);
      if (and__3749__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__3749__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_.call(null, self__.xform.call(null, lt, self__.iter.next()))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.call(null, lt);
  }
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function __GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function stepper(xform, iter) {
  var stepfn = function() {
    var stepfn = null;
    var stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_.call(null, result) ? cljs.core.deref.call(null, result) : result;
      lt.stepper = null;
      return result;
    };
    var stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer.call(null, lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return stepfn__1.call(this, result);
        case 2:
          return stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
    stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
    return stepfn;
  }();
  return new cljs.core.Stepper(xform.call(null, stepfn), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq.call(null, self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first.call(null, iters__$1);
      if (cljs.core.not.call(null, iter.hasNext())) {
        return false;
      } else {
        var G__18388 = cljs.core.next.call(null, iters__$1);
        iters__$1 = G__18388;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__4643__auto___18389 = self__.iters.length;
  var i_18390 = 0;
  while (true) {
    if (i_18390 < n__4643__auto___18389) {
      self__.nexts[i_18390] = self__.iters[i_18390].next();
      var G__18391 = i_18390 + 1;
      i_18390 = G__18391;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.call(null, self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3749__auto__ = !(lt.stepper == null);
      if (and__3749__auto__) {
        return this$.hasNext();
      } else {
        return and__3749__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_.call(null, cljs.core.apply.call(null, self__.xform, cljs.core.cons.call(null, lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.call(null, lt);
  }
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function __GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function() {
  var multi_stepper = null;
  var multi_stepper__2 = function(xform, iters) {
    return multi_stepper.call(null, xform, iters, new Array(iters.length));
  };
  var multi_stepper__3 = function(xform, iters, nexts) {
    var stepfn = function() {
      var stepfn = null;
      var stepfn__1 = function(result) {
        var lt = cljs.core.reduced_QMARK_.call(null, result) ? cljs.core.deref.call(null, result) : result;
        lt.stepper = null;
        return lt;
      };
      var stepfn__2 = function(result, input) {
        var lt = result;
        lt.first = input;
        lt.rest = cljs.core.lazy_transformer.call(null, lt.stepper);
        lt.stepper = null;
        return lt.rest;
      };
      stepfn = function(result, input) {
        switch(arguments.length) {
          case 1:
            return stepfn__1.call(this, result);
          case 2:
            return stepfn__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
      stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
      return stepfn;
    }();
    return new cljs.core.MultiStepper(xform.call(null, stepfn), iters, nexts);
  };
  multi_stepper = function(xform, iters, nexts) {
    switch(arguments.length) {
      case 2:
        return multi_stepper__2.call(this, xform, iters);
      case 3:
        return multi_stepper__3.call(this, xform, iters, nexts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
  multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
  return multi_stepper;
}();
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq.call(null, self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq.call(null, this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential.call(null, this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_.call(null, other) && cljs.core.seq.call(null, other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, cljs.core._seq.call(null, this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function __GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4734__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4734__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper.call(null, xform, cljs.core.iter.call(null, coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__18392_18396 = cljs.core.seq.call(null, colls);
  var chunk__18393_18397 = null;
  var count__18394_18398 = 0;
  var i__18395_18399 = 0;
  while (true) {
    if (i__18395_18399 < count__18394_18398) {
      var coll_18400 = cljs.core._nth.call(null, chunk__18393_18397, i__18395_18399);
      iters.push(cljs.core.iter.call(null, coll_18400));
      var G__18401 = seq__18392_18396;
      var G__18402 = chunk__18393_18397;
      var G__18403 = count__18394_18398;
      var G__18404 = i__18395_18399 + 1;
      seq__18392_18396 = G__18401;
      chunk__18393_18397 = G__18402;
      count__18394_18398 = G__18403;
      i__18395_18399 = G__18404;
      continue;
    } else {
      var temp__4126__auto___18405 = cljs.core.seq.call(null, seq__18392_18396);
      if (temp__4126__auto___18405) {
        var seq__18392_18406__$1 = temp__4126__auto___18405;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__18392_18406__$1)) {
          var c__4543__auto___18407 = cljs.core.chunk_first.call(null, seq__18392_18406__$1);
          var G__18408 = cljs.core.chunk_rest.call(null, seq__18392_18406__$1);
          var G__18409 = c__4543__auto___18407;
          var G__18410 = cljs.core.count.call(null, c__4543__auto___18407);
          var G__18411 = 0;
          seq__18392_18396 = G__18408;
          chunk__18393_18397 = G__18409;
          count__18394_18398 = G__18410;
          i__18395_18399 = G__18411;
          continue;
        } else {
          var coll_18412 = cljs.core.first.call(null, seq__18392_18406__$1);
          iters.push(cljs.core.iter.call(null, coll_18412));
          var G__18413 = cljs.core.next.call(null, seq__18392_18406__$1);
          var G__18414 = null;
          var G__18415 = 0;
          var G__18416 = 0;
          seq__18392_18396 = G__18413;
          chunk__18393_18397 = G__18414;
          count__18394_18398 = G__18415;
          i__18395_18399 = G__18416;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.call(null, xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function() {
  var sequence = null;
  var sequence__1 = function(coll) {
    if (cljs.core.seq_QMARK_.call(null, coll)) {
      return coll;
    } else {
      var or__3761__auto__ = cljs.core.seq.call(null, coll);
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  };
  var sequence__2 = function(xform, coll) {
    return cljs.core.LazyTransformer.create(xform, coll);
  };
  var sequence__3 = function() {
    var G__18417__delegate = function(xform, coll, colls) {
      return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array.call(null, cljs.core.cons.call(null, coll, colls)));
    };
    var G__18417 = function(xform, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18417__delegate.call(this, xform, coll, colls);
    };
    G__18417.cljs$lang$maxFixedArity = 2;
    G__18417.cljs$lang$applyTo = function(arglist__18418) {
      var xform = cljs.core.first(arglist__18418);
      arglist__18418 = cljs.core.next(arglist__18418);
      var coll = cljs.core.first(arglist__18418);
      var colls = cljs.core.rest(arglist__18418);
      return G__18417__delegate(xform, coll, colls);
    };
    G__18417.cljs$core$IFn$_invoke$arity$variadic = G__18417__delegate;
    return G__18417;
  }();
  sequence = function(xform, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return sequence__1.call(this, xform);
      case 2:
        return sequence__2.call(this, xform, coll);
      default:
        return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sequence.cljs$lang$maxFixedArity = 2;
  sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
  sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
  sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
  sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
  return sequence;
}();
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__18419 = pred;
        var G__18420 = cljs.core.next.call(null, coll);
        pred = G__18419;
        coll = G__18420;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll)) {
      var or__3761__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if (cljs.core.truth_(or__3761__auto__)) {
        return or__3761__auto__;
      } else {
        var G__18421 = pred;
        var G__18422 = cljs.core.next.call(null, coll);
        pred = G__18421;
        coll = G__18422;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n);
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__18423 = null;
    var G__18423__0 = function() {
      return cljs.core.not.call(null, f.call(null));
    };
    var G__18423__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x));
    };
    var G__18423__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y));
    };
    var G__18423__3 = function() {
      var G__18424__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs));
      };
      var G__18424 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
        }
        return G__18424__delegate.call(this, x, y, zs);
      };
      G__18424.cljs$lang$maxFixedArity = 2;
      G__18424.cljs$lang$applyTo = function(arglist__18425) {
        var x = cljs.core.first(arglist__18425);
        arglist__18425 = cljs.core.next(arglist__18425);
        var y = cljs.core.first(arglist__18425);
        var zs = cljs.core.rest(arglist__18425);
        return G__18424__delegate(x, y, zs);
      };
      G__18424.cljs$core$IFn$_invoke$arity$variadic = G__18424__delegate;
      return G__18424;
    }();
    G__18423 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__18423__0.call(this);
        case 1:
          return G__18423__1.call(this, x);
        case 2:
          return G__18423__2.call(this, x, y);
        default:
          return G__18423__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__18423.cljs$lang$maxFixedArity = 2;
    G__18423.cljs$lang$applyTo = G__18423__3.cljs$lang$applyTo;
    G__18423.cljs$core$IFn$_invoke$arity$0 = G__18423__0;
    G__18423.cljs$core$IFn$_invoke$arity$1 = G__18423__1;
    G__18423.cljs$core$IFn$_invoke$arity$2 = G__18423__2;
    G__18423.cljs$core$IFn$_invoke$arity$variadic = G__18423__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__18423;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__18426__delegate = function(args) {
      return x;
    };
    var G__18426 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__18426__delegate.call(this, args);
    };
    G__18426.cljs$lang$maxFixedArity = 0;
    G__18426.cljs$lang$applyTo = function(arglist__18427) {
      var args = cljs.core.seq(arglist__18427);
      return G__18426__delegate(args);
    };
    G__18426.cljs$core$IFn$_invoke$arity$variadic = G__18426__delegate;
    return G__18426;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__18428 = null;
      var G__18428__0 = function() {
        return f.call(null, g.call(null));
      };
      var G__18428__1 = function(x) {
        return f.call(null, g.call(null, x));
      };
      var G__18428__2 = function(x, y) {
        return f.call(null, g.call(null, x, y));
      };
      var G__18428__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z));
      };
      var G__18428__4 = function() {
        var G__18429__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args));
        };
        var G__18429 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__18429__delegate.call(this, x, y, z, args);
        };
        G__18429.cljs$lang$maxFixedArity = 3;
        G__18429.cljs$lang$applyTo = function(arglist__18430) {
          var x = cljs.core.first(arglist__18430);
          arglist__18430 = cljs.core.next(arglist__18430);
          var y = cljs.core.first(arglist__18430);
          arglist__18430 = cljs.core.next(arglist__18430);
          var z = cljs.core.first(arglist__18430);
          var args = cljs.core.rest(arglist__18430);
          return G__18429__delegate(x, y, z, args);
        };
        G__18429.cljs$core$IFn$_invoke$arity$variadic = G__18429__delegate;
        return G__18429;
      }();
      G__18428 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__18428__0.call(this);
          case 1:
            return G__18428__1.call(this, x);
          case 2:
            return G__18428__2.call(this, x, y);
          case 3:
            return G__18428__3.call(this, x, y, z);
          default:
            return G__18428__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18428.cljs$lang$maxFixedArity = 3;
      G__18428.cljs$lang$applyTo = G__18428__4.cljs$lang$applyTo;
      G__18428.cljs$core$IFn$_invoke$arity$0 = G__18428__0;
      G__18428.cljs$core$IFn$_invoke$arity$1 = G__18428__1;
      G__18428.cljs$core$IFn$_invoke$arity$2 = G__18428__2;
      G__18428.cljs$core$IFn$_invoke$arity$3 = G__18428__3;
      G__18428.cljs$core$IFn$_invoke$arity$variadic = G__18428__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18428;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__18431 = null;
      var G__18431__0 = function() {
        return f.call(null, g.call(null, h.call(null)));
      };
      var G__18431__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)));
      };
      var G__18431__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)));
      };
      var G__18431__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)));
      };
      var G__18431__4 = function() {
        var G__18432__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)));
        };
        var G__18432 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__18432__delegate.call(this, x, y, z, args);
        };
        G__18432.cljs$lang$maxFixedArity = 3;
        G__18432.cljs$lang$applyTo = function(arglist__18433) {
          var x = cljs.core.first(arglist__18433);
          arglist__18433 = cljs.core.next(arglist__18433);
          var y = cljs.core.first(arglist__18433);
          arglist__18433 = cljs.core.next(arglist__18433);
          var z = cljs.core.first(arglist__18433);
          var args = cljs.core.rest(arglist__18433);
          return G__18432__delegate(x, y, z, args);
        };
        G__18432.cljs$core$IFn$_invoke$arity$variadic = G__18432__delegate;
        return G__18432;
      }();
      G__18431 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__18431__0.call(this);
          case 1:
            return G__18431__1.call(this, x);
          case 2:
            return G__18431__2.call(this, x, y);
          case 3:
            return G__18431__3.call(this, x, y, z);
          default:
            return G__18431__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18431.cljs$lang$maxFixedArity = 3;
      G__18431.cljs$lang$applyTo = G__18431__4.cljs$lang$applyTo;
      G__18431.cljs$core$IFn$_invoke$arity$0 = G__18431__0;
      G__18431.cljs$core$IFn$_invoke$arity$1 = G__18431__1;
      G__18431.cljs$core$IFn$_invoke$arity$2 = G__18431__2;
      G__18431.cljs$core$IFn$_invoke$arity$3 = G__18431__3;
      G__18431.cljs$core$IFn$_invoke$arity$variadic = G__18431__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18431;
    }();
  };
  var comp__4 = function() {
    var G__18434__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__18435__delegate = function(args) {
            var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
            var fs__$2 = cljs.core.next.call(null, fs__$1);
            while (true) {
              if (fs__$2) {
                var G__18436 = cljs.core.first.call(null, fs__$2).call(null, ret);
                var G__18437 = cljs.core.next.call(null, fs__$2);
                ret = G__18436;
                fs__$2 = G__18437;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__18435 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__18435__delegate.call(this, args);
          };
          G__18435.cljs$lang$maxFixedArity = 0;
          G__18435.cljs$lang$applyTo = function(arglist__18438) {
            var args = cljs.core.seq(arglist__18438);
            return G__18435__delegate(args);
          };
          G__18435.cljs$core$IFn$_invoke$arity$variadic = G__18435__delegate;
          return G__18435;
        }();
      }(fs__$1);
    };
    var G__18434 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__18434__delegate.call(this, f1, f2, f3, fs);
    };
    G__18434.cljs$lang$maxFixedArity = 3;
    G__18434.cljs$lang$applyTo = function(arglist__18439) {
      var f1 = cljs.core.first(arglist__18439);
      arglist__18439 = cljs.core.next(arglist__18439);
      var f2 = cljs.core.first(arglist__18439);
      arglist__18439 = cljs.core.next(arglist__18439);
      var f3 = cljs.core.first(arglist__18439);
      var fs = cljs.core.rest(arglist__18439);
      return G__18434__delegate(f1, f2, f3, fs);
    };
    G__18434.cljs$core$IFn$_invoke$arity$variadic = G__18434__delegate;
    return G__18434;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__18440__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args);
      };
      var G__18440 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__18440__delegate.call(this, args);
      };
      G__18440.cljs$lang$maxFixedArity = 0;
      G__18440.cljs$lang$applyTo = function(arglist__18441) {
        var args = cljs.core.seq(arglist__18441);
        return G__18440__delegate(args);
      };
      G__18440.cljs$core$IFn$_invoke$arity$variadic = G__18440__delegate;
      return G__18440;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__18442__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args);
      };
      var G__18442 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__18442__delegate.call(this, args);
      };
      G__18442.cljs$lang$maxFixedArity = 0;
      G__18442.cljs$lang$applyTo = function(arglist__18443) {
        var args = cljs.core.seq(arglist__18443);
        return G__18442__delegate(args);
      };
      G__18442.cljs$core$IFn$_invoke$arity$variadic = G__18442__delegate;
      return G__18442;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__18444__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args);
      };
      var G__18444 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__18444__delegate.call(this, args);
      };
      G__18444.cljs$lang$maxFixedArity = 0;
      G__18444.cljs$lang$applyTo = function(arglist__18445) {
        var args = cljs.core.seq(arglist__18445);
        return G__18444__delegate(args);
      };
      G__18444.cljs$core$IFn$_invoke$arity$variadic = G__18444__delegate;
      return G__18444;
    }();
  };
  var partial__5 = function() {
    var G__18446__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__18447__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args));
        };
        var G__18447 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__18447__delegate.call(this, args);
        };
        G__18447.cljs$lang$maxFixedArity = 0;
        G__18447.cljs$lang$applyTo = function(arglist__18448) {
          var args = cljs.core.seq(arglist__18448);
          return G__18447__delegate(args);
        };
        G__18447.cljs$core$IFn$_invoke$arity$variadic = G__18447__delegate;
        return G__18447;
      }();
    };
    var G__18446 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__18446__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__18446.cljs$lang$maxFixedArity = 4;
    G__18446.cljs$lang$applyTo = function(arglist__18449) {
      var f = cljs.core.first(arglist__18449);
      arglist__18449 = cljs.core.next(arglist__18449);
      var arg1 = cljs.core.first(arglist__18449);
      arglist__18449 = cljs.core.next(arglist__18449);
      var arg2 = cljs.core.first(arglist__18449);
      arglist__18449 = cljs.core.next(arglist__18449);
      var arg3 = cljs.core.first(arglist__18449);
      var more = cljs.core.rest(arglist__18449);
      return G__18446__delegate(f, arg1, arg2, arg3, more);
    };
    G__18446.cljs$core$IFn$_invoke$arity$variadic = G__18446__delegate;
    return G__18446;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__18450 = null;
      var G__18450__1 = function(a) {
        return f.call(null, a == null ? x : a);
      };
      var G__18450__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b);
      };
      var G__18450__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c);
      };
      var G__18450__4 = function() {
        var G__18451__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds);
        };
        var G__18451 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__18451__delegate.call(this, a, b, c, ds);
        };
        G__18451.cljs$lang$maxFixedArity = 3;
        G__18451.cljs$lang$applyTo = function(arglist__18452) {
          var a = cljs.core.first(arglist__18452);
          arglist__18452 = cljs.core.next(arglist__18452);
          var b = cljs.core.first(arglist__18452);
          arglist__18452 = cljs.core.next(arglist__18452);
          var c = cljs.core.first(arglist__18452);
          var ds = cljs.core.rest(arglist__18452);
          return G__18451__delegate(a, b, c, ds);
        };
        G__18451.cljs$core$IFn$_invoke$arity$variadic = G__18451__delegate;
        return G__18451;
      }();
      G__18450 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__18450__1.call(this, a);
          case 2:
            return G__18450__2.call(this, a, b);
          case 3:
            return G__18450__3.call(this, a, b, c);
          default:
            return G__18450__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18450.cljs$lang$maxFixedArity = 3;
      G__18450.cljs$lang$applyTo = G__18450__4.cljs$lang$applyTo;
      G__18450.cljs$core$IFn$_invoke$arity$1 = G__18450__1;
      G__18450.cljs$core$IFn$_invoke$arity$2 = G__18450__2;
      G__18450.cljs$core$IFn$_invoke$arity$3 = G__18450__3;
      G__18450.cljs$core$IFn$_invoke$arity$variadic = G__18450__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18450;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__18453 = null;
      var G__18453__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__18453__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c);
      };
      var G__18453__4 = function() {
        var G__18454__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__18454 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__18454__delegate.call(this, a, b, c, ds);
        };
        G__18454.cljs$lang$maxFixedArity = 3;
        G__18454.cljs$lang$applyTo = function(arglist__18455) {
          var a = cljs.core.first(arglist__18455);
          arglist__18455 = cljs.core.next(arglist__18455);
          var b = cljs.core.first(arglist__18455);
          arglist__18455 = cljs.core.next(arglist__18455);
          var c = cljs.core.first(arglist__18455);
          var ds = cljs.core.rest(arglist__18455);
          return G__18454__delegate(a, b, c, ds);
        };
        G__18454.cljs$core$IFn$_invoke$arity$variadic = G__18454__delegate;
        return G__18454;
      }();
      G__18453 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__18453__2.call(this, a, b);
          case 3:
            return G__18453__3.call(this, a, b, c);
          default:
            return G__18453__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18453.cljs$lang$maxFixedArity = 3;
      G__18453.cljs$lang$applyTo = G__18453__4.cljs$lang$applyTo;
      G__18453.cljs$core$IFn$_invoke$arity$2 = G__18453__2;
      G__18453.cljs$core$IFn$_invoke$arity$3 = G__18453__3;
      G__18453.cljs$core$IFn$_invoke$arity$variadic = G__18453__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18453;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__18456 = null;
      var G__18456__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__18456__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c);
      };
      var G__18456__4 = function() {
        var G__18457__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__18457 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__18457__delegate.call(this, a, b, c, ds);
        };
        G__18457.cljs$lang$maxFixedArity = 3;
        G__18457.cljs$lang$applyTo = function(arglist__18458) {
          var a = cljs.core.first(arglist__18458);
          arglist__18458 = cljs.core.next(arglist__18458);
          var b = cljs.core.first(arglist__18458);
          arglist__18458 = cljs.core.next(arglist__18458);
          var c = cljs.core.first(arglist__18458);
          var ds = cljs.core.rest(arglist__18458);
          return G__18457__delegate(a, b, c, ds);
        };
        G__18457.cljs$core$IFn$_invoke$arity$variadic = G__18457__delegate;
        return G__18457;
      }();
      G__18456 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__18456__2.call(this, a, b);
          case 3:
            return G__18456__3.call(this, a, b, c);
          default:
            return G__18456__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18456.cljs$lang$maxFixedArity = 3;
      G__18456.cljs$lang$applyTo = G__18456__4.cljs$lang$applyTo;
      G__18456.cljs$core$IFn$_invoke$arity$2 = G__18456__2;
      G__18456.cljs$core$IFn$_invoke$arity$3 = G__18456__3;
      G__18456.cljs$core$IFn$_invoke$arity$variadic = G__18456__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18456;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4643__auto___18459 = size;
          var i_18460 = 0;
          while (true) {
            if (i_18460 < n__4643__auto___18459) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_18460, cljs.core._nth.call(null, c, i_18460)));
              var G__18461 = i_18460 + 1;
              i_18460 = G__18461;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi.call(null, 0, coll);
};
cljs.core.keep = function() {
  var keep = null;
  var keep__1 = function(f) {
    return function(rf) {
      return function() {
        var G__18462 = null;
        var G__18462__0 = function() {
          return rf.call(null);
        };
        var G__18462__1 = function(result) {
          return rf.call(null, result);
        };
        var G__18462__2 = function(result, input) {
          var v = f.call(null, input);
          if (v == null) {
            return result;
          } else {
            return rf.call(null, result, v);
          }
        };
        G__18462 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__18462__0.call(this);
            case 1:
              return G__18462__1.call(this, result);
            case 2:
              return G__18462__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__18462.cljs$core$IFn$_invoke$arity$0 = G__18462__0;
        G__18462.cljs$core$IFn$_invoke$arity$1 = G__18462__1;
        G__18462.cljs$core$IFn$_invoke$arity$2 = G__18462__2;
        return G__18462;
      }();
    };
  };
  var keep__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4643__auto___18463 = size;
          var i_18464 = 0;
          while (true) {
            if (i_18464 < n__4643__auto___18463) {
              var x_18465 = f.call(null, cljs.core._nth.call(null, c, i_18464));
              if (x_18465 == null) {
              } else {
                cljs.core.chunk_append.call(null, b, x_18465);
              }
              var G__18466 = i_18464 + 1;
              i_18464 = G__18466;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          var x = f.call(null, cljs.core.first.call(null, s));
          if (x == null) {
            return keep.call(null, f, cljs.core.rest.call(null, s));
          } else {
            return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  keep = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep__1.call(this, f);
      case 2:
        return keep__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
  keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
  return keep;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__18467 = cljs.core.seq.call(null, self__.watches);
  var chunk__18468 = null;
  var count__18469 = 0;
  var i__18470 = 0;
  while (true) {
    if (i__18470 < count__18469) {
      var vec__18471 = cljs.core._nth.call(null, chunk__18468, i__18470);
      var key = cljs.core.nth.call(null, vec__18471, 0, null);
      var f = cljs.core.nth.call(null, vec__18471, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__18473 = seq__18467;
      var G__18474 = chunk__18468;
      var G__18475 = count__18469;
      var G__18476 = i__18470 + 1;
      seq__18467 = G__18473;
      chunk__18468 = G__18474;
      count__18469 = G__18475;
      i__18470 = G__18476;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__18467);
      if (temp__4126__auto__) {
        var seq__18467__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__18467__$1)) {
          var c__4543__auto__ = cljs.core.chunk_first.call(null, seq__18467__$1);
          var G__18477 = cljs.core.chunk_rest.call(null, seq__18467__$1);
          var G__18478 = c__4543__auto__;
          var G__18479 = cljs.core.count.call(null, c__4543__auto__);
          var G__18480 = 0;
          seq__18467 = G__18477;
          chunk__18468 = G__18478;
          count__18469 = G__18479;
          i__18470 = G__18480;
          continue;
        } else {
          var vec__18472 = cljs.core.first.call(null, seq__18467__$1);
          var key = cljs.core.nth.call(null, vec__18472, 0, null);
          var f = cljs.core.nth.call(null, vec__18472, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__18481 = cljs.core.next.call(null, seq__18467__$1);
          var G__18482 = null;
          var G__18483 = 0;
          var G__18484 = 0;
          seq__18467 = G__18481;
          chunk__18468 = G__18482;
          count__18469 = G__18483;
          i__18470 = G__18484;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__18488__delegate = function(x, p__18485) {
      var map__18487 = p__18485;
      var map__18487__$1 = cljs.core.seq_QMARK_.call(null, map__18487) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18487) : map__18487;
      var validator = cljs.core.get.call(null, map__18487__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.call(null, map__18487__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__18488 = function(x, var_args) {
      var p__18485 = null;
      if (arguments.length > 1) {
        p__18485 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__18488__delegate.call(this, x, p__18485);
    };
    G__18488.cljs$lang$maxFixedArity = 1;
    G__18488.cljs$lang$applyTo = function(arglist__18489) {
      var x = cljs.core.first(arglist__18489);
      var p__18485 = cljs.core.rest(arglist__18489);
      return G__18488__delegate(x, p__18485);
    };
    G__18488.cljs$core$IFn$_invoke$arity$variadic = G__18488__delegate;
    return G__18488;
  }();
  atom = function(x, var_args) {
    var p__18485 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.call(null, new_value))) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null))))].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches.call(null, a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_.call(null, a, new_value);
  }
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__18490__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.call(null, a, f, x, y, more);
      }
    };
    var G__18490 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__18490__delegate.call(this, a, f, x, y, more);
    };
    G__18490.cljs$lang$maxFixedArity = 4;
    G__18490.cljs$lang$applyTo = function(arglist__18491) {
      var a = cljs.core.first(arglist__18491);
      arglist__18491 = cljs.core.next(arglist__18491);
      var f = cljs.core.first(arglist__18491);
      arglist__18491 = cljs.core.next(arglist__18491);
      var x = cljs.core.first(arglist__18491);
      arglist__18491 = cljs.core.next(arglist__18491);
      var y = cljs.core.first(arglist__18491);
      var more = cljs.core.rest(arglist__18491);
      return G__18490__delegate(a, f, x, y, more);
    };
    G__18490.cljs$core$IFn$_invoke$arity$variadic = G__18490__delegate;
    return G__18490;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.keep_indexed = function() {
  var keep_indexed = null;
  var keep_indexed__1 = function(f) {
    return function(rf) {
      var ia = cljs.core.atom.call(null, -1);
      return function(ia) {
        return function() {
          var G__18492 = null;
          var G__18492__0 = function() {
            return rf.call(null);
          };
          var G__18492__1 = function(result) {
            return rf.call(null, result);
          };
          var G__18492__2 = function(result, input) {
            var i = cljs.core.swap_BANG_.call(null, ia, cljs.core.inc);
            var v = f.call(null, i, input);
            if (v == null) {
              return result;
            } else {
              return rf.call(null, result, v);
            }
          };
          G__18492 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__18492__0.call(this);
              case 1:
                return G__18492__1.call(this, result);
              case 2:
                return G__18492__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__18492.cljs$core$IFn$_invoke$arity$0 = G__18492__0;
          G__18492.cljs$core$IFn$_invoke$arity$1 = G__18492__1;
          G__18492.cljs$core$IFn$_invoke$arity$2 = G__18492__2;
          return G__18492;
        }();
      }(ia);
    };
  };
  var keep_indexed__2 = function(f, coll) {
    var keepi = function keepi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
            var c = cljs.core.chunk_first.call(null, s);
            var size = cljs.core.count.call(null, c);
            var b = cljs.core.chunk_buffer.call(null, size);
            var n__4643__auto___18493 = size;
            var i_18494 = 0;
            while (true) {
              if (i_18494 < n__4643__auto___18493) {
                var x_18495 = f.call(null, idx + i_18494, cljs.core._nth.call(null, c, i_18494));
                if (x_18495 == null) {
                } else {
                  cljs.core.chunk_append.call(null, b, x_18495);
                }
                var G__18496 = i_18494 + 1;
                i_18494 = G__18496;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
          } else {
            var x = f.call(null, idx, cljs.core.first.call(null, s));
            if (x == null) {
              return keepi.call(null, idx + 1, cljs.core.rest.call(null, s));
            } else {
              return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)));
            }
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return keepi.call(null, 0, coll);
  };
  keep_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep_indexed__1.call(this, f);
      case 2:
        return keep_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
  keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
  return keep_indexed;
}();
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x));
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3749__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3749__auto__)) {
            return p.call(null, y);
          } else {
            return and__3749__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3749__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3749__auto__)) {
            var and__3749__auto____$1 = p.call(null, y);
            if (cljs.core.truth_(and__3749__auto____$1)) {
              return p.call(null, z);
            } else {
              return and__3749__auto____$1;
            }
          } else {
            return and__3749__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__18503__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep1.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, p, args));
        };
        var G__18503 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__18503__delegate.call(this, x, y, z, args);
        };
        G__18503.cljs$lang$maxFixedArity = 3;
        G__18503.cljs$lang$applyTo = function(arglist__18504) {
          var x = cljs.core.first(arglist__18504);
          arglist__18504 = cljs.core.next(arglist__18504);
          var y = cljs.core.first(arglist__18504);
          arglist__18504 = cljs.core.next(arglist__18504);
          var z = cljs.core.first(arglist__18504);
          var args = cljs.core.rest(arglist__18504);
          return G__18503__delegate(x, y, z, args);
        };
        G__18503.cljs$core$IFn$_invoke$arity$variadic = G__18503__delegate;
        return G__18503;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3749__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3749__auto__)) {
            return p2.call(null, x);
          } else {
            return and__3749__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3749__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3749__auto__)) {
            var and__3749__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3749__auto____$1)) {
              var and__3749__auto____$2 = p2.call(null, x);
              if (cljs.core.truth_(and__3749__auto____$2)) {
                return p2.call(null, y);
              } else {
                return and__3749__auto____$2;
              }
            } else {
              return and__3749__auto____$1;
            }
          } else {
            return and__3749__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3749__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3749__auto__)) {
            var and__3749__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3749__auto____$1)) {
              var and__3749__auto____$2 = p1.call(null, z);
              if (cljs.core.truth_(and__3749__auto____$2)) {
                var and__3749__auto____$3 = p2.call(null, x);
                if (cljs.core.truth_(and__3749__auto____$3)) {
                  var and__3749__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3749__auto____$4)) {
                    return p2.call(null, z);
                  } else {
                    return and__3749__auto____$4;
                  }
                } else {
                  return and__3749__auto____$3;
                }
              } else {
                return and__3749__auto____$2;
              }
            } else {
              return and__3749__auto____$1;
            }
          } else {
            return and__3749__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__18505__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep2.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__18497_SHARP_) {
            var and__3749__auto__ = p1.call(null, p1__18497_SHARP_);
            if (cljs.core.truth_(and__3749__auto__)) {
              return p2.call(null, p1__18497_SHARP_);
            } else {
              return and__3749__auto__;
            }
          }, args));
        };
        var G__18505 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__18505__delegate.call(this, x, y, z, args);
        };
        G__18505.cljs$lang$maxFixedArity = 3;
        G__18505.cljs$lang$applyTo = function(arglist__18506) {
          var x = cljs.core.first(arglist__18506);
          arglist__18506 = cljs.core.next(arglist__18506);
          var y = cljs.core.first(arglist__18506);
          arglist__18506 = cljs.core.next(arglist__18506);
          var z = cljs.core.first(arglist__18506);
          var args = cljs.core.rest(arglist__18506);
          return G__18505__delegate(x, y, z, args);
        };
        G__18505.cljs$core$IFn$_invoke$arity$variadic = G__18505__delegate;
        return G__18505;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3749__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3749__auto__)) {
            var and__3749__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3749__auto____$1)) {
              return p3.call(null, x);
            } else {
              return and__3749__auto____$1;
            }
          } else {
            return and__3749__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3749__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3749__auto__)) {
            var and__3749__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3749__auto____$1)) {
              var and__3749__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3749__auto____$2)) {
                var and__3749__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3749__auto____$3)) {
                  var and__3749__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3749__auto____$4)) {
                    return p3.call(null, y);
                  } else {
                    return and__3749__auto____$4;
                  }
                } else {
                  return and__3749__auto____$3;
                }
              } else {
                return and__3749__auto____$2;
              }
            } else {
              return and__3749__auto____$1;
            }
          } else {
            return and__3749__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3749__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3749__auto__)) {
            var and__3749__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3749__auto____$1)) {
              var and__3749__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3749__auto____$2)) {
                var and__3749__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3749__auto____$3)) {
                  var and__3749__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3749__auto____$4)) {
                    var and__3749__auto____$5 = p3.call(null, y);
                    if (cljs.core.truth_(and__3749__auto____$5)) {
                      var and__3749__auto____$6 = p1.call(null, z);
                      if (cljs.core.truth_(and__3749__auto____$6)) {
                        var and__3749__auto____$7 = p2.call(null, z);
                        if (cljs.core.truth_(and__3749__auto____$7)) {
                          return p3.call(null, z);
                        } else {
                          return and__3749__auto____$7;
                        }
                      } else {
                        return and__3749__auto____$6;
                      }
                    } else {
                      return and__3749__auto____$5;
                    }
                  } else {
                    return and__3749__auto____$4;
                  }
                } else {
                  return and__3749__auto____$3;
                }
              } else {
                return and__3749__auto____$2;
              }
            } else {
              return and__3749__auto____$1;
            }
          } else {
            return and__3749__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__18507__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep3.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__18498_SHARP_) {
            var and__3749__auto__ = p1.call(null, p1__18498_SHARP_);
            if (cljs.core.truth_(and__3749__auto__)) {
              var and__3749__auto____$1 = p2.call(null, p1__18498_SHARP_);
              if (cljs.core.truth_(and__3749__auto____$1)) {
                return p3.call(null, p1__18498_SHARP_);
              } else {
                return and__3749__auto____$1;
              }
            } else {
              return and__3749__auto__;
            }
          }, args));
        };
        var G__18507 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__18507__delegate.call(this, x, y, z, args);
        };
        G__18507.cljs$lang$maxFixedArity = 3;
        G__18507.cljs$lang$applyTo = function(arglist__18508) {
          var x = cljs.core.first(arglist__18508);
          arglist__18508 = cljs.core.next(arglist__18508);
          var y = cljs.core.first(arglist__18508);
          arglist__18508 = cljs.core.next(arglist__18508);
          var z = cljs.core.first(arglist__18508);
          var args = cljs.core.rest(arglist__18508);
          return G__18507__delegate(x, y, z, args);
        };
        G__18507.cljs$core$IFn$_invoke$arity$variadic = G__18507__delegate;
        return G__18507;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__18509__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__18499_SHARP_) {
                return p1__18499_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__18500_SHARP_) {
                var and__3749__auto__ = p1__18500_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3749__auto__)) {
                  return p1__18500_SHARP_.call(null, y);
                } else {
                  return and__3749__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__18501_SHARP_) {
                var and__3749__auto__ = p1__18501_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3749__auto__)) {
                  var and__3749__auto____$1 = p1__18501_SHARP_.call(null, y);
                  if (cljs.core.truth_(and__3749__auto____$1)) {
                    return p1__18501_SHARP_.call(null, z);
                  } else {
                    return and__3749__auto____$1;
                  }
                } else {
                  return and__3749__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__18510__delegate = function(x, y, z, args) {
              return cljs.core.boolean$.call(null, epn.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(ps__$1) {
                return function(p1__18502_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__18502_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__18510 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__18510__delegate.call(this, x, y, z, args);
            };
            G__18510.cljs$lang$maxFixedArity = 3;
            G__18510.cljs$lang$applyTo = function(arglist__18511) {
              var x = cljs.core.first(arglist__18511);
              arglist__18511 = cljs.core.next(arglist__18511);
              var y = cljs.core.first(arglist__18511);
              arglist__18511 = cljs.core.next(arglist__18511);
              var z = cljs.core.first(arglist__18511);
              var args = cljs.core.rest(arglist__18511);
              return G__18510__delegate(x, y, z, args);
            };
            G__18510.cljs$core$IFn$_invoke$arity$variadic = G__18510__delegate;
            return G__18510;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__18509 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__18509__delegate.call(this, p1, p2, p3, ps);
    };
    G__18509.cljs$lang$maxFixedArity = 3;
    G__18509.cljs$lang$applyTo = function(arglist__18512) {
      var p1 = cljs.core.first(arglist__18512);
      arglist__18512 = cljs.core.next(arglist__18512);
      var p2 = cljs.core.first(arglist__18512);
      arglist__18512 = cljs.core.next(arglist__18512);
      var p3 = cljs.core.first(arglist__18512);
      var ps = cljs.core.rest(arglist__18512);
      return G__18509__delegate(p1, p2, p3, ps);
    };
    G__18509.cljs$core$IFn$_invoke$arity$variadic = G__18509__delegate;
    return G__18509;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        return p.call(null, x);
      };
      var sp1__2 = function(x, y) {
        var or__3761__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3761__auto__)) {
          return or__3761__auto__;
        } else {
          return p.call(null, y);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3761__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3761__auto__)) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = p.call(null, y);
          if (cljs.core.truth_(or__3761__auto____$1)) {
            return or__3761__auto____$1;
          } else {
            return p.call(null, z);
          }
        }
      };
      var sp1__4 = function() {
        var G__18519__delegate = function(x, y, z, args) {
          var or__3761__auto__ = sp1.call(null, x, y, z);
          if (cljs.core.truth_(or__3761__auto__)) {
            return or__3761__auto__;
          } else {
            return cljs.core.some.call(null, p, args);
          }
        };
        var G__18519 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__18519__delegate.call(this, x, y, z, args);
        };
        G__18519.cljs$lang$maxFixedArity = 3;
        G__18519.cljs$lang$applyTo = function(arglist__18520) {
          var x = cljs.core.first(arglist__18520);
          arglist__18520 = cljs.core.next(arglist__18520);
          var y = cljs.core.first(arglist__18520);
          arglist__18520 = cljs.core.next(arglist__18520);
          var z = cljs.core.first(arglist__18520);
          var args = cljs.core.rest(arglist__18520);
          return G__18519__delegate(x, y, z, args);
        };
        G__18519.cljs$core$IFn$_invoke$arity$variadic = G__18519__delegate;
        return G__18519;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3761__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3761__auto__)) {
          return or__3761__auto__;
        } else {
          return p2.call(null, x);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3761__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3761__auto__)) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3761__auto____$1)) {
            return or__3761__auto____$1;
          } else {
            var or__3761__auto____$2 = p2.call(null, x);
            if (cljs.core.truth_(or__3761__auto____$2)) {
              return or__3761__auto____$2;
            } else {
              return p2.call(null, y);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3761__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3761__auto__)) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3761__auto____$1)) {
            return or__3761__auto____$1;
          } else {
            var or__3761__auto____$2 = p1.call(null, z);
            if (cljs.core.truth_(or__3761__auto____$2)) {
              return or__3761__auto____$2;
            } else {
              var or__3761__auto____$3 = p2.call(null, x);
              if (cljs.core.truth_(or__3761__auto____$3)) {
                return or__3761__auto____$3;
              } else {
                var or__3761__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3761__auto____$4)) {
                  return or__3761__auto____$4;
                } else {
                  return p2.call(null, z);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__18521__delegate = function(x, y, z, args) {
          var or__3761__auto__ = sp2.call(null, x, y, z);
          if (cljs.core.truth_(or__3761__auto__)) {
            return or__3761__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3761__auto__) {
              return function(p1__18513_SHARP_) {
                var or__3761__auto____$1 = p1.call(null, p1__18513_SHARP_);
                if (cljs.core.truth_(or__3761__auto____$1)) {
                  return or__3761__auto____$1;
                } else {
                  return p2.call(null, p1__18513_SHARP_);
                }
              };
            }(or__3761__auto__), args);
          }
        };
        var G__18521 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__18521__delegate.call(this, x, y, z, args);
        };
        G__18521.cljs$lang$maxFixedArity = 3;
        G__18521.cljs$lang$applyTo = function(arglist__18522) {
          var x = cljs.core.first(arglist__18522);
          arglist__18522 = cljs.core.next(arglist__18522);
          var y = cljs.core.first(arglist__18522);
          arglist__18522 = cljs.core.next(arglist__18522);
          var z = cljs.core.first(arglist__18522);
          var args = cljs.core.rest(arglist__18522);
          return G__18521__delegate(x, y, z, args);
        };
        G__18521.cljs$core$IFn$_invoke$arity$variadic = G__18521__delegate;
        return G__18521;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3761__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3761__auto__)) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3761__auto____$1)) {
            return or__3761__auto____$1;
          } else {
            return p3.call(null, x);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3761__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3761__auto__)) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3761__auto____$1)) {
            return or__3761__auto____$1;
          } else {
            var or__3761__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3761__auto____$2)) {
              return or__3761__auto____$2;
            } else {
              var or__3761__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3761__auto____$3)) {
                return or__3761__auto____$3;
              } else {
                var or__3761__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3761__auto____$4)) {
                  return or__3761__auto____$4;
                } else {
                  return p3.call(null, y);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3761__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3761__auto__)) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3761__auto____$1)) {
            return or__3761__auto____$1;
          } else {
            var or__3761__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3761__auto____$2)) {
              return or__3761__auto____$2;
            } else {
              var or__3761__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3761__auto____$3)) {
                return or__3761__auto____$3;
              } else {
                var or__3761__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3761__auto____$4)) {
                  return or__3761__auto____$4;
                } else {
                  var or__3761__auto____$5 = p3.call(null, y);
                  if (cljs.core.truth_(or__3761__auto____$5)) {
                    return or__3761__auto____$5;
                  } else {
                    var or__3761__auto____$6 = p1.call(null, z);
                    if (cljs.core.truth_(or__3761__auto____$6)) {
                      return or__3761__auto____$6;
                    } else {
                      var or__3761__auto____$7 = p2.call(null, z);
                      if (cljs.core.truth_(or__3761__auto____$7)) {
                        return or__3761__auto____$7;
                      } else {
                        return p3.call(null, z);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__18523__delegate = function(x, y, z, args) {
          var or__3761__auto__ = sp3.call(null, x, y, z);
          if (cljs.core.truth_(or__3761__auto__)) {
            return or__3761__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3761__auto__) {
              return function(p1__18514_SHARP_) {
                var or__3761__auto____$1 = p1.call(null, p1__18514_SHARP_);
                if (cljs.core.truth_(or__3761__auto____$1)) {
                  return or__3761__auto____$1;
                } else {
                  var or__3761__auto____$2 = p2.call(null, p1__18514_SHARP_);
                  if (cljs.core.truth_(or__3761__auto____$2)) {
                    return or__3761__auto____$2;
                  } else {
                    return p3.call(null, p1__18514_SHARP_);
                  }
                }
              };
            }(or__3761__auto__), args);
          }
        };
        var G__18523 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__18523__delegate.call(this, x, y, z, args);
        };
        G__18523.cljs$lang$maxFixedArity = 3;
        G__18523.cljs$lang$applyTo = function(arglist__18524) {
          var x = cljs.core.first(arglist__18524);
          arglist__18524 = cljs.core.next(arglist__18524);
          var y = cljs.core.first(arglist__18524);
          arglist__18524 = cljs.core.next(arglist__18524);
          var z = cljs.core.first(arglist__18524);
          var args = cljs.core.rest(arglist__18524);
          return G__18523__delegate(x, y, z, args);
        };
        G__18523.cljs$core$IFn$_invoke$arity$variadic = G__18523__delegate;
        return G__18523;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__18525__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__18515_SHARP_) {
                return p1__18515_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__18516_SHARP_) {
                var or__3761__auto__ = p1__18516_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3761__auto__)) {
                  return or__3761__auto__;
                } else {
                  return p1__18516_SHARP_.call(null, y);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__18517_SHARP_) {
                var or__3761__auto__ = p1__18517_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3761__auto__)) {
                  return or__3761__auto__;
                } else {
                  var or__3761__auto____$1 = p1__18517_SHARP_.call(null, y);
                  if (cljs.core.truth_(or__3761__auto____$1)) {
                    return or__3761__auto____$1;
                  } else {
                    return p1__18517_SHARP_.call(null, z);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__18526__delegate = function(x, y, z, args) {
              var or__3761__auto__ = spn.call(null, x, y, z);
              if (cljs.core.truth_(or__3761__auto__)) {
                return or__3761__auto__;
              } else {
                return cljs.core.some.call(null, function(or__3761__auto__, ps__$1) {
                  return function(p1__18518_SHARP_) {
                    return cljs.core.some.call(null, p1__18518_SHARP_, args);
                  };
                }(or__3761__auto__, ps__$1), ps__$1);
              }
            };
            var G__18526 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__18526__delegate.call(this, x, y, z, args);
            };
            G__18526.cljs$lang$maxFixedArity = 3;
            G__18526.cljs$lang$applyTo = function(arglist__18527) {
              var x = cljs.core.first(arglist__18527);
              arglist__18527 = cljs.core.next(arglist__18527);
              var y = cljs.core.first(arglist__18527);
              arglist__18527 = cljs.core.next(arglist__18527);
              var z = cljs.core.first(arglist__18527);
              var args = cljs.core.rest(arglist__18527);
              return G__18526__delegate(x, y, z, args);
            };
            G__18526.cljs$core$IFn$_invoke$arity$variadic = G__18526__delegate;
            return G__18526;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__18525 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__18525__delegate.call(this, p1, p2, p3, ps);
    };
    G__18525.cljs$lang$maxFixedArity = 3;
    G__18525.cljs$lang$applyTo = function(arglist__18528) {
      var p1 = cljs.core.first(arglist__18528);
      arglist__18528 = cljs.core.next(arglist__18528);
      var p2 = cljs.core.first(arglist__18528);
      arglist__18528 = cljs.core.next(arglist__18528);
      var p3 = cljs.core.first(arglist__18528);
      var ps = cljs.core.rest(arglist__18528);
      return G__18525__delegate(p1, p2, p3, ps);
    };
    G__18525.cljs$core$IFn$_invoke$arity$variadic = G__18525__delegate;
    return G__18525;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__1 = function(f) {
    return function(rf) {
      return function() {
        var G__18530 = null;
        var G__18530__0 = function() {
          return rf.call(null);
        };
        var G__18530__1 = function(result) {
          return rf.call(null, result);
        };
        var G__18530__2 = function(result, input) {
          return rf.call(null, result, f.call(null, input));
        };
        var G__18530__3 = function() {
          var G__18531__delegate = function(result, input, inputs) {
            return rf.call(null, result, cljs.core.apply.call(null, f, input, inputs));
          };
          var G__18531 = function(result, input, var_args) {
            var inputs = null;
            if (arguments.length > 2) {
              inputs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
            }
            return G__18531__delegate.call(this, result, input, inputs);
          };
          G__18531.cljs$lang$maxFixedArity = 2;
          G__18531.cljs$lang$applyTo = function(arglist__18532) {
            var result = cljs.core.first(arglist__18532);
            arglist__18532 = cljs.core.next(arglist__18532);
            var input = cljs.core.first(arglist__18532);
            var inputs = cljs.core.rest(arglist__18532);
            return G__18531__delegate(result, input, inputs);
          };
          G__18531.cljs$core$IFn$_invoke$arity$variadic = G__18531__delegate;
          return G__18531;
        }();
        G__18530 = function(result, input, var_args) {
          var inputs = var_args;
          switch(arguments.length) {
            case 0:
              return G__18530__0.call(this);
            case 1:
              return G__18530__1.call(this, result);
            case 2:
              return G__18530__2.call(this, result, input);
            default:
              return G__18530__3.cljs$core$IFn$_invoke$arity$variadic(result, input, cljs.core.array_seq(arguments, 2));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__18530.cljs$lang$maxFixedArity = 2;
        G__18530.cljs$lang$applyTo = G__18530__3.cljs$lang$applyTo;
        G__18530.cljs$core$IFn$_invoke$arity$0 = G__18530__0;
        G__18530.cljs$core$IFn$_invoke$arity$1 = G__18530__1;
        G__18530.cljs$core$IFn$_invoke$arity$2 = G__18530__2;
        G__18530.cljs$core$IFn$_invoke$arity$variadic = G__18530__3.cljs$core$IFn$_invoke$arity$variadic;
        return G__18530;
      }();
    };
  };
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4643__auto___18533 = size;
          var i_18534 = 0;
          while (true) {
            if (i_18534 < n__4643__auto___18533) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_18534)));
              var G__18535 = i_18534 + 1;
              i_18534 = G__18535;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if (s1 && s2 && s3) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__18536__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.call(null, function(step) {
        return function(p1__18529_SHARP_) {
          return cljs.core.apply.call(null, f, p1__18529_SHARP_);
        };
      }(step), step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)));
    };
    var G__18536 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__18536__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__18536.cljs$lang$maxFixedArity = 4;
    G__18536.cljs$lang$applyTo = function(arglist__18537) {
      var f = cljs.core.first(arglist__18537);
      arglist__18537 = cljs.core.next(arglist__18537);
      var c1 = cljs.core.first(arglist__18537);
      arglist__18537 = cljs.core.next(arglist__18537);
      var c2 = cljs.core.first(arglist__18537);
      arglist__18537 = cljs.core.next(arglist__18537);
      var c3 = cljs.core.first(arglist__18537);
      var colls = cljs.core.rest(arglist__18537);
      return G__18536__delegate(f, c1, c2, c3, colls);
    };
    G__18536.cljs$core$IFn$_invoke$arity$variadic = G__18536__delegate;
    return G__18536;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return map__1.call(this, f);
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$1 = map__1;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function() {
  var take = null;
  var take__1 = function(n) {
    return function(rf) {
      var na = cljs.core.atom.call(null, n);
      return function(na) {
        return function() {
          var G__18538 = null;
          var G__18538__0 = function() {
            return rf.call(null);
          };
          var G__18538__1 = function(result) {
            return rf.call(null, result);
          };
          var G__18538__2 = function(result, input) {
            var n__$1 = cljs.core.deref.call(null, na);
            var nn = cljs.core.swap_BANG_.call(null, na, cljs.core.dec);
            var result__$1 = n__$1 > 0 ? rf.call(null, result, input) : result;
            if (!(nn > 0)) {
              return cljs.core.ensure_reduced.call(null, result__$1);
            } else {
              return result__$1;
            }
          };
          G__18538 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__18538__0.call(this);
              case 1:
                return G__18538__1.call(this, result);
              case 2:
                return G__18538__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__18538.cljs$core$IFn$_invoke$arity$0 = G__18538__0;
          G__18538.cljs$core$IFn$_invoke$arity$1 = G__18538__1;
          G__18538.cljs$core$IFn$_invoke$arity$2 = G__18538__2;
          return G__18538;
        }();
      }(na);
    };
  };
  var take__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      if (n > 0) {
        var temp__4126__auto__ = cljs.core.seq.call(null, coll);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take__1.call(this, n);
      case 2:
        return take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$1 = take__1;
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  return take;
}();
cljs.core.drop = function() {
  var drop = null;
  var drop__1 = function(n) {
    return function(rf) {
      var na = cljs.core.atom.call(null, n);
      return function(na) {
        return function() {
          var G__18539 = null;
          var G__18539__0 = function() {
            return rf.call(null);
          };
          var G__18539__1 = function(result) {
            return rf.call(null, result);
          };
          var G__18539__2 = function(result, input) {
            var n__$1 = cljs.core.deref.call(null, na);
            cljs.core.swap_BANG_.call(null, na, cljs.core.dec);
            if (n__$1 > 0) {
              return result;
            } else {
              return rf.call(null, result, input);
            }
          };
          G__18539 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__18539__0.call(this);
              case 1:
                return G__18539__1.call(this, result);
              case 2:
                return G__18539__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__18539.cljs$core$IFn$_invoke$arity$0 = G__18539__0;
          G__18539.cljs$core$IFn$_invoke$arity$1 = G__18539__1;
          G__18539.cljs$core$IFn$_invoke$arity$2 = G__18539__2;
          return G__18539;
        }();
      }(na);
    };
  };
  var drop__2 = function(n, coll) {
    var step = function(n__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq.call(null, coll__$1);
        if (n__$1 > 0 && s) {
          var G__18540 = n__$1 - 1;
          var G__18541 = cljs.core.rest.call(null, s);
          n__$1 = G__18540;
          coll__$1 = G__18541;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step.call(null, n, coll);
      };
    }(step), null, null);
  };
  drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return drop__1.call(this, n);
      case 2:
        return drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
  drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
  return drop;
}();
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x;
    }, s, cljs.core.drop.call(null, n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while (true) {
    if (lead) {
      var G__18542 = cljs.core.next.call(null, s);
      var G__18543 = cljs.core.next.call(null, lead);
      s = G__18542;
      lead = G__18543;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function() {
  var drop_while = null;
  var drop_while__1 = function(pred) {
    return function(rf) {
      var da = cljs.core.atom.call(null, true);
      return function(da) {
        return function() {
          var G__18544 = null;
          var G__18544__0 = function() {
            return rf.call(null);
          };
          var G__18544__1 = function(result) {
            return rf.call(null, result);
          };
          var G__18544__2 = function(result, input) {
            var drop_QMARK_ = cljs.core.deref.call(null, da);
            if (cljs.core.truth_(function() {
              var and__3749__auto__ = drop_QMARK_;
              if (cljs.core.truth_(and__3749__auto__)) {
                return pred.call(null, input);
              } else {
                return and__3749__auto__;
              }
            }())) {
              return result;
            } else {
              cljs.core.reset_BANG_.call(null, da, null);
              return rf.call(null, result, input);
            }
          };
          G__18544 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__18544__0.call(this);
              case 1:
                return G__18544__1.call(this, result);
              case 2:
                return G__18544__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__18544.cljs$core$IFn$_invoke$arity$0 = G__18544__0;
          G__18544.cljs$core$IFn$_invoke$arity$1 = G__18544__1;
          G__18544.cljs$core$IFn$_invoke$arity$2 = G__18544__2;
          return G__18544;
        }();
      }(da);
    };
  };
  var drop_while__2 = function(pred, coll) {
    var step = function(pred__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq.call(null, coll__$1);
        if (cljs.core.truth_(function() {
          var and__3749__auto__ = s;
          if (and__3749__auto__) {
            return pred__$1.call(null, cljs.core.first.call(null, s));
          } else {
            return and__3749__auto__;
          }
        }())) {
          var G__18545 = pred__$1;
          var G__18546 = cljs.core.rest.call(null, s);
          pred__$1 = G__18545;
          coll__$1 = G__18546;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step.call(null, pred, coll);
      };
    }(step), null, null);
  };
  drop_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return drop_while__1.call(this, pred);
      case 2:
        return drop_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
  drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
  return drop_while;
}();
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__18547__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__18547 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18547__delegate.call(this, c1, c2, colls);
    };
    G__18547.cljs$lang$maxFixedArity = 2;
    G__18547.cljs$lang$applyTo = function(arglist__18548) {
      var c1 = cljs.core.first(arglist__18548);
      arglist__18548 = cljs.core.next(arglist__18548);
      var c2 = cljs.core.first(arglist__18548);
      var colls = cljs.core.rest(arglist__18548);
      return G__18547__delegate(c1, c2, colls);
    };
    G__18547.cljs$core$IFn$_invoke$arity$variadic = G__18547__delegate;
    return G__18547;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll));
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1));
      } else {
        if (cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat.call(null, null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__1 = function(f) {
    return cljs.core.comp.call(null, cljs.core.map.call(null, f), cljs.core.cat);
  };
  var mapcat__2 = function() {
    var G__18549__delegate = function(f, colls) {
      return cljs.core.apply.call(null, cljs.core.concat, cljs.core.apply.call(null, cljs.core.map, f, colls));
    };
    var G__18549 = function(f, var_args) {
      var colls = null;
      if (arguments.length > 1) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__18549__delegate.call(this, f, colls);
    };
    G__18549.cljs$lang$maxFixedArity = 1;
    G__18549.cljs$lang$applyTo = function(arglist__18550) {
      var f = cljs.core.first(arglist__18550);
      var colls = cljs.core.rest(arglist__18550);
      return G__18549__delegate(f, colls);
    };
    G__18549.cljs$core$IFn$_invoke$arity$variadic = G__18549__delegate;
    return G__18549;
  }();
  mapcat = function(f, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return mapcat__1.call(this, f);
      default:
        return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 1;
  mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function() {
  var filter = null;
  var filter__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__18551 = null;
        var G__18551__0 = function() {
          return rf.call(null);
        };
        var G__18551__1 = function(result) {
          return rf.call(null, result);
        };
        var G__18551__2 = function(result, input) {
          if (cljs.core.truth_(pred.call(null, input))) {
            return rf.call(null, result, input);
          } else {
            return result;
          }
        };
        G__18551 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__18551__0.call(this);
            case 1:
              return G__18551__1.call(this, result);
            case 2:
              return G__18551__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__18551.cljs$core$IFn$_invoke$arity$0 = G__18551__0;
        G__18551.cljs$core$IFn$_invoke$arity$1 = G__18551__1;
        G__18551.cljs$core$IFn$_invoke$arity$2 = G__18551__2;
        return G__18551;
      }();
    };
  };
  var filter__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4643__auto___18552 = size;
          var i_18553 = 0;
          while (true) {
            if (i_18553 < n__4643__auto___18552) {
              if (cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_18553)))) {
                cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_18553));
              } else {
              }
              var G__18554 = i_18553 + 1;
              i_18553 = G__18554;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)));
        } else {
          var f = cljs.core.first.call(null, s);
          var r = cljs.core.rest.call(null, s);
          if (cljs.core.truth_(pred.call(null, f))) {
            return cljs.core.cons.call(null, f, filter.call(null, pred, r));
          } else {
            return filter.call(null, pred, r);
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return filter__1.call(this, pred);
      case 2:
        return filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
  filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
  return filter;
}();
cljs.core.remove = function() {
  var remove = null;
  var remove__1 = function(pred) {
    return cljs.core.filter.call(null, cljs.core.complement.call(null, pred));
  };
  var remove__2 = function(pred, coll) {
    return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll);
  };
  remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return remove__1.call(this, pred);
      case 2:
        return remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
  remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
  return remove;
}();
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null);
    }, null, null);
  };
  return walk.call(null, root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__18555_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__18555_SHARP_);
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function() {
  var into = null;
  var into__2 = function(to, from) {
    if (!(to == null)) {
      if (function() {
        var G__18558 = to;
        if (G__18558) {
          var bit__4430__auto__ = G__18558.cljs$lang$protocol_mask$partition1$ & 4;
          if (bit__4430__auto__ || G__18558.cljs$core$IEditableCollection$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from)), cljs.core.meta.call(null, to));
      } else {
        return cljs.core.reduce.call(null, cljs.core._conj, to, from);
      }
    } else {
      return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from);
    }
  };
  var into__3 = function(to, xform, from) {
    if (function() {
      var G__18559 = to;
      if (G__18559) {
        var bit__4430__auto__ = G__18559.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4430__auto__ || G__18559.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.transduce.call(null, xform, cljs.core.conj_BANG_, cljs.core.transient$.call(null, to), from)), cljs.core.meta.call(null, to));
    } else {
      return cljs.core.transduce.call(null, xform, cljs.core.conj, to, from);
    }
  };
  into = function(to, xform, from) {
    switch(arguments.length) {
      case 2:
        return into__2.call(this, to, xform);
      case 3:
        return into__3.call(this, to, xform, from);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into.cljs$core$IFn$_invoke$arity$2 = into__2;
  into.cljs$core$IFn$_invoke$arity$3 = into__3;
  return into;
}();
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o));
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__18560__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls));
    };
    var G__18560 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__18560__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__18560.cljs$lang$maxFixedArity = 4;
    G__18560.cljs$lang$applyTo = function(arglist__18561) {
      var f = cljs.core.first(arglist__18561);
      arglist__18561 = cljs.core.next(arglist__18561);
      var c1 = cljs.core.first(arglist__18561);
      arglist__18561 = cljs.core.next(arglist__18561);
      var c2 = cljs.core.first(arglist__18561);
      arglist__18561 = cljs.core.next(arglist__18561);
      var c3 = cljs.core.first(arglist__18561);
      var colls = cljs.core.rest(arglist__18561);
      return G__18560__delegate(f, c1, c2, c3, colls);
    };
    G__18560.cljs$core$IFn$_invoke$arity$variadic = G__18560__delegate;
    return G__18560;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if (cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)));
        } else {
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__18563 = m__$1;
          if (G__18563) {
            var bit__4437__auto__ = G__18563.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4437__auto__ || G__18563.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__18563.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__18563);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__18563);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__18564 = sentinel;
            var G__18565 = m__$2;
            var G__18566 = cljs.core.next.call(null, ks__$1);
            sentinel = G__18564;
            m__$1 = G__18565;
            ks__$1 = G__18566;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__18567, v) {
  var vec__18569 = p__18567;
  var k = cljs.core.nth.call(null, vec__18569, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__18569, 1);
  if (ks) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v));
  } else {
    return cljs.core.assoc.call(null, m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__18570, f) {
    var vec__18580 = p__18570;
    var k = cljs.core.nth.call(null, vec__18580, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__18580, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
    }
  };
  var update_in__4 = function(m, p__18571, f, a) {
    var vec__18581 = p__18571;
    var k = cljs.core.nth.call(null, vec__18581, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__18581, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a));
    }
  };
  var update_in__5 = function(m, p__18572, f, a, b) {
    var vec__18582 = p__18572;
    var k = cljs.core.nth.call(null, vec__18582, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__18582, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b));
    }
  };
  var update_in__6 = function(m, p__18573, f, a, b, c) {
    var vec__18583 = p__18573;
    var k = cljs.core.nth.call(null, vec__18583, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__18583, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c));
    }
  };
  var update_in__7 = function() {
    var G__18585__delegate = function(m, p__18574, f, a, b, c, args) {
      var vec__18584 = p__18574;
      var k = cljs.core.nth.call(null, vec__18584, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__18584, 1);
      if (ks) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args));
      } else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args));
      }
    };
    var G__18585 = function(m, p__18574, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__18585__delegate.call(this, m, p__18574, f, a, b, c, args);
    };
    G__18585.cljs$lang$maxFixedArity = 6;
    G__18585.cljs$lang$applyTo = function(arglist__18586) {
      var m = cljs.core.first(arglist__18586);
      arglist__18586 = cljs.core.next(arglist__18586);
      var p__18574 = cljs.core.first(arglist__18586);
      arglist__18586 = cljs.core.next(arglist__18586);
      var f = cljs.core.first(arglist__18586);
      arglist__18586 = cljs.core.next(arglist__18586);
      var a = cljs.core.first(arglist__18586);
      arglist__18586 = cljs.core.next(arglist__18586);
      var b = cljs.core.first(arglist__18586);
      arglist__18586 = cljs.core.next(arglist__18586);
      var c = cljs.core.first(arglist__18586);
      var args = cljs.core.rest(arglist__18586);
      return G__18585__delegate(m, p__18574, f, a, b, c, args);
    };
    G__18585.cljs$core$IFn$_invoke$arity$variadic = G__18585__delegate;
    return G__18585;
  }();
  update_in = function(m, p__18574, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__18574, f);
      case 4:
        return update_in__4.call(this, m, p__18574, f, a);
      case 5:
        return update_in__5.call(this, m, p__18574, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__18574, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__18574, f, a, b, c, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.update = function() {
  var update = null;
  var update__3 = function(m, k, f) {
    return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
  };
  var update__4 = function(m, k, f, x) {
    return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), x));
  };
  var update__5 = function(m, k, f, x, y) {
    return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), x, y));
  };
  var update__6 = function(m, k, f, x, y, z) {
    return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), x, y, z));
  };
  var update__7 = function() {
    var G__18587__delegate = function(m, k, f, x, y, z, more) {
      return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), x, y, z, more));
    };
    var G__18587 = function(m, k, f, x, y, z, var_args) {
      var more = null;
      if (arguments.length > 6) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__18587__delegate.call(this, m, k, f, x, y, z, more);
    };
    G__18587.cljs$lang$maxFixedArity = 6;
    G__18587.cljs$lang$applyTo = function(arglist__18588) {
      var m = cljs.core.first(arglist__18588);
      arglist__18588 = cljs.core.next(arglist__18588);
      var k = cljs.core.first(arglist__18588);
      arglist__18588 = cljs.core.next(arglist__18588);
      var f = cljs.core.first(arglist__18588);
      arglist__18588 = cljs.core.next(arglist__18588);
      var x = cljs.core.first(arglist__18588);
      arglist__18588 = cljs.core.next(arglist__18588);
      var y = cljs.core.first(arglist__18588);
      arglist__18588 = cljs.core.next(arglist__18588);
      var z = cljs.core.first(arglist__18588);
      var more = cljs.core.rest(arglist__18588);
      return G__18587__delegate(m, k, f, x, y, z, more);
    };
    G__18587.cljs$core$IFn$_invoke$arity$variadic = G__18587__delegate;
    return G__18587;
  }();
  update = function(m, k, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 3:
        return update__3.call(this, m, k, f);
      case 4:
        return update__4.call(this, m, k, f, x);
      case 5:
        return update__5.call(this, m, k, f, x, y);
      case 6:
        return update__6.call(this, m, k, f, x, y, z);
      default:
        return update__7.cljs$core$IFn$_invoke$arity$variadic(m, k, f, x, y, z, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update.cljs$lang$maxFixedArity = 6;
  update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
  update.cljs$core$IFn$_invoke$arity$3 = update__3;
  update.cljs$core$IFn$_invoke$arity$4 = update__4;
  update.cljs$core$IFn$_invoke$arity$5 = update__5;
  update.cljs$core$IFn$_invoke$arity$6 = update__6;
  update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
  return update;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__18589 = ll - 5;
      var G__18590 = r;
      ll = G__18589;
      ret = G__18590;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__18591 = cljs.core.pv_aget.call(null, node, 0);
      var G__18592 = level - 5;
      node = G__18591;
      level = G__18592;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off.call(null, pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__18593 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
        var G__18594 = level - 5;
        node = G__18593;
        level = G__18594;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for.call(null, pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if (level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for.call(null, self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function __GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count.call(null, v) ? cljs.core.unchecked_array_for.call(null, v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = f.call(null, init__$2, j + i, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
              return init__$3;
            } else {
              var G__18596 = j + 1;
              var G__18597 = init__$3;
              j = G__18596;
              init__$2 = G__18597;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__18598 = i + len;
        var G__18599 = init__$2;
        i = G__18598;
        init__$1 = G__18599;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for.call(null, coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off.call(null, coll__$1) <= n) {
      var new_tail = cljs.core.aclone.call(null, self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator.call(null, this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for.call(null, coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4177__auto__ = self__.__hash;
  if (!(h__4177__auto__ == null)) {
    return h__4177__auto__;
  } else {
    var h__4177__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4177__auto____$1;
    return h__4177__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count.call(null, other)) {
      var me_iter = cljs.core._iterator.call(null, coll__$1);
      var you_iter = cljs.core._iterator.call(null, other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.call(null, x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential.call(null, coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = f.call(null, init__$2, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
              return init__$3;
            } else {
              var G__18600 = j + 1;
              var G__18601 = init__$3;
              j = G__18600;
              init__$2 = G__18601;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__18602 = i + len;
        var G__18603 = init__$2;
        i = G__18602;
        init__$1 = G__18603;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      return cljs.core.chunked_seq.call(null, coll__$1, cljs.core.first_array_for_longvec.call(null, coll__$1), 0, 0);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4643__auto___18604 = len;
    var i_18605 = 0;
    while (true) {
      if (i_18605 < n__4643__auto___18604) {
        new_tail[i_18605] = self__.tail[i_18605];
        var G__18606 = i_18605 + 1;
        i_18605 = G__18606;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__18607 = null;
  var G__18607__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._nth.call(null, coll, k);
  };
  var G__18607__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._nth.call(null, coll, k, not_found);
  };
  G__18607 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__18607__2.call(this, self__, k);
      case 3:
        return G__18607__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18607.cljs$core$IFn$_invoke$arity$2 = G__18607__2;
  G__18607.cljs$core$IFn$_invoke$arity$3 = G__18607__3;
  return G__18607;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args18595) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args18595)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._nth.call(null, coll, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._nth.call(null, coll, k, not_found);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone.call(null, xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while (true) {
      if (i < l) {
        var G__18608 = i + 1;
        var G__18609 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__18608;
        out = G__18609;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4734__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4734__auto__);
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray(args.arr, true);
    } else {
      return cljs.core.vec.call(null, args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__18610) {
    var args = cljs.core.seq(arglist__18610);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4177__auto__ = self__.__hash;
  if (!(h__4177__auto__ == null)) {
    return h__4177__auto__;
  } else {
    var h__4177__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4177__auto____$1;
    return h__4177__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4734__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4734__auto__);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start);
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__4073__auto__ = self__.end;
    var y__4074__auto__ = v_pos + 1;
    return x__4073__auto__ > y__4074__auto__ ? x__4073__auto__ : y__4074__auto__;
  }(), null);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4177__auto__ = self__.__hash;
  if (!(h__4177__auto__ == null)) {
    return h__4177__auto__;
  } else {
    var h__4177__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4177__auto____$1;
    return h__4177__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq.call(null, i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq.call(null, self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.call = function() {
  var G__18612 = null;
  var G__18612__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._nth.call(null, coll, k);
  };
  var G__18612__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._nth.call(null, coll, k, not_found);
  };
  G__18612 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__18612__2.call(this, self__, k);
      case 3:
        return G__18612__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18612.cljs$core$IFn$_invoke$arity$2 = G__18612__2;
  G__18612.cljs$core$IFn$_invoke$arity$3 = G__18612__3;
  return G__18612;
}();
cljs.core.Subvec.prototype.apply = function(self__, args18611) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args18611)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._nth.call(null, coll, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._nth.call(null, coll, k, not_found);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4734__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4734__auto__);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__18613 = meta;
      var G__18614 = v.v;
      var G__18615 = v.start + start;
      var G__18616 = v.start + end;
      var G__18617 = __hash;
      meta = G__18613;
      v = G__18614;
      start = G__18615;
      end = G__18616;
      __hash = G__18617;
      continue;
    } else {
      var c = cljs.core.count.call(null, v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone.call(null, node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj18621 = {};
    return obj18621;
  }(), cljs.core.aclone.call(null, node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if (!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off.call(null, tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__18622 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
        var G__18623 = level - 5;
        node = G__18622;
        level = G__18623;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.prototype.call = function() {
  var G__18625 = null;
  var G__18625__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__18625__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__18625 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__18625__2.call(this, self__, k);
      case 3:
        return G__18625__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18625.cljs$core$IFn$_invoke$arity$2 = G__18625__2;
  G__18625.cljs$core$IFn$_invoke$arity$3 = G__18625__3;
  return G__18625;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args18624) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args18624)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset.call(null, node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4177__auto__ = self__.__hash;
  if (!(h__4177__auto__ == null)) {
    return h__4177__auto__;
  } else {
    var h__4177__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4177__auto____$1;
    return h__4177__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4734__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4734__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4177__auto__ = self__.__hash;
  if (!(h__4177__auto__ == null)) {
    return h__4177__auto__;
  } else {
    var h__4177__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4177__auto____$1;
    return h__4177__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY;
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if (cljs.core.truth_(function() {
    var or__3761__auto__ = self__.front;
    if (cljs.core.truth_(or__3761__auto__)) {
      return or__3761__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3761__auto__ = self__.rear;
      if (cljs.core.truth_(or__3761__auto__)) {
        return or__3761__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4734__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4734__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__18626 = i + incr;
        i = G__18626;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__18627 = i + 1;
      var G__18628 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__18627;
      out = G__18628;
      continue;
    } else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj18632 = {};
    return obj18632;
  }();
  var l = ks.length;
  var i_18633 = 0;
  while (true) {
    if (i_18633 < l) {
      var k_18634 = ks[i_18633];
      new_obj[k_18634] = obj[k_18634];
      var G__18635 = i_18633 + 1;
      i_18633 = G__18635;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__18638 = cljs.core.rest.call(null, keys__$1);
        var G__18639 = init__$2;
        keys__$1 = G__18638;
        init__$1 = G__18639;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4177__auto__ = self__.__hash;
  if (!(h__4177__auto__ == null)) {
    return h__4177__auto__;
  } else {
    var h__4177__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4177__auto____$1;
    return h__4177__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone.call(null, self__.keys);
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone.call(null, self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.call(null, function(coll__$1) {
      return function(p1__18636_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__18636_SHARP_, self__.strobj[p1__18636_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__18640 = null;
  var G__18640__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__18640__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__18640 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__18640__2.call(this, self__, k);
      case 3:
        return G__18640__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18640.cljs$core$IFn$_invoke$arity$2 = G__18640__2;
  G__18640.cljs$core$IFn$_invoke$arity$3 = G__18640__3;
  return G__18640;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args18637) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args18637)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj18642 = {};
  return obj18642;
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__18643 = cljs.core.first.call(null, self__.s);
    var k = cljs.core.nth.call(null, vec__18643, 0, null);
    var v = cljs.core.nth.call(null, vec__18643, 1, null);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function __GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq.call(null, coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first.call(null, self__.s);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function __GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq.call(null, coll));
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__18644 = i + 2;
        i = G__18644;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__18645 = i + 2;
        i = G__18645;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__18646 = i + 2;
        i = G__18646;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__18647 = i + 2;
        i = G__18647;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.call(null, k, arr[i])) {
        return i;
      } else {
        var G__18648 = i + 2;
        i = G__18648;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k);
        } else {
          return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k);
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_18649 = 0;
  while (true) {
    if (i_18649 < l) {
      narr[i_18649] = arr[i_18649];
      var G__18650 = i_18649 + 1;
      i_18649 = G__18650;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4734__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4734__auto__);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function __GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__18652 = cljs.core.seq.call(null, coll);
  var chunk__18653 = null;
  var count__18654 = 0;
  var i__18655 = 0;
  while (true) {
    if (i__18655 < count__18654) {
      var vec__18656 = cljs.core._nth.call(null, chunk__18653, i__18655);
      var k = cljs.core.nth.call(null, vec__18656, 0, null);
      var v = cljs.core.nth.call(null, vec__18656, 1, null);
      f.call(null, v, k);
      var G__18662 = seq__18652;
      var G__18663 = chunk__18653;
      var G__18664 = count__18654;
      var G__18665 = i__18655 + 1;
      seq__18652 = G__18662;
      chunk__18653 = G__18663;
      count__18654 = G__18664;
      i__18655 = G__18665;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__18652);
      if (temp__4126__auto__) {
        var seq__18652__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__18652__$1)) {
          var c__4543__auto__ = cljs.core.chunk_first.call(null, seq__18652__$1);
          var G__18666 = cljs.core.chunk_rest.call(null, seq__18652__$1);
          var G__18667 = c__4543__auto__;
          var G__18668 = cljs.core.count.call(null, c__4543__auto__);
          var G__18669 = 0;
          seq__18652 = G__18666;
          chunk__18653 = G__18667;
          count__18654 = G__18668;
          i__18655 = G__18669;
          continue;
        } else {
          var vec__18657 = cljs.core.first.call(null, seq__18652__$1);
          var k = cljs.core.nth.call(null, vec__18657, 0, null);
          var v = cljs.core.nth.call(null, vec__18657, 1, null);
          f.call(null, v, k);
          var G__18670 = cljs.core.next.call(null, seq__18652__$1);
          var G__18671 = null;
          var G__18672 = 0;
          var G__18673 = 0;
          seq__18652 = G__18670;
          chunk__18653 = G__18671;
          count__18654 = G__18672;
          i__18655 = G__18673;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__18674 = i + 2;
        var G__18675 = init__$2;
        i = G__18674;
        init__$1 = G__18675;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4177__auto__ = self__.__hash;
  if (!(h__4177__auto__ == null)) {
    return h__4177__auto__;
  } else {
    var h__4177__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4177__auto____$1;
    return h__4177__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (function() {
    var G__18658 = other;
    if (G__18658) {
      var bit__4430__auto__ = G__18658.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4430__auto__ || G__18658.cljs$core$IMap$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === cljs.core._count.call(null, other__$1)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = cljs.core._lookup.call(null, other__$1, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.call(null, self__.arr[i + 1], v)) {
              var G__18676 = i + 2;
              i = G__18676;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map.call(null, coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj18660 = {};
    return obj18660;
  }(), self__.arr.length, cljs.core.aclone.call(null, self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__18677 = s + 2;
            var G__18678 = d;
            s = G__18677;
            d = G__18678;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__18679 = s + 2;
            var G__18680 = d + 2;
            s = G__18679;
            d = G__18680;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__18661 = cljs.core.aclone.call(null, self__.arr);
        G__18661[idx + 1] = v;
        return G__18661;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__18681 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__18682 = cljs.core.next.call(null, es);
          ret = G__18681;
          es = G__18682;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__18683 = null;
  var G__18683__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__18683__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__18683 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__18683__2.call(this, self__, k);
      case 3:
        return G__18683__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18683.cljs$core$IFn$_invoke$arity$2 = G__18683__2;
  G__18683.cljs$core$IFn$_invoke$arity$3 = G__18683__3;
  return G__18683;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args18651) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args18651)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone.call(null, arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__18684 = i + 2;
        var G__18685 = cljs.core._assoc_BANG_.call(null, ret, arr__$1[i], arr__$1[i + 1]);
        i = G__18684;
        ret = G__18685;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, ret);
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4734__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4734__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__18686_18688 = self__.arr;
      G__18686_18688.pop();
      G__18686_18688.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__18687 = o;
      if (G__18687) {
        var bit__4437__auto__ = G__18687.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4437__auto__ || G__18687.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__18687.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__18687);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__18687);
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__18689 = cljs.core.next.call(null, es);
          var G__18690 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__18689;
          tcoll__$2 = G__18690;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__18691 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__18692 = i + 2;
      out = G__18691;
      i = G__18692;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.call(null, key, other);
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__18695 = cljs.core.aclone.call(null, arr);
    G__18695[i] = a;
    return G__18695;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__18696 = cljs.core.aclone.call(null, arr);
    G__18696[i] = a;
    G__18696[j] = b;
    return G__18696;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1]);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__18697 = i + 2;
        var G__18698 = init__$2;
        i = G__18697;
        init__$1 = G__18698;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_18699 = 0;
        var j_18700 = 0;
        while (true) {
          if (i_18699 < 32) {
            if ((self__.bitmap >>> i_18699 & 1) === 0) {
              var G__18701 = i_18699 + 1;
              var G__18702 = j_18700;
              i_18699 = G__18701;
              j_18700 = G__18702;
              continue;
            } else {
              nodes[i_18699] = !(self__.arr[j_18700] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_18700]), self__.arr[j_18700], self__.arr[j_18700 + 1], added_leaf_QMARK_) : self__.arr[j_18700 + 1];
              var G__18703 = i_18699 + 1;
              var G__18704 = j_18700 + 2;
              i_18699 = G__18703;
              j_18700 = G__18704;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_18705 = 0;
      var j_18706 = 0;
      while (true) {
        if (i_18705 < 32) {
          if ((self__.bitmap >>> i_18705 & 1) === 0) {
            var G__18707 = i_18705 + 1;
            var G__18708 = j_18706;
            i_18705 = G__18707;
            j_18706 = G__18708;
            continue;
          } else {
            nodes[i_18705] = !(self__.arr[j_18706] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_18706]), self__.arr[j_18706], self__.arr[j_18706 + 1], added_leaf_QMARK_) : self__.arr[j_18706 + 1];
            var G__18709 = i_18705 + 1;
            var G__18710 = j_18706 + 2;
            i_18705 = G__18709;
            j_18706 = G__18710;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__18711 = i + 1;
        var G__18712 = j + 2;
        var G__18713 = bitmap | 1 << i;
        i = G__18711;
        j = G__18712;
        bitmap = G__18713;
        continue;
      } else {
        var G__18714 = i + 1;
        var G__18715 = j;
        var G__18716 = bitmap;
        i = G__18714;
        j = G__18715;
        bitmap = G__18716;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone.call(null, self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2);
        } else {
          var G__18717 = i + 1;
          var G__18718 = init__$2;
          i = G__18717;
          init__$1 = G__18718;
          continue;
        }
      } else {
        var G__18719 = i + 1;
        var G__18720 = init__$1;
        i = G__18719;
        init__$1 = G__18720;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test.call(null, key, arr[i])) {
        return i;
      } else {
        var G__18721 = i + 2;
        i = G__18721;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4177__auto__ = self__.__hash;
  if (!(h__4177__auto__ == null)) {
    return h__4177__auto__;
  } else {
    var h__4177__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4177__auto____$1;
    return h__4177__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4734__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4734__auto__);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__18722 = j + 2;
                j = G__18722;
                continue;
              }
            } else {
              var G__18723 = j + 2;
              j = G__18723;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4177__auto__ = self__.__hash;
  if (!(h__4177__auto__ == null)) {
    return h__4177__auto__;
  } else {
    var h__4177__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4177__auto____$1;
    return h__4177__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4734__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4734__auto__);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__18724 = j + 1;
              j = G__18724;
              continue;
            }
          } else {
            var G__18725 = j + 1;
            j = G__18725;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__18727 = cljs.core.seq.call(null, coll);
  var chunk__18728 = null;
  var count__18729 = 0;
  var i__18730 = 0;
  while (true) {
    if (i__18730 < count__18729) {
      var vec__18731 = cljs.core._nth.call(null, chunk__18728, i__18730);
      var k = cljs.core.nth.call(null, vec__18731, 0, null);
      var v = cljs.core.nth.call(null, vec__18731, 1, null);
      f.call(null, v, k);
      var G__18735 = seq__18727;
      var G__18736 = chunk__18728;
      var G__18737 = count__18729;
      var G__18738 = i__18730 + 1;
      seq__18727 = G__18735;
      chunk__18728 = G__18736;
      count__18729 = G__18737;
      i__18730 = G__18738;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__18727);
      if (temp__4126__auto__) {
        var seq__18727__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__18727__$1)) {
          var c__4543__auto__ = cljs.core.chunk_first.call(null, seq__18727__$1);
          var G__18739 = cljs.core.chunk_rest.call(null, seq__18727__$1);
          var G__18740 = c__4543__auto__;
          var G__18741 = cljs.core.count.call(null, c__4543__auto__);
          var G__18742 = 0;
          seq__18727 = G__18739;
          chunk__18728 = G__18740;
          count__18729 = G__18741;
          i__18730 = G__18742;
          continue;
        } else {
          var vec__18732 = cljs.core.first.call(null, seq__18727__$1);
          var k = cljs.core.nth.call(null, vec__18732, 0, null);
          var v = cljs.core.nth.call(null, vec__18732, 1, null);
          f.call(null, v, k);
          var G__18743 = cljs.core.next.call(null, seq__18727__$1);
          var G__18744 = null;
          var G__18745 = 0;
          var G__18746 = 0;
          seq__18727 = G__18743;
          chunk__18728 = G__18744;
          count__18729 = G__18745;
          i__18730 = G__18746;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4177__auto__ = self__.__hash;
  if (!(h__4177__auto__ == null)) {
    return h__4177__auto__;
  } else {
    var h__4177__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4177__auto____$1;
    return h__4177__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj18734 = {};
    return obj18734;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__18747 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__18748 = cljs.core.next.call(null, es);
          ret = G__18747;
          es = G__18748;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__18749 = null;
  var G__18749__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__18749__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__18749 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__18749__2.call(this, self__, k);
      case 3:
        return G__18749__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18749.cljs$core$IFn$_invoke$arity$2 = G__18749__2;
  G__18749.cljs$core$IFn$_invoke$arity$3 = G__18749__3;
  return G__18749;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args18726) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args18726)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__18750 = i + 1;
      var G__18751 = cljs.core._assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__18750;
      out = G__18751;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4734__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4734__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__18752 = o;
      if (G__18752) {
        var bit__4437__auto__ = G__18752.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4437__auto__ || G__18752.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__18752.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__18752);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__18752);
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__18753 = cljs.core.next.call(null, es);
          var G__18754 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__18753;
          tcoll__$1 = G__18754;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__18755 = ascending_QMARK_ ? t.left : t.right;
      var G__18756 = cljs.core.conj.call(null, stack__$1, t);
      t = G__18755;
      stack__$1 = G__18756;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4177__auto__ = self__.__hash;
  if (!(h__4177__auto__ == null)) {
    return h__4177__auto__;
  } else {
    var h__4177__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4177__auto____$1;
    return h__4177__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4734__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4734__auto__);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._assoc_n.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4177__auto__ = self__.__hash;
  if (!(h__4177__auto__ == null)) {
    return h__4177__auto__;
  } else {
    var h__4177__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4177__auto____$1;
    return h__4177__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__18758 = null;
  var G__18758__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return cljs.core._lookup.call(null, node, k);
  };
  var G__18758__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return cljs.core._lookup.call(null, node, k, not_found);
  };
  G__18758 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__18758__2.call(this, self__, k);
      case 3:
        return G__18758__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18758.cljs$core$IFn$_invoke$arity$2 = G__18758__2;
  G__18758.cljs$core$IFn$_invoke$arity$3 = G__18758__3;
  return G__18758;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args18757) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args18757)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return cljs.core._lookup.call(null, node, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return cljs.core._lookup.call(null, node, k, not_found);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4734__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4734__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._assoc_n.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4177__auto__ = self__.__hash;
  if (!(h__4177__auto__ == null)) {
    return h__4177__auto__;
  } else {
    var h__4177__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4177__auto____$1;
    return h__4177__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__18760 = null;
  var G__18760__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return cljs.core._lookup.call(null, node, k);
  };
  var G__18760__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return cljs.core._lookup.call(null, node, k, not_found);
  };
  G__18760 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__18760__2.call(this, self__, k);
      case 3:
        return G__18760__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18760.cljs$core$IFn$_invoke$arity$2 = G__18760__2;
  G__18760.cljs$core$IFn$_invoke$arity$3 = G__18760__3;
  return G__18760;
}();
cljs.core.RedNode.prototype.apply = function(self__, args18759) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args18759)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return cljs.core._lookup.call(null, node, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return cljs.core._lookup.call(null, node, k, not_found);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4734__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4734__auto__);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null);
        } else {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = tree_map_remove.call(null, comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__18762 = cljs.core.seq.call(null, coll);
  var chunk__18763 = null;
  var count__18764 = 0;
  var i__18765 = 0;
  while (true) {
    if (i__18765 < count__18764) {
      var vec__18766 = cljs.core._nth.call(null, chunk__18763, i__18765);
      var k = cljs.core.nth.call(null, vec__18766, 0, null);
      var v = cljs.core.nth.call(null, vec__18766, 1, null);
      f.call(null, v, k);
      var G__18768 = seq__18762;
      var G__18769 = chunk__18763;
      var G__18770 = count__18764;
      var G__18771 = i__18765 + 1;
      seq__18762 = G__18768;
      chunk__18763 = G__18769;
      count__18764 = G__18770;
      i__18765 = G__18771;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__18762);
      if (temp__4126__auto__) {
        var seq__18762__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__18762__$1)) {
          var c__4543__auto__ = cljs.core.chunk_first.call(null, seq__18762__$1);
          var G__18772 = cljs.core.chunk_rest.call(null, seq__18762__$1);
          var G__18773 = c__4543__auto__;
          var G__18774 = cljs.core.count.call(null, c__4543__auto__);
          var G__18775 = 0;
          seq__18762 = G__18772;
          chunk__18763 = G__18773;
          count__18764 = G__18774;
          i__18765 = G__18775;
          continue;
        } else {
          var vec__18767 = cljs.core.first.call(null, seq__18762__$1);
          var k = cljs.core.nth.call(null, vec__18767, 0, null);
          var v = cljs.core.nth.call(null, vec__18767, 1, null);
          f.call(null, v, k);
          var G__18776 = cljs.core.next.call(null, seq__18762__$1);
          var G__18777 = null;
          var G__18778 = 0;
          var G__18779 = 0;
          seq__18762 = G__18776;
          chunk__18763 = G__18777;
          count__18764 = G__18778;
          i__18765 = G__18779;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__18780 = t.left;
          t = G__18780;
          continue;
        } else {
          var G__18781 = t.right;
          t = G__18781;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4177__auto__ = self__.__hash;
  if (!(h__4177__auto__ == null)) {
    return h__4177__auto__;
  } else {
    var h__4177__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4177__auto____$1;
    return h__4177__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if (cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__18782 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__18783 = cljs.core.next.call(null, es);
          ret = G__18782;
          es = G__18783;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__18784 = null;
  var G__18784__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__18784__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__18784 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__18784__2.call(this, self__, k);
      case 3:
        return G__18784__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18784.cljs$core$IFn$_invoke$arity$2 = G__18784__2;
  G__18784.cljs$core$IFn$_invoke$arity$3 = G__18784__3;
  return G__18784;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args18761) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args18761)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__18785 = cljs.core.conj.call(null, stack, t);
              var G__18786 = t.left;
              stack = G__18785;
              t = G__18786;
              continue;
            } else {
              var G__18787 = stack;
              var G__18788 = t.right;
              stack = G__18787;
              t = G__18788;
              continue;
            }
          } else {
            if (c > 0) {
              var G__18789 = cljs.core.conj.call(null, stack, t);
              var G__18790 = t.right;
              stack = G__18789;
              t = G__18790;
              continue;
            } else {
              var G__18791 = stack;
              var G__18792 = t.left;
              stack = G__18791;
              t = G__18792;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4734__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4734__auto__);
};
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__18793 = cljs.core.nnext.call(null, in$);
        var G__18794 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__18793;
        out = G__18794;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__18795) {
    var keyvals = cljs.core.seq(arglist__18795);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.call(null, cljs.core.array, keyvals), true, false);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__18796) {
    var keyvals = cljs.core.seq(arglist__18796);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj18800 = {};
      return obj18800;
    }();
    var kvs = cljs.core.seq.call(null, keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__18801 = cljs.core.nnext.call(null, kvs);
        kvs = G__18801;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject(ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__18802) {
    var keyvals = cljs.core.seq(arglist__18802);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__18803 = cljs.core.nnext.call(null, in$);
        var G__18804 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__18803;
        out = G__18804;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__18805) {
    var keyvals = cljs.core.seq(arglist__18805);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__18806 = cljs.core.nnext.call(null, in$);
        var G__18807 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__18806;
        out = G__18807;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__18808) {
    var comparator = cljs.core.first(arglist__18808);
    var keyvals = cljs.core.rest(arglist__18808);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__18809 = self__.mseq;
    if (G__18809) {
      var bit__4437__auto__ = G__18809.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4437__auto__ || G__18809.cljs$core$INext$) {
        return true;
      } else {
        if (!G__18809.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__18809);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__18809);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__18810 = self__.mseq;
    if (G__18810) {
      var bit__4437__auto__ = G__18810.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4437__auto__ || G__18810.cljs$core$INext$) {
        return true;
      } else {
        if (!G__18810.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__18810);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__18810);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4734__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4734__auto__);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__18811 = self__.mseq;
    if (G__18811) {
      var bit__4437__auto__ = G__18811.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4437__auto__ || G__18811.cljs$core$INext$) {
        return true;
      } else {
        if (!G__18811.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__18811);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__18811);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__18812 = self__.mseq;
    if (G__18812) {
      var bit__4437__auto__ = G__18812.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4437__auto__ || G__18812.cljs$core$INext$) {
        return true;
      } else {
        if (!G__18812.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__18812);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__18812);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4734__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4734__auto__);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__18813_SHARP_, p2__18814_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3761__auto__ = p1__18813_SHARP_;
          if (cljs.core.truth_(or__3761__auto__)) {
            return or__3761__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__18814_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__18815) {
    var maps = cljs.core.seq(arglist__18815);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if (cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v));
        } else {
          return cljs.core.assoc.call(null, m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3761__auto__ = m1;
            if (cljs.core.truth_(or__3761__auto__)) {
              return or__3761__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq.call(null, m2));
        };
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__18816) {
    var f = cljs.core.first(arglist__18816);
    var maps = cljs.core.rest(arglist__18816);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__18817 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__18818 = cljs.core.next.call(null, keys);
      ret = G__18817;
      keys = G__18818;
      continue;
    } else {
      return cljs.core.with_meta.call(null, ret, cljs.core.meta.call(null, map));
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__18821 = cljs.core.seq.call(null, coll);
  var chunk__18822 = null;
  var count__18823 = 0;
  var i__18824 = 0;
  while (true) {
    if (i__18824 < count__18823) {
      var vec__18825 = cljs.core._nth.call(null, chunk__18822, i__18824);
      var k = cljs.core.nth.call(null, vec__18825, 0, null);
      var v = cljs.core.nth.call(null, vec__18825, 1, null);
      f.call(null, v, k);
      var G__18827 = seq__18821;
      var G__18828 = chunk__18822;
      var G__18829 = count__18823;
      var G__18830 = i__18824 + 1;
      seq__18821 = G__18827;
      chunk__18822 = G__18828;
      count__18823 = G__18829;
      i__18824 = G__18830;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__18821);
      if (temp__4126__auto__) {
        var seq__18821__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__18821__$1)) {
          var c__4543__auto__ = cljs.core.chunk_first.call(null, seq__18821__$1);
          var G__18831 = cljs.core.chunk_rest.call(null, seq__18821__$1);
          var G__18832 = c__4543__auto__;
          var G__18833 = cljs.core.count.call(null, c__4543__auto__);
          var G__18834 = 0;
          seq__18821 = G__18831;
          chunk__18822 = G__18832;
          count__18823 = G__18833;
          i__18824 = G__18834;
          continue;
        } else {
          var vec__18826 = cljs.core.first.call(null, seq__18821__$1);
          var k = cljs.core.nth.call(null, vec__18826, 0, null);
          var v = cljs.core.nth.call(null, vec__18826, 1, null);
          f.call(null, v, k);
          var G__18835 = cljs.core.next.call(null, seq__18821__$1);
          var G__18836 = null;
          var G__18837 = 0;
          var G__18838 = 0;
          seq__18821 = G__18835;
          chunk__18822 = G__18836;
          count__18823 = G__18837;
          i__18824 = G__18838;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4177__auto__ = self__.__hash;
  if (!(h__4177__auto__ == null)) {
    return h__4177__auto__;
  } else {
    var h__4177__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4177__auto____$1;
    return h__4177__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__18819_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__18819_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__18839 = null;
  var G__18839__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__18839__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__18839 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__18839__2.call(this, self__, k);
      case 3:
        return G__18839__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18839.cljs$core$IFn$_invoke$arity$2 = G__18839__2;
  G__18839.cljs$core$IFn$_invoke$arity$3 = G__18839__3;
  return G__18839;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args18820) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args18820)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone.call(null, items);
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__18840 = i + 1;
        var G__18841 = cljs.core._assoc_BANG_.call(null, out, items[i], null);
        i = G__18840;
        out = G__18841;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_.call(null, out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__18842 = i + 1;
        var G__18843 = cljs.core._conj_BANG_.call(null, out, items[i]);
        i = G__18842;
        out = G__18843;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4734__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4734__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__18845 = null;
  var G__18845__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__18845__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__18845 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__18845__2.call(this, self__, k);
      case 3:
        return G__18845__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18845.cljs$core$IFn$_invoke$arity$2 = G__18845__2;
  G__18845.cljs$core$IFn$_invoke$arity$3 = G__18845__3;
  return G__18845;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args18844) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args18844)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__18848 = cljs.core.seq.call(null, coll);
  var chunk__18849 = null;
  var count__18850 = 0;
  var i__18851 = 0;
  while (true) {
    if (i__18851 < count__18850) {
      var vec__18852 = cljs.core._nth.call(null, chunk__18849, i__18851);
      var k = cljs.core.nth.call(null, vec__18852, 0, null);
      var v = cljs.core.nth.call(null, vec__18852, 1, null);
      f.call(null, v, k);
      var G__18854 = seq__18848;
      var G__18855 = chunk__18849;
      var G__18856 = count__18850;
      var G__18857 = i__18851 + 1;
      seq__18848 = G__18854;
      chunk__18849 = G__18855;
      count__18850 = G__18856;
      i__18851 = G__18857;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__18848);
      if (temp__4126__auto__) {
        var seq__18848__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__18848__$1)) {
          var c__4543__auto__ = cljs.core.chunk_first.call(null, seq__18848__$1);
          var G__18858 = cljs.core.chunk_rest.call(null, seq__18848__$1);
          var G__18859 = c__4543__auto__;
          var G__18860 = cljs.core.count.call(null, c__4543__auto__);
          var G__18861 = 0;
          seq__18848 = G__18858;
          chunk__18849 = G__18859;
          count__18850 = G__18860;
          i__18851 = G__18861;
          continue;
        } else {
          var vec__18853 = cljs.core.first.call(null, seq__18848__$1);
          var k = cljs.core.nth.call(null, vec__18853, 0, null);
          var v = cljs.core.nth.call(null, vec__18853, 1, null);
          f.call(null, v, k);
          var G__18862 = cljs.core.next.call(null, seq__18848__$1);
          var G__18863 = null;
          var G__18864 = 0;
          var G__18865 = 0;
          seq__18848 = G__18862;
          chunk__18849 = G__18863;
          count__18850 = G__18864;
          i__18851 = G__18865;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4177__auto__ = self__.__hash;
  if (!(h__4177__auto__ == null)) {
    return h__4177__auto__;
  } else {
    var h__4177__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4177__auto____$1;
    return h__4177__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__18846_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__18846_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__18866 = null;
  var G__18866__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__18866__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__18866 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__18866__2.call(this, self__, k);
      case 3:
        return G__18866__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18866.cljs$core$IFn$_invoke$arity$2 = G__18866__2;
  G__18866.cljs$core$IFn$_invoke$arity$3 = G__18866__3;
  return G__18866;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args18847) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args18847)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4734__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4734__auto__);
};
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4637__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4637__auto__.length) {
        var G__18867 = i + 1;
        var G__18868 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__18867;
        res = G__18868;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq.call(null, in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__18869 = cljs.core._next.call(null, in$__$1);
          var G__18870 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
          in$__$1 = G__18869;
          out = G__18870;
          continue;
        } else {
          return cljs.core._persistent_BANG_.call(null, out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__18871__delegate = function(keys) {
      return cljs.core.set.call(null, keys);
    };
    var G__18871 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__18871__delegate.call(this, keys);
    };
    G__18871.cljs$lang$maxFixedArity = 0;
    G__18871.cljs$lang$applyTo = function(arglist__18872) {
      var keys = cljs.core.seq(arglist__18872);
      return G__18871__delegate(keys);
    };
    G__18871.cljs$core$IFn$_invoke$arity$variadic = G__18871__delegate;
    return G__18871;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__18873) {
    var keys = cljs.core.seq(arglist__18873);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__18874) {
    var comparator = cljs.core.first(arglist__18874);
    var keys = cljs.core.rest(arglist__18874);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function() {
  var replace = null;
  var replace__1 = function(smap) {
    return cljs.core.map.call(null, function(p1__18875_SHARP_) {
      var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__18875_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.val.call(null, e);
      } else {
        return p1__18875_SHARP_;
      }
    });
  };
  var replace__2 = function(smap, coll) {
    if (cljs.core.vector_QMARK_.call(null, coll)) {
      var n = cljs.core.count.call(null, coll);
      return cljs.core.reduce.call(null, function(n) {
        return function(v, i) {
          var temp__4124__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
          if (cljs.core.truth_(temp__4124__auto__)) {
            var e = temp__4124__auto__;
            return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e));
          } else {
            return v;
          }
        };
      }(n), coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)));
    } else {
      return cljs.core.map.call(null, function(p1__18876_SHARP_) {
        var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__18876_SHARP_);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.second.call(null, e);
        } else {
          return p1__18876_SHARP_;
        }
      }, coll);
    }
  };
  replace = function(smap, coll) {
    switch(arguments.length) {
      case 1:
        return replace__1.call(this, smap);
      case 2:
        return replace__2.call(this, smap, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
  replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
  return replace;
}();
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__18883, seen__$1) {
        while (true) {
          var vec__18884 = p__18883;
          var f = cljs.core.nth.call(null, vec__18884, 0, null);
          var xs__$1 = vec__18884;
          var temp__4126__auto__ = cljs.core.seq.call(null, xs__$1);
          if (temp__4126__auto__) {
            var s = temp__4126__auto__;
            if (cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__18885 = cljs.core.rest.call(null, s);
              var G__18886 = seen__$1;
              p__18883 = G__18885;
              seen__$1 = G__18886;
              continue;
            } else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next.call(null, s__$1)) {
      var G__18887 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__18888 = cljs.core.next.call(null, s__$1);
      ret = G__18887;
      s__$1 = G__18888;
      continue;
    } else {
      return cljs.core.seq.call(null, ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__18890 = x;
    if (G__18890) {
      var bit__4430__auto__ = G__18890.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4430__auto__ || G__18890.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._name.call(null, x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while (true) {
    if (ks && vs) {
      var G__18891 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__18892 = cljs.core.next.call(null, ks);
      var G__18893 = cljs.core.next.call(null, vs);
      map = G__18891;
      ks = G__18892;
      vs = G__18893;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (k.call(null, x) > k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__18896__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__18894_SHARP_, p2__18895_SHARP_) {
        return max_key.call(null, k, p1__18894_SHARP_, p2__18895_SHARP_);
      }, max_key.call(null, k, x, y), more);
    };
    var G__18896 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__18896__delegate.call(this, k, x, y, more);
    };
    G__18896.cljs$lang$maxFixedArity = 3;
    G__18896.cljs$lang$applyTo = function(arglist__18897) {
      var k = cljs.core.first(arglist__18897);
      arglist__18897 = cljs.core.next(arglist__18897);
      var x = cljs.core.first(arglist__18897);
      arglist__18897 = cljs.core.next(arglist__18897);
      var y = cljs.core.first(arglist__18897);
      var more = cljs.core.rest(arglist__18897);
      return G__18896__delegate(k, x, y, more);
    };
    G__18896.cljs$core$IFn$_invoke$arity$variadic = G__18896__delegate;
    return G__18896;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (k.call(null, x) < k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__18900__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__18898_SHARP_, p2__18899_SHARP_) {
        return min_key.call(null, k, p1__18898_SHARP_, p2__18899_SHARP_);
      }, min_key.call(null, k, x, y), more);
    };
    var G__18900 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__18900__delegate.call(this, k, x, y, more);
    };
    G__18900.cljs$lang$maxFixedArity = 3;
    G__18900.cljs$lang$applyTo = function(arglist__18901) {
      var k = cljs.core.first(arglist__18901);
      arglist__18901 = cljs.core.next(arglist__18901);
      var x = cljs.core.first(arglist__18901);
      arglist__18901 = cljs.core.next(arglist__18901);
      var y = cljs.core.first(arglist__18901);
      var more = cljs.core.rest(arglist__18901);
      return G__18900__delegate(k, x, y, more);
    };
    G__18900.cljs$core$IFn$_invoke$arity$variadic = G__18900__delegate;
    return G__18900;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function __GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__1 = function(n) {
    return function(rf) {
      var a = cljs.core.array_list.call(null);
      return function(a) {
        return function() {
          var G__18902 = null;
          var G__18902__0 = function() {
            return rf.call(null);
          };
          var G__18902__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return cljs.core.unreduced.call(null, rf.call(null, result, v));
            }();
            return rf.call(null, result__$1);
          };
          var G__18902__2 = function(result, input) {
            a.add(input);
            if (n === a.size()) {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return rf.call(null, result, v);
            } else {
              return result;
            }
          };
          G__18902 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__18902__0.call(this);
              case 1:
                return G__18902__1.call(this, result);
              case 2:
                return G__18902__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__18902.cljs$core$IFn$_invoke$arity$0 = G__18902__0;
          G__18902.cljs$core$IFn$_invoke$arity$1 = G__18902__1;
          G__18902.cljs$core$IFn$_invoke$arity$2 = G__18902__2;
          return G__18902;
        }();
      }(a);
    };
  };
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 1:
        return partition_all__1.call(this, n);
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function() {
  var take_while = null;
  var take_while__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__18903 = null;
        var G__18903__0 = function() {
          return rf.call(null);
        };
        var G__18903__1 = function(result) {
          return rf.call(null, result);
        };
        var G__18903__2 = function(result, input) {
          if (cljs.core.truth_(pred.call(null, input))) {
            return rf.call(null, result, input);
          } else {
            return cljs.core.reduced.call(null, result);
          }
        };
        G__18903 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__18903__0.call(this);
            case 1:
              return G__18903__1.call(this, result);
            case 2:
              return G__18903__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__18903.cljs$core$IFn$_invoke$arity$0 = G__18903__0;
        G__18903.cljs$core$IFn$_invoke$arity$1 = G__18903__1;
        G__18903.cljs$core$IFn$_invoke$arity$2 = G__18903__2;
        return G__18903;
      }();
    };
  };
  var take_while__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return take_while__1.call(this, pred);
      case 2:
        return take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
  take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
  return take_while;
}();
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__18906 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__18906, 0, null);
        var s = vec__18906;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__18907 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__18907, 0, null);
      var s = vec__18907;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__18910 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__18910, 0, null);
        var s = vec__18910;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__18911 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__18911, 0, null);
      var s = vec__18911;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function __GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0;
  } else {
    return Math.ceil.call(null, (self__.end - self__.start) / self__.step);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4177__auto__ = self__.__hash;
  if (!(h__4177__auto__ == null)) {
    return h__4177__auto__;
  } else {
    var h__4177__auto____$1 = cljs.core.hash_ordered_coll.call(null, rng__$1);
    self__.__hash = h__4177__auto____$1;
    return h__4177__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = f.call(null, ret, i);
      if (cljs.core.reduced_QMARK_.call(null, ret__$1)) {
        return cljs.core.deref.call(null, ret__$1);
      } else {
        var G__18912 = i + self__.step;
        var G__18913 = ret__$1;
        i = G__18912;
        ret = G__18913;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq.call(null, rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4734__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4734__auto__);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function() {
  var take_nth = null;
  var take_nth__1 = function(n) {
    return function(rf) {
      var ia = cljs.core.atom.call(null, -1);
      return function(ia) {
        return function() {
          var G__18914 = null;
          var G__18914__0 = function() {
            return rf.call(null);
          };
          var G__18914__1 = function(result) {
            return rf.call(null, result);
          };
          var G__18914__2 = function(result, input) {
            var i = cljs.core.swap_BANG_.call(null, ia, cljs.core.inc);
            if (cljs.core.rem.call(null, i, n) === 0) {
              return rf.call(null, result, input);
            } else {
              return result;
            }
          };
          G__18914 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__18914__0.call(this);
              case 1:
                return G__18914__1.call(this, result);
              case 2:
                return G__18914__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__18914.cljs$core$IFn$_invoke$arity$0 = G__18914__0;
          G__18914.cljs$core$IFn$_invoke$arity$1 = G__18914__1;
          G__18914.cljs$core$IFn$_invoke$arity$2 = G__18914__2;
          return G__18914;
        }();
      }(ia);
    };
  };
  var take_nth__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  take_nth = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take_nth__1.call(this, n);
      case 2:
        return take_nth__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
  take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
  return take_nth;
}();
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], null);
};
cljs.core.partition_by = function() {
  var partition_by = null;
  var partition_by__1 = function(f) {
    return function(rf) {
      var a = cljs.core.array_list.call(null);
      var pa = cljs.core.atom.call(null, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(a, pa) {
        return function() {
          var G__18916 = null;
          var G__18916__0 = function() {
            return rf.call(null);
          };
          var G__18916__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return cljs.core.unreduced.call(null, rf.call(null, result, v));
            }();
            return rf.call(null, result__$1);
          };
          var G__18916__2 = function(result, input) {
            var pval = cljs.core.deref.call(null, pa);
            var val = f.call(null, input);
            cljs.core.reset_BANG_.call(null, pa, val);
            if (cljs.core.keyword_identical_QMARK_.call(null, pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.call(null, val, pval)) {
              a.add(input);
              return result;
            } else {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              var ret = rf.call(null, result, v);
              if (cljs.core.reduced_QMARK_.call(null, ret)) {
              } else {
                a.add(input);
              }
              return ret;
            }
          };
          G__18916 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__18916__0.call(this);
              case 1:
                return G__18916__1.call(this, result);
              case 2:
                return G__18916__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__18916.cljs$core$IFn$_invoke$arity$0 = G__18916__0;
          G__18916.cljs$core$IFn$_invoke$arity$1 = G__18916__1;
          G__18916.cljs$core$IFn$_invoke$arity$2 = G__18916__2;
          return G__18916;
        }();
      }(a, pa);
    };
  };
  var partition_by__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var fst = cljs.core.first.call(null, s);
        var fv = f.call(null, fst);
        var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv, s, temp__4126__auto__) {
          return function(p1__18915_SHARP_) {
            return cljs.core._EQ_.call(null, fv, f.call(null, p1__18915_SHARP_));
          };
        }(fst, fv, s, temp__4126__auto__), cljs.core.next.call(null, s)));
        return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_by = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return partition_by__1.call(this, f);
      case 2:
        return partition_by__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  return partition_by;
}();
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1);
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s));
      } else {
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, f.call(null));
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__18927 = null;
      var G__18927__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null)], null);
      };
      var G__18927__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x)], null);
      };
      var G__18927__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y)], null);
      };
      var G__18927__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z)], null);
      };
      var G__18927__4 = function() {
        var G__18928__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args)], null);
        };
        var G__18928 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__18928__delegate.call(this, x, y, z, args);
        };
        G__18928.cljs$lang$maxFixedArity = 3;
        G__18928.cljs$lang$applyTo = function(arglist__18929) {
          var x = cljs.core.first(arglist__18929);
          arglist__18929 = cljs.core.next(arglist__18929);
          var y = cljs.core.first(arglist__18929);
          arglist__18929 = cljs.core.next(arglist__18929);
          var z = cljs.core.first(arglist__18929);
          var args = cljs.core.rest(arglist__18929);
          return G__18928__delegate(x, y, z, args);
        };
        G__18928.cljs$core$IFn$_invoke$arity$variadic = G__18928__delegate;
        return G__18928;
      }();
      G__18927 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__18927__0.call(this);
          case 1:
            return G__18927__1.call(this, x);
          case 2:
            return G__18927__2.call(this, x, y);
          case 3:
            return G__18927__3.call(this, x, y, z);
          default:
            return G__18927__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18927.cljs$lang$maxFixedArity = 3;
      G__18927.cljs$lang$applyTo = G__18927__4.cljs$lang$applyTo;
      G__18927.cljs$core$IFn$_invoke$arity$0 = G__18927__0;
      G__18927.cljs$core$IFn$_invoke$arity$1 = G__18927__1;
      G__18927.cljs$core$IFn$_invoke$arity$2 = G__18927__2;
      G__18927.cljs$core$IFn$_invoke$arity$3 = G__18927__3;
      G__18927.cljs$core$IFn$_invoke$arity$variadic = G__18927__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18927;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__18930 = null;
      var G__18930__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null)], null);
      };
      var G__18930__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x)], null);
      };
      var G__18930__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y)], null);
      };
      var G__18930__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z)], null);
      };
      var G__18930__4 = function() {
        var G__18931__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args)], null);
        };
        var G__18931 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__18931__delegate.call(this, x, y, z, args);
        };
        G__18931.cljs$lang$maxFixedArity = 3;
        G__18931.cljs$lang$applyTo = function(arglist__18932) {
          var x = cljs.core.first(arglist__18932);
          arglist__18932 = cljs.core.next(arglist__18932);
          var y = cljs.core.first(arglist__18932);
          arglist__18932 = cljs.core.next(arglist__18932);
          var z = cljs.core.first(arglist__18932);
          var args = cljs.core.rest(arglist__18932);
          return G__18931__delegate(x, y, z, args);
        };
        G__18931.cljs$core$IFn$_invoke$arity$variadic = G__18931__delegate;
        return G__18931;
      }();
      G__18930 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__18930__0.call(this);
          case 1:
            return G__18930__1.call(this, x);
          case 2:
            return G__18930__2.call(this, x, y);
          case 3:
            return G__18930__3.call(this, x, y, z);
          default:
            return G__18930__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18930.cljs$lang$maxFixedArity = 3;
      G__18930.cljs$lang$applyTo = G__18930__4.cljs$lang$applyTo;
      G__18930.cljs$core$IFn$_invoke$arity$0 = G__18930__0;
      G__18930.cljs$core$IFn$_invoke$arity$1 = G__18930__1;
      G__18930.cljs$core$IFn$_invoke$arity$2 = G__18930__2;
      G__18930.cljs$core$IFn$_invoke$arity$3 = G__18930__3;
      G__18930.cljs$core$IFn$_invoke$arity$variadic = G__18930__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18930;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__18933 = null;
      var G__18933__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null), h.call(null)], null);
      };
      var G__18933__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x), h.call(null, x)], null);
      };
      var G__18933__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y), h.call(null, x, y)], null);
      };
      var G__18933__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z)], null);
      };
      var G__18933__4 = function() {
        var G__18934__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args)], null);
        };
        var G__18934 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__18934__delegate.call(this, x, y, z, args);
        };
        G__18934.cljs$lang$maxFixedArity = 3;
        G__18934.cljs$lang$applyTo = function(arglist__18935) {
          var x = cljs.core.first(arglist__18935);
          arglist__18935 = cljs.core.next(arglist__18935);
          var y = cljs.core.first(arglist__18935);
          arglist__18935 = cljs.core.next(arglist__18935);
          var z = cljs.core.first(arglist__18935);
          var args = cljs.core.rest(arglist__18935);
          return G__18934__delegate(x, y, z, args);
        };
        G__18934.cljs$core$IFn$_invoke$arity$variadic = G__18934__delegate;
        return G__18934;
      }();
      G__18933 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__18933__0.call(this);
          case 1:
            return G__18933__1.call(this, x);
          case 2:
            return G__18933__2.call(this, x, y);
          case 3:
            return G__18933__3.call(this, x, y, z);
          default:
            return G__18933__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18933.cljs$lang$maxFixedArity = 3;
      G__18933.cljs$lang$applyTo = G__18933__4.cljs$lang$applyTo;
      G__18933.cljs$core$IFn$_invoke$arity$0 = G__18933__0;
      G__18933.cljs$core$IFn$_invoke$arity$1 = G__18933__1;
      G__18933.cljs$core$IFn$_invoke$arity$2 = G__18933__2;
      G__18933.cljs$core$IFn$_invoke$arity$3 = G__18933__3;
      G__18933.cljs$core$IFn$_invoke$arity$variadic = G__18933__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18933;
    }();
  };
  var juxt__4 = function() {
    var G__18936__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__18937 = null;
          var G__18937__0 = function() {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__18917_SHARP_, p2__18918_SHARP_) {
                return cljs.core.conj.call(null, p1__18917_SHARP_, p2__18918_SHARP_.call(null));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__18937__1 = function(x) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__18919_SHARP_, p2__18920_SHARP_) {
                return cljs.core.conj.call(null, p1__18919_SHARP_, p2__18920_SHARP_.call(null, x));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__18937__2 = function(x, y) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__18921_SHARP_, p2__18922_SHARP_) {
                return cljs.core.conj.call(null, p1__18921_SHARP_, p2__18922_SHARP_.call(null, x, y));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__18937__3 = function(x, y, z) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__18923_SHARP_, p2__18924_SHARP_) {
                return cljs.core.conj.call(null, p1__18923_SHARP_, p2__18924_SHARP_.call(null, x, y, z));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__18937__4 = function() {
            var G__18938__delegate = function(x, y, z, args) {
              return cljs.core.reduce.call(null, function(fs__$1) {
                return function(p1__18925_SHARP_, p2__18926_SHARP_) {
                  return cljs.core.conj.call(null, p1__18925_SHARP_, cljs.core.apply.call(null, p2__18926_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__18938 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__18938__delegate.call(this, x, y, z, args);
            };
            G__18938.cljs$lang$maxFixedArity = 3;
            G__18938.cljs$lang$applyTo = function(arglist__18939) {
              var x = cljs.core.first(arglist__18939);
              arglist__18939 = cljs.core.next(arglist__18939);
              var y = cljs.core.first(arglist__18939);
              arglist__18939 = cljs.core.next(arglist__18939);
              var z = cljs.core.first(arglist__18939);
              var args = cljs.core.rest(arglist__18939);
              return G__18938__delegate(x, y, z, args);
            };
            G__18938.cljs$core$IFn$_invoke$arity$variadic = G__18938__delegate;
            return G__18938;
          }();
          G__18937 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__18937__0.call(this);
              case 1:
                return G__18937__1.call(this, x);
              case 2:
                return G__18937__2.call(this, x, y);
              case 3:
                return G__18937__3.call(this, x, y, z);
              default:
                return G__18937__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__18937.cljs$lang$maxFixedArity = 3;
          G__18937.cljs$lang$applyTo = G__18937__4.cljs$lang$applyTo;
          G__18937.cljs$core$IFn$_invoke$arity$0 = G__18937__0;
          G__18937.cljs$core$IFn$_invoke$arity$1 = G__18937__1;
          G__18937.cljs$core$IFn$_invoke$arity$2 = G__18937__2;
          G__18937.cljs$core$IFn$_invoke$arity$3 = G__18937__3;
          G__18937.cljs$core$IFn$_invoke$arity$variadic = G__18937__4.cljs$core$IFn$_invoke$arity$variadic;
          return G__18937;
        }();
      }(fs__$1);
    };
    var G__18936 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__18936__delegate.call(this, f, g, h, fs);
    };
    G__18936.cljs$lang$maxFixedArity = 3;
    G__18936.cljs$lang$applyTo = function(arglist__18940) {
      var f = cljs.core.first(arglist__18940);
      arglist__18940 = cljs.core.next(arglist__18940);
      var g = cljs.core.first(arglist__18940);
      arglist__18940 = cljs.core.next(arglist__18940);
      var h = cljs.core.first(arglist__18940);
      var fs = cljs.core.rest(arglist__18940);
      return G__18936__delegate(f, g, h, fs);
    };
    G__18936.cljs$core$IFn$_invoke$arity$variadic = G__18936__delegate;
    return G__18936;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll)) {
        var G__18941 = cljs.core.next.call(null, coll);
        coll = G__18941;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll) && n > 0) {
        var G__18942 = n - 1;
        var G__18943 = cljs.core.next.call(null, coll);
        n = G__18942;
        coll = G__18943;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
      if (cljs.core.count.call(null, matches) === 1) {
        return cljs.core.first.call(null, matches);
      } else {
        return cljs.core.vec.call(null, matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count.call(null, matches) === 1) {
        return cljs.core.first.call(null, matches);
      } else {
        return cljs.core.vec.call(null, matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__18945 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
    var _ = cljs.core.nth.call(null, vec__18945, 0, null);
    var flags = cljs.core.nth.call(null, vec__18945, 1, null);
    var pattern = cljs.core.nth.call(null, vec__18945, 2, null);
    return new RegExp(pattern, flags);
  }
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_18947 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write.call(null, writer, "#");
    } else {
      cljs.core._write.call(null, writer, begin);
      if (cljs.core.seq.call(null, coll)) {
        print_one.call(null, cljs.core.first.call(null, coll), writer, opts);
      } else {
      }
      var coll_18948__$1 = cljs.core.next.call(null, coll);
      var n_18949 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
      while (true) {
        if (coll_18948__$1 && (n_18949 == null || !(n_18949 === 0))) {
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, cljs.core.first.call(null, coll_18948__$1), writer, opts);
          var G__18950 = cljs.core.next.call(null, coll_18948__$1);
          var G__18951 = n_18949 - 1;
          coll_18948__$1 = G__18950;
          n_18949 = G__18951;
          continue;
        } else {
          if (cljs.core.seq.call(null, coll_18948__$1) && n_18949 === 0) {
            cljs.core._write.call(null, writer, sep);
            cljs.core._write.call(null, writer, "...");
          } else {
          }
        }
        break;
      }
      return cljs.core._write.call(null, writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_18947;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__18956 = cljs.core.seq.call(null, ss);
    var chunk__18957 = null;
    var count__18958 = 0;
    var i__18959 = 0;
    while (true) {
      if (i__18959 < count__18958) {
        var s = cljs.core._nth.call(null, chunk__18957, i__18959);
        cljs.core._write.call(null, writer, s);
        var G__18960 = seq__18956;
        var G__18961 = chunk__18957;
        var G__18962 = count__18958;
        var G__18963 = i__18959 + 1;
        seq__18956 = G__18960;
        chunk__18957 = G__18961;
        count__18958 = G__18962;
        i__18959 = G__18963;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__18956);
        if (temp__4126__auto__) {
          var seq__18956__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__18956__$1)) {
            var c__4543__auto__ = cljs.core.chunk_first.call(null, seq__18956__$1);
            var G__18964 = cljs.core.chunk_rest.call(null, seq__18956__$1);
            var G__18965 = c__4543__auto__;
            var G__18966 = cljs.core.count.call(null, c__4543__auto__);
            var G__18967 = 0;
            seq__18956 = G__18964;
            chunk__18957 = G__18965;
            count__18958 = G__18966;
            i__18959 = G__18967;
            continue;
          } else {
            var s = cljs.core.first.call(null, seq__18956__$1);
            cljs.core._write.call(null, writer, s);
            var G__18968 = cljs.core.next.call(null, seq__18956__$1);
            var G__18969 = null;
            var G__18970 = 0;
            var G__18971 = 0;
            seq__18956 = G__18968;
            chunk__18957 = G__18969;
            count__18958 = G__18970;
            i__18959 = G__18971;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__18972) {
    var writer = cljs.core.first(arglist__18972);
    var ss = cljs.core.rest(arglist__18972);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj18974 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj18974;
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write.call(null, writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__3749__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__3749__auto__)) {
          var and__3749__auto____$1 = function() {
            var G__18980 = obj;
            if (G__18980) {
              var bit__4437__auto__ = G__18980.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4437__auto__ || G__18980.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__18980.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__18980);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__18980);
            }
          }();
          if (and__3749__auto____$1) {
            return cljs.core.meta.call(null, obj);
          } else {
            return and__3749__auto____$1;
          }
        } else {
          return and__3749__auto__;
        }
      }())) {
        cljs.core._write.call(null, writer, "^");
        pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
        cljs.core._write.call(null, writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write.call(null, writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__18981 = obj;
            if (G__18981) {
              var bit__4430__auto__ = G__18981.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4430__auto__ || G__18981.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._pr_writer.call(null, obj, writer, opts);
          } else {
            if (cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
              return cljs.core._write.call(null, writer, [cljs.core.str(obj)].join(""));
            } else {
              if (cljs.core.object_QMARK_.call(null, obj)) {
                cljs.core._write.call(null, writer, "#js ");
                return cljs.core.print_map.call(null, cljs.core.map.call(null, function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), obj[k]], null);
                }, cljs.core.js_keys.call(null, obj)), pr_writer, writer, opts);
              } else {
                if (obj instanceof Array) {
                  return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (goog.isString(obj)) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj));
                    } else {
                      return cljs.core._write.call(null, writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_.call(null, obj)) {
                      return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e");
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while (true) {
                            if (cljs.core.count.call(null, ns) < len) {
                              var G__18983 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__18983;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.call(null, writer, '#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"');
                      } else {
                        if (cljs.core.regexp_QMARK_.call(null, obj)) {
                          return cljs.core.write_all.call(null, writer, '#"', obj.source, '"');
                        } else {
                          if (function() {
                            var G__18982 = obj;
                            if (G__18982) {
                              var bit__4437__auto__ = G__18982.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4437__auto__ || G__18982.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__18982.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__18982);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__18982);
                            }
                          }()) {
                            return cljs.core._pr_writer.call(null, obj, writer, opts);
                          } else {
                            return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e");
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__18988 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__18989 = null;
  var count__18990 = 0;
  var i__18991 = 0;
  while (true) {
    if (i__18991 < count__18990) {
      var obj = cljs.core._nth.call(null, chunk__18989, i__18991);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__18992 = seq__18988;
      var G__18993 = chunk__18989;
      var G__18994 = count__18990;
      var G__18995 = i__18991 + 1;
      seq__18988 = G__18992;
      chunk__18989 = G__18993;
      count__18990 = G__18994;
      i__18991 = G__18995;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__18988);
      if (temp__4126__auto__) {
        var seq__18988__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__18988__$1)) {
          var c__4543__auto__ = cljs.core.chunk_first.call(null, seq__18988__$1);
          var G__18996 = cljs.core.chunk_rest.call(null, seq__18988__$1);
          var G__18997 = c__4543__auto__;
          var G__18998 = cljs.core.count.call(null, c__4543__auto__);
          var G__18999 = 0;
          seq__18988 = G__18996;
          chunk__18989 = G__18997;
          count__18990 = G__18998;
          i__18991 = G__18999;
          continue;
        } else {
          var obj = cljs.core.first.call(null, seq__18988__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__19000 = cljs.core.next.call(null, seq__18988__$1);
          var G__19001 = null;
          var G__19002 = 0;
          var G__19003 = 0;
          seq__18988 = G__19000;
          chunk__18989 = G__19001;
          count__18990 = G__19002;
          i__18991 = G__19003;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts.call(null, objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if (cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush.call(null);
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__19004) {
    var objs = cljs.core.seq(arglist__19004);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__19005) {
    var objs = cljs.core.seq(arglist__19005);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__19006) {
    var objs = cljs.core.seq(arglist__19006);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__19007) {
    var objs = cljs.core.seq(arglist__19007);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__19008) {
    var objs = cljs.core.seq(arglist__19008);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__19009) {
    var objs = cljs.core.seq(arglist__19009);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__19010) {
    var objs = cljs.core.seq(arglist__19010);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__19011) {
    var objs = cljs.core.seq(arglist__19011);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, function(e, w, opts__$1) {
    print_one.call(null, cljs.core.key.call(null, e), w, opts__$1);
    cljs.core._write.call(null, w, " ");
    return print_one.call(null, cljs.core.val.call(null, e), w, opts__$1);
  }, "{", ", ", "}", opts, cljs.core.seq.call(null, m));
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, a__$1.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__19012) {
    var iref = cljs.core.first(arglist__19012);
    arglist__19012 = cljs.core.next(arglist__19012);
    var f = cljs.core.first(arglist__19012);
    var args = cljs.core.rest(arglist__19012);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f);
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key);
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0);
    } else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not.call(null, self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function __GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d);
};
cljs.core.preserving_reduced = function preserving_reduced(rf) {
  return function(p1__19013_SHARP_, p2__19014_SHARP_) {
    var ret = rf.call(null, p1__19013_SHARP_, p2__19014_SHARP_);
    if (cljs.core.reduced_QMARK_.call(null, ret)) {
      return cljs.core.reduced.call(null, ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cat(rf) {
  var rf1 = cljs.core.preserving_reduced.call(null, rf);
  return function(rf1) {
    return function() {
      var G__19015 = null;
      var G__19015__0 = function() {
        return rf.call(null);
      };
      var G__19015__1 = function(result) {
        return rf.call(null, result);
      };
      var G__19015__2 = function(result, input) {
        return cljs.core.reduce.call(null, rf1, result, input);
      };
      G__19015 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__19015__0.call(this);
          case 1:
            return G__19015__1.call(this, result);
          case 2:
            return G__19015__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__19015.cljs$core$IFn$_invoke$arity$0 = G__19015__0;
      G__19015.cljs$core$IFn$_invoke$arity$1 = G__19015__1;
      G__19015.cljs$core$IFn$_invoke$arity$2 = G__19015__2;
      return G__19015;
    }();
  }(rf1);
};
cljs.core.dedupe = function() {
  var dedupe = null;
  var dedupe__0 = function() {
    return function(rf) {
      var pa = cljs.core.atom.call(null, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(pa) {
        return function() {
          var G__19016 = null;
          var G__19016__0 = function() {
            return rf.call(null);
          };
          var G__19016__1 = function(result) {
            return rf.call(null, result);
          };
          var G__19016__2 = function(result, input) {
            var prior = cljs.core.deref.call(null, pa);
            cljs.core.reset_BANG_.call(null, pa, input);
            if (cljs.core._EQ_.call(null, prior, input)) {
              return result;
            } else {
              return rf.call(null, result, input);
            }
          };
          G__19016 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__19016__0.call(this);
              case 1:
                return G__19016__1.call(this, result);
              case 2:
                return G__19016__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19016.cljs$core$IFn$_invoke$arity$0 = G__19016__0;
          G__19016.cljs$core$IFn$_invoke$arity$1 = G__19016__1;
          G__19016.cljs$core$IFn$_invoke$arity$2 = G__19016__2;
          return G__19016;
        }();
      }(pa);
    };
  };
  var dedupe__1 = function(coll) {
    return cljs.core.sequence.call(null, dedupe.call(null), coll);
  };
  dedupe = function(coll) {
    switch(arguments.length) {
      case 0:
        return dedupe__0.call(this);
      case 1:
        return dedupe__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
  dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
  return dedupe;
}();
cljs.core.random_sample = function() {
  var random_sample = null;
  var random_sample__1 = function(prob) {
    return cljs.core.filter.call(null, function(_) {
      return cljs.core.rand.call(null) < prob;
    });
  };
  var random_sample__2 = function(prob, coll) {
    return cljs.core.filter.call(null, function(_) {
      return cljs.core.rand.call(null) < prob;
    }, coll);
  };
  random_sample = function(prob, coll) {
    switch(arguments.length) {
      case 1:
        return random_sample__1.call(this, prob);
      case 2:
        return random_sample__2.call(this, prob, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
  random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
  return random_sample;
}();
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.call(null, self__.xform, f, init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq.call(null, cljs.core.sequence.call(null, self__.xform, self__.coll));
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function __GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4734__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4734__auto__);
};
cljs.core.eduction = function eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.run_BANG_ = function run_BANG_(proc, coll) {
  return cljs.core.reduce.call(null, function(p1__19018_SHARP_, p2__19017_SHARP_) {
    return proc.call(null, p2__19017_SHARP_);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj19020 = {};
  return obj19020;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3749__auto__ = x;
    if (and__3749__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4400__auto__ = x == null ? null : x;
    return function() {
      var or__3761__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3749__auto__ = x;
    if (and__3749__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4400__auto__ = x == null ? null : x;
    return function() {
      var or__3761__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__19022 = k;
    if (G__19022) {
      var bit__4437__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3761__auto__ = bit__4437__auto__;
        if (cljs.core.truth_(or__3761__auto__)) {
          return or__3761__auto__;
        } else {
          return G__19022.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__19022.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__19022);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__19022);
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.call(null, k);
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__19036 = x;
      if (G__19036) {
        var bit__4437__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3761__auto__ = bit__4437__auto__;
          if (cljs.core.truth_(or__3761__auto__)) {
            return or__3761__auto__;
          } else {
            return G__19036.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__19036.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__19036);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__19036);
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_.call(null, x)) {
            var m = function() {
              var obj19038 = {};
              return obj19038;
            }();
            var seq__19039_19049 = cljs.core.seq.call(null, x);
            var chunk__19040_19050 = null;
            var count__19041_19051 = 0;
            var i__19042_19052 = 0;
            while (true) {
              if (i__19042_19052 < count__19041_19051) {
                var vec__19043_19053 = cljs.core._nth.call(null, chunk__19040_19050, i__19042_19052);
                var k_19054 = cljs.core.nth.call(null, vec__19043_19053, 0, null);
                var v_19055 = cljs.core.nth.call(null, vec__19043_19053, 1, null);
                m[cljs.core.key__GT_js.call(null, k_19054)] = clj__GT_js.call(null, v_19055);
                var G__19056 = seq__19039_19049;
                var G__19057 = chunk__19040_19050;
                var G__19058 = count__19041_19051;
                var G__19059 = i__19042_19052 + 1;
                seq__19039_19049 = G__19056;
                chunk__19040_19050 = G__19057;
                count__19041_19051 = G__19058;
                i__19042_19052 = G__19059;
                continue;
              } else {
                var temp__4126__auto___19060 = cljs.core.seq.call(null, seq__19039_19049);
                if (temp__4126__auto___19060) {
                  var seq__19039_19061__$1 = temp__4126__auto___19060;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__19039_19061__$1)) {
                    var c__4543__auto___19062 = cljs.core.chunk_first.call(null, seq__19039_19061__$1);
                    var G__19063 = cljs.core.chunk_rest.call(null, seq__19039_19061__$1);
                    var G__19064 = c__4543__auto___19062;
                    var G__19065 = cljs.core.count.call(null, c__4543__auto___19062);
                    var G__19066 = 0;
                    seq__19039_19049 = G__19063;
                    chunk__19040_19050 = G__19064;
                    count__19041_19051 = G__19065;
                    i__19042_19052 = G__19066;
                    continue;
                  } else {
                    var vec__19044_19067 = cljs.core.first.call(null, seq__19039_19061__$1);
                    var k_19068 = cljs.core.nth.call(null, vec__19044_19067, 0, null);
                    var v_19069 = cljs.core.nth.call(null, vec__19044_19067, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_19068)] = clj__GT_js.call(null, v_19069);
                    var G__19070 = cljs.core.next.call(null, seq__19039_19061__$1);
                    var G__19071 = null;
                    var G__19072 = 0;
                    var G__19073 = 0;
                    seq__19039_19049 = G__19070;
                    chunk__19040_19050 = G__19071;
                    count__19041_19051 = G__19072;
                    i__19042_19052 = G__19073;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_.call(null, x)) {
              var arr = [];
              var seq__19045_19074 = cljs.core.seq.call(null, cljs.core.map.call(null, clj__GT_js, x));
              var chunk__19046_19075 = null;
              var count__19047_19076 = 0;
              var i__19048_19077 = 0;
              while (true) {
                if (i__19048_19077 < count__19047_19076) {
                  var x_19078__$1 = cljs.core._nth.call(null, chunk__19046_19075, i__19048_19077);
                  arr.push(x_19078__$1);
                  var G__19079 = seq__19045_19074;
                  var G__19080 = chunk__19046_19075;
                  var G__19081 = count__19047_19076;
                  var G__19082 = i__19048_19077 + 1;
                  seq__19045_19074 = G__19079;
                  chunk__19046_19075 = G__19080;
                  count__19047_19076 = G__19081;
                  i__19048_19077 = G__19082;
                  continue;
                } else {
                  var temp__4126__auto___19083 = cljs.core.seq.call(null, seq__19045_19074);
                  if (temp__4126__auto___19083) {
                    var seq__19045_19084__$1 = temp__4126__auto___19083;
                    if (cljs.core.chunked_seq_QMARK_.call(null, seq__19045_19084__$1)) {
                      var c__4543__auto___19085 = cljs.core.chunk_first.call(null, seq__19045_19084__$1);
                      var G__19086 = cljs.core.chunk_rest.call(null, seq__19045_19084__$1);
                      var G__19087 = c__4543__auto___19085;
                      var G__19088 = cljs.core.count.call(null, c__4543__auto___19085);
                      var G__19089 = 0;
                      seq__19045_19074 = G__19086;
                      chunk__19046_19075 = G__19087;
                      count__19047_19076 = G__19088;
                      i__19048_19077 = G__19089;
                      continue;
                    } else {
                      var x_19090__$1 = cljs.core.first.call(null, seq__19045_19084__$1);
                      arr.push(x_19090__$1);
                      var G__19091 = cljs.core.next.call(null, seq__19045_19084__$1);
                      var G__19092 = null;
                      var G__19093 = 0;
                      var G__19094 = 0;
                      seq__19045_19074 = G__19091;
                      chunk__19046_19075 = G__19092;
                      count__19047_19076 = G__19093;
                      i__19048_19077 = G__19094;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj19096 = {};
  return obj19096;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3749__auto__ = x;
    if (and__3749__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4400__auto__ = x == null ? null : x;
    return function() {
      var or__3761__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null));
  };
  var js__GT_clj__2 = function() {
    var G__19119__delegate = function(x, opts) {
      var map__19108 = opts;
      var map__19108__$1 = cljs.core.seq_QMARK_.call(null, map__19108) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19108) : map__19108;
      var keywordize_keys = cljs.core.get.call(null, map__19108__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
      var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
      var f = function(map__19108, map__19108__$1, keywordize_keys, keyfn) {
        return function thisfn(x__$1) {
          if (function() {
            var G__19114 = x__$1;
            if (G__19114) {
              var bit__4437__auto__ = null;
              if (cljs.core.truth_(function() {
                var or__3761__auto__ = bit__4437__auto__;
                if (cljs.core.truth_(or__3761__auto__)) {
                  return or__3761__auto__;
                } else {
                  return G__19114.cljs$core$IEncodeClojure$;
                }
              }())) {
                return true;
              } else {
                if (!G__19114.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__19114);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__19114);
            }
          }()) {
            return cljs.core._js__GT_clj.call(null, x__$1, cljs.core.apply.call(null, cljs.core.array_map, opts));
          } else {
            if (cljs.core.seq_QMARK_.call(null, x__$1)) {
              return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1));
            } else {
              if (cljs.core.coll_QMARK_.call(null, x__$1)) {
                return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1));
              } else {
                if (x__$1 instanceof Array) {
                  return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1));
                } else {
                  if (cljs.core.type.call(null, x__$1) === Object) {
                    return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                      var iter__4512__auto__ = function(map__19108, map__19108__$1, keywordize_keys, keyfn) {
                        return function iter__19115(s__19116) {
                          return new cljs.core.LazySeq(null, function(map__19108, map__19108__$1, keywordize_keys, keyfn) {
                            return function() {
                              var s__19116__$1 = s__19116;
                              while (true) {
                                var temp__4126__auto__ = cljs.core.seq.call(null, s__19116__$1);
                                if (temp__4126__auto__) {
                                  var s__19116__$2 = temp__4126__auto__;
                                  if (cljs.core.chunked_seq_QMARK_.call(null, s__19116__$2)) {
                                    var c__4510__auto__ = cljs.core.chunk_first.call(null, s__19116__$2);
                                    var size__4511__auto__ = cljs.core.count.call(null, c__4510__auto__);
                                    var b__19118 = cljs.core.chunk_buffer.call(null, size__4511__auto__);
                                    if (function() {
                                      var i__19117 = 0;
                                      while (true) {
                                        if (i__19117 < size__4511__auto__) {
                                          var k = cljs.core._nth.call(null, c__4510__auto__, i__19117);
                                          cljs.core.chunk_append.call(null, b__19118, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null));
                                          var G__19120 = i__19117 + 1;
                                          i__19117 = G__19120;
                                          continue;
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19118), iter__19115.call(null, cljs.core.chunk_rest.call(null, s__19116__$2)));
                                    } else {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19118), null);
                                    }
                                  } else {
                                    var k = cljs.core.first.call(null, s__19116__$2);
                                    return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null), iter__19115.call(null, cljs.core.rest.call(null, s__19116__$2)));
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(map__19108, map__19108__$1, keywordize_keys, keyfn), null, null);
                        };
                      }(map__19108, map__19108__$1, keywordize_keys, keyfn);
                      return iter__4512__auto__.call(null, cljs.core.js_keys.call(null, x__$1));
                    }());
                  } else {
                    return x__$1;
                  }
                }
              }
            }
          }
        };
      }(map__19108, map__19108__$1, keywordize_keys, keyfn);
      return f.call(null, x);
    };
    var G__19119 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__19119__delegate.call(this, x, opts);
    };
    G__19119.cljs$lang$maxFixedArity = 1;
    G__19119.cljs$lang$applyTo = function(arglist__19121) {
      var x = cljs.core.first(arglist__19121);
      var opts = cljs.core.rest(arglist__19121);
      return G__19119__delegate(x, opts);
    };
    G__19119.cljs$core$IFn$_invoke$arity$variadic = G__19119__delegate;
    return G__19119;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(mem) {
    return function() {
      var G__19122__delegate = function(args) {
        var v = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.call(null, f, args);
          cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__19122 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__19122__delegate.call(this, args);
      };
      G__19122.cljs$lang$maxFixedArity = 0;
      G__19122.cljs$lang$applyTo = function(arglist__19123) {
        var args = cljs.core.seq(arglist__19123);
        return G__19122__delegate(args);
      };
      G__19122.cljs$core$IFn$_invoke$arity$variadic = G__19122__delegate;
      return G__19122;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = f.call(null);
      if (cljs.core.fn_QMARK_.call(null, ret)) {
        var G__19124 = ret;
        f = G__19124;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__19125__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args);
      });
    };
    var G__19125 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__19125__delegate.call(this, f, args);
    };
    G__19125.cljs$lang$maxFixedArity = 1;
    G__19125.cljs$lang$applyTo = function(arglist__19126) {
      var f = cljs.core.first(arglist__19126);
      var args = cljs.core.rest(arglist__19126);
      return G__19125__delegate(f, args);
    };
    G__19125.cljs$core$IFn$_invoke$arity$variadic = G__19125__delegate;
    return G__19125;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1);
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc_BANG_.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__19127) {
    var f = cljs.core.first(arglist__19127);
    var args = cljs.core.rest(arglist__19127);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3761__auto__ = cljs.core._EQ_.call(null, child, parent);
    if (or__3761__auto__) {
      return or__3761__auto__;
    } else {
      var or__3761__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3761__auto____$1) {
        return or__3761__auto____$1;
      } else {
        var and__3749__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if (and__3749__auto__) {
          var and__3749__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if (and__3749__auto____$1) {
            var and__3749__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if (and__3749__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count.call(null, parent)) {
                  return ret;
                } else {
                  var G__19128 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__19129 = i + 1;
                  ret = G__19128;
                  i = G__19129;
                  continue;
                }
                break;
              }
            } else {
              return and__3749__auto____$2;
            }
          } else {
            return and__3749__auto____$1;
          }
        } else {
          return and__3749__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.call(null, tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))));
          };
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)));
      };
    }(tp, td, ta);
    var or__3761__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3761__auto__)) {
      return or__3761__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__19130_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__19130_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__19130_SHARP_), cljs.core.second.call(null, p1__19130_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if (cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__19131_SHARP_, p2__19132_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.derive, p1__19131_SHARP_, p2__19132_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3761__auto__ = cljs.core.truth_(function() {
    var and__3749__auto__ = xprefs;
    if (cljs.core.truth_(and__3749__auto__)) {
      return xprefs.call(null, y);
    } else {
      return and__3749__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3761__auto__)) {
    return or__3761__auto__;
  } else {
    var or__3761__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while (true) {
        if (cljs.core.count.call(null, ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          } else {
          }
          var G__19133 = cljs.core.rest.call(null, ps);
          ps = G__19133;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3761__auto____$1)) {
      return or__3761__auto____$1;
    } else {
      var or__3761__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while (true) {
          if (cljs.core.count.call(null, ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            } else {
            }
            var G__19134 = cljs.core.rest.call(null, ps);
            ps = G__19134;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3761__auto____$2)) {
        return or__3761__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3761__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if (cljs.core.truth_(or__3761__auto__)) {
    return or__3761__auto__;
  } else {
    return cljs.core.isa_QMARK_.call(null, x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__19137) {
    var vec__19138 = p__19137;
    var k = cljs.core.nth.call(null, vec__19138, 0, null);
    var _ = cljs.core.nth.call(null, vec__19138, 1, null);
    var e = vec__19138;
    if (cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3761__auto__ = be == null;
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry);
    } else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj19140 = {};
  return obj19140;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3749__auto__ = mf;
    if (and__3749__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4400__auto__ = mf == null ? null : mf;
    return function() {
      var or__3761__auto__ = cljs.core._reset[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._reset["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3749__auto__ = mf;
    if (and__3749__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4400__auto__ = mf == null ? null : mf;
    return function() {
      var or__3761__auto__ = cljs.core._add_method[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._add_method["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3749__auto__ = mf;
    if (and__3749__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4400__auto__ = mf == null ? null : mf;
    return function() {
      var or__3761__auto__ = cljs.core._remove_method[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._remove_method["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3749__auto__ = mf;
    if (and__3749__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4400__auto__ = mf == null ? null : mf;
    return function() {
      var or__3761__auto__ = cljs.core._prefer_method[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3749__auto__ = mf;
    if (and__3749__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4400__auto__ = mf == null ? null : mf;
    return function() {
      var or__3761__auto__ = cljs.core._get_method[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._get_method["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3749__auto__ = mf;
    if (and__3749__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4400__auto__ = mf == null ? null : mf;
    return function() {
      var or__3761__auto__ = cljs.core._methods[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._methods["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3749__auto__ = mf;
    if (and__3749__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4400__auto__ = mf == null ? null : mf;
    return function() {
      var or__3761__auto__ = cljs.core._prefers[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core._prefers["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name.call(null, self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace.call(null, self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__19142 = null;
  var G__19142__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null);
  };
  var G__19142__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a);
  };
  var G__19142__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b);
  };
  var G__19142__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c);
  };
  var G__19142__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d);
  };
  var G__19142__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e);
  };
  var G__19142__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f);
  };
  var G__19142__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__19142__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__19142__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__19142__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__19142__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__19142__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__19142__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__19142__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__19142__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__19142__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__19142__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__19142__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__19142__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__19142__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__19142__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__19142 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__19142__1.call(this, self__);
      case 2:
        return G__19142__2.call(this, self__, a);
      case 3:
        return G__19142__3.call(this, self__, a, b);
      case 4:
        return G__19142__4.call(this, self__, a, b, c);
      case 5:
        return G__19142__5.call(this, self__, a, b, c, d);
      case 6:
        return G__19142__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__19142__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__19142__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__19142__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__19142__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__19142__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__19142__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__19142__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__19142__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__19142__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__19142__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__19142__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__19142__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__19142__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__19142__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__19142__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__19142__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19142.cljs$core$IFn$_invoke$arity$1 = G__19142__1;
  G__19142.cljs$core$IFn$_invoke$arity$2 = G__19142__2;
  G__19142.cljs$core$IFn$_invoke$arity$3 = G__19142__3;
  G__19142.cljs$core$IFn$_invoke$arity$4 = G__19142__4;
  G__19142.cljs$core$IFn$_invoke$arity$5 = G__19142__5;
  G__19142.cljs$core$IFn$_invoke$arity$6 = G__19142__6;
  G__19142.cljs$core$IFn$_invoke$arity$7 = G__19142__7;
  G__19142.cljs$core$IFn$_invoke$arity$8 = G__19142__8;
  G__19142.cljs$core$IFn$_invoke$arity$9 = G__19142__9;
  G__19142.cljs$core$IFn$_invoke$arity$10 = G__19142__10;
  G__19142.cljs$core$IFn$_invoke$arity$11 = G__19142__11;
  G__19142.cljs$core$IFn$_invoke$arity$12 = G__19142__12;
  G__19142.cljs$core$IFn$_invoke$arity$13 = G__19142__13;
  G__19142.cljs$core$IFn$_invoke$arity$14 = G__19142__14;
  G__19142.cljs$core$IFn$_invoke$arity$15 = G__19142__15;
  G__19142.cljs$core$IFn$_invoke$arity$16 = G__19142__16;
  G__19142.cljs$core$IFn$_invoke$arity$17 = G__19142__17;
  G__19142.cljs$core$IFn$_invoke$arity$18 = G__19142__18;
  G__19142.cljs$core$IFn$_invoke$arity$19 = G__19142__19;
  G__19142.cljs$core$IFn$_invoke$arity$20 = G__19142__20;
  G__19142.cljs$core$IFn$_invoke$arity$21 = G__19142__21;
  G__19142.cljs$core$IFn$_invoke$arity$22 = G__19142__22;
  return G__19142;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args19141) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19141)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1));
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null);
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause);
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.call(null, x, y))) {
      return-1;
    } else {
      if (cljs.core.truth_(pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, 
  "letfn*", "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, 
  null), null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
goog.provide("goog.history.EventType");
goog.history.EventType = {NAVIGATE:"navigate"};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose = goog.abstractMethod;
goog.disposable.IDisposable.prototype.isDisposed = goog.abstractMethod;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.provide("goog.disposeAll");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
    if (goog.Disposable.INCLUDE_STACK_ON_CREATION) {
      this.creationStack = (new Error).stack;
    }
    goog.Disposable.instances_[goog.getUid(this)] = this;
  }
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.define("goog.Disposable.MONITORING_MODE", 0);
goog.define("goog.Disposable.INCLUDE_STACK_ON_CREATION", true);
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for (var id in goog.Disposable.instances_) {
    if (goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)]);
    }
  }
  return ret;
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {};
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.creationStack;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_;
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if (!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
      var uid = goog.getUid(this);
      if (goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid];
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable));
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if (!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = [];
  }
  this.onDisposeCallbacks_.push(goog.isDef(opt_scope) ? goog.bind(callback, opt_scope) : callback);
};
goog.Disposable.prototype.disposeInternal = function() {
  if (this.onDisposeCallbacks_) {
    while (this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()();
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  if (obj && typeof obj.isDisposed == "function") {
    return obj.isDisposed();
  }
  return false;
};
goog.dispose = function(obj) {
  if (obj && typeof obj.dispose == "function") {
    obj.dispose();
  }
};
goog.disposeAll = function(var_args) {
  for (var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if (goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable);
    } else {
      goog.dispose(disposable);
    }
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera") || goog.labs.userAgent.util.matchUserAgent("OPR");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS") && !goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return goog.labs.userAgent.browser.getOperaVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.labs.userAgent.browser.getOperaVersion_ = function(userAgent) {
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgent);
  var lastTuple = goog.array.peek(versionTuples);
  if (lastTuple[0] == "OPR" && lastTuple[1]) {
    return lastTuple[1];
  }
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.getVersionFromTuples_ = function(versionTuples) {
  goog.asserts.assert(versionTuples.length > 2, "Couldn't extract version tuple from user agent string");
  return versionTuples[2] && versionTuples[2][1] ? versionTuples[2][1] : "";
};
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit");
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = tuples[1];
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.provide("goog.userAgent");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.define("goog.userAgent.ASSUME_IE", false);
goog.define("goog.userAgent.ASSUME_GECKO", false);
goog.define("goog.userAgent.ASSUME_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_MOBILE_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_OPERA", false);
goog.define("goog.userAgent.ASSUME_ANY_VERSION", false);
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"] || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.define("goog.userAgent.ASSUME_MAC", false);
goog.define("goog.userAgent.ASSUME_WINDOWS", false);
goog.define("goog.userAgent.ASSUME_LINUX", false);
goog.define("goog.userAgent.ASSUME_X11", false);
goog.define("goog.userAgent.ASSUME_ANDROID", false);
goog.define("goog.userAgent.ASSUME_IPHONE", false);
goog.define("goog.userAgent.ASSUME_IPAD", false);
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
  var ua = goog.userAgent.getUserAgentString();
  goog.userAgent.detectedAndroid_ = !!ua && goog.string.contains(ua, "Android");
  goog.userAgent.detectedIPhone_ = !!ua && goog.string.contains(ua, "iPhone");
  goog.userAgent.detectedIPad_ = !!ua && goog.string.contains(ua, "iPad");
};
if (!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_();
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.userAgent.detectedAndroid_;
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.userAgent.detectedIPhone_;
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.userAgent.detectedIPad_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    return goog.isFunction(operaVersion) ? operaVersion() : operaVersion;
  }
  if (goog.userAgent.GECKO) {
    re = /rv\:([^\);]+)(\)|;)/;
  } else {
    if (goog.userAgent.IE) {
      re = /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/;
    } else {
      if (goog.userAgent.WEBKIT) {
        re = /WebKit\/(\S+)/;
      }
    }
  }
  if (re) {
    var arr = re.exec(goog.userAgent.getUserAgentString());
    version = arr ? arr[1] : "";
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionOrHigherCache_[version] || (goog.userAgent.isVersionOrHigherCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0);
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return goog.userAgent.IE && goog.userAgent.DOCUMENT_MODE >= documentMode;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  var mode = goog.userAgent.getDocumentMode_();
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersionOrHigher("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9b") || goog.userAgent.IE && 
goog.userAgent.isVersionOrHigher("8") || goog.userAgent.OPERA && goog.userAgent.isVersionOrHigher("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersionOrHigher("528"), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher("8") || goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || !!(goog.global["document"] && document.documentElement && "ontouchstart" in document.documentElement) || !!(goog.global["navigator"] && 
goog.global["navigator"]["msMaxTouchPoints"])};
goog.provide("goog.events.EventId");
goog.events.EventId = function(eventId) {
  this.id = eventId;
};
goog.events.EventId.prototype.toString = function() {
  return this.id;
};
goog.provide("goog.events.Event");
goog.provide("goog.events.EventLike");
goog.require("goog.Disposable");
goog.require("goog.events.EventId");
goog.events.EventLike;
goog.events.Event = function(type, opt_target) {
  this.type = type instanceof goog.events.EventId ? String(type) : type;
  this.target = opt_target;
  this.currentTarget = this.target;
  this.propagationStopped_ = false;
  this.defaultPrevented = false;
  this.returnValue_ = true;
};
goog.events.Event.prototype.disposeInternal = function() {
};
goog.events.Event.prototype.dispose = function() {
};
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true;
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false;
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation();
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault();
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.getVendorPrefixedName_ = function(eventName) {
  return goog.userAgent.WEBKIT ? "webkit" + eventName : goog.userAgent.OPERA ? "o" + eventName.toLowerCase() : eventName.toLowerCase();
};
goog.events.EventType = {CLICK:"click", RIGHTCLICK:"rightclick", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", MOUSEENTER:"mouseenter", MOUSELEAVE:"mouseleave", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", 
SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONSOLEMESSAGE:"consolemessage", CONTEXTMENU:"contextmenu", DOMCONTENTLOADED:"DOMContentLoaded", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", 
ORIENTATIONCHANGE:"orientationchange", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", ANIMATIONSTART:goog.events.getVendorPrefixedName_("AnimationStart"), ANIMATIONEND:goog.events.getVendorPrefixedName_("AnimationEnd"), 
ANIMATIONITERATION:goog.events.getVendorPrefixedName_("AnimationIteration"), TRANSITIONEND:goog.events.getVendorPrefixedName_("TransitionEnd"), POINTERDOWN:"pointerdown", POINTERUP:"pointerup", POINTERCANCEL:"pointercancel", POINTERMOVE:"pointermove", POINTEROVER:"pointerover", POINTEROUT:"pointerout", POINTERENTER:"pointerenter", POINTERLEAVE:"pointerleave", GOTPOINTERCAPTURE:"gotpointercapture", LOSTPOINTERCAPTURE:"lostpointercapture", MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", 
MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", MSINERTIASTART:"MSInertiaStart", MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERENTER:"MSPointerEnter", MSPOINTERHOVER:"MSPointerHover", MSPOINTERLEAVE:"MSPointerLeave", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROUT:"MSPointerOut", MSPOINTEROVER:"MSPointerOver", MSPOINTERUP:"MSPointerUp", TEXTINPUT:"textinput", 
COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend", EXIT:"exit", LOADABORT:"loadabort", LOADCOMMIT:"loadcommit", LOADREDIRECT:"loadredirect", LOADSTART:"loadstart", LOADSTOP:"loadstop", RESPONSIVE:"responsive", SIZECHANGED:"sizechanged", UNRESPONSIVE:"unresponsive", VISIBILITYCHANGE:"visibilitychange", STORAGE:"storage", DOMSUBTREEMODIFIED:"DOMSubtreeModified", DOMNODEINSERTED:"DOMNodeInserted", DOMNODEREMOVED:"DOMNodeRemoved", DOMNODEREMOVEDFROMDOCUMENT:"DOMNodeRemovedFromDocument", 
DOMNODEINSERTEDINTODOCUMENT:"DOMNodeInsertedIntoDocument", DOMATTRMODIFIED:"DOMAttrModified", DOMCHARACTERDATAMODIFIED:"DOMCharacterDataModified"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  goog.events.BrowserEvent.base(this, "constructor", opt_e ? opt_e.type : "");
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null;
  this.offsetX = 0;
  this.offsetY = 0;
  this.clientX = 0;
  this.clientY = 0;
  this.screenX = 0;
  this.screenY = 0;
  this.button = 0;
  this.keyCode = 0;
  this.charCode = 0;
  this.ctrlKey = false;
  this.altKey = false;
  this.shiftKey = false;
  this.metaKey = false;
  this.state = null;
  this.platformModifierKey = false;
  this.event_ = null;
  if (opt_e) {
    this.init(opt_e, opt_currentTarget);
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  this.target = (e.target) || e.srcElement;
  this.currentTarget = (opt_currentTarget);
  var relatedTarget = (e.relatedTarget);
  if (relatedTarget) {
    if (goog.userAgent.GECKO) {
      if (!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null;
      }
    }
  } else {
    if (type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement;
    } else {
      if (type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement;
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if (e.defaultPrevented) {
    this.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if (!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if (this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT;
    } else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button]);
    }
  } else {
    return this.event_.button == button;
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey);
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if (this.event_.stopPropagation) {
    this.event_.stopPropagation();
  } else {
    this.event_.cancelBubble = true;
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if (!be.preventDefault) {
    be.returnValue = false;
    if (goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if (be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1;
        }
      } catch (ex) {
      }
    }
  } else {
    be.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_;
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
};
goog.provide("goog.events.Listenable");
goog.provide("goog.events.ListenableKey");
goog.require("goog.events.EventId");
goog.events.Listenable = function() {
};
goog.events.Listenable.IMPLEMENTED_BY_PROP = "closure_listenable_" + (Math.random() * 1E6 | 0);
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP] = true;
};
goog.events.Listenable.isImplementedBy = function(obj) {
  return!!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP]);
};
goog.events.Listenable.prototype.listen;
goog.events.Listenable.prototype.listenOnce;
goog.events.Listenable.prototype.unlisten;
goog.events.Listenable.prototype.unlistenByKey;
goog.events.Listenable.prototype.dispatchEvent;
goog.events.Listenable.prototype.removeAllListeners;
goog.events.Listenable.prototype.getParentEventTarget;
goog.events.Listenable.prototype.fireListeners;
goog.events.Listenable.prototype.getListeners;
goog.events.Listenable.prototype.getListener;
goog.events.Listenable.prototype.hasListener;
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return++goog.events.ListenableKey.counter_;
};
goog.events.ListenableKey.prototype.src;
goog.events.ListenableKey.prototype.type;
goog.events.ListenableKey.prototype.listener;
goog.events.ListenableKey.prototype.capture;
goog.events.ListenableKey.prototype.handler;
goog.events.ListenableKey.prototype.key;
goog.provide("goog.events.Listener");
goog.require("goog.events.ListenableKey");
goog.events.Listener = function(listener, proxy, src, type, capture, opt_handler) {
  if (goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack;
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.key = goog.events.ListenableKey.reserveKey();
  this.callOnce = false;
  this.removed = false;
};
goog.define("goog.events.Listener.ENABLE_MONITORING", false);
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.markAsRemoved = function() {
  this.removed = true;
  this.listener = null;
  this.proxy = null;
  this.src = null;
  this.handler = null;
};
goog.provide("goog.events.ListenerMap");
goog.require("goog.array");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.events.ListenerMap = function(src) {
  this.src = src;
  this.listeners = {};
  this.typeCount_ = 0;
};
goog.events.ListenerMap.prototype.getTypeCount = function() {
  return this.typeCount_;
};
goog.events.ListenerMap.prototype.getListenerCount = function() {
  var count = 0;
  for (var type in this.listeners) {
    count += this.listeners[type].length;
  }
  return count;
};
goog.events.ListenerMap.prototype.add = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  var listenerArray = this.listeners[typeStr];
  if (!listenerArray) {
    listenerArray = this.listeners[typeStr] = [];
    this.typeCount_++;
  }
  var listenerObj;
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    listenerObj = listenerArray[index];
    if (!callOnce) {
      listenerObj.callOnce = false;
    }
  } else {
    listenerObj = new goog.events.Listener(listener, null, this.src, typeStr, !!opt_useCapture, opt_listenerScope);
    listenerObj.callOnce = callOnce;
    listenerArray.push(listenerObj);
  }
  return listenerObj;
};
goog.events.ListenerMap.prototype.remove = function(type, listener, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  if (!(typeStr in this.listeners)) {
    return false;
  }
  var listenerArray = this.listeners[typeStr];
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    var listenerObj = listenerArray[index];
    listenerObj.markAsRemoved();
    goog.array.removeAt(listenerArray, index);
    if (listenerArray.length == 0) {
      delete this.listeners[typeStr];
      this.typeCount_--;
    }
    return true;
  }
  return false;
};
goog.events.ListenerMap.prototype.removeByKey = function(listener) {
  var type = listener.type;
  if (!(type in this.listeners)) {
    return false;
  }
  var removed = goog.array.remove(this.listeners[type], listener);
  if (removed) {
    listener.markAsRemoved();
    if (this.listeners[type].length == 0) {
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return removed;
};
goog.events.ListenerMap.prototype.removeAll = function(opt_type) {
  var typeStr = opt_type && opt_type.toString();
  var count = 0;
  for (var type in this.listeners) {
    if (!typeStr || type == typeStr) {
      var listenerArray = this.listeners[type];
      for (var i = 0;i < listenerArray.length;i++) {
        ++count;
        listenerArray[i].markAsRemoved();
      }
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return count;
};
goog.events.ListenerMap.prototype.getListeners = function(type, capture) {
  var listenerArray = this.listeners[type.toString()];
  var rv = [];
  if (listenerArray) {
    for (var i = 0;i < listenerArray.length;++i) {
      var listenerObj = listenerArray[i];
      if (listenerObj.capture == capture) {
        rv.push(listenerObj);
      }
    }
  }
  return rv;
};
goog.events.ListenerMap.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  var listenerArray = this.listeners[type.toString()];
  var i = -1;
  if (listenerArray) {
    i = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope);
  }
  return i > -1 ? listenerArray[i] : null;
};
goog.events.ListenerMap.prototype.hasListener = function(opt_type, opt_capture) {
  var hasType = goog.isDef(opt_type);
  var typeStr = hasType ? opt_type.toString() : "";
  var hasCapture = goog.isDef(opt_capture);
  return goog.object.some(this.listeners, function(listenerArray, type) {
    for (var i = 0;i < listenerArray.length;++i) {
      if ((!hasType || listenerArray[i].type == typeStr) && (!hasCapture || listenerArray[i].capture == opt_capture)) {
        return true;
      }
    }
    return false;
  });
};
goog.events.ListenerMap.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
  for (var i = 0;i < listenerArray.length;++i) {
    var listenerObj = listenerArray[i];
    if (!listenerObj.removed && listenerObj.listener == listener && listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope) {
      return i;
    }
  }
  return-1;
};
goog.provide("goog.events");
goog.provide("goog.events.CaptureSimulationMode");
goog.provide("goog.events.Key");
goog.provide("goog.events.ListenableType");
goog.require("goog.asserts");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.forwardDeclare("goog.debug.ErrorHandler");
goog.forwardDeclare("goog.events.EventWrapper");
goog.events.Key;
goog.events.ListenableType;
goog.events.LISTENER_MAP_PROP_ = "closure_lm_" + (Math.random() * 1E6 | 0);
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.CaptureSimulationMode = {OFF_AND_FAIL:0, OFF_AND_SILENT:1, ON:2};
goog.define("goog.events.CAPTURE_SIMULATION_MODE", 2);
goog.events.listenerCountEstimate_ = 0;
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listen(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listen((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, false, opt_capt, opt_handler);
  }
};
goog.events.listen_ = function(src, type, listener, callOnce, opt_capt, opt_handler) {
  if (!type) {
    throw Error("Invalid event type");
  }
  var capture = !!opt_capt;
  if (capture && !goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_FAIL) {
      goog.asserts.fail("Can not register capture listener in IE8-.");
      return null;
    } else {
      if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_SILENT) {
        return null;
      }
    }
  }
  var listenerMap = goog.events.getListenerMap_(src);
  if (!listenerMap) {
    src[goog.events.LISTENER_MAP_PROP_] = listenerMap = new goog.events.ListenerMap(src);
  }
  var listenerObj = listenerMap.add(type, listener, callOnce, opt_capt, opt_handler);
  if (listenerObj.proxy) {
    return listenerObj;
  }
  var proxy = goog.events.getProxy();
  listenerObj.proxy = proxy;
  proxy.src = src;
  proxy.listener = listenerObj;
  if (src.addEventListener) {
    src.addEventListener(type.toString(), proxy, capture);
  } else {
    src.attachEvent(goog.events.getOnString_(type.toString()), proxy);
  }
  goog.events.listenerCountEstimate_++;
  return listenerObj;
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject);
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if (!v) {
      return v;
    }
  };
  return f;
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listenOnce((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, true, opt_capt, opt_handler);
  }
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler);
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten((type), listener, opt_capt, opt_handler);
  }
  if (!src) {
    return false;
  }
  var capture = !!opt_capt;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    var listenerObj = listenerMap.getListener((type), listener, capture, opt_handler);
    if (listenerObj) {
      return goog.events.unlistenByKey(listenerObj);
    }
  }
  return false;
};
goog.events.unlistenByKey = function(key) {
  if (goog.isNumber(key)) {
    return false;
  }
  var listener = (key);
  if (!listener || listener.removed) {
    return false;
  }
  var src = listener.src;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlistenByKey(listener);
  }
  var type = listener.type;
  var proxy = listener.proxy;
  if (src.removeEventListener) {
    src.removeEventListener(type, proxy, listener.capture);
  } else {
    if (src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy);
    }
  }
  goog.events.listenerCountEstimate_--;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    listenerMap.removeByKey(listener);
    if (listenerMap.getTypeCount() == 0) {
      listenerMap.src = null;
      src[goog.events.LISTENER_MAP_PROP_] = null;
    }
  } else {
    listener.markAsRemoved();
  }
  return true;
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler);
};
goog.events.removeAll = function(obj, opt_type) {
  if (!obj) {
    return 0;
  }
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.removeAllListeners(opt_type);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  if (!listenerMap) {
    return 0;
  }
  var count = 0;
  var typeStr = opt_type && opt_type.toString();
  for (var type in listenerMap.listeners) {
    if (!typeStr || type == typeStr) {
      var listeners = listenerMap.listeners[type].concat();
      for (var i = 0;i < listeners.length;++i) {
        if (goog.events.unlistenByKey(listeners[i])) {
          ++count;
        }
      }
    }
  }
  return count;
};
goog.events.removeAllNativeListeners = function() {
  goog.events.listenerCountEstimate_ = 0;
  return 0;
};
goog.events.getListeners = function(obj, type, capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.getListeners(type, capture);
  } else {
    if (!obj) {
      return[];
    }
    var listenerMap = goog.events.getListenerMap_((obj));
    return listenerMap ? listenerMap.getListeners(type, capture) : [];
  }
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  type = (type);
  listener = goog.events.wrapListener(listener);
  var capture = !!opt_capt;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener(type, listener, capture, opt_handler);
  }
  if (!src) {
    return null;
  }
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    return listenerMap.getListener(type, listener, capture, opt_handler);
  }
  return null;
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  return!!listenerMap && listenerMap.hasListener(opt_type, opt_capture);
};
goog.events.expose = function(e) {
  var str = [];
  for (var key in e) {
    if (e[key] && e[key].id) {
      str.push(key + " \x3d " + e[key] + " (" + e[key].id + ")");
    } else {
      str.push(key + " \x3d " + e[key]);
    }
  }
  return str.join("\n");
};
goog.events.getOnString_ = function(type) {
  if (type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type];
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type;
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.fireListeners(type, capture, eventObject);
  }
  return goog.events.fireListeners_(obj, type, capture, eventObject);
};
goog.events.fireListeners_ = function(obj, type, capture, eventObject) {
  var retval = 1;
  var listenerMap = goog.events.getListenerMap_((obj));
  if (listenerMap) {
    var listenerArray = listenerMap.listeners[type.toString()];
    if (listenerArray) {
      listenerArray = listenerArray.concat();
      for (var i = 0;i < listenerArray.length;i++) {
        var listener = listenerArray[i];
        if (listener && listener.capture == capture && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false;
        }
      }
    }
  }
  return Boolean(retval);
};
goog.events.fireListener = function(listener, eventObject) {
  var listenerFn = listener.listener;
  var listenerHandler = listener.handler || listener.src;
  if (listener.callOnce) {
    goog.events.unlistenByKey(listener);
  }
  return listenerFn.call(listenerHandler, eventObject);
};
goog.events.getTotalListenerCount = function() {
  return goog.events.listenerCountEstimate_;
};
goog.events.dispatchEvent = function(src, e) {
  goog.asserts.assert(goog.events.Listenable.isImplementedBy(src), "Can not use goog.events.dispatchEvent with " + "non-goog.events.Listenable instance.");
  return src.dispatchEvent(e);
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if (listener.removed) {
    return true;
  }
  if (!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || (goog.getObjectByName("window.event"));
    var evt = new goog.events.BrowserEvent(ieEvent, this);
    var retval = true;
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.ON) {
      if (!goog.events.isMarkedIeEvent_(ieEvent)) {
        goog.events.markIeEvent_(ieEvent);
        var ancestors = [];
        for (var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent);
        }
        var type = listener.type;
        for (var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(ancestors[i], type, true, evt);
        }
        for (var i = 0;!evt.propagationStopped_ && i < ancestors.length;i++) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(ancestors[i], type, false, evt);
        }
      }
    } else {
      retval = goog.events.fireListener(listener, evt);
    }
    return retval;
  }
  return goog.events.fireListener(listener, new goog.events.BrowserEvent(opt_evt, this));
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if (e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return;
    } catch (ex) {
      useReturnValue = true;
    }
  }
  if (useReturnValue || (e.returnValue) == undefined) {
    e.returnValue = true;
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined;
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++;
};
goog.events.getListenerMap_ = function(src) {
  var listenerMap = src[goog.events.LISTENER_MAP_PROP_];
  return listenerMap instanceof goog.events.ListenerMap ? listenerMap : null;
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (Math.random() * 1E9 >>> 0);
goog.events.wrapListener = function(listener) {
  goog.asserts.assert(listener, "Listener can not be null.");
  if (goog.isFunction(listener)) {
    return listener;
  }
  goog.asserts.assert(listener.handleEvent, "An object listener must have handleEvent method.");
  if (!listener[goog.events.LISTENER_WRAPPER_PROP_]) {
    listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
      return listener.handleEvent(e);
    };
  }
  return listener[goog.events.LISTENER_WRAPPER_PROP_];
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.asserts");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.require("goog.object");
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
  this.eventTargetListeners_ = new goog.events.ListenerMap(this);
  this.actualEventTarget_ = this;
  this.parentEventTarget_ = null;
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.Listenable.addImplementation(goog.events.EventTarget);
goog.events.EventTarget.MAX_ANCESTORS_ = 1E3;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_;
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent;
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  this.assertInitialized_();
  var ancestorsTree, ancestor = this.getParentEventTarget();
  if (ancestor) {
    ancestorsTree = [];
    var ancestorCount = 1;
    for (;ancestor;ancestor = ancestor.getParentEventTarget()) {
      ancestorsTree.push(ancestor);
      goog.asserts.assert(++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_, "infinite loop");
    }
  }
  return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, e, ancestorsTree);
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  this.removeAllListeners();
  this.parentEventTarget_ = null;
};
goog.events.EventTarget.prototype.listen = function(type, listener, opt_useCapture, opt_listenerScope) {
  this.assertInitialized_();
  return this.eventTargetListeners_.add(String(type), listener, false, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.listenOnce = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.add(String(type), listener, true, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlisten = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.remove(String(type), listener, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlistenByKey = function(key) {
  return this.eventTargetListeners_.removeByKey(key);
};
goog.events.EventTarget.prototype.removeAllListeners = function(opt_type) {
  if (!this.eventTargetListeners_) {
    return 0;
  }
  return this.eventTargetListeners_.removeAll(opt_type);
};
goog.events.EventTarget.prototype.fireListeners = function(type, capture, eventObject) {
  var listenerArray = this.eventTargetListeners_.listeners[String(type)];
  if (!listenerArray) {
    return true;
  }
  listenerArray = listenerArray.concat();
  var rv = true;
  for (var i = 0;i < listenerArray.length;++i) {
    var listener = listenerArray[i];
    if (listener && !listener.removed && listener.capture == capture) {
      var listenerFn = listener.listener;
      var listenerHandler = listener.handler || listener.src;
      if (listener.callOnce) {
        this.unlistenByKey(listener);
      }
      rv = listenerFn.call(listenerHandler, eventObject) !== false && rv;
    }
  }
  return rv && eventObject.returnValue_ != false;
};
goog.events.EventTarget.prototype.getListeners = function(type, capture) {
  return this.eventTargetListeners_.getListeners(String(type), capture);
};
goog.events.EventTarget.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  return this.eventTargetListeners_.getListener(String(type), listener, capture, opt_listenerScope);
};
goog.events.EventTarget.prototype.hasListener = function(opt_type, opt_capture) {
  var id = goog.isDef(opt_type) ? String(opt_type) : undefined;
  return this.eventTargetListeners_.hasListener(id, opt_capture);
};
goog.events.EventTarget.prototype.setTargetForTesting = function(target) {
  this.actualEventTarget_ = target;
};
goog.events.EventTarget.prototype.assertInitialized_ = function() {
  goog.asserts.assert(this.eventTargetListeners_, "Event target is not initialized. Did you call the superclass " + "(goog.events.EventTarget) constructor?");
};
goog.events.EventTarget.dispatchEventInternal_ = function(target, e, opt_ancestorsTree) {
  var type = e.type || (e);
  if (goog.isString(e)) {
    e = new goog.events.Event(e, target);
  } else {
    if (!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, target);
      goog.object.extend(e, oldEvent);
    } else {
      e.target = e.target || target;
    }
  }
  var rv = true, currentTarget;
  if (opt_ancestorsTree) {
    for (var i = opt_ancestorsTree.length - 1;!e.propagationStopped_ && i >= 0;i--) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, true, e) && rv;
    }
  }
  if (!e.propagationStopped_) {
    currentTarget = e.currentTarget = target;
    rv = currentTarget.fireListeners(type, true, e) && rv;
    if (!e.propagationStopped_) {
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  if (opt_ancestorsTree) {
    for (i = 0;!e.propagationStopped_ && i < opt_ancestorsTree.length;i++) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  return rv;
};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now();
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global;
goog.Timer.intervalScale = .8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_;
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if (this.timer_ && this.enabled) {
    this.stop();
    this.start();
  } else {
    if (this.timer_) {
      this.stop();
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if (this.enabled) {
    var elapsed = goog.now() - this.last_;
    if (elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return;
    }
    if (this.timer_) {
      this.timerObject_.clearTimeout(this.timer_);
      this.timer_ = null;
    }
    this.dispatchTick();
    if (this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now();
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK);
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if (!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now();
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if (this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null;
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_;
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if (goog.isFunction(listener)) {
    if (opt_handler) {
      listener = goog.bind(listener, opt_handler);
    }
  } else {
    if (listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener);
    } else {
      throw Error("Invalid listener argument");
    }
  }
  if (opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1;
  } else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0);
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId);
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentModeOrHigher(9) || goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, 
INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE, LEGACY_IE_RANGES:goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length2;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return(goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y;
  } else {
    this.x += tx;
    if (goog.isNumber(opt_ty)) {
      this.y += opt_ty;
    }
  }
  return this;
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this;
};
goog.math.Coordinate.prototype.rotateRadians = function(radians, opt_center) {
  var center = opt_center || new goog.math.Coordinate(0, 0);
  var x = this.x;
  var y = this.y;
  var cos = Math.cos(radians);
  var sin = Math.sin(radians);
  this.x = (x - center.x) * cos - (y - center.y) * sin + center.x;
  this.y = (x - center.x) * sin + (y - center.y) * cos + center.y;
};
goog.math.Coordinate.prototype.rotateDegrees = function(degrees, opt_center) {
  this.rotateRadians(goog.math.toRadians(degrees), opt_center);
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this;
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.provide("goog.dom");
goog.provide("goog.dom.Appendable");
goog.provide("goog.dom.DomHelper");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.TagName");
goog.require("goog.functions");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.define("goog.dom.ASSUME_QUIRKS_MODE", false);
goog.define("goog.dom.ASSUME_STANDARDS_MODE", false);
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.dom.getElementHelper_(document, element);
};
goog.dom.getElementHelper_ = function(doc, element) {
  return goog.isString(element) ? doc.getElementById(element) : element;
};
goog.dom.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(document, id);
};
goog.dom.getRequiredElementHelper_ = function(doc, id) {
  goog.asserts.assertString(id);
  var element = goog.dom.getElementHelper_(doc, id);
  element = goog.asserts.assertElement(element, "No element found with id: " + id);
  return element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className);
  } else {
    retVal = goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)[0];
  }
  return retVal || null;
};
goog.dom.getRequiredElementByClass = function(className, opt_root) {
  var retValue = goog.dom.getElementByClass(className, opt_root);
  return goog.asserts.assert(retValue, "No element found with className: " + className);
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el;el = els[i];i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return arrayLike;
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return arrayLike;
  } else {
    return els;
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var body = doc.body;
    var docEl = doc.documentElement;
    if (!body && !docEl) {
      return 0;
    }
    var vh = goog.dom.getViewportSize_(win).height;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  if (goog.userAgent.IE && goog.userAgent.isVersionOrHigher("10") && win.pageYOffset != el.scrollTop) {
    return new goog.math.Coordinate(el.scrollLeft, el.scrollTop);
  }
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  if (!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc)) {
    return doc.documentElement;
  }
  return doc.body || doc.documentElement;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  if (attributes) {
    if (goog.isString(attributes)) {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        element.className = attributes.join(" ");
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name);
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content));
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["\x3ctr\x3e"];
  for (var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "\x3ctd\x3e\x26nbsp;\x3c/td\x3e" : "\x3ctd\x3e\x3c/td\x3e");
  }
  rowHtml.push("\x3c/tr\x3e");
  rowHtml = rowHtml.join("");
  var totalHtml = ["\x3ctable\x3e"];
  for (i = 0;i < rows;i++) {
    totalHtml.push(rowHtml);
  }
  totalHtml.push("\x3c/table\x3e");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return(elem.removeChild(elem.firstChild));
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString);
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    tempDiv.innerHTML = htmlString;
  }
  if (tempDiv.childNodes.length == 1) {
    return(tempDiv.removeChild(tempDiv.firstChild));
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return(element.removeNode(false));
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return(goog.dom.removeNode(element));
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (node.firstElementChild != undefined) {
    return(node).firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (node.lastElementChild != undefined) {
    return(node).lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (node.nextElementSibling != undefined) {
    return(node).nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (node.previousElementSibling != undefined) {
    return(node).previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return(node);
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  var parent;
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    var isIe9 = goog.userAgent.IE && goog.userAgent.isVersionOrHigher("9") && !goog.userAgent.isVersionOrHigher("10");
    if (!(isIe9 && goog.global["SVGElement"] && element instanceof goog.global["SVGElement"])) {
      parent = element.parentElement;
      if (parent) {
        return parent;
      }
    }
  }
  parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null;
};
goog.dom.contains = function(parent, descendant) {
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return-1;
    }
    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return-1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return-1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for (var j = 1;j < count;j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  goog.asserts.assert(node, "Node cannot be null or undefined.");
  return(node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document);
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc;
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow(goog.dom.getFrameContentDocument(frame));
};
goog.dom.setTextContent = function(node, text) {
  goog.asserts.assert(node != null, "goog.dom.setTextContent expects a non-null value for node");
  if ("textContent" in node) {
    node.textContent = text;
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      node.data = text;
    } else {
      if (node.firstChild && node.firstChild.nodeType == goog.dom.NodeType.TEXT) {
        while (node.lastChild != node.firstChild) {
          node.removeChild(node.lastChild);
        }
        node.firstChild.data = text;
      } else {
        goog.dom.removeChildren(node);
        var doc = goog.dom.getOwnerDocument(node);
        node.appendChild(doc.createTextNode(String(text)));
      }
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  return goog.dom.hasSpecifiedTabIndex_(element) && goog.dom.isTabIndexFocusable_(element);
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.isFocusable = function(element) {
  var focusable;
  if (goog.dom.nativelySupportsFocus_(element)) {
    focusable = !element.disabled && (!goog.dom.hasSpecifiedTabIndex_(element) || goog.dom.isTabIndexFocusable_(element));
  } else {
    focusable = goog.dom.isFocusableTabIndex(element);
  }
  return focusable && goog.userAgent.IE ? goog.dom.hasNonZeroBoundingRect_(element) : focusable;
};
goog.dom.hasSpecifiedTabIndex_ = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  return goog.isDefAndNotNull(attrNode) && attrNode.specified;
};
goog.dom.isTabIndexFocusable_ = function(element) {
  var index = element.tabIndex;
  return goog.isNumber(index) && index >= 0 && index < 32768;
};
goog.dom.nativelySupportsFocus_ = function(element) {
  return element.tagName == goog.dom.TagName.A || element.tagName == goog.dom.TagName.INPUT || element.tagName == goog.dom.TagName.TEXTAREA || element.tagName == goog.dom.TagName.SELECT || element.tagName == goog.dom.TagName.BUTTON;
};
goog.dom.hasNonZeroBoundingRect_ = function(element) {
  var rect = goog.isFunction(element["getBoundingClientRect"]) ? element.getBoundingClientRect() : {"height":element.offsetHeight, "width":element.offsetWidth};
  return goog.isDefAndNotNull(rect) && rect.height > 0 && rect.width > 0;
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return(goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.isString(node.className) && goog.array.contains(node.className.split(/\s+/), opt_class));
  }, true));
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (!opt_includeNode) {
    element = element.parentNode;
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while (element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.devicePixelRatio_;
goog.dom.getPixelRatio = goog.functions.cacheReturnValue(function() {
  var win = goog.dom.getWindow();
  var isFirefoxMobile = goog.userAgent.GECKO && goog.userAgent.MOBILE;
  if (goog.isDef(win.devicePixelRatio) && !isFirefoxMobile) {
    return win.devicePixelRatio;
  } else {
    if (win.matchMedia) {
      return goog.dom.matchesPixelRatio_(.75) || goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(2) || goog.dom.matchesPixelRatio_(3) || 1;
    }
  }
  return 1;
});
goog.dom.matchesPixelRatio_ = function(pixelRatio) {
  var win = goog.dom.getWindow();
  var query = "(-webkit-min-device-pixel-ratio: " + pixelRatio + ")," + "(min--moz-device-pixel-ratio: " + pixelRatio + ")," + "(min-resolution: " + pixelRatio + "dppx)";
  return win.matchMedia(query).matches ? pixelRatio : 0;
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document;
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  return goog.dom.getElementHelper_(this.document_, element);
};
goog.dom.DomHelper.prototype.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(this.document_, id);
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.getRequiredElementByClass = function(className, opt_root) {
  var root = opt_root || this.document_;
  return goog.dom.getRequiredElementByClass(className, root);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content));
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString);
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.events.EventHandler");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.require("goog.object");
goog.forwardDeclare("goog.events.EventWrapper");
goog.events.EventHandler = function(opt_scope) {
  goog.Disposable.call(this);
  this.handler_ = opt_scope;
  this.keys_ = {};
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_capture) {
  return this.listen_(src, type, opt_fn, opt_capture);
};
goog.events.EventHandler.prototype.listenWithScope = function(src, type, fn, capture, scope) {
  return this.listen_(src, type, fn, capture, scope);
};
goog.events.EventHandler.prototype.listen_ = function(src, type, opt_fn, opt_capture, opt_scope) {
  if (!goog.isArray(type)) {
    if (type) {
      goog.events.EventHandler.typeArray_[0] = type.toString();
    }
    type = goog.events.EventHandler.typeArray_;
  }
  for (var i = 0;i < type.length;i++) {
    var listenerObj = goog.events.listen(src, type[i], opt_fn || this.handleEvent, opt_capture || false, opt_scope || this.handler_ || this);
    if (!listenerObj) {
      return this;
    }
    var key = listenerObj.key;
    this.keys_[key] = listenerObj;
  }
  return this;
};
goog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_capture) {
  return this.listenOnce_(src, type, opt_fn, opt_capture);
};
goog.events.EventHandler.prototype.listenOnceWithScope = function(src, type, fn, capture, scope) {
  return this.listenOnce_(src, type, fn, capture, scope);
};
goog.events.EventHandler.prototype.listenOnce_ = function(src, type, opt_fn, opt_capture, opt_scope) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      this.listenOnce_(src, type[i], opt_fn, opt_capture, opt_scope);
    }
  } else {
    var listenerObj = goog.events.listenOnce(src, type, opt_fn || this.handleEvent, opt_capture, opt_scope || this.handler_ || this);
    if (!listenerObj) {
      return this;
    }
    var key = listenerObj.key;
    this.keys_[key] = listenerObj;
  }
  return this;
};
goog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt) {
  return this.listenWithWrapper_(src, wrapper, listener, opt_capt);
};
goog.events.EventHandler.prototype.listenWithWrapperAndScope = function(src, wrapper, listener, capture, scope) {
  return this.listenWithWrapper_(src, wrapper, listener, capture, scope);
};
goog.events.EventHandler.prototype.listenWithWrapper_ = function(src, wrapper, listener, opt_capt, opt_scope) {
  wrapper.listen(src, listener, opt_capt, opt_scope || this.handler_ || this, this);
  return this;
};
goog.events.EventHandler.prototype.getListenerCount = function() {
  var count = 0;
  for (var key in this.keys_) {
    if (Object.prototype.hasOwnProperty.call(this.keys_, key)) {
      count++;
    }
  }
  return count;
};
goog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_capture, opt_scope) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      this.unlisten(src, type[i], opt_fn, opt_capture, opt_scope);
    }
  } else {
    var listener = goog.events.getListener(src, type, opt_fn || this.handleEvent, opt_capture, opt_scope || this.handler_ || this);
    if (listener) {
      goog.events.unlistenByKey(listener);
      delete this.keys_[listener.key];
    }
  }
  return this;
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_scope) {
  wrapper.unlisten(src, listener, opt_capt, opt_scope || this.handler_ || this, this);
  return this;
};
goog.events.EventHandler.prototype.removeAll = function() {
  goog.object.forEach(this.keys_, goog.events.unlistenByKey);
  this.keys_ = {};
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll();
};
goog.events.EventHandler.prototype.handleEvent = function(e) {
  throw Error("EventHandler.handleEvent not implemented");
};
goog.provide("goog.history.Event");
goog.require("goog.events.Event");
goog.require("goog.history.EventType");
goog.history.Event = function(token, isNavigation) {
  goog.events.Event.call(this, goog.history.EventType.NAVIGATE);
  this.token = token;
  this.isNavigation = isNavigation;
};
goog.inherits(goog.history.Event, goog.events.Event);
goog.provide("goog.labs.userAgent.device");
goog.require("goog.labs.userAgent.util");
goog.labs.userAgent.device.isMobile = function() {
  return!goog.labs.userAgent.device.isTablet() && (goog.labs.userAgent.util.matchUserAgent("iPod") || goog.labs.userAgent.util.matchUserAgent("iPhone") || goog.labs.userAgent.util.matchUserAgent("Android") || goog.labs.userAgent.util.matchUserAgent("IEMobile"));
};
goog.labs.userAgent.device.isTablet = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPad") || goog.labs.userAgent.util.matchUserAgent("Android") && !goog.labs.userAgent.util.matchUserAgent("Mobile") || goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.device.isDesktop = function() {
  return!goog.labs.userAgent.device.isMobile() && !goog.labs.userAgent.device.isTablet();
};
goog.provide("goog.memoize");
goog.memoize = function(f, opt_serializer) {
  var serializer = opt_serializer || goog.memoize.simpleSerializer;
  return function() {
    if (goog.memoize.ENABLE_MEMOIZE) {
      var thisOrGlobal = this || goog.global;
      var cache = thisOrGlobal[goog.memoize.CACHE_PROPERTY_] || (thisOrGlobal[goog.memoize.CACHE_PROPERTY_] = {});
      var key = serializer(goog.getUid(f), arguments);
      return cache.hasOwnProperty(key) ? cache[key] : cache[key] = f.apply(this, arguments);
    } else {
      return f.apply(this, arguments);
    }
  };
};
goog.define("goog.memoize.ENABLE_MEMOIZE", true);
goog.memoize.clearCache = function(cacheOwner) {
  cacheOwner[goog.memoize.CACHE_PROPERTY_] = {};
};
goog.memoize.CACHE_PROPERTY_ = "closure_memoize_cache_";
goog.memoize.simpleSerializer = function(functionUid, args) {
  var context = [functionUid];
  for (var i = args.length - 1;i >= 0;--i) {
    context.push(typeof args[i], args[i]);
  }
  return context.join("\x0B");
};
goog.provide("goog.History");
goog.provide("goog.History.Event");
goog.provide("goog.History.EventType");
goog.require("goog.Timer");
goog.require("goog.dom");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.history.Event");
goog.require("goog.history.EventType");
goog.require("goog.labs.userAgent.device");
goog.require("goog.memoize");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.History = function(opt_invisible, opt_blankPageUrl, opt_input, opt_iframe) {
  goog.events.EventTarget.call(this);
  if (opt_invisible && !opt_blankPageUrl) {
    throw Error("Can't use invisible history without providing a blank page.");
  }
  var input;
  if (opt_input) {
    input = opt_input;
  } else {
    var inputId = "history_state" + goog.History.historyCount_;
    document.write(goog.string.subs(goog.History.INPUT_TEMPLATE_, inputId, inputId));
    input = goog.dom.getElement(inputId);
  }
  this.hiddenInput_ = (input);
  this.window_ = opt_input ? goog.dom.getWindow(goog.dom.getOwnerDocument(opt_input)) : window;
  this.iframeSrc_ = opt_blankPageUrl;
  if (goog.userAgent.IE && !opt_blankPageUrl) {
    this.iframeSrc_ = window.location.protocol == "https" ? "https:///" : 'javascript:""';
  }
  this.timer_ = new goog.Timer(goog.History.PollingType.NORMAL);
  this.registerDisposable(this.timer_);
  this.userVisible_ = !opt_invisible;
  this.eventHandler_ = new goog.events.EventHandler(this);
  if (opt_invisible || goog.History.LEGACY_IE) {
    var iframe;
    if (opt_iframe) {
      iframe = opt_iframe;
    } else {
      var iframeId = "history_iframe" + goog.History.historyCount_;
      var srcAttribute = this.iframeSrc_ ? 'src\x3d"' + goog.string.htmlEscape(this.iframeSrc_) + '"' : "";
      document.write(goog.string.subs(goog.History.IFRAME_TEMPLATE_, iframeId, srcAttribute));
      iframe = goog.dom.getElement(iframeId);
    }
    this.iframe_ = (iframe);
    this.unsetIframe_ = true;
  }
  if (goog.History.LEGACY_IE) {
    this.eventHandler_.listen(this.window_, goog.events.EventType.LOAD, this.onDocumentLoaded);
    this.documentLoaded = false;
    this.shouldEnable_ = false;
  }
  if (this.userVisible_) {
    this.setHash_(this.getToken(), true);
  } else {
    this.setIframeToken_(this.hiddenInput_.value);
  }
  goog.History.historyCount_++;
};
goog.inherits(goog.History, goog.events.EventTarget);
goog.History.prototype.enabled_ = false;
goog.History.prototype.longerPolling_ = false;
goog.History.prototype.lastToken_ = null;
goog.History.isOnHashChangeSupported = goog.memoize(function() {
  return goog.userAgent.IE ? document.documentMode >= 8 : "onhashchange" in goog.global;
});
goog.History.LEGACY_IE = goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(8);
goog.History.HASH_ALWAYS_REQUIRED = goog.History.LEGACY_IE;
goog.History.prototype.lockedToken_ = null;
goog.History.prototype.disposeInternal = function() {
  goog.History.superClass_.disposeInternal.call(this);
  this.eventHandler_.dispose();
  this.setEnabled(false);
};
goog.History.prototype.setEnabled = function(enable) {
  if (enable == this.enabled_) {
    return;
  }
  if (goog.History.LEGACY_IE && !this.documentLoaded) {
    this.shouldEnable_ = enable;
    return;
  }
  if (enable) {
    if (goog.userAgent.OPERA) {
      this.eventHandler_.listen(this.window_.document, goog.History.INPUT_EVENTS_, this.operaDefibrillator_);
    } else {
      if (goog.userAgent.GECKO) {
        this.eventHandler_.listen(this.window_, "pageshow", this.onShow_);
      }
    }
    if (goog.History.isOnHashChangeSupported() && this.userVisible_) {
      this.eventHandler_.listen(this.window_, goog.events.EventType.HASHCHANGE, this.onHashChange_);
      this.enabled_ = true;
      this.dispatchEvent(new goog.history.Event(this.getToken(), false));
    } else {
      if (!(goog.userAgent.IE && !goog.labs.userAgent.device.isMobile()) || this.documentLoaded) {
        this.eventHandler_.listen(this.timer_, goog.Timer.TICK, goog.bind(this.check_, this, true));
        this.enabled_ = true;
        if (!goog.History.LEGACY_IE) {
          this.lastToken_ = this.getToken();
          this.dispatchEvent(new goog.history.Event(this.getToken(), false));
        }
        this.timer_.start();
      }
    }
  } else {
    this.enabled_ = false;
    this.eventHandler_.removeAll();
    this.timer_.stop();
  }
};
goog.History.prototype.onDocumentLoaded = function() {
  this.documentLoaded = true;
  if (this.hiddenInput_.value) {
    this.setIframeToken_(this.hiddenInput_.value, true);
  }
  this.setEnabled(this.shouldEnable_);
};
goog.History.prototype.onShow_ = function(e) {
  if (e.getBrowserEvent()["persisted"]) {
    this.setEnabled(false);
    this.setEnabled(true);
  }
};
goog.History.prototype.onHashChange_ = function(e) {
  var hash = this.getLocationFragment_(this.window_);
  if (hash != this.lastToken_) {
    this.update_(hash, true);
  }
};
goog.History.prototype.getToken = function() {
  if (this.lockedToken_ != null) {
    return this.lockedToken_;
  } else {
    if (this.userVisible_) {
      return this.getLocationFragment_(this.window_);
    } else {
      return this.getIframeToken_() || "";
    }
  }
};
goog.History.prototype.setToken = function(token, opt_title) {
  this.setHistoryState_(token, false, opt_title);
};
goog.History.prototype.replaceToken = function(token, opt_title) {
  this.setHistoryState_(token, true, opt_title);
};
goog.History.prototype.getLocationFragment_ = function(win) {
  var href = win.location.href;
  var index = href.indexOf("#");
  return index < 0 ? "" : href.substring(index + 1);
};
goog.History.prototype.setHistoryState_ = function(token, replace, opt_title) {
  if (this.getToken() != token) {
    if (this.userVisible_) {
      this.setHash_(token, replace);
      if (!goog.History.isOnHashChangeSupported()) {
        if (goog.userAgent.IE && !goog.labs.userAgent.device.isMobile()) {
          this.setIframeToken_(token, replace, opt_title);
        }
      }
      if (this.enabled_) {
        this.check_(false);
      }
    } else {
      this.setIframeToken_(token, replace);
      this.lockedToken_ = this.lastToken_ = this.hiddenInput_.value = token;
      this.dispatchEvent(new goog.history.Event(token, false));
    }
  }
};
goog.History.prototype.setHash_ = function(token, opt_replace) {
  var loc = this.window_.location;
  var url = loc.href.split("#")[0];
  var hasHash = goog.string.contains(loc.href, "#");
  if (goog.History.HASH_ALWAYS_REQUIRED || hasHash || token) {
    url += "#" + token;
  }
  if (url != loc.href) {
    if (opt_replace) {
      loc.replace(url);
    } else {
      loc.href = url;
    }
  }
};
goog.History.prototype.setIframeToken_ = function(token, opt_replace, opt_title) {
  if (this.unsetIframe_ || token != this.getIframeToken_()) {
    this.unsetIframe_ = false;
    token = goog.string.urlEncode(token);
    if (goog.userAgent.IE) {
      var doc = goog.dom.getFrameContentDocument(this.iframe_);
      doc.open("text/html", opt_replace ? "replace" : undefined);
      doc.write(goog.string.subs(goog.History.IFRAME_SOURCE_TEMPLATE_, goog.string.htmlEscape((opt_title || this.window_.document.title)), token));
      doc.close();
    } else {
      var url = this.iframeSrc_ + "#" + token;
      var contentWindow = this.iframe_.contentWindow;
      if (contentWindow) {
        if (opt_replace) {
          contentWindow.location.replace(url);
        } else {
          contentWindow.location.href = url;
        }
      }
    }
  }
};
goog.History.prototype.getIframeToken_ = function() {
  if (goog.userAgent.IE) {
    var doc = goog.dom.getFrameContentDocument(this.iframe_);
    return doc.body ? goog.string.urlDecode(doc.body.innerHTML) : null;
  } else {
    var contentWindow = this.iframe_.contentWindow;
    if (contentWindow) {
      var hash;
      try {
        hash = goog.string.urlDecode(this.getLocationFragment_(contentWindow));
      } catch (e) {
        if (!this.longerPolling_) {
          this.setLongerPolling_(true);
        }
        return null;
      }
      if (this.longerPolling_) {
        this.setLongerPolling_(false);
      }
      return hash || null;
    } else {
      return null;
    }
  }
};
goog.History.prototype.check_ = function(isNavigation) {
  if (this.userVisible_) {
    var hash = this.getLocationFragment_(this.window_);
    if (hash != this.lastToken_) {
      this.update_(hash, isNavigation);
    }
  }
  if (!this.userVisible_ || goog.History.LEGACY_IE) {
    var token = this.getIframeToken_() || "";
    if (this.lockedToken_ == null || token == this.lockedToken_) {
      this.lockedToken_ = null;
      if (token != this.lastToken_) {
        this.update_(token, isNavigation);
      }
    }
  }
};
goog.History.prototype.update_ = function(token, isNavigation) {
  this.lastToken_ = this.hiddenInput_.value = token;
  if (this.userVisible_) {
    if (goog.History.LEGACY_IE) {
      this.setIframeToken_(token);
    }
    this.setHash_(token);
  } else {
    this.setIframeToken_(token);
  }
  this.dispatchEvent(new goog.history.Event(this.getToken(), isNavigation));
};
goog.History.prototype.setLongerPolling_ = function(longerPolling) {
  if (this.longerPolling_ != longerPolling) {
    this.timer_.setInterval(longerPolling ? goog.History.PollingType.LONG : goog.History.PollingType.NORMAL);
  }
  this.longerPolling_ = longerPolling;
};
goog.History.prototype.operaDefibrillator_ = function() {
  this.timer_.stop();
  this.timer_.start();
};
goog.History.INPUT_EVENTS_ = [goog.events.EventType.MOUSEDOWN, goog.events.EventType.KEYDOWN, goog.events.EventType.MOUSEMOVE];
goog.History.IFRAME_SOURCE_TEMPLATE_ = "\x3ctitle\x3e%s\x3c/title\x3e\x3cbody\x3e%s\x3c/body\x3e";
goog.History.IFRAME_TEMPLATE_ = '\x3ciframe id\x3d"%s" style\x3d"display:none" %s\x3e\x3c/iframe\x3e';
goog.History.INPUT_TEMPLATE_ = '\x3cinput type\x3d"text" name\x3d"%s" id\x3d"%s" style\x3d"display:none"\x3e';
goog.History.historyCount_ = 0;
goog.History.PollingType = {NORMAL:150, LONG:1E4};
goog.History.EventType = goog.history.EventType;
goog.History.Event = goog.history.Event;
goog.provide("reagent.interop");
goog.require("cljs.core");
goog.provide("reagent.debug");
goog.require("cljs.core");
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll);
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll));
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__17718 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__17718;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__17722 = cljs.core._EQ_;
    var expr__17723 = limit;
    if (cljs.core.truth_(pred__17722.call(null, 1, expr__17723))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__17722.call(null, 2, expr__17723))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4124__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var m = temp__4124__auto__;
            var index = s__$1.indexOf(m);
            var G__17725 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__17726 = limit__$1 - 1;
            var G__17727 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__17725;
            limit__$1 = G__17726;
            parts = G__17727;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__17728 = index - 1;
        index = G__17728;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4124__auto___17729 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4124__auto___17729)) {
        var replacement_17730 = temp__4124__auto___17729;
        buffer.append([cljs.core.str(replacement_17730)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__17731 = index + 1;
      index = G__17731;
      continue;
    }
    break;
  }
};
goog.provide("reagent.impl.util");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("reagent.interop");
goog.require("reagent.debug");
reagent.impl.util.is_client = typeof window !== "undefined" && !(window["document"] == null);
reagent.impl.util.extract_props = function extract_props(v) {
  var p = cljs.core.nth.call(null, v, 1, null);
  if (cljs.core.map_QMARK_.call(null, p)) {
    return p;
  } else {
    return null;
  }
};
reagent.impl.util.extract_children = function extract_children(v) {
  var p = cljs.core.nth.call(null, v, 1, null);
  var first_child = p == null || cljs.core.map_QMARK_.call(null, p) ? 2 : 1;
  if (cljs.core.count.call(null, v) > first_child) {
    return cljs.core.subvec.call(null, v, first_child);
  } else {
    return null;
  }
};
reagent.impl.util.get_argv = function get_argv(c) {
  return c["props"]["argv"];
};
reagent.impl.util.get_props = function get_props(c) {
  return reagent.impl.util.extract_props.call(null, c["props"]["argv"]);
};
reagent.impl.util.get_children = function get_children(c) {
  return reagent.impl.util.extract_children.call(null, c["props"]["argv"]);
};
reagent.impl.util.reagent_component_QMARK_ = function reagent_component_QMARK_(c) {
  return!(c["props"]["argv"] == null);
};
reagent.impl.util.cached_react_class = function cached_react_class(c) {
  return c["cljsReactClass"];
};
reagent.impl.util.cache_react_class = function cache_react_class(c, constructor) {
  return c["cljsReactClass"] = constructor;
};
reagent.impl.util.memoize_1 = function memoize_1(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(mem) {
    return function(arg) {
      var v = cljs.core.get.call(null, cljs.core.deref.call(null, mem), arg);
      if (!(v == null)) {
        return v;
      } else {
        var ret = f.call(null, arg);
        cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, arg, ret);
        return ret;
      }
    };
  }(mem);
};
reagent.impl.util.dont_camel_case = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["aria", null, "data", null], null), null);
reagent.impl.util.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(cljs.core.subs.call(null, s, 1))].join("");
  }
};
reagent.impl.util.dash_to_camel = function dash_to_camel(dashed) {
  if (typeof dashed === "string") {
    return dashed;
  } else {
    var name_str = cljs.core.name.call(null, dashed);
    var vec__17876 = clojure.string.split.call(null, name_str, /-/);
    var start = cljs.core.nth.call(null, vec__17876, 0, null);
    var parts = cljs.core.nthnext.call(null, vec__17876, 1);
    if (cljs.core.truth_(reagent.impl.util.dont_camel_case.call(null, start))) {
      return name_str;
    } else {
      return cljs.core.apply.call(null, cljs.core.str, start, cljs.core.map.call(null, reagent.impl.util.capitalize, parts));
    }
  }
};
reagent.impl.util.partial_ifn = function(f, args, p) {
  this.f = f;
  this.args = args;
  this.p = p;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 6291457;
};
reagent.impl.util.partial_ifn.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.f, self__.args], null));
};
reagent.impl.util.partial_ifn.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._EQ_.call(null, self__.f, other.f) && cljs.core._EQ_.call(null, self__.args, other.args);
};
reagent.impl.util.partial_ifn.prototype.call = function() {
  var G__17878__delegate = function(self__, a) {
    var self____$1 = this;
    var _ = self____$1;
    var or__3761__auto___17879 = self__.p;
    if (cljs.core.truth_(or__3761__auto___17879)) {
    } else {
      self__.p = cljs.core.apply.call(null, cljs.core.partial, self__.f, self__.args);
    }
    return cljs.core.apply.call(null, self__.p, a);
  };
  var G__17878 = function(self__, var_args) {
    var self__ = this;
    var a = null;
    if (arguments.length > 1) {
      a = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return G__17878__delegate.call(this, self__, a);
  };
  G__17878.cljs$lang$maxFixedArity = 1;
  G__17878.cljs$lang$applyTo = function(arglist__17880) {
    var self__ = cljs.core.first(arglist__17880);
    var a = cljs.core.rest(arglist__17880);
    return G__17878__delegate(self__, a);
  };
  G__17878.cljs$core$IFn$_invoke$arity$variadic = G__17878__delegate;
  return G__17878;
}();
reagent.impl.util.partial_ifn.prototype.apply = function(self__, args17877) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args17877)));
};
reagent.impl.util.partial_ifn.prototype.cljs$core$IFn$_invoke$arity$2 = function() {
  var G__17881__delegate = function(a) {
    var _ = this;
    var or__3761__auto___17882 = self__.p;
    if (cljs.core.truth_(or__3761__auto___17882)) {
    } else {
      self__.p = cljs.core.apply.call(null, cljs.core.partial, self__.f, self__.args);
    }
    return cljs.core.apply.call(null, self__.p, a);
  };
  var G__17881 = function(var_args) {
    var self__ = this;
    var a = null;
    if (arguments.length > 0) {
      a = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return G__17881__delegate.call(this, a);
  };
  G__17881.cljs$lang$maxFixedArity = 0;
  G__17881.cljs$lang$applyTo = function(arglist__17883) {
    var a = cljs.core.seq(arglist__17883);
    return G__17881__delegate(a);
  };
  G__17881.cljs$core$IFn$_invoke$arity$variadic = G__17881__delegate;
  return G__17881;
}();
reagent.impl.util.partial_ifn.cljs$lang$type = true;
reagent.impl.util.partial_ifn.cljs$lang$ctorStr = "reagent.impl.util/partial-ifn";
reagent.impl.util.partial_ifn.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "reagent.impl.util/partial-ifn");
};
reagent.impl.util.__GT_partial_ifn = function __GT_partial_ifn(f, args, p) {
  return new reagent.impl.util.partial_ifn(f, args, p);
};
reagent.impl.util.merge_class = function merge_class(p1, p2) {
  var class$ = function() {
    var temp__4126__auto__ = (new cljs.core.Keyword(null, "class", "class", -2030961996)).cljs$core$IFn$_invoke$arity$1(p1);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var c1 = temp__4126__auto__;
      var temp__4126__auto____$1 = (new cljs.core.Keyword(null, "class", "class", -2030961996)).cljs$core$IFn$_invoke$arity$1(p2);
      if (cljs.core.truth_(temp__4126__auto____$1)) {
        var c2 = temp__4126__auto____$1;
        return[cljs.core.str(c1), cljs.core.str(" "), cljs.core.str(c2)].join("");
      } else {
        return null;
      }
    } else {
      return null;
    }
  }();
  if (class$ == null) {
    return p2;
  } else {
    return cljs.core.assoc.call(null, p2, new cljs.core.Keyword(null, "class", "class", -2030961996), class$);
  }
};
reagent.impl.util.merge_style = function merge_style(p1, p2) {
  var style = function() {
    var temp__4126__auto__ = (new cljs.core.Keyword(null, "style", "style", -496642736)).cljs$core$IFn$_invoke$arity$1(p1);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var s1 = temp__4126__auto__;
      var temp__4126__auto____$1 = (new cljs.core.Keyword(null, "style", "style", -496642736)).cljs$core$IFn$_invoke$arity$1(p2);
      if (cljs.core.truth_(temp__4126__auto____$1)) {
        var s2 = temp__4126__auto____$1;
        return cljs.core.merge.call(null, s1, s2);
      } else {
        return null;
      }
    } else {
      return null;
    }
  }();
  if (style == null) {
    return p2;
  } else {
    return cljs.core.assoc.call(null, p2, new cljs.core.Keyword(null, "style", "style", -496642736), style);
  }
};
reagent.impl.util.merge_props = function merge_props(p1, p2) {
  if (p1 == null) {
    return p2;
  } else {
    if (cljs.core.map_QMARK_.call(null, p1)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "p1", "p1", 703771573, null))))].join(""));
    }
    return reagent.impl.util.merge_style.call(null, p1, reagent.impl.util.merge_class.call(null, p1, cljs.core.merge.call(null, p1, p2)));
  }
};
reagent.impl.util._STAR_always_update_STAR_ = false;
if (typeof reagent.impl.util.roots !== "undefined") {
} else {
  reagent.impl.util.roots = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
}
reagent.impl.util.clear_container = function clear_container(node) {
  try {
    return React["unmountComponentAtNode"](node);
  } catch (e17885) {
    if (e17885 instanceof Object) {
      var e = e17885;
      if (typeof console !== "undefined") {
        console.warn([cljs.core.str("Warning: "), cljs.core.str("Error unmounting:")].join(""));
      } else {
      }
      if (typeof console !== "undefined") {
        return console.log(e);
      } else {
        return null;
      }
    } else {
      throw e17885;
    }
  }
};
reagent.impl.util.render_component = function render_component(comp, container, callback) {
  try {
    var _STAR_always_update_STAR_17890 = reagent.impl.util._STAR_always_update_STAR_;
    try {
      reagent.impl.util._STAR_always_update_STAR_ = true;
      return React["render"](comp.call(null), container, function(_STAR_always_update_STAR_17890) {
        return function() {
          var _STAR_always_update_STAR_17891 = reagent.impl.util._STAR_always_update_STAR_;
          try {
            reagent.impl.util._STAR_always_update_STAR_ = false;
            cljs.core.swap_BANG_.call(null, reagent.impl.util.roots, cljs.core.assoc, container, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [comp, container], null));
            if (cljs.core.some_QMARK_.call(null, callback)) {
              return callback.call(null);
            } else {
              return null;
            }
          } finally {
            reagent.impl.util._STAR_always_update_STAR_ = _STAR_always_update_STAR_17891;
          }
        };
      }(_STAR_always_update_STAR_17890));
    } finally {
      reagent.impl.util._STAR_always_update_STAR_ = _STAR_always_update_STAR_17890;
    }
  } catch (e17889) {
    if (e17889 instanceof Object) {
      var e = e17889;
      reagent.impl.util.clear_container.call(null, container);
      throw e;
    } else {
      throw e17889;
    }
  }
};
reagent.impl.util.re_render_component = function re_render_component(comp, container) {
  return reagent.impl.util.render_component.call(null, comp, container, null);
};
reagent.impl.util.unmount_component_at_node = function unmount_component_at_node(container) {
  cljs.core.swap_BANG_.call(null, reagent.impl.util.roots, cljs.core.dissoc, container);
  return React["unmountComponentAtNode"](container);
};
reagent.impl.util.force_update_all = function force_update_all() {
  var seq__17896_17900 = cljs.core.seq.call(null, cljs.core.vals.call(null, cljs.core.deref.call(null, reagent.impl.util.roots)));
  var chunk__17897_17901 = null;
  var count__17898_17902 = 0;
  var i__17899_17903 = 0;
  while (true) {
    if (i__17899_17903 < count__17898_17902) {
      var v_17904 = cljs.core._nth.call(null, chunk__17897_17901, i__17899_17903);
      cljs.core.apply.call(null, reagent.impl.util.re_render_component, v_17904);
      var G__17905 = seq__17896_17900;
      var G__17906 = chunk__17897_17901;
      var G__17907 = count__17898_17902;
      var G__17908 = i__17899_17903 + 1;
      seq__17896_17900 = G__17905;
      chunk__17897_17901 = G__17906;
      count__17898_17902 = G__17907;
      i__17899_17903 = G__17908;
      continue;
    } else {
      var temp__4126__auto___17909 = cljs.core.seq.call(null, seq__17896_17900);
      if (temp__4126__auto___17909) {
        var seq__17896_17910__$1 = temp__4126__auto___17909;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__17896_17910__$1)) {
          var c__4543__auto___17911 = cljs.core.chunk_first.call(null, seq__17896_17910__$1);
          var G__17912 = cljs.core.chunk_rest.call(null, seq__17896_17910__$1);
          var G__17913 = c__4543__auto___17911;
          var G__17914 = cljs.core.count.call(null, c__4543__auto___17911);
          var G__17915 = 0;
          seq__17896_17900 = G__17912;
          chunk__17897_17901 = G__17913;
          count__17898_17902 = G__17914;
          i__17899_17903 = G__17915;
          continue;
        } else {
          var v_17916 = cljs.core.first.call(null, seq__17896_17910__$1);
          cljs.core.apply.call(null, reagent.impl.util.re_render_component, v_17916);
          var G__17917 = cljs.core.next.call(null, seq__17896_17910__$1);
          var G__17918 = null;
          var G__17919 = 0;
          var G__17920 = 0;
          seq__17896_17900 = G__17917;
          chunk__17897_17901 = G__17918;
          count__17898_17902 = G__17919;
          i__17899_17903 = G__17920;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return "Updated";
};
goog.provide("reagent.ratom");
goog.require("cljs.core");
goog.require("reagent.impl.util");
goog.require("reagent.impl.util");
if (typeof reagent.ratom.debug !== "undefined") {
} else {
  reagent.ratom.debug = false;
}
if (typeof reagent.ratom._running !== "undefined") {
} else {
  reagent.ratom._running = cljs.core.atom.call(null, 0);
}
reagent.ratom.running = function running() {
  return cljs.core.deref.call(null, reagent.ratom._running);
};
reagent.ratom.capture_derefed = function capture_derefed(f, obj) {
  obj.cljsCaptured = null;
  var _STAR_ratom_context_STAR_17764 = reagent.ratom._STAR_ratom_context_STAR_;
  try {
    reagent.ratom._STAR_ratom_context_STAR_ = obj;
    return f.call(null);
  } finally {
    reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR_17764;
  }
};
reagent.ratom.captured = function captured(obj) {
  var c = obj.cljsCaptured;
  obj.cljsCaptured = null;
  return c;
};
reagent.ratom.notify_deref_watcher_BANG_ = function notify_deref_watcher_BANG_(derefable) {
  var obj = reagent.ratom._STAR_ratom_context_STAR_;
  if (obj == null) {
    return null;
  } else {
    var captured = obj.cljsCaptured;
    return obj.cljsCaptured = cljs.core.conj.call(null, captured == null ? cljs.core.PersistentHashSet.EMPTY : captured, derefable);
  }
};
reagent.ratom.IReactiveAtom = function() {
  var obj17766 = {};
  return obj17766;
}();
reagent.ratom.RAtom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 114690;
};
reagent.ratom.RAtom.prototype.reagent$ratom$IReactiveAtom$ = true;
reagent.ratom.RAtom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
reagent.ratom.RAtom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
reagent.ratom.RAtom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
reagent.ratom.RAtom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
reagent.ratom.RAtom.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = function(a, new_value) {
  var self__ = this;
  var a__$1 = this;
  if (self__.validator == null) {
  } else {
    if (cljs.core.truth_(self__.validator.call(null, new_value))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null))))].join(""));
    }
  }
  var old_value = self__.state;
  self__.state = new_value;
  if (self__.watches == null) {
  } else {
    cljs.core._notify_watches.call(null, a__$1, old_value, new_value);
  }
  return new_value;
};
reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = function(a, f) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state));
};
reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = function(a, f, x) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state, x));
};
reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = function(a, f, x, y) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state, x, y));
};
reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = function(a, f, x, y, more) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, cljs.core.apply.call(null, f, self__.state, x, y, more));
};
reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.reduce_kv.call(null, function(this$__$1) {
    return function(_, key, f) {
      f.call(null, key, this$__$1, oldval, newval);
      return null;
    };
  }(this$__$1), null, self__.watches);
};
reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  return self__.watches = cljs.core.assoc.call(null, self__.watches, key, f);
};
reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return self__.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
reagent.ratom.RAtom.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  reagent.ratom.notify_deref_watcher_BANG_.call(null, this$__$1);
  return self__.state;
};
reagent.ratom.RAtom.cljs$lang$type = true;
reagent.ratom.RAtom.cljs$lang$ctorStr = "reagent.ratom/RAtom";
reagent.ratom.RAtom.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "reagent.ratom/RAtom");
};
reagent.ratom.__GT_RAtom = function __GT_RAtom(state, meta, validator, watches) {
  return new reagent.ratom.RAtom(state, meta, validator, watches);
};
reagent.ratom.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new reagent.ratom.RAtom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__17770__delegate = function(x, p__17767) {
      var map__17769 = p__17767;
      var map__17769__$1 = cljs.core.seq_QMARK_.call(null, map__17769) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17769) : map__17769;
      var validator = cljs.core.get.call(null, map__17769__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.call(null, map__17769__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new reagent.ratom.RAtom(x, meta, validator, null);
    };
    var G__17770 = function(x, var_args) {
      var p__17767 = null;
      if (arguments.length > 1) {
        p__17767 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__17770__delegate.call(this, x, p__17767);
    };
    G__17770.cljs$lang$maxFixedArity = 1;
    G__17770.cljs$lang$applyTo = function(arglist__17771) {
      var x = cljs.core.first(arglist__17771);
      var p__17767 = cljs.core.rest(arglist__17771);
      return G__17770__delegate(x, p__17767);
    };
    G__17770.cljs$core$IFn$_invoke$arity$variadic = G__17770__delegate;
    return G__17770;
  }();
  atom = function(x, var_args) {
    var p__17767 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
reagent.ratom.RCursor = function(ratom, path, reaction) {
  this.ratom = ratom;
  this.path = path;
  this.reaction = reaction;
  this.cljs$lang$protocol_mask$partition0$ = 2153807872;
  this.cljs$lang$protocol_mask$partition1$ = 114690;
};
reagent.ratom.RCursor.prototype._reaction = function() {
  var self__ = this;
  var this$ = this;
  if (self__.reaction == null) {
    return self__.reaction = function() {
      var G__17778 = self__.ratom;
      if (G__17778) {
        var bit__4437__auto__ = G__17778.cljs$lang$protocol_mask$partition0$ & 32768;
        if (bit__4437__auto__ || G__17778.cljs$core$IDeref$) {
          return true;
        } else {
          if (!G__17778.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__17778);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__17778);
      }
    }() ? reagent.ratom.make_reaction.call(null, function(this$) {
      return function() {
        return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.ratom), self__.path);
      };
    }(this$), new cljs.core.Keyword(null, "on-set", "on-set", -140953470), cljs.core._EQ_.call(null, self__.path, cljs.core.PersistentVector.EMPTY) ? function(this$) {
      return function(p1__17773_SHARP_, p2__17772_SHARP_) {
        return cljs.core.reset_BANG_.call(null, self__.ratom, p2__17772_SHARP_);
      };
    }(this$) : function(this$) {
      return function(p1__17775_SHARP_, p2__17774_SHARP_) {
        return cljs.core.swap_BANG_.call(null, self__.ratom, cljs.core.assoc_in, self__.path, p2__17774_SHARP_);
      };
    }(this$)) : reagent.ratom.make_reaction.call(null, function(this$) {
      return function() {
        return self__.ratom.call(null, self__.path);
      };
    }(this$), new cljs.core.Keyword(null, "on-set", "on-set", -140953470), function(this$) {
      return function(p1__17777_SHARP_, p2__17776_SHARP_) {
        return self__.ratom.call(null, self__.path, p2__17776_SHARP_);
      };
    }(this$));
  } else {
    return self__.reaction;
  }
};
reagent.ratom.RCursor.prototype._peek = function() {
  var self__ = this;
  var this$ = this;
  var _STAR_ratom_context_STAR_17779 = reagent.ratom._STAR_ratom_context_STAR_;
  try {
    reagent.ratom._STAR_ratom_context_STAR_ = null;
    return cljs.core._deref.call(null, this$._reaction());
  } finally {
    reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR_17779;
  }
};
reagent.ratom.RCursor.prototype.reagent$ratom$IReactiveAtom$ = true;
reagent.ratom.RCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  var a__$1 = this;
  cljs.core._write.call(null, writer, [cljs.core.str("#\x3cCursor: "), cljs.core.str(self__.path), cljs.core.str(" ")].join(""));
  cljs.core.pr_writer.call(null, a__$1._peek(), writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
reagent.ratom.RCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.ratom, self__.path], null));
};
reagent.ratom.RCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return other instanceof reagent.ratom.RCursor && cljs.core._EQ_.call(null, self__.path, other.path) && cljs.core._EQ_.call(null, self__.ratom, other.ratom);
};
reagent.ratom.RCursor.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = function(this$, new_value) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._reset_BANG_.call(null, this$__$1._reaction(), new_value);
};
reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = function(a, f) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._swap_BANG_.call(null, a__$1._reaction(), f);
};
reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = function(a, f, x) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._swap_BANG_.call(null, a__$1._reaction(), f, x);
};
reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = function(a, f, x, y) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._swap_BANG_.call(null, a__$1._reaction(), f, x, y);
};
reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = function(a, f, x, y, more) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._swap_BANG_.call(null, a__$1._reaction(), f, x, y, more);
};
reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._notify_watches.call(null, this$__$1._reaction(), oldval, newval);
};
reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._add_watch.call(null, this$__$1._reaction(), key, f);
};
reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._remove_watch.call(null, this$__$1._reaction(), key);
};
reagent.ratom.RCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._deref.call(null, this$__$1._reaction());
};
reagent.ratom.RCursor.cljs$lang$type = true;
reagent.ratom.RCursor.cljs$lang$ctorStr = "reagent.ratom/RCursor";
reagent.ratom.RCursor.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "reagent.ratom/RCursor");
};
reagent.ratom.__GT_RCursor = function __GT_RCursor(ratom, path, reaction) {
  return new reagent.ratom.RCursor(ratom, path, reaction);
};
reagent.ratom.cursor = function cursor(src, path) {
  if (function() {
    var G__17784 = path;
    if (G__17784) {
      var bit__4437__auto__ = G__17784.cljs$lang$protocol_mask$partition0$ & 32768;
      if (bit__4437__auto__ || G__17784.cljs$core$IDeref$) {
        return true;
      } else {
        if (!G__17784.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__17784);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__17784);
    }
  }()) {
    if (typeof console !== "undefined") {
      console.warn([cljs.core.str("Warning: "), cljs.core.str("Calling cursor with an atom as the second arg is "), cljs.core.str("deprecated, in (cursor "), cljs.core.str(src), cljs.core.str(" "), cljs.core.str(cljs.core.pr_str.call(null, path)), cljs.core.str(")")].join(""));
    } else {
    }
    if (function() {
      var G__17785 = path;
      if (G__17785) {
        var bit__4437__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3761__auto__ = bit__4437__auto__;
          if (cljs.core.truth_(or__3761__auto__)) {
            return or__3761__auto__;
          } else {
            return G__17785.reagent$ratom$IReactiveAtom$;
          }
        }())) {
          return true;
        } else {
          if (!G__17785.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, reagent.ratom.IReactiveAtom, G__17785);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, reagent.ratom.IReactiveAtom, G__17785);
      }
    }()) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("src must be a reactive atom, not "), cljs.core.str(cljs.core.pr_str.call(null, path))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IReactiveAtom", "IReactiveAtom", -991158427, null), new cljs.core.Symbol(null, "path", "path", 1452340359, null))))].join(""));
    }
    return new reagent.ratom.RCursor(path, src, null);
  } else {
    if (function() {
      var or__3761__auto__ = function() {
        var G__17787 = src;
        if (G__17787) {
          var bit__4437__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3761__auto__ = bit__4437__auto__;
            if (cljs.core.truth_(or__3761__auto__)) {
              return or__3761__auto__;
            } else {
              return G__17787.reagent$ratom$IReactiveAtom$;
            }
          }())) {
            return true;
          } else {
            if (!G__17787.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, reagent.ratom.IReactiveAtom, G__17787);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, reagent.ratom.IReactiveAtom, G__17787);
        }
      }();
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        return cljs.core.ifn_QMARK_.call(null, src) && !cljs.core.vector_QMARK_.call(null, src);
      }
    }()) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("src must be a reactive atom or a function, not "), cljs.core.str(cljs.core.pr_str.call(null, src))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IReactiveAtom", "IReactiveAtom", -991158427, null), 
      new cljs.core.Symbol(null, "src", "src", -10544524, null)), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "src", "src", -10544524, null)), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "vector?", "vector?", -61367869, null), new cljs.core.Symbol(null, "src", "src", -10544524, null)))))))].join(""));
    }
    return new reagent.ratom.RCursor(src, path, null);
  }
};
reagent.ratom.IDisposable = function() {
  var obj17789 = {};
  return obj17789;
}();
reagent.ratom.dispose_BANG_ = function dispose_BANG_(this$) {
  if (function() {
    var and__3749__auto__ = this$;
    if (and__3749__auto__) {
      return this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1(this$);
  } else {
    var x__4400__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3761__auto__ = reagent.ratom.dispose_BANG_[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = reagent.ratom.dispose_BANG_["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDisposable.dispose!", this$);
        }
      }
    }().call(null, this$);
  }
};
reagent.ratom.IRunnable = function() {
  var obj17791 = {};
  return obj17791;
}();
reagent.ratom.run = function run(this$) {
  if (function() {
    var and__3749__auto__ = this$;
    if (and__3749__auto__) {
      return this$.reagent$ratom$IRunnable$run$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return this$.reagent$ratom$IRunnable$run$arity$1(this$);
  } else {
    var x__4400__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3761__auto__ = reagent.ratom.run[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = reagent.ratom.run["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRunnable.run", this$);
        }
      }
    }().call(null, this$);
  }
};
reagent.ratom.IComputedImpl = function() {
  var obj17793 = {};
  return obj17793;
}();
reagent.ratom._update_watching = function _update_watching(this$, derefed) {
  if (function() {
    var and__3749__auto__ = this$;
    if (and__3749__auto__) {
      return this$.reagent$ratom$IComputedImpl$_update_watching$arity$2;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return this$.reagent$ratom$IComputedImpl$_update_watching$arity$2(this$, derefed);
  } else {
    var x__4400__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3761__auto__ = reagent.ratom._update_watching[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = reagent.ratom._update_watching["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComputedImpl.-update-watching", this$);
        }
      }
    }().call(null, this$, derefed);
  }
};
reagent.ratom._handle_change = function _handle_change(k, sender, oldval, newval) {
  if (function() {
    var and__3749__auto__ = k;
    if (and__3749__auto__) {
      return k.reagent$ratom$IComputedImpl$_handle_change$arity$4;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return k.reagent$ratom$IComputedImpl$_handle_change$arity$4(k, sender, oldval, newval);
  } else {
    var x__4400__auto__ = k == null ? null : k;
    return function() {
      var or__3761__auto__ = reagent.ratom._handle_change[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = reagent.ratom._handle_change["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComputedImpl.-handle-change", k);
        }
      }
    }().call(null, k, sender, oldval, newval);
  }
};
reagent.ratom._peek_at = function _peek_at(this$) {
  if (function() {
    var and__3749__auto__ = this$;
    if (and__3749__auto__) {
      return this$.reagent$ratom$IComputedImpl$_peek_at$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return this$.reagent$ratom$IComputedImpl$_peek_at$arity$1(this$);
  } else {
    var x__4400__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3761__auto__ = reagent.ratom._peek_at[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = reagent.ratom._peek_at["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComputedImpl.-peek-at", this$);
        }
      }
    }().call(null, this$);
  }
};
reagent.ratom.Reaction = function(f, state, dirty_QMARK_, active_QMARK_, watching, watches, auto_run, on_set, on_dispose) {
  this.f = f;
  this.state = state;
  this.dirty_QMARK_ = dirty_QMARK_;
  this.active_QMARK_ = active_QMARK_;
  this.watching = watching;
  this.watches = watches;
  this.auto_run = auto_run;
  this.on_set = on_set;
  this.on_dispose = on_dispose;
  this.cljs$lang$protocol_mask$partition0$ = 2153807872;
  this.cljs$lang$protocol_mask$partition1$ = 114690;
};
reagent.ratom.Reaction.prototype.reagent$ratom$IComputedImpl$ = true;
reagent.ratom.Reaction.prototype.reagent$ratom$IComputedImpl$_handle_change$arity$4 = function(this$, sender, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3749__auto__ = self__.active_QMARK_;
    if (cljs.core.truth_(and__3749__auto__)) {
      return cljs.core.not.call(null, self__.dirty_QMARK_) && !(oldval === newval);
    } else {
      return and__3749__auto__;
    }
  }())) {
    self__.dirty_QMARK_ = true;
    return function() {
      var or__3761__auto__ = self__.auto_run;
      if (cljs.core.truth_(or__3761__auto__)) {
        return or__3761__auto__;
      } else {
        return reagent.ratom.run;
      }
    }().call(null, this$__$1);
  } else {
    return null;
  }
};
reagent.ratom.Reaction.prototype.reagent$ratom$IComputedImpl$_update_watching$arity$2 = function(this$, derefed) {
  var self__ = this;
  var this$__$1 = this;
  var seq__17794_17807 = cljs.core.seq.call(null, derefed);
  var chunk__17795_17808 = null;
  var count__17796_17809 = 0;
  var i__17797_17810 = 0;
  while (true) {
    if (i__17797_17810 < count__17796_17809) {
      var w_17811 = cljs.core._nth.call(null, chunk__17795_17808, i__17797_17810);
      if (cljs.core.contains_QMARK_.call(null, self__.watching, w_17811)) {
      } else {
        cljs.core.add_watch.call(null, w_17811, this$__$1, reagent.ratom._handle_change);
      }
      var G__17812 = seq__17794_17807;
      var G__17813 = chunk__17795_17808;
      var G__17814 = count__17796_17809;
      var G__17815 = i__17797_17810 + 1;
      seq__17794_17807 = G__17812;
      chunk__17795_17808 = G__17813;
      count__17796_17809 = G__17814;
      i__17797_17810 = G__17815;
      continue;
    } else {
      var temp__4126__auto___17816 = cljs.core.seq.call(null, seq__17794_17807);
      if (temp__4126__auto___17816) {
        var seq__17794_17817__$1 = temp__4126__auto___17816;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__17794_17817__$1)) {
          var c__4543__auto___17818 = cljs.core.chunk_first.call(null, seq__17794_17817__$1);
          var G__17819 = cljs.core.chunk_rest.call(null, seq__17794_17817__$1);
          var G__17820 = c__4543__auto___17818;
          var G__17821 = cljs.core.count.call(null, c__4543__auto___17818);
          var G__17822 = 0;
          seq__17794_17807 = G__17819;
          chunk__17795_17808 = G__17820;
          count__17796_17809 = G__17821;
          i__17797_17810 = G__17822;
          continue;
        } else {
          var w_17823 = cljs.core.first.call(null, seq__17794_17817__$1);
          if (cljs.core.contains_QMARK_.call(null, self__.watching, w_17823)) {
          } else {
            cljs.core.add_watch.call(null, w_17823, this$__$1, reagent.ratom._handle_change);
          }
          var G__17824 = cljs.core.next.call(null, seq__17794_17817__$1);
          var G__17825 = null;
          var G__17826 = 0;
          var G__17827 = 0;
          seq__17794_17807 = G__17824;
          chunk__17795_17808 = G__17825;
          count__17796_17809 = G__17826;
          i__17797_17810 = G__17827;
          continue;
        }
      } else {
      }
    }
    break;
  }
  var seq__17798_17828 = cljs.core.seq.call(null, self__.watching);
  var chunk__17799_17829 = null;
  var count__17800_17830 = 0;
  var i__17801_17831 = 0;
  while (true) {
    if (i__17801_17831 < count__17800_17830) {
      var w_17832 = cljs.core._nth.call(null, chunk__17799_17829, i__17801_17831);
      if (cljs.core.contains_QMARK_.call(null, derefed, w_17832)) {
      } else {
        cljs.core.remove_watch.call(null, w_17832, this$__$1);
      }
      var G__17833 = seq__17798_17828;
      var G__17834 = chunk__17799_17829;
      var G__17835 = count__17800_17830;
      var G__17836 = i__17801_17831 + 1;
      seq__17798_17828 = G__17833;
      chunk__17799_17829 = G__17834;
      count__17800_17830 = G__17835;
      i__17801_17831 = G__17836;
      continue;
    } else {
      var temp__4126__auto___17837 = cljs.core.seq.call(null, seq__17798_17828);
      if (temp__4126__auto___17837) {
        var seq__17798_17838__$1 = temp__4126__auto___17837;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__17798_17838__$1)) {
          var c__4543__auto___17839 = cljs.core.chunk_first.call(null, seq__17798_17838__$1);
          var G__17840 = cljs.core.chunk_rest.call(null, seq__17798_17838__$1);
          var G__17841 = c__4543__auto___17839;
          var G__17842 = cljs.core.count.call(null, c__4543__auto___17839);
          var G__17843 = 0;
          seq__17798_17828 = G__17840;
          chunk__17799_17829 = G__17841;
          count__17800_17830 = G__17842;
          i__17801_17831 = G__17843;
          continue;
        } else {
          var w_17844 = cljs.core.first.call(null, seq__17798_17838__$1);
          if (cljs.core.contains_QMARK_.call(null, derefed, w_17844)) {
          } else {
            cljs.core.remove_watch.call(null, w_17844, this$__$1);
          }
          var G__17845 = cljs.core.next.call(null, seq__17798_17838__$1);
          var G__17846 = null;
          var G__17847 = 0;
          var G__17848 = 0;
          seq__17798_17828 = G__17845;
          chunk__17799_17829 = G__17846;
          count__17800_17830 = G__17847;
          i__17801_17831 = G__17848;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return self__.watching = derefed;
};
reagent.ratom.Reaction.prototype.reagent$ratom$IComputedImpl$_peek_at$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.not.call(null, self__.dirty_QMARK_)) {
    return self__.state;
  } else {
    var _STAR_ratom_context_STAR_17802 = reagent.ratom._STAR_ratom_context_STAR_;
    try {
      reagent.ratom._STAR_ratom_context_STAR_ = null;
      return cljs.core._deref.call(null, this$__$1);
    } finally {
      reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR_17802;
    }
  }
};
reagent.ratom.Reaction.prototype.reagent$ratom$IReactiveAtom$ = true;
reagent.ratom.Reaction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this$, writer, opts) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core._write.call(null, writer, [cljs.core.str("#\x3cReaction "), cljs.core.str(cljs.core.hash.call(null, this$__$1)), cljs.core.str(": ")].join(""));
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
reagent.ratom.Reaction.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
reagent.ratom.Reaction.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$ = true;
reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$dispose_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var seq__17803_17849 = cljs.core.seq.call(null, self__.watching);
  var chunk__17804_17850 = null;
  var count__17805_17851 = 0;
  var i__17806_17852 = 0;
  while (true) {
    if (i__17806_17852 < count__17805_17851) {
      var w_17853 = cljs.core._nth.call(null, chunk__17804_17850, i__17806_17852);
      cljs.core.remove_watch.call(null, w_17853, this$__$1);
      var G__17854 = seq__17803_17849;
      var G__17855 = chunk__17804_17850;
      var G__17856 = count__17805_17851;
      var G__17857 = i__17806_17852 + 1;
      seq__17803_17849 = G__17854;
      chunk__17804_17850 = G__17855;
      count__17805_17851 = G__17856;
      i__17806_17852 = G__17857;
      continue;
    } else {
      var temp__4126__auto___17858 = cljs.core.seq.call(null, seq__17803_17849);
      if (temp__4126__auto___17858) {
        var seq__17803_17859__$1 = temp__4126__auto___17858;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__17803_17859__$1)) {
          var c__4543__auto___17860 = cljs.core.chunk_first.call(null, seq__17803_17859__$1);
          var G__17861 = cljs.core.chunk_rest.call(null, seq__17803_17859__$1);
          var G__17862 = c__4543__auto___17860;
          var G__17863 = cljs.core.count.call(null, c__4543__auto___17860);
          var G__17864 = 0;
          seq__17803_17849 = G__17861;
          chunk__17804_17850 = G__17862;
          count__17805_17851 = G__17863;
          i__17806_17852 = G__17864;
          continue;
        } else {
          var w_17865 = cljs.core.first.call(null, seq__17803_17859__$1);
          cljs.core.remove_watch.call(null, w_17865, this$__$1);
          var G__17866 = cljs.core.next.call(null, seq__17803_17859__$1);
          var G__17867 = null;
          var G__17868 = 0;
          var G__17869 = 0;
          seq__17803_17849 = G__17866;
          chunk__17804_17850 = G__17867;
          count__17805_17851 = G__17868;
          i__17806_17852 = G__17869;
          continue;
        }
      } else {
      }
    }
    break;
  }
  self__.watching = null;
  self__.state = null;
  self__.dirty_QMARK_ = true;
  if (cljs.core.truth_(self__.active_QMARK_)) {
    if (cljs.core.truth_(reagent.ratom.debug)) {
      cljs.core.swap_BANG_.call(null, reagent.ratom._running, cljs.core.dec);
    } else {
    }
    self__.active_QMARK_ = false;
  } else {
  }
  if (cljs.core.truth_(self__.on_dispose)) {
    return self__.on_dispose.call(null);
  } else {
    return null;
  }
};
reagent.ratom.Reaction.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = function(a, newval) {
  var self__ = this;
  var a__$1 = this;
  var oldval = self__.state;
  self__.state = newval;
  if (cljs.core.truth_(self__.on_set)) {
    self__.dirty_QMARK_ = true;
    self__.on_set.call(null, oldval, newval);
  } else {
  }
  cljs.core._notify_watches.call(null, a__$1, oldval, newval);
  return newval;
};
reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = function(a, f__$1) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f__$1.call(null, reagent.ratom._peek_at.call(null, a__$1)));
};
reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = function(a, f__$1, x) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f__$1.call(null, reagent.ratom._peek_at.call(null, a__$1), x));
};
reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = function(a, f__$1, x, y) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f__$1.call(null, reagent.ratom._peek_at.call(null, a__$1), x, y));
};
reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = function(a, f__$1, x, y, more) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, cljs.core.apply.call(null, f__$1, reagent.ratom._peek_at.call(null, a__$1), x, y, more));
};
reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$ = true;
reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$run$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var oldstate = self__.state;
  var res = reagent.ratom.capture_derefed.call(null, self__.f, this$__$1);
  var derefed = reagent.ratom.captured.call(null, this$__$1);
  if (cljs.core.not_EQ_.call(null, derefed, self__.watching)) {
    reagent.ratom._update_watching.call(null, this$__$1, derefed);
  } else {
  }
  if (cljs.core.truth_(self__.active_QMARK_)) {
  } else {
    if (cljs.core.truth_(reagent.ratom.debug)) {
      cljs.core.swap_BANG_.call(null, reagent.ratom._running, cljs.core.inc);
    } else {
    }
    self__.active_QMARK_ = true;
  }
  self__.dirty_QMARK_ = false;
  self__.state = res;
  cljs.core._notify_watches.call(null, this$__$1, oldstate, self__.state);
  return res;
};
reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.reduce_kv.call(null, function(this$__$1) {
    return function(_, key, f__$1) {
      f__$1.call(null, key, this$__$1, oldval, newval);
      return null;
    };
  }(this$__$1), null, self__.watches);
};
reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, k, wf) {
  var self__ = this;
  var this$__$1 = this;
  return self__.watches = cljs.core.assoc.call(null, self__.watches, k, wf);
};
reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  self__.watches = cljs.core.dissoc.call(null, self__.watches, k);
  if (cljs.core.empty_QMARK_.call(null, self__.watches) && cljs.core.not.call(null, self__.auto_run)) {
    return reagent.ratom.dispose_BANG_.call(null, this$__$1);
  } else {
    return null;
  }
};
reagent.ratom.Reaction.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.truth_(function() {
    var or__3761__auto__ = self__.auto_run;
    if (cljs.core.truth_(or__3761__auto__)) {
      return or__3761__auto__;
    } else {
      return cljs.core.some_QMARK_.call(null, reagent.ratom._STAR_ratom_context_STAR_);
    }
  }())) {
    reagent.ratom.notify_deref_watcher_BANG_.call(null, this$__$1);
    if (cljs.core.truth_(self__.dirty_QMARK_)) {
      return reagent.ratom.run.call(null, this$__$1);
    } else {
      return self__.state;
    }
  } else {
    if (cljs.core.truth_(self__.dirty_QMARK_)) {
      var oldstate_17870 = self__.state;
      self__.state = self__.f.call(null);
      if (oldstate_17870 === self__.state) {
      } else {
        cljs.core._notify_watches.call(null, this$__$1, oldstate_17870, self__.state);
      }
    } else {
    }
    return self__.state;
  }
};
reagent.ratom.Reaction.cljs$lang$type = true;
reagent.ratom.Reaction.cljs$lang$ctorStr = "reagent.ratom/Reaction";
reagent.ratom.Reaction.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "reagent.ratom/Reaction");
};
reagent.ratom.__GT_Reaction = function __GT_Reaction(f, state, dirty_QMARK_, active_QMARK_, watching, watches, auto_run, on_set, on_dispose) {
  return new reagent.ratom.Reaction(f, state, dirty_QMARK_, active_QMARK_, watching, watches, auto_run, on_set, on_dispose);
};
reagent.ratom.make_reaction = function() {
  var make_reaction__delegate = function(f, p__17871) {
    var map__17873 = p__17871;
    var map__17873__$1 = cljs.core.seq_QMARK_.call(null, map__17873) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17873) : map__17873;
    var derefed = cljs.core.get.call(null, map__17873__$1, new cljs.core.Keyword(null, "derefed", "derefed", 590684583));
    var on_dispose = cljs.core.get.call(null, map__17873__$1, new cljs.core.Keyword(null, "on-dispose", "on-dispose", 2105306360));
    var on_set = cljs.core.get.call(null, map__17873__$1, new cljs.core.Keyword(null, "on-set", "on-set", -140953470));
    var auto_run = cljs.core.get.call(null, map__17873__$1, new cljs.core.Keyword(null, "auto-run", "auto-run", 1958400437));
    var runner = cljs.core._EQ_.call(null, auto_run, true) ? reagent.ratom.run : auto_run;
    var active = !(derefed == null);
    var dirty = !active;
    var reaction = new reagent.ratom.Reaction(f, null, dirty, active, null, null, runner, on_set, on_dispose);
    if (derefed == null) {
    } else {
      if (cljs.core.truth_(reagent.ratom.debug)) {
        cljs.core.swap_BANG_.call(null, reagent.ratom._running, cljs.core.inc);
      } else {
      }
      reagent.ratom._update_watching.call(null, reaction, derefed);
    }
    return reaction;
  };
  var make_reaction = function(f, var_args) {
    var p__17871 = null;
    if (arguments.length > 1) {
      p__17871 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return make_reaction__delegate.call(this, f, p__17871);
  };
  make_reaction.cljs$lang$maxFixedArity = 1;
  make_reaction.cljs$lang$applyTo = function(arglist__17874) {
    var f = cljs.core.first(arglist__17874);
    var p__17871 = cljs.core.rest(arglist__17874);
    return make_reaction__delegate(f, p__17871);
  };
  make_reaction.cljs$core$IFn$_invoke$arity$variadic = make_reaction__delegate;
  return make_reaction;
}();
reagent.ratom.Wrapper = function(state, callback, changed, watches) {
  this.state = state;
  this.callback = callback;
  this.changed = changed;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2149613568;
  this.cljs$lang$protocol_mask$partition1$ = 114690;
};
reagent.ratom.Wrapper.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  cljs.core._write.call(null, writer, "#\x3cwrap: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.reduce_kv.call(null, function(this$__$1) {
    return function(_, key, f) {
      f.call(null, key, this$__$1, oldval, newval);
      return null;
    };
  }(this$__$1), null, self__.watches);
};
reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  return self__.watches = cljs.core.assoc.call(null, self__.watches, key, f);
};
reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return self__.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
reagent.ratom.Wrapper.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof reagent.ratom.Wrapper && cljs.core.not.call(null, self__.changed) && cljs.core.not.call(null, other.changed) && cljs.core._EQ_.call(null, self__.state, other.state) && cljs.core._EQ_.call(null, self__.callback, other.callback);
};
reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = function(a, f) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state));
};
reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = function(a, f, x) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state, x));
};
reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = function(a, f, x, y) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state, x, y));
};
reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = function(a, f, x, y, more) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, cljs.core.apply.call(null, f, self__.state, x, y, more));
};
reagent.ratom.Wrapper.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = function(this$, newval) {
  var self__ = this;
  var this$__$1 = this;
  var oldval = self__.state;
  self__.changed = true;
  self__.state = newval;
  if (self__.watches == null) {
  } else {
    cljs.core._notify_watches.call(null, this$__$1, oldval, newval);
  }
  self__.callback.call(null, newval);
  return newval;
};
reagent.ratom.Wrapper.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3749__auto__ = self__.changed;
    if (cljs.core.truth_(and__3749__auto__)) {
      return cljs.core.some_QMARK_.call(null, reagent.ratom._STAR_ratom_context_STAR_);
    } else {
      return and__3749__auto__;
    }
  }())) {
    if (typeof console !== "undefined") {
      console.warn([cljs.core.str("Warning: "), cljs.core.str("derefing stale wrap: "), cljs.core.str(cljs.core.pr_str.call(null, this$__$1))].join(""));
    } else {
    }
  } else {
  }
  return self__.state;
};
reagent.ratom.Wrapper.cljs$lang$type = true;
reagent.ratom.Wrapper.cljs$lang$ctorStr = "reagent.ratom/Wrapper";
reagent.ratom.Wrapper.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "reagent.ratom/Wrapper");
};
reagent.ratom.__GT_Wrapper = function __GT_Wrapper(state, callback, changed, watches) {
  return new reagent.ratom.Wrapper(state, callback, changed, watches);
};
reagent.ratom.make_wrapper = function make_wrapper(value, callback_fn, args) {
  return new reagent.ratom.Wrapper(value, new reagent.impl.util.partial_ifn(callback_fn, args, null), false, null);
};
/*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/
goog.provide("cljsjs.react");
!function(e) {
  if ("object" == typeof exports && "undefined" != typeof module) {
    module.exports = e();
  } else {
    if ("function" == typeof define && define.amd) {
      define([], e);
    } else {
      var f;
      "undefined" != typeof window ? f = window : "undefined" != typeof global ? f = global : "undefined" != typeof self && (f = self), f.React = e();
    }
  }
}(function() {
  var define, module, exports;
  return function e(t, n, r) {
    function s(o, u) {
      if (!n[o]) {
        if (!t[o]) {
          var a = typeof require == "function" && require;
          if (!u && a) {
            return a(o, !0);
          }
          if (i) {
            return i(o, !0);
          }
          var f = new Error("Cannot find module '" + o + "'");
          throw f.code = "MODULE_NOT_FOUND", f;
        }
        var l = n[o] = {exports:{}};
        t[o][0].call(l.exports, function(e) {
          var n = t[o][1][e];
          return s(n ? n : e);
        }, l, l.exports, e, t, n, r);
      }
      return n[o].exports;
    }
    var i = typeof require == "function" && require;
    for (var o = 0;o < r.length;o++) {
      s(r[o]);
    }
    return s;
  }({1:[function(_dereq_, module, exports) {
    var DOMPropertyOperations = _dereq_("./DOMPropertyOperations");
    var EventPluginUtils = _dereq_("./EventPluginUtils");
    var ReactChildren = _dereq_("./ReactChildren");
    var ReactComponent = _dereq_("./ReactComponent");
    var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
    var ReactContext = _dereq_("./ReactContext");
    var ReactCurrentOwner = _dereq_("./ReactCurrentOwner");
    var ReactElement = _dereq_("./ReactElement");
    var ReactElementValidator = _dereq_("./ReactElementValidator");
    var ReactDOM = _dereq_("./ReactDOM");
    var ReactDOMComponent = _dereq_("./ReactDOMComponent");
    var ReactDefaultInjection = _dereq_("./ReactDefaultInjection");
    var ReactInstanceHandles = _dereq_("./ReactInstanceHandles");
    var ReactLegacyElement = _dereq_("./ReactLegacyElement");
    var ReactMount = _dereq_("./ReactMount");
    var ReactMultiChild = _dereq_("./ReactMultiChild");
    var ReactPerf = _dereq_("./ReactPerf");
    var ReactPropTypes = _dereq_("./ReactPropTypes");
    var ReactServerRendering = _dereq_("./ReactServerRendering");
    var ReactTextComponent = _dereq_("./ReactTextComponent");
    var assign = _dereq_("./Object.assign");
    var deprecated = _dereq_("./deprecated");
    var onlyChild = _dereq_("./onlyChild");
    ReactDefaultInjection.inject();
    var createElement = ReactElement.createElement;
    var createFactory = ReactElement.createFactory;
    if ("production" !== "development") {
      createElement = ReactElementValidator.createElement;
      createFactory = ReactElementValidator.createFactory;
    }
    createElement = ReactLegacyElement.wrapCreateElement(createElement);
    createFactory = ReactLegacyElement.wrapCreateFactory(createFactory);
    var render = ReactPerf.measure("React", "render", ReactMount.render);
    var React = {Children:{map:ReactChildren.map, forEach:ReactChildren.forEach, count:ReactChildren.count, only:onlyChild}, DOM:ReactDOM, PropTypes:ReactPropTypes, initializeTouchEvents:function(shouldUseTouch) {
      EventPluginUtils.useTouchEvents = shouldUseTouch;
    }, createClass:ReactCompositeComponent.createClass, createElement:createElement, createFactory:createFactory, constructAndRenderComponent:ReactMount.constructAndRenderComponent, constructAndRenderComponentByID:ReactMount.constructAndRenderComponentByID, render:render, renderToString:ReactServerRendering.renderToString, renderToStaticMarkup:ReactServerRendering.renderToStaticMarkup, unmountComponentAtNode:ReactMount.unmountComponentAtNode, isValidClass:ReactLegacyElement.isValidClass, isValidElement:ReactElement.isValidElement, 
    withContext:ReactContext.withContext, __spread:assign, renderComponent:deprecated("React", "renderComponent", "render", this, render), renderComponentToString:deprecated("React", "renderComponentToString", "renderToString", this, ReactServerRendering.renderToString), renderComponentToStaticMarkup:deprecated("React", "renderComponentToStaticMarkup", "renderToStaticMarkup", this, ReactServerRendering.renderToStaticMarkup), isValidComponent:deprecated("React", "isValidComponent", "isValidElement", 
    this, ReactElement.isValidElement)};
    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === "function") {
      __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({Component:ReactComponent, CurrentOwner:ReactCurrentOwner, DOMComponent:ReactDOMComponent, DOMPropertyOperations:DOMPropertyOperations, InstanceHandles:ReactInstanceHandles, Mount:ReactMount, MultiChild:ReactMultiChild, TextComponent:ReactTextComponent});
    }
    if ("production" !== "development") {
      var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
      if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
        if (navigator.userAgent.indexOf("Chrome") > -1) {
          if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined") {
            console.debug("Download the React DevTools for a better development experience: " + "http://fb.me/react-devtools");
          }
        }
        var expectedFeatures = [Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim, Object.create, Object.freeze];
        for (var i = 0;i < expectedFeatures.length;i++) {
          if (!expectedFeatures[i]) {
            console.error("One or more ES5 shim/shams expected by React are not available: " + "http://fb.me/react-warning-polyfills");
            break;
          }
        }
      }
    }
    React.version = "0.12.2";
    module.exports = React;
  }, {"./DOMPropertyOperations":12, "./EventPluginUtils":20, "./ExecutionEnvironment":22, "./Object.assign":27, "./ReactChildren":31, "./ReactComponent":32, "./ReactCompositeComponent":34, "./ReactContext":35, "./ReactCurrentOwner":36, "./ReactDOM":37, "./ReactDOMComponent":39, "./ReactDefaultInjection":49, "./ReactElement":52, "./ReactElementValidator":53, "./ReactInstanceHandles":60, "./ReactLegacyElement":61, "./ReactMount":63, "./ReactMultiChild":64, "./ReactPerf":68, "./ReactPropTypes":72, "./ReactServerRendering":76, 
  "./ReactTextComponent":78, "./deprecated":106, "./onlyChild":137}], 2:[function(_dereq_, module, exports) {
    var focusNode = _dereq_("./focusNode");
    var AutoFocusMixin = {componentDidMount:function() {
      if (this.props.autoFocus) {
        focusNode(this.getDOMNode());
      }
    }};
    module.exports = AutoFocusMixin;
  }, {"./focusNode":111}], 3:[function(_dereq_, module, exports) {
    var EventConstants = _dereq_("./EventConstants");
    var EventPropagators = _dereq_("./EventPropagators");
    var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
    var SyntheticInputEvent = _dereq_("./SyntheticInputEvent");
    var keyOf = _dereq_("./keyOf");
    var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && "TextEvent" in window && !("documentMode" in document || isPresto());
    function isPresto() {
      var opera = window.opera;
      return typeof opera === "object" && typeof opera.version === "function" && parseInt(opera.version(), 10) <= 12;
    }
    var SPACEBAR_CODE = 32;
    var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
    var topLevelTypes = EventConstants.topLevelTypes;
    var eventTypes = {beforeInput:{phasedRegistrationNames:{bubbled:keyOf({onBeforeInput:null}), captured:keyOf({onBeforeInputCapture:null})}, dependencies:[topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]}};
    var fallbackChars = null;
    var hasSpaceKeypress = false;
    function isKeypressCommand(nativeEvent) {
      return(nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && !(nativeEvent.ctrlKey && nativeEvent.altKey);
    }
    var BeforeInputEventPlugin = {eventTypes:eventTypes, extractEvents:function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent) {
      var chars;
      if (canUseTextInputEvent) {
        switch(topLevelType) {
          case topLevelTypes.topKeyPress:
            var which = nativeEvent.which;
            if (which !== SPACEBAR_CODE) {
              return;
            }
            hasSpaceKeypress = true;
            chars = SPACEBAR_CHAR;
            break;
          case topLevelTypes.topTextInput:
            chars = nativeEvent.data;
            if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
              return;
            }
            break;
          default:
            return;
        }
      } else {
        switch(topLevelType) {
          case topLevelTypes.topPaste:
            fallbackChars = null;
            break;
          case topLevelTypes.topKeyPress:
            if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
              fallbackChars = String.fromCharCode(nativeEvent.which);
            }
            break;
          case topLevelTypes.topCompositionEnd:
            fallbackChars = nativeEvent.data;
            break;
        }
        if (fallbackChars === null) {
          return;
        }
        chars = fallbackChars;
      }
      if (!chars) {
        return;
      }
      var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, topLevelTargetID, nativeEvent);
      event.data = chars;
      fallbackChars = null;
      EventPropagators.accumulateTwoPhaseDispatches(event);
      return event;
    }};
    module.exports = BeforeInputEventPlugin;
  }, {"./EventConstants":16, "./EventPropagators":21, "./ExecutionEnvironment":22, "./SyntheticInputEvent":89, "./keyOf":133}], 4:[function(_dereq_, module, exports) {
    var isUnitlessNumber = {columnCount:true, flex:true, flexGrow:true, flexShrink:true, fontWeight:true, lineClamp:true, lineHeight:true, opacity:true, order:true, orphans:true, widows:true, zIndex:true, zoom:true, fillOpacity:true, strokeOpacity:true};
    function prefixKey(prefix, key) {
      return prefix + key.charAt(0).toUpperCase() + key.substring(1);
    }
    var prefixes = ["Webkit", "ms", "Moz", "O"];
    Object.keys(isUnitlessNumber).forEach(function(prop) {
      prefixes.forEach(function(prefix) {
        isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
      });
    });
    var shorthandPropertyExpansions = {background:{backgroundImage:true, backgroundPosition:true, backgroundRepeat:true, backgroundColor:true}, border:{borderWidth:true, borderStyle:true, borderColor:true}, borderBottom:{borderBottomWidth:true, borderBottomStyle:true, borderBottomColor:true}, borderLeft:{borderLeftWidth:true, borderLeftStyle:true, borderLeftColor:true}, borderRight:{borderRightWidth:true, borderRightStyle:true, borderRightColor:true}, borderTop:{borderTopWidth:true, borderTopStyle:true, 
    borderTopColor:true}, font:{fontStyle:true, fontVariant:true, fontWeight:true, fontSize:true, lineHeight:true, fontFamily:true}};
    var CSSProperty = {isUnitlessNumber:isUnitlessNumber, shorthandPropertyExpansions:shorthandPropertyExpansions};
    module.exports = CSSProperty;
  }, {}], 5:[function(_dereq_, module, exports) {
    var CSSProperty = _dereq_("./CSSProperty");
    var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
    var camelizeStyleName = _dereq_("./camelizeStyleName");
    var dangerousStyleValue = _dereq_("./dangerousStyleValue");
    var hyphenateStyleName = _dereq_("./hyphenateStyleName");
    var memoizeStringOnly = _dereq_("./memoizeStringOnly");
    var warning = _dereq_("./warning");
    var processStyleName = memoizeStringOnly(function(styleName) {
      return hyphenateStyleName(styleName);
    });
    var styleFloatAccessor = "cssFloat";
    if (ExecutionEnvironment.canUseDOM) {
      if (document.documentElement.style.cssFloat === undefined) {
        styleFloatAccessor = "styleFloat";
      }
    }
    if ("production" !== "development") {
      var warnedStyleNames = {};
      var warnHyphenatedStyleName = function(name) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
          return;
        }
        warnedStyleNames[name] = true;
        "production" !== "development" ? warning(false, "Unsupported style property " + name + ". Did you mean " + camelizeStyleName(name) + "?") : null;
      };
    }
    var CSSPropertyOperations = {createMarkupForStyles:function(styles) {
      var serialized = "";
      for (var styleName in styles) {
        if (!styles.hasOwnProperty(styleName)) {
          continue;
        }
        if ("production" !== "development") {
          if (styleName.indexOf("-") > -1) {
            warnHyphenatedStyleName(styleName);
          }
        }
        var styleValue = styles[styleName];
        if (styleValue != null) {
          serialized += processStyleName(styleName) + ":";
          serialized += dangerousStyleValue(styleName, styleValue) + ";";
        }
      }
      return serialized || null;
    }, setValueForStyles:function(node, styles) {
      var style = node.style;
      for (var styleName in styles) {
        if (!styles.hasOwnProperty(styleName)) {
          continue;
        }
        if ("production" !== "development") {
          if (styleName.indexOf("-") > -1) {
            warnHyphenatedStyleName(styleName);
          }
        }
        var styleValue = dangerousStyleValue(styleName, styles[styleName]);
        if (styleName === "float") {
          styleName = styleFloatAccessor;
        }
        if (styleValue) {
          style[styleName] = styleValue;
        } else {
          var expansion = CSSProperty.shorthandPropertyExpansions[styleName];
          if (expansion) {
            for (var individualStyleName in expansion) {
              style[individualStyleName] = "";
            }
          } else {
            style[styleName] = "";
          }
        }
      }
    }};
    module.exports = CSSPropertyOperations;
  }, {"./CSSProperty":4, "./ExecutionEnvironment":22, "./camelizeStyleName":100, "./dangerousStyleValue":105, "./hyphenateStyleName":124, "./memoizeStringOnly":135, "./warning":145}], 6:[function(_dereq_, module, exports) {
    var PooledClass = _dereq_("./PooledClass");
    var assign = _dereq_("./Object.assign");
    var invariant = _dereq_("./invariant");
    function CallbackQueue() {
      this._callbacks = null;
      this._contexts = null;
    }
    assign(CallbackQueue.prototype, {enqueue:function(callback, context) {
      this._callbacks = this._callbacks || [];
      this._contexts = this._contexts || [];
      this._callbacks.push(callback);
      this._contexts.push(context);
    }, notifyAll:function() {
      var callbacks = this._callbacks;
      var contexts = this._contexts;
      if (callbacks) {
        "production" !== "development" ? invariant(callbacks.length === contexts.length, "Mismatched list of contexts in callback queue") : invariant(callbacks.length === contexts.length);
        this._callbacks = null;
        this._contexts = null;
        for (var i = 0, l = callbacks.length;i < l;i++) {
          callbacks[i].call(contexts[i]);
        }
        callbacks.length = 0;
        contexts.length = 0;
      }
    }, reset:function() {
      this._callbacks = null;
      this._contexts = null;
    }, destructor:function() {
      this.reset();
    }});
    PooledClass.addPoolingTo(CallbackQueue);
    module.exports = CallbackQueue;
  }, {"./Object.assign":27, "./PooledClass":28, "./invariant":126}], 7:[function(_dereq_, module, exports) {
    var EventConstants = _dereq_("./EventConstants");
    var EventPluginHub = _dereq_("./EventPluginHub");
    var EventPropagators = _dereq_("./EventPropagators");
    var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
    var ReactUpdates = _dereq_("./ReactUpdates");
    var SyntheticEvent = _dereq_("./SyntheticEvent");
    var isEventSupported = _dereq_("./isEventSupported");
    var isTextInputElement = _dereq_("./isTextInputElement");
    var keyOf = _dereq_("./keyOf");
    var topLevelTypes = EventConstants.topLevelTypes;
    var eventTypes = {change:{phasedRegistrationNames:{bubbled:keyOf({onChange:null}), captured:keyOf({onChangeCapture:null})}, dependencies:[topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]}};
    var activeElement = null;
    var activeElementID = null;
    var activeElementValue = null;
    var activeElementValueProp = null;
    function shouldUseChangeEvent(elem) {
      return elem.nodeName === "SELECT" || elem.nodeName === "INPUT" && elem.type === "file";
    }
    var doesChangeEventBubble = false;
    if (ExecutionEnvironment.canUseDOM) {
      doesChangeEventBubble = isEventSupported("change") && (!("documentMode" in document) || document.documentMode > 8);
    }
    function manualDispatchChangeEvent(nativeEvent) {
      var event = SyntheticEvent.getPooled(eventTypes.change, activeElementID, nativeEvent);
      EventPropagators.accumulateTwoPhaseDispatches(event);
      ReactUpdates.batchedUpdates(runEventInBatch, event);
    }
    function runEventInBatch(event) {
      EventPluginHub.enqueueEvents(event);
      EventPluginHub.processEventQueue();
    }
    function startWatchingForChangeEventIE8(target, targetID) {
      activeElement = target;
      activeElementID = targetID;
      activeElement.attachEvent("onchange", manualDispatchChangeEvent);
    }
    function stopWatchingForChangeEventIE8() {
      if (!activeElement) {
        return;
      }
      activeElement.detachEvent("onchange", manualDispatchChangeEvent);
      activeElement = null;
      activeElementID = null;
    }
    function getTargetIDForChangeEvent(topLevelType, topLevelTarget, topLevelTargetID) {
      if (topLevelType === topLevelTypes.topChange) {
        return topLevelTargetID;
      }
    }
    function handleEventsForChangeEventIE8(topLevelType, topLevelTarget, topLevelTargetID) {
      if (topLevelType === topLevelTypes.topFocus) {
        stopWatchingForChangeEventIE8();
        startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);
      } else {
        if (topLevelType === topLevelTypes.topBlur) {
          stopWatchingForChangeEventIE8();
        }
      }
    }
    var isInputEventSupported = false;
    if (ExecutionEnvironment.canUseDOM) {
      isInputEventSupported = isEventSupported("input") && (!("documentMode" in document) || document.documentMode > 9);
    }
    var newValueProp = {get:function() {
      return activeElementValueProp.get.call(this);
    }, set:function(val) {
      activeElementValue = "" + val;
      activeElementValueProp.set.call(this, val);
    }};
    function startWatchingForValueChange(target, targetID) {
      activeElement = target;
      activeElementID = targetID;
      activeElementValue = target.value;
      activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, "value");
      Object.defineProperty(activeElement, "value", newValueProp);
      activeElement.attachEvent("onpropertychange", handlePropertyChange);
    }
    function stopWatchingForValueChange() {
      if (!activeElement) {
        return;
      }
      delete activeElement.value;
      activeElement.detachEvent("onpropertychange", handlePropertyChange);
      activeElement = null;
      activeElementID = null;
      activeElementValue = null;
      activeElementValueProp = null;
    }
    function handlePropertyChange(nativeEvent) {
      if (nativeEvent.propertyName !== "value") {
        return;
      }
      var value = nativeEvent.srcElement.value;
      if (value === activeElementValue) {
        return;
      }
      activeElementValue = value;
      manualDispatchChangeEvent(nativeEvent);
    }
    function getTargetIDForInputEvent(topLevelType, topLevelTarget, topLevelTargetID) {
      if (topLevelType === topLevelTypes.topInput) {
        return topLevelTargetID;
      }
    }
    function handleEventsForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {
      if (topLevelType === topLevelTypes.topFocus) {
        stopWatchingForValueChange();
        startWatchingForValueChange(topLevelTarget, topLevelTargetID);
      } else {
        if (topLevelType === topLevelTypes.topBlur) {
          stopWatchingForValueChange();
        }
      }
    }
    function getTargetIDForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {
      if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {
        if (activeElement && activeElement.value !== activeElementValue) {
          activeElementValue = activeElement.value;
          return activeElementID;
        }
      }
    }
    function shouldUseClickEvent(elem) {
      return elem.nodeName === "INPUT" && (elem.type === "checkbox" || elem.type === "radio");
    }
    function getTargetIDForClickEvent(topLevelType, topLevelTarget, topLevelTargetID) {
      if (topLevelType === topLevelTypes.topClick) {
        return topLevelTargetID;
      }
    }
    var ChangeEventPlugin = {eventTypes:eventTypes, extractEvents:function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent) {
      var getTargetIDFunc, handleEventFunc;
      if (shouldUseChangeEvent(topLevelTarget)) {
        if (doesChangeEventBubble) {
          getTargetIDFunc = getTargetIDForChangeEvent;
        } else {
          handleEventFunc = handleEventsForChangeEventIE8;
        }
      } else {
        if (isTextInputElement(topLevelTarget)) {
          if (isInputEventSupported) {
            getTargetIDFunc = getTargetIDForInputEvent;
          } else {
            getTargetIDFunc = getTargetIDForInputEventIE;
            handleEventFunc = handleEventsForInputEventIE;
          }
        } else {
          if (shouldUseClickEvent(topLevelTarget)) {
            getTargetIDFunc = getTargetIDForClickEvent;
          }
        }
      }
      if (getTargetIDFunc) {
        var targetID = getTargetIDFunc(topLevelType, topLevelTarget, topLevelTargetID);
        if (targetID) {
          var event = SyntheticEvent.getPooled(eventTypes.change, targetID, nativeEvent);
          EventPropagators.accumulateTwoPhaseDispatches(event);
          return event;
        }
      }
      if (handleEventFunc) {
        handleEventFunc(topLevelType, topLevelTarget, topLevelTargetID);
      }
    }};
    module.exports = ChangeEventPlugin;
  }, {"./EventConstants":16, "./EventPluginHub":18, "./EventPropagators":21, "./ExecutionEnvironment":22, "./ReactUpdates":79, "./SyntheticEvent":87, "./isEventSupported":127, "./isTextInputElement":129, "./keyOf":133}], 8:[function(_dereq_, module, exports) {
    var nextReactRootIndex = 0;
    var ClientReactRootIndex = {createReactRootIndex:function() {
      return nextReactRootIndex++;
    }};
    module.exports = ClientReactRootIndex;
  }, {}], 9:[function(_dereq_, module, exports) {
    var EventConstants = _dereq_("./EventConstants");
    var EventPropagators = _dereq_("./EventPropagators");
    var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
    var ReactInputSelection = _dereq_("./ReactInputSelection");
    var SyntheticCompositionEvent = _dereq_("./SyntheticCompositionEvent");
    var getTextContentAccessor = _dereq_("./getTextContentAccessor");
    var keyOf = _dereq_("./keyOf");
    var END_KEYCODES = [9, 13, 27, 32];
    var START_KEYCODE = 229;
    var useCompositionEvent = ExecutionEnvironment.canUseDOM && "CompositionEvent" in window;
    var useFallbackData = !useCompositionEvent || "documentMode" in document && document.documentMode > 8 && document.documentMode <= 11;
    var topLevelTypes = EventConstants.topLevelTypes;
    var currentComposition = null;
    var eventTypes = {compositionEnd:{phasedRegistrationNames:{bubbled:keyOf({onCompositionEnd:null}), captured:keyOf({onCompositionEndCapture:null})}, dependencies:[topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]}, compositionStart:{phasedRegistrationNames:{bubbled:keyOf({onCompositionStart:null}), captured:keyOf({onCompositionStartCapture:null})}, dependencies:[topLevelTypes.topBlur, 
    topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]}, compositionUpdate:{phasedRegistrationNames:{bubbled:keyOf({onCompositionUpdate:null}), captured:keyOf({onCompositionUpdateCapture:null})}, dependencies:[topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]}};
    function getCompositionEventType(topLevelType) {
      switch(topLevelType) {
        case topLevelTypes.topCompositionStart:
          return eventTypes.compositionStart;
        case topLevelTypes.topCompositionEnd:
          return eventTypes.compositionEnd;
        case topLevelTypes.topCompositionUpdate:
          return eventTypes.compositionUpdate;
      }
    }
    function isFallbackStart(topLevelType, nativeEvent) {
      return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;
    }
    function isFallbackEnd(topLevelType, nativeEvent) {
      switch(topLevelType) {
        case topLevelTypes.topKeyUp:
          return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
        case topLevelTypes.topKeyDown:
          return nativeEvent.keyCode !== START_KEYCODE;
        case topLevelTypes.topKeyPress:
        ;
        case topLevelTypes.topMouseDown:
        ;
        case topLevelTypes.topBlur:
          return true;
        default:
          return false;
      }
    }
    function FallbackCompositionState(root) {
      this.root = root;
      this.startSelection = ReactInputSelection.getSelection(root);
      this.startValue = this.getText();
    }
    FallbackCompositionState.prototype.getText = function() {
      return this.root.value || this.root[getTextContentAccessor()];
    };
    FallbackCompositionState.prototype.getData = function() {
      var endValue = this.getText();
      var prefixLength = this.startSelection.start;
      var suffixLength = this.startValue.length - this.startSelection.end;
      return endValue.substr(prefixLength, endValue.length - suffixLength - prefixLength);
    };
    var CompositionEventPlugin = {eventTypes:eventTypes, extractEvents:function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent) {
      var eventType;
      var data;
      if (useCompositionEvent) {
        eventType = getCompositionEventType(topLevelType);
      } else {
        if (!currentComposition) {
          if (isFallbackStart(topLevelType, nativeEvent)) {
            eventType = eventTypes.compositionStart;
          }
        } else {
          if (isFallbackEnd(topLevelType, nativeEvent)) {
            eventType = eventTypes.compositionEnd;
          }
        }
      }
      if (useFallbackData) {
        if (!currentComposition && eventType === eventTypes.compositionStart) {
          currentComposition = new FallbackCompositionState(topLevelTarget);
        } else {
          if (eventType === eventTypes.compositionEnd) {
            if (currentComposition) {
              data = currentComposition.getData();
              currentComposition = null;
            }
          }
        }
      }
      if (eventType) {
        var event = SyntheticCompositionEvent.getPooled(eventType, topLevelTargetID, nativeEvent);
        if (data) {
          event.data = data;
        }
        EventPropagators.accumulateTwoPhaseDispatches(event);
        return event;
      }
    }};
    module.exports = CompositionEventPlugin;
  }, {"./EventConstants":16, "./EventPropagators":21, "./ExecutionEnvironment":22, "./ReactInputSelection":59, "./SyntheticCompositionEvent":85, "./getTextContentAccessor":121, "./keyOf":133}], 10:[function(_dereq_, module, exports) {
    var Danger = _dereq_("./Danger");
    var ReactMultiChildUpdateTypes = _dereq_("./ReactMultiChildUpdateTypes");
    var getTextContentAccessor = _dereq_("./getTextContentAccessor");
    var invariant = _dereq_("./invariant");
    var textContentAccessor = getTextContentAccessor();
    function insertChildAt(parentNode, childNode, index) {
      parentNode.insertBefore(childNode, parentNode.childNodes[index] || null);
    }
    var updateTextContent;
    if (textContentAccessor === "textContent") {
      updateTextContent = function(node, text) {
        node.textContent = text;
      };
    } else {
      updateTextContent = function(node, text) {
        while (node.firstChild) {
          node.removeChild(node.firstChild);
        }
        if (text) {
          var doc = node.ownerDocument || document;
          node.appendChild(doc.createTextNode(text));
        }
      };
    }
    var DOMChildrenOperations = {dangerouslyReplaceNodeWithMarkup:Danger.dangerouslyReplaceNodeWithMarkup, updateTextContent:updateTextContent, processUpdates:function(updates, markupList) {
      var update;
      var initialChildren = null;
      var updatedChildren = null;
      for (var i = 0;update = updates[i];i++) {
        if (update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING || update.type === ReactMultiChildUpdateTypes.REMOVE_NODE) {
          var updatedIndex = update.fromIndex;
          var updatedChild = update.parentNode.childNodes[updatedIndex];
          var parentID = update.parentID;
          "production" !== "development" ? invariant(updatedChild, "processUpdates(): Unable to find child %s of element. This " + "probably means the DOM was unexpectedly mutated (e.g., by the " + "browser), usually due to forgetting a \x3ctbody\x3e when using tables, " + "nesting tags like \x3cform\x3e, \x3cp\x3e, or \x3ca\x3e, or using non-SVG elements " + "in an \x3csvg\x3e parent. Try inspecting the child nodes of the element " + "with React ID `%s`.", updatedIndex, parentID) : invariant(updatedChild);
          initialChildren = initialChildren || {};
          initialChildren[parentID] = initialChildren[parentID] || [];
          initialChildren[parentID][updatedIndex] = updatedChild;
          updatedChildren = updatedChildren || [];
          updatedChildren.push(updatedChild);
        }
      }
      var renderedMarkup = Danger.dangerouslyRenderMarkup(markupList);
      if (updatedChildren) {
        for (var j = 0;j < updatedChildren.length;j++) {
          updatedChildren[j].parentNode.removeChild(updatedChildren[j]);
        }
      }
      for (var k = 0;update = updates[k];k++) {
        switch(update.type) {
          case ReactMultiChildUpdateTypes.INSERT_MARKUP:
            insertChildAt(update.parentNode, renderedMarkup[update.markupIndex], update.toIndex);
            break;
          case ReactMultiChildUpdateTypes.MOVE_EXISTING:
            insertChildAt(update.parentNode, initialChildren[update.parentID][update.fromIndex], update.toIndex);
            break;
          case ReactMultiChildUpdateTypes.TEXT_CONTENT:
            updateTextContent(update.parentNode, update.textContent);
            break;
          case ReactMultiChildUpdateTypes.REMOVE_NODE:
            break;
        }
      }
    }};
    module.exports = DOMChildrenOperations;
  }, {"./Danger":13, "./ReactMultiChildUpdateTypes":65, "./getTextContentAccessor":121, "./invariant":126}], 11:[function(_dereq_, module, exports) {
    var invariant = _dereq_("./invariant");
    function checkMask(value, bitmask) {
      return(value & bitmask) === bitmask;
    }
    var DOMPropertyInjection = {MUST_USE_ATTRIBUTE:1, MUST_USE_PROPERTY:2, HAS_SIDE_EFFECTS:4, HAS_BOOLEAN_VALUE:8, HAS_NUMERIC_VALUE:16, HAS_POSITIVE_NUMERIC_VALUE:32 | 16, HAS_OVERLOADED_BOOLEAN_VALUE:64, injectDOMPropertyConfig:function(domPropertyConfig) {
      var Properties = domPropertyConfig.Properties || {};
      var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
      var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
      var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};
      if (domPropertyConfig.isCustomAttribute) {
        DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
      }
      for (var propName in Properties) {
        "production" !== "development" ? invariant(!DOMProperty.isStandardName.hasOwnProperty(propName), "injectDOMPropertyConfig(...): You're trying to inject DOM property " + "'%s' which has already been injected. You may be accidentally " + "injecting the same DOM property config twice, or you may be " + "injecting two configs that have conflicting property names.", propName) : invariant(!DOMProperty.isStandardName.hasOwnProperty(propName));
        DOMProperty.isStandardName[propName] = true;
        var lowerCased = propName.toLowerCase();
        DOMProperty.getPossibleStandardName[lowerCased] = propName;
        if (DOMAttributeNames.hasOwnProperty(propName)) {
          var attributeName = DOMAttributeNames[propName];
          DOMProperty.getPossibleStandardName[attributeName] = propName;
          DOMProperty.getAttributeName[propName] = attributeName;
        } else {
          DOMProperty.getAttributeName[propName] = lowerCased;
        }
        DOMProperty.getPropertyName[propName] = DOMPropertyNames.hasOwnProperty(propName) ? DOMPropertyNames[propName] : propName;
        if (DOMMutationMethods.hasOwnProperty(propName)) {
          DOMProperty.getMutationMethod[propName] = DOMMutationMethods[propName];
        } else {
          DOMProperty.getMutationMethod[propName] = null;
        }
        var propConfig = Properties[propName];
        DOMProperty.mustUseAttribute[propName] = checkMask(propConfig, DOMPropertyInjection.MUST_USE_ATTRIBUTE);
        DOMProperty.mustUseProperty[propName] = checkMask(propConfig, DOMPropertyInjection.MUST_USE_PROPERTY);
        DOMProperty.hasSideEffects[propName] = checkMask(propConfig, DOMPropertyInjection.HAS_SIDE_EFFECTS);
        DOMProperty.hasBooleanValue[propName] = checkMask(propConfig, DOMPropertyInjection.HAS_BOOLEAN_VALUE);
        DOMProperty.hasNumericValue[propName] = checkMask(propConfig, DOMPropertyInjection.HAS_NUMERIC_VALUE);
        DOMProperty.hasPositiveNumericValue[propName] = checkMask(propConfig, DOMPropertyInjection.HAS_POSITIVE_NUMERIC_VALUE);
        DOMProperty.hasOverloadedBooleanValue[propName] = checkMask(propConfig, DOMPropertyInjection.HAS_OVERLOADED_BOOLEAN_VALUE);
        "production" !== "development" ? invariant(!DOMProperty.mustUseAttribute[propName] || !DOMProperty.mustUseProperty[propName], "DOMProperty: Cannot require using both attribute and property: %s", propName) : invariant(!DOMProperty.mustUseAttribute[propName] || !DOMProperty.mustUseProperty[propName]);
        "production" !== "development" ? invariant(DOMProperty.mustUseProperty[propName] || !DOMProperty.hasSideEffects[propName], "DOMProperty: Properties that have side effects must use property: %s", propName) : invariant(DOMProperty.mustUseProperty[propName] || !DOMProperty.hasSideEffects[propName]);
        "production" !== "development" ? invariant(!!DOMProperty.hasBooleanValue[propName] + !!DOMProperty.hasNumericValue[propName] + !!DOMProperty.hasOverloadedBooleanValue[propName] <= 1, "DOMProperty: Value can be one of boolean, overloaded boolean, or " + "numeric value, but not a combination: %s", propName) : invariant(!!DOMProperty.hasBooleanValue[propName] + !!DOMProperty.hasNumericValue[propName] + !!DOMProperty.hasOverloadedBooleanValue[propName] <= 1);
      }
    }};
    var defaultValueCache = {};
    var DOMProperty = {ID_ATTRIBUTE_NAME:"data-reactid", isStandardName:{}, getPossibleStandardName:{}, getAttributeName:{}, getPropertyName:{}, getMutationMethod:{}, mustUseAttribute:{}, mustUseProperty:{}, hasSideEffects:{}, hasBooleanValue:{}, hasNumericValue:{}, hasPositiveNumericValue:{}, hasOverloadedBooleanValue:{}, _isCustomAttributeFunctions:[], isCustomAttribute:function(attributeName) {
      for (var i = 0;i < DOMProperty._isCustomAttributeFunctions.length;i++) {
        var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
        if (isCustomAttributeFn(attributeName)) {
          return true;
        }
      }
      return false;
    }, getDefaultValueForProperty:function(nodeName, prop) {
      var nodeDefaults = defaultValueCache[nodeName];
      var testElement;
      if (!nodeDefaults) {
        defaultValueCache[nodeName] = nodeDefaults = {};
      }
      if (!(prop in nodeDefaults)) {
        testElement = document.createElement(nodeName);
        nodeDefaults[prop] = testElement[prop];
      }
      return nodeDefaults[prop];
    }, injection:DOMPropertyInjection};
    module.exports = DOMProperty;
  }, {"./invariant":126}], 12:[function(_dereq_, module, exports) {
    var DOMProperty = _dereq_("./DOMProperty");
    var escapeTextForBrowser = _dereq_("./escapeTextForBrowser");
    var memoizeStringOnly = _dereq_("./memoizeStringOnly");
    var warning = _dereq_("./warning");
    function shouldIgnoreValue(name, value) {
      return value == null || DOMProperty.hasBooleanValue[name] && !value || DOMProperty.hasNumericValue[name] && isNaN(value) || DOMProperty.hasPositiveNumericValue[name] && value < 1 || DOMProperty.hasOverloadedBooleanValue[name] && value === false;
    }
    var processAttributeNameAndPrefix = memoizeStringOnly(function(name) {
      return escapeTextForBrowser(name) + '\x3d"';
    });
    if ("production" !== "development") {
      var reactProps = {children:true, dangerouslySetInnerHTML:true, key:true, ref:true};
      var warnedProperties = {};
      var warnUnknownProperty = function(name) {
        if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
          return;
        }
        warnedProperties[name] = true;
        var lowerCasedName = name.toLowerCase();
        var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;
        "production" !== "development" ? warning(standardName == null, "Unknown DOM property " + name + ". Did you mean " + standardName + "?") : null;
      };
    }
    var DOMPropertyOperations = {createMarkupForID:function(id) {
      return processAttributeNameAndPrefix(DOMProperty.ID_ATTRIBUTE_NAME) + escapeTextForBrowser(id) + '"';
    }, createMarkupForProperty:function(name, value) {
      if (DOMProperty.isStandardName.hasOwnProperty(name) && DOMProperty.isStandardName[name]) {
        if (shouldIgnoreValue(name, value)) {
          return "";
        }
        var attributeName = DOMProperty.getAttributeName[name];
        if (DOMProperty.hasBooleanValue[name] || DOMProperty.hasOverloadedBooleanValue[name] && value === true) {
          return escapeTextForBrowser(attributeName);
        }
        return processAttributeNameAndPrefix(attributeName) + escapeTextForBrowser(value) + '"';
      } else {
        if (DOMProperty.isCustomAttribute(name)) {
          if (value == null) {
            return "";
          }
          return processAttributeNameAndPrefix(name) + escapeTextForBrowser(value) + '"';
        } else {
          if ("production" !== "development") {
            warnUnknownProperty(name);
          }
        }
      }
      return null;
    }, setValueForProperty:function(node, name, value) {
      if (DOMProperty.isStandardName.hasOwnProperty(name) && DOMProperty.isStandardName[name]) {
        var mutationMethod = DOMProperty.getMutationMethod[name];
        if (mutationMethod) {
          mutationMethod(node, value);
        } else {
          if (shouldIgnoreValue(name, value)) {
            this.deleteValueForProperty(node, name);
          } else {
            if (DOMProperty.mustUseAttribute[name]) {
              node.setAttribute(DOMProperty.getAttributeName[name], "" + value);
            } else {
              var propName = DOMProperty.getPropertyName[name];
              if (!DOMProperty.hasSideEffects[name] || "" + node[propName] !== "" + value) {
                node[propName] = value;
              }
            }
          }
        }
      } else {
        if (DOMProperty.isCustomAttribute(name)) {
          if (value == null) {
            node.removeAttribute(name);
          } else {
            node.setAttribute(name, "" + value);
          }
        } else {
          if ("production" !== "development") {
            warnUnknownProperty(name);
          }
        }
      }
    }, deleteValueForProperty:function(node, name) {
      if (DOMProperty.isStandardName.hasOwnProperty(name) && DOMProperty.isStandardName[name]) {
        var mutationMethod = DOMProperty.getMutationMethod[name];
        if (mutationMethod) {
          mutationMethod(node, undefined);
        } else {
          if (DOMProperty.mustUseAttribute[name]) {
            node.removeAttribute(DOMProperty.getAttributeName[name]);
          } else {
            var propName = DOMProperty.getPropertyName[name];
            var defaultValue = DOMProperty.getDefaultValueForProperty(node.nodeName, propName);
            if (!DOMProperty.hasSideEffects[name] || "" + node[propName] !== defaultValue) {
              node[propName] = defaultValue;
            }
          }
        }
      } else {
        if (DOMProperty.isCustomAttribute(name)) {
          node.removeAttribute(name);
        } else {
          if ("production" !== "development") {
            warnUnknownProperty(name);
          }
        }
      }
    }};
    module.exports = DOMPropertyOperations;
  }, {"./DOMProperty":11, "./escapeTextForBrowser":109, "./memoizeStringOnly":135, "./warning":145}], 13:[function(_dereq_, module, exports) {
    var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
    var createNodesFromMarkup = _dereq_("./createNodesFromMarkup");
    var emptyFunction = _dereq_("./emptyFunction");
    var getMarkupWrap = _dereq_("./getMarkupWrap");
    var invariant = _dereq_("./invariant");
    var OPEN_TAG_NAME_EXP = /^(<[^ \/>]+)/;
    var RESULT_INDEX_ATTR = "data-danger-index";
    function getNodeName(markup) {
      return markup.substring(1, markup.indexOf(" "));
    }
    var Danger = {dangerouslyRenderMarkup:function(markupList) {
      "production" !== "development" ? invariant(ExecutionEnvironment.canUseDOM, "dangerouslyRenderMarkup(...): Cannot render markup in a worker " + "thread. Make sure `window` and `document` are available globally " + "before requiring React when unit testing or use " + "React.renderToString for server rendering.") : invariant(ExecutionEnvironment.canUseDOM);
      var nodeName;
      var markupByNodeName = {};
      for (var i = 0;i < markupList.length;i++) {
        "production" !== "development" ? invariant(markupList[i], "dangerouslyRenderMarkup(...): Missing markup.") : invariant(markupList[i]);
        nodeName = getNodeName(markupList[i]);
        nodeName = getMarkupWrap(nodeName) ? nodeName : "*";
        markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];
        markupByNodeName[nodeName][i] = markupList[i];
      }
      var resultList = [];
      var resultListAssignmentCount = 0;
      for (nodeName in markupByNodeName) {
        if (!markupByNodeName.hasOwnProperty(nodeName)) {
          continue;
        }
        var markupListByNodeName = markupByNodeName[nodeName];
        for (var resultIndex in markupListByNodeName) {
          if (markupListByNodeName.hasOwnProperty(resultIndex)) {
            var markup = markupListByNodeName[resultIndex];
            markupListByNodeName[resultIndex] = markup.replace(OPEN_TAG_NAME_EXP, "$1 " + RESULT_INDEX_ATTR + '\x3d"' + resultIndex + '" ');
          }
        }
        var renderNodes = createNodesFromMarkup(markupListByNodeName.join(""), emptyFunction);
        for (i = 0;i < renderNodes.length;++i) {
          var renderNode = renderNodes[i];
          if (renderNode.hasAttribute && renderNode.hasAttribute(RESULT_INDEX_ATTR)) {
            resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);
            renderNode.removeAttribute(RESULT_INDEX_ATTR);
            "production" !== "development" ? invariant(!resultList.hasOwnProperty(resultIndex), "Danger: Assigning to an already-occupied result index.") : invariant(!resultList.hasOwnProperty(resultIndex));
            resultList[resultIndex] = renderNode;
            resultListAssignmentCount += 1;
          } else {
            if ("production" !== "development") {
              console.error("Danger: Discarding unexpected node:", renderNode);
            }
          }
        }
      }
      "production" !== "development" ? invariant(resultListAssignmentCount === resultList.length, "Danger: Did not assign to every index of resultList.") : invariant(resultListAssignmentCount === resultList.length);
      "production" !== "development" ? invariant(resultList.length === markupList.length, "Danger: Expected markup to render %s nodes, but rendered %s.", markupList.length, resultList.length) : invariant(resultList.length === markupList.length);
      return resultList;
    }, dangerouslyReplaceNodeWithMarkup:function(oldChild, markup) {
      "production" !== "development" ? invariant(ExecutionEnvironment.canUseDOM, "dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a " + "worker thread. Make sure `window` and `document` are available " + "globally before requiring React when unit testing or use " + "React.renderToString for server rendering.") : invariant(ExecutionEnvironment.canUseDOM);
      "production" !== "development" ? invariant(markup, "dangerouslyReplaceNodeWithMarkup(...): Missing markup.") : invariant(markup);
      "production" !== "development" ? invariant(oldChild.tagName.toLowerCase() !== "html", "dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the " + "\x3chtml\x3e node. This is because browser quirks make this unreliable " + "and/or slow. If you want to render to the root you must use " + "server rendering. See renderComponentToString().") : invariant(oldChild.tagName.toLowerCase() !== "html");
      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
      oldChild.parentNode.replaceChild(newChild, oldChild);
    }};
    module.exports = Danger;
  }, {"./ExecutionEnvironment":22, "./createNodesFromMarkup":104, "./emptyFunction":107, "./getMarkupWrap":118, "./invariant":126}], 14:[function(_dereq_, module, exports) {
    var keyOf = _dereq_("./keyOf");
    var DefaultEventPluginOrder = [keyOf({ResponderEventPlugin:null}), keyOf({SimpleEventPlugin:null}), keyOf({TapEventPlugin:null}), keyOf({EnterLeaveEventPlugin:null}), keyOf({ChangeEventPlugin:null}), keyOf({SelectEventPlugin:null}), keyOf({CompositionEventPlugin:null}), keyOf({BeforeInputEventPlugin:null}), keyOf({AnalyticsEventPlugin:null}), keyOf({MobileSafariClickEventPlugin:null})];
    module.exports = DefaultEventPluginOrder;
  }, {"./keyOf":133}], 15:[function(_dereq_, module, exports) {
    var EventConstants = _dereq_("./EventConstants");
    var EventPropagators = _dereq_("./EventPropagators");
    var SyntheticMouseEvent = _dereq_("./SyntheticMouseEvent");
    var ReactMount = _dereq_("./ReactMount");
    var keyOf = _dereq_("./keyOf");
    var topLevelTypes = EventConstants.topLevelTypes;
    var getFirstReactDOM = ReactMount.getFirstReactDOM;
    var eventTypes = {mouseEnter:{registrationName:keyOf({onMouseEnter:null}), dependencies:[topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]}, mouseLeave:{registrationName:keyOf({onMouseLeave:null}), dependencies:[topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]}};
    var extractedEvents = [null, null];
    var EnterLeaveEventPlugin = {eventTypes:eventTypes, extractEvents:function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent) {
      if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
        return null;
      }
      if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {
        return null;
      }
      var win;
      if (topLevelTarget.window === topLevelTarget) {
        win = topLevelTarget;
      } else {
        var doc = topLevelTarget.ownerDocument;
        if (doc) {
          win = doc.defaultView || doc.parentWindow;
        } else {
          win = window;
        }
      }
      var from, to;
      if (topLevelType === topLevelTypes.topMouseOut) {
        from = topLevelTarget;
        to = getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement) || win;
      } else {
        from = win;
        to = topLevelTarget;
      }
      if (from === to) {
        return null;
      }
      var fromID = from ? ReactMount.getID(from) : "";
      var toID = to ? ReactMount.getID(to) : "";
      var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, fromID, nativeEvent);
      leave.type = "mouseleave";
      leave.target = from;
      leave.relatedTarget = to;
      var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, toID, nativeEvent);
      enter.type = "mouseenter";
      enter.target = to;
      enter.relatedTarget = from;
      EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);
      extractedEvents[0] = leave;
      extractedEvents[1] = enter;
      return extractedEvents;
    }};
    module.exports = EnterLeaveEventPlugin;
  }, {"./EventConstants":16, "./EventPropagators":21, "./ReactMount":63, "./SyntheticMouseEvent":91, "./keyOf":133}], 16:[function(_dereq_, module, exports) {
    var keyMirror = _dereq_("./keyMirror");
    var PropagationPhases = keyMirror({bubbled:null, captured:null});
    var topLevelTypes = keyMirror({topBlur:null, topChange:null, topClick:null, topCompositionEnd:null, topCompositionStart:null, topCompositionUpdate:null, topContextMenu:null, topCopy:null, topCut:null, topDoubleClick:null, topDrag:null, topDragEnd:null, topDragEnter:null, topDragExit:null, topDragLeave:null, topDragOver:null, topDragStart:null, topDrop:null, topError:null, topFocus:null, topInput:null, topKeyDown:null, topKeyPress:null, topKeyUp:null, topLoad:null, topMouseDown:null, topMouseMove:null, 
    topMouseOut:null, topMouseOver:null, topMouseUp:null, topPaste:null, topReset:null, topScroll:null, topSelectionChange:null, topSubmit:null, topTextInput:null, topTouchCancel:null, topTouchEnd:null, topTouchMove:null, topTouchStart:null, topWheel:null});
    var EventConstants = {topLevelTypes:topLevelTypes, PropagationPhases:PropagationPhases};
    module.exports = EventConstants;
  }, {"./keyMirror":132}], 17:[function(_dereq_, module, exports) {
    var emptyFunction = _dereq_("./emptyFunction");
    var EventListener = {listen:function(target, eventType, callback) {
      if (target.addEventListener) {
        target.addEventListener(eventType, callback, false);
        return{remove:function() {
          target.removeEventListener(eventType, callback, false);
        }};
      } else {
        if (target.attachEvent) {
          target.attachEvent("on" + eventType, callback);
          return{remove:function() {
            target.detachEvent("on" + eventType, callback);
          }};
        }
      }
    }, capture:function(target, eventType, callback) {
      if (!target.addEventListener) {
        if ("production" !== "development") {
          console.error("Attempted to listen to events during the capture phase on a " + "browser that does not support the capture phase. Your application " + "will not receive some events.");
        }
        return{remove:emptyFunction};
      } else {
        target.addEventListener(eventType, callback, true);
        return{remove:function() {
          target.removeEventListener(eventType, callback, true);
        }};
      }
    }, registerDefault:function() {
    }};
    module.exports = EventListener;
  }, {"./emptyFunction":107}], 18:[function(_dereq_, module, exports) {
    var EventPluginRegistry = _dereq_("./EventPluginRegistry");
    var EventPluginUtils = _dereq_("./EventPluginUtils");
    var accumulateInto = _dereq_("./accumulateInto");
    var forEachAccumulated = _dereq_("./forEachAccumulated");
    var invariant = _dereq_("./invariant");
    var listenerBank = {};
    var eventQueue = null;
    var executeDispatchesAndRelease = function(event) {
      if (event) {
        var executeDispatch = EventPluginUtils.executeDispatch;
        var PluginModule = EventPluginRegistry.getPluginModuleForEvent(event);
        if (PluginModule && PluginModule.executeDispatch) {
          executeDispatch = PluginModule.executeDispatch;
        }
        EventPluginUtils.executeDispatchesInOrder(event, executeDispatch);
        if (!event.isPersistent()) {
          event.constructor.release(event);
        }
      }
    };
    var InstanceHandle = null;
    function validateInstanceHandle() {
      var invalid = !InstanceHandle || !InstanceHandle.traverseTwoPhase || !InstanceHandle.traverseEnterLeave;
      if (invalid) {
        throw new Error("InstanceHandle not injected before use!");
      }
    }
    var EventPluginHub = {injection:{injectMount:EventPluginUtils.injection.injectMount, injectInstanceHandle:function(InjectedInstanceHandle) {
      InstanceHandle = InjectedInstanceHandle;
      if ("production" !== "development") {
        validateInstanceHandle();
      }
    }, getInstanceHandle:function() {
      if ("production" !== "development") {
        validateInstanceHandle();
      }
      return InstanceHandle;
    }, injectEventPluginOrder:EventPluginRegistry.injectEventPluginOrder, injectEventPluginsByName:EventPluginRegistry.injectEventPluginsByName}, eventNameDispatchConfigs:EventPluginRegistry.eventNameDispatchConfigs, registrationNameModules:EventPluginRegistry.registrationNameModules, putListener:function(id, registrationName, listener) {
      "production" !== "development" ? invariant(!listener || typeof listener === "function", "Expected %s listener to be a function, instead got type %s", registrationName, typeof listener) : invariant(!listener || typeof listener === "function");
      var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
      bankForRegistrationName[id] = listener;
    }, getListener:function(id, registrationName) {
      var bankForRegistrationName = listenerBank[registrationName];
      return bankForRegistrationName && bankForRegistrationName[id];
    }, deleteListener:function(id, registrationName) {
      var bankForRegistrationName = listenerBank[registrationName];
      if (bankForRegistrationName) {
        delete bankForRegistrationName[id];
      }
    }, deleteAllListeners:function(id) {
      for (var registrationName in listenerBank) {
        delete listenerBank[registrationName][id];
      }
    }, extractEvents:function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent) {
      var events;
      var plugins = EventPluginRegistry.plugins;
      for (var i = 0, l = plugins.length;i < l;i++) {
        var possiblePlugin = plugins[i];
        if (possiblePlugin) {
          var extractedEvents = possiblePlugin.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent);
          if (extractedEvents) {
            events = accumulateInto(events, extractedEvents);
          }
        }
      }
      return events;
    }, enqueueEvents:function(events) {
      if (events) {
        eventQueue = accumulateInto(eventQueue, events);
      }
    }, processEventQueue:function() {
      var processingEventQueue = eventQueue;
      eventQueue = null;
      forEachAccumulated(processingEventQueue, executeDispatchesAndRelease);
      "production" !== "development" ? invariant(!eventQueue, "processEventQueue(): Additional events were enqueued while processing " + "an event queue. Support for this has not yet been implemented.") : invariant(!eventQueue);
    }, __purge:function() {
      listenerBank = {};
    }, __getListenerBank:function() {
      return listenerBank;
    }};
    module.exports = EventPluginHub;
  }, {"./EventPluginRegistry":19, "./EventPluginUtils":20, "./accumulateInto":97, "./forEachAccumulated":112, "./invariant":126}], 19:[function(_dereq_, module, exports) {
    var invariant = _dereq_("./invariant");
    var EventPluginOrder = null;
    var namesToPlugins = {};
    function recomputePluginOrdering() {
      if (!EventPluginOrder) {
        return;
      }
      for (var pluginName in namesToPlugins) {
        var PluginModule = namesToPlugins[pluginName];
        var pluginIndex = EventPluginOrder.indexOf(pluginName);
        "production" !== "development" ? invariant(pluginIndex > -1, "EventPluginRegistry: Cannot inject event plugins that do not exist in " + "the plugin ordering, `%s`.", pluginName) : invariant(pluginIndex > -1);
        if (EventPluginRegistry.plugins[pluginIndex]) {
          continue;
        }
        "production" !== "development" ? invariant(PluginModule.extractEvents, "EventPluginRegistry: Event plugins must implement an `extractEvents` " + "method, but `%s` does not.", pluginName) : invariant(PluginModule.extractEvents);
        EventPluginRegistry.plugins[pluginIndex] = PluginModule;
        var publishedEvents = PluginModule.eventTypes;
        for (var eventName in publishedEvents) {
          "production" !== "development" ? invariant(publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName), "EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.", eventName, pluginName) : invariant(publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName));
        }
      }
    }
    function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
      "production" !== "development" ? invariant(!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName), "EventPluginHub: More than one plugin attempted to publish the same " + "event name, `%s`.", eventName) : invariant(!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName));
      EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;
      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
      if (phasedRegistrationNames) {
        for (var phaseName in phasedRegistrationNames) {
          if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
            var phasedRegistrationName = phasedRegistrationNames[phaseName];
            publishRegistrationName(phasedRegistrationName, PluginModule, eventName);
          }
        }
        return true;
      } else {
        if (dispatchConfig.registrationName) {
          publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);
          return true;
        }
      }
      return false;
    }
    function publishRegistrationName(registrationName, PluginModule, eventName) {
      "production" !== "development" ? invariant(!EventPluginRegistry.registrationNameModules[registrationName], "EventPluginHub: More than one plugin attempted to publish the same " + "registration name, `%s`.", registrationName) : invariant(!EventPluginRegistry.registrationNameModules[registrationName]);
      EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
      EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;
    }
    var EventPluginRegistry = {plugins:[], eventNameDispatchConfigs:{}, registrationNameModules:{}, registrationNameDependencies:{}, injectEventPluginOrder:function(InjectedEventPluginOrder) {
      "production" !== "development" ? invariant(!EventPluginOrder, "EventPluginRegistry: Cannot inject event plugin ordering more than " + "once. You are likely trying to load more than one copy of React.") : invariant(!EventPluginOrder);
      EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
      recomputePluginOrdering();
    }, injectEventPluginsByName:function(injectedNamesToPlugins) {
      var isOrderingDirty = false;
      for (var pluginName in injectedNamesToPlugins) {
        if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
          continue;
        }
        var PluginModule = injectedNamesToPlugins[pluginName];
        if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {
          "production" !== "development" ? invariant(!namesToPlugins[pluginName], "EventPluginRegistry: Cannot inject two different event plugins " + "using the same name, `%s`.", pluginName) : invariant(!namesToPlugins[pluginName]);
          namesToPlugins[pluginName] = PluginModule;
          isOrderingDirty = true;
        }
      }
      if (isOrderingDirty) {
        recomputePluginOrdering();
      }
    }, getPluginModuleForEvent:function(event) {
      var dispatchConfig = event.dispatchConfig;
      if (dispatchConfig.registrationName) {
        return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
      }
      for (var phase in dispatchConfig.phasedRegistrationNames) {
        if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
          continue;
        }
        var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];
        if (PluginModule) {
          return PluginModule;
        }
      }
      return null;
    }, _resetEventPlugins:function() {
      EventPluginOrder = null;
      for (var pluginName in namesToPlugins) {
        if (namesToPlugins.hasOwnProperty(pluginName)) {
          delete namesToPlugins[pluginName];
        }
      }
      EventPluginRegistry.plugins.length = 0;
      var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
      for (var eventName in eventNameDispatchConfigs) {
        if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
          delete eventNameDispatchConfigs[eventName];
        }
      }
      var registrationNameModules = EventPluginRegistry.registrationNameModules;
      for (var registrationName in registrationNameModules) {
        if (registrationNameModules.hasOwnProperty(registrationName)) {
          delete registrationNameModules[registrationName];
        }
      }
    }};
    module.exports = EventPluginRegistry;
  }, {"./invariant":126}], 20:[function(_dereq_, module, exports) {
    var EventConstants = _dereq_("./EventConstants");
    var invariant = _dereq_("./invariant");
    var injection = {Mount:null, injectMount:function(InjectedMount) {
      injection.Mount = InjectedMount;
      if ("production" !== "development") {
        "production" !== "development" ? invariant(InjectedMount && InjectedMount.getNode, "EventPluginUtils.injection.injectMount(...): Injected Mount module " + "is missing getNode.") : invariant(InjectedMount && InjectedMount.getNode);
      }
    }};
    var topLevelTypes = EventConstants.topLevelTypes;
    function isEndish(topLevelType) {
      return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;
    }
    function isMoveish(topLevelType) {
      return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;
    }
    function isStartish(topLevelType) {
      return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;
    }
    var validateEventDispatches;
    if ("production" !== "development") {
      validateEventDispatches = function(event) {
        var dispatchListeners = event._dispatchListeners;
        var dispatchIDs = event._dispatchIDs;
        var listenersIsArr = Array.isArray(dispatchListeners);
        var idsIsArr = Array.isArray(dispatchIDs);
        var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;
        var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;
        "production" !== "development" ? invariant(idsIsArr === listenersIsArr && IDsLen === listenersLen, "EventPluginUtils: Invalid `event`.") : invariant(idsIsArr === listenersIsArr && IDsLen === listenersLen);
      };
    }
    function forEachEventDispatch(event, cb) {
      var dispatchListeners = event._dispatchListeners;
      var dispatchIDs = event._dispatchIDs;
      if ("production" !== "development") {
        validateEventDispatches(event);
      }
      if (Array.isArray(dispatchListeners)) {
        for (var i = 0;i < dispatchListeners.length;i++) {
          if (event.isPropagationStopped()) {
            break;
          }
          cb(event, dispatchListeners[i], dispatchIDs[i]);
        }
      } else {
        if (dispatchListeners) {
          cb(event, dispatchListeners, dispatchIDs);
        }
      }
    }
    function executeDispatch(event, listener, domID) {
      event.currentTarget = injection.Mount.getNode(domID);
      var returnValue = listener(event, domID);
      event.currentTarget = null;
      return returnValue;
    }
    function executeDispatchesInOrder(event, executeDispatch) {
      forEachEventDispatch(event, executeDispatch);
      event._dispatchListeners = null;
      event._dispatchIDs = null;
    }
    function executeDispatchesInOrderStopAtTrueImpl(event) {
      var dispatchListeners = event._dispatchListeners;
      var dispatchIDs = event._dispatchIDs;
      if ("production" !== "development") {
        validateEventDispatches(event);
      }
      if (Array.isArray(dispatchListeners)) {
        for (var i = 0;i < dispatchListeners.length;i++) {
          if (event.isPropagationStopped()) {
            break;
          }
          if (dispatchListeners[i](event, dispatchIDs[i])) {
            return dispatchIDs[i];
          }
        }
      } else {
        if (dispatchListeners) {
          if (dispatchListeners(event, dispatchIDs)) {
            return dispatchIDs;
          }
        }
      }
      return null;
    }
    function executeDispatchesInOrderStopAtTrue(event) {
      var ret = executeDispatchesInOrderStopAtTrueImpl(event);
      event._dispatchIDs = null;
      event._dispatchListeners = null;
      return ret;
    }
    function executeDirectDispatch(event) {
      if ("production" !== "development") {
        validateEventDispatches(event);
      }
      var dispatchListener = event._dispatchListeners;
      var dispatchID = event._dispatchIDs;
      "production" !== "development" ? invariant(!Array.isArray(dispatchListener), "executeDirectDispatch(...): Invalid `event`.") : invariant(!Array.isArray(dispatchListener));
      var res = dispatchListener ? dispatchListener(event, dispatchID) : null;
      event._dispatchListeners = null;
      event._dispatchIDs = null;
      return res;
    }
    function hasDispatches(event) {
      return!!event._dispatchListeners;
    }
    var EventPluginUtils = {isEndish:isEndish, isMoveish:isMoveish, isStartish:isStartish, executeDirectDispatch:executeDirectDispatch, executeDispatch:executeDispatch, executeDispatchesInOrder:executeDispatchesInOrder, executeDispatchesInOrderStopAtTrue:executeDispatchesInOrderStopAtTrue, hasDispatches:hasDispatches, injection:injection, useTouchEvents:false};
    module.exports = EventPluginUtils;
  }, {"./EventConstants":16, "./invariant":126}], 21:[function(_dereq_, module, exports) {
    var EventConstants = _dereq_("./EventConstants");
    var EventPluginHub = _dereq_("./EventPluginHub");
    var accumulateInto = _dereq_("./accumulateInto");
    var forEachAccumulated = _dereq_("./forEachAccumulated");
    var PropagationPhases = EventConstants.PropagationPhases;
    var getListener = EventPluginHub.getListener;
    function listenerAtPhase(id, event, propagationPhase) {
      var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
      return getListener(id, registrationName);
    }
    function accumulateDirectionalDispatches(domID, upwards, event) {
      if ("production" !== "development") {
        if (!domID) {
          throw new Error("Dispatching id must not be null");
        }
      }
      var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
      var listener = listenerAtPhase(domID, event, phase);
      if (listener) {
        event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
        event._dispatchIDs = accumulateInto(event._dispatchIDs, domID);
      }
    }
    function accumulateTwoPhaseDispatchesSingle(event) {
      if (event && event.dispatchConfig.phasedRegistrationNames) {
        EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(event.dispatchMarker, accumulateDirectionalDispatches, event);
      }
    }
    function accumulateDispatches(id, ignoredDirection, event) {
      if (event && event.dispatchConfig.registrationName) {
        var registrationName = event.dispatchConfig.registrationName;
        var listener = getListener(id, registrationName);
        if (listener) {
          event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
          event._dispatchIDs = accumulateInto(event._dispatchIDs, id);
        }
      }
    }
    function accumulateDirectDispatchesSingle(event) {
      if (event && event.dispatchConfig.registrationName) {
        accumulateDispatches(event.dispatchMarker, null, event);
      }
    }
    function accumulateTwoPhaseDispatches(events) {
      forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
    }
    function accumulateEnterLeaveDispatches(leave, enter, fromID, toID) {
      EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(fromID, toID, accumulateDispatches, leave, enter);
    }
    function accumulateDirectDispatches(events) {
      forEachAccumulated(events, accumulateDirectDispatchesSingle);
    }
    var EventPropagators = {accumulateTwoPhaseDispatches:accumulateTwoPhaseDispatches, accumulateDirectDispatches:accumulateDirectDispatches, accumulateEnterLeaveDispatches:accumulateEnterLeaveDispatches};
    module.exports = EventPropagators;
  }, {"./EventConstants":16, "./EventPluginHub":18, "./accumulateInto":97, "./forEachAccumulated":112}], 22:[function(_dereq_, module, exports) {
    var canUseDOM = !!(typeof window !== "undefined" && window.document && window.document.createElement);
    var ExecutionEnvironment = {canUseDOM:canUseDOM, canUseWorkers:typeof Worker !== "undefined", canUseEventListeners:canUseDOM && !!(window.addEventListener || window.attachEvent), canUseViewport:canUseDOM && !!window.screen, isInWorker:!canUseDOM};
    module.exports = ExecutionEnvironment;
  }, {}], 23:[function(_dereq_, module, exports) {
    var DOMProperty = _dereq_("./DOMProperty");
    var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
    var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;
    var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
    var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
    var HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;
    var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
    var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
    var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;
    var hasSVG;
    if (ExecutionEnvironment.canUseDOM) {
      var implementation = document.implementation;
      hasSVG = implementation && implementation.hasFeature && implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure", "1.1");
    }
    var HTMLDOMPropertyConfig = {isCustomAttribute:RegExp.prototype.test.bind(/^(data|aria)-[a-z_][a-z\d_.\-]*$/), Properties:{accept:null, acceptCharset:null, accessKey:null, action:null, allowFullScreen:MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE, allowTransparency:MUST_USE_ATTRIBUTE, alt:null, async:HAS_BOOLEAN_VALUE, autoComplete:null, autoPlay:HAS_BOOLEAN_VALUE, cellPadding:null, cellSpacing:null, charSet:MUST_USE_ATTRIBUTE, checked:MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE, classID:MUST_USE_ATTRIBUTE, 
    className:hasSVG ? MUST_USE_ATTRIBUTE : MUST_USE_PROPERTY, cols:MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE, colSpan:null, content:null, contentEditable:null, contextMenu:MUST_USE_ATTRIBUTE, controls:MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE, coords:null, crossOrigin:null, data:null, dateTime:MUST_USE_ATTRIBUTE, defer:HAS_BOOLEAN_VALUE, dir:null, disabled:MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE, download:HAS_OVERLOADED_BOOLEAN_VALUE, draggable:null, encType:null, form:MUST_USE_ATTRIBUTE, formAction:MUST_USE_ATTRIBUTE, 
    formEncType:MUST_USE_ATTRIBUTE, formMethod:MUST_USE_ATTRIBUTE, formNoValidate:HAS_BOOLEAN_VALUE, formTarget:MUST_USE_ATTRIBUTE, frameBorder:MUST_USE_ATTRIBUTE, height:MUST_USE_ATTRIBUTE, hidden:MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE, href:null, hrefLang:null, htmlFor:null, httpEquiv:null, icon:null, id:MUST_USE_PROPERTY, label:null, lang:null, list:MUST_USE_ATTRIBUTE, loop:MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE, manifest:MUST_USE_ATTRIBUTE, marginHeight:null, marginWidth:null, max:null, maxLength:MUST_USE_ATTRIBUTE, 
    media:MUST_USE_ATTRIBUTE, mediaGroup:null, method:null, min:null, multiple:MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE, muted:MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE, name:null, noValidate:HAS_BOOLEAN_VALUE, open:null, pattern:null, placeholder:null, poster:null, preload:null, radioGroup:null, readOnly:MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE, rel:null, required:HAS_BOOLEAN_VALUE, role:MUST_USE_ATTRIBUTE, rows:MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE, rowSpan:null, sandbox:null, scope:null, scrolling:null, 
    seamless:MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE, selected:MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE, shape:null, size:MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE, sizes:MUST_USE_ATTRIBUTE, span:HAS_POSITIVE_NUMERIC_VALUE, spellCheck:null, src:null, srcDoc:MUST_USE_PROPERTY, srcSet:MUST_USE_ATTRIBUTE, start:HAS_NUMERIC_VALUE, step:null, style:null, tabIndex:null, target:null, title:null, type:null, useMap:null, value:MUST_USE_PROPERTY | HAS_SIDE_EFFECTS, width:MUST_USE_ATTRIBUTE, wmode:MUST_USE_ATTRIBUTE, 
    autoCapitalize:null, autoCorrect:null, itemProp:MUST_USE_ATTRIBUTE, itemScope:MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE, itemType:MUST_USE_ATTRIBUTE, property:null}, DOMAttributeNames:{acceptCharset:"accept-charset", className:"class", htmlFor:"for", httpEquiv:"http-equiv"}, DOMPropertyNames:{autoCapitalize:"autocapitalize", autoComplete:"autocomplete", autoCorrect:"autocorrect", autoFocus:"autofocus", autoPlay:"autoplay", encType:"enctype", hrefLang:"hreflang", radioGroup:"radiogroup", spellCheck:"spellcheck", 
    srcDoc:"srcdoc", srcSet:"srcset"}};
    module.exports = HTMLDOMPropertyConfig;
  }, {"./DOMProperty":11, "./ExecutionEnvironment":22}], 24:[function(_dereq_, module, exports) {
    var ReactPropTypes = _dereq_("./ReactPropTypes");
    var invariant = _dereq_("./invariant");
    var hasReadOnlyValue = {"button":true, "checkbox":true, "image":true, "hidden":true, "radio":true, "reset":true, "submit":true};
    function _assertSingleLink(input) {
      "production" !== "development" ? invariant(input.props.checkedLink == null || input.props.valueLink == null, "Cannot provide a checkedLink and a valueLink. If you want to use " + "checkedLink, you probably don't want to use valueLink and vice versa.") : invariant(input.props.checkedLink == null || input.props.valueLink == null);
    }
    function _assertValueLink(input) {
      _assertSingleLink(input);
      "production" !== "development" ? invariant(input.props.value == null && input.props.onChange == null, "Cannot provide a valueLink and a value or onChange event. If you want " + "to use value or onChange, you probably don't want to use valueLink.") : invariant(input.props.value == null && input.props.onChange == null);
    }
    function _assertCheckedLink(input) {
      _assertSingleLink(input);
      "production" !== "development" ? invariant(input.props.checked == null && input.props.onChange == null, "Cannot provide a checkedLink and a checked property or onChange event. " + "If you want to use checked or onChange, you probably don't want to " + "use checkedLink") : invariant(input.props.checked == null && input.props.onChange == null);
    }
    function _handleLinkedValueChange(e) {
      this.props.valueLink.requestChange(e.target.value);
    }
    function _handleLinkedCheckChange(e) {
      this.props.checkedLink.requestChange(e.target.checked);
    }
    var LinkedValueUtils = {Mixin:{propTypes:{value:function(props, propName, componentName) {
      if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
        return;
      }
      return new Error("You provided a `value` prop to a form field without an " + "`onChange` handler. This will render a read-only field. If " + "the field should be mutable use `defaultValue`. Otherwise, " + "set either `onChange` or `readOnly`.");
    }, checked:function(props, propName, componentName) {
      if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
        return;
      }
      return new Error("You provided a `checked` prop to a form field without an " + "`onChange` handler. This will render a read-only field. If " + "the field should be mutable use `defaultChecked`. Otherwise, " + "set either `onChange` or `readOnly`.");
    }, onChange:ReactPropTypes.func}}, getValue:function(input) {
      if (input.props.valueLink) {
        _assertValueLink(input);
        return input.props.valueLink.value;
      }
      return input.props.value;
    }, getChecked:function(input) {
      if (input.props.checkedLink) {
        _assertCheckedLink(input);
        return input.props.checkedLink.value;
      }
      return input.props.checked;
    }, getOnChange:function(input) {
      if (input.props.valueLink) {
        _assertValueLink(input);
        return _handleLinkedValueChange;
      } else {
        if (input.props.checkedLink) {
          _assertCheckedLink(input);
          return _handleLinkedCheckChange;
        }
      }
      return input.props.onChange;
    }};
    module.exports = LinkedValueUtils;
  }, {"./ReactPropTypes":72, "./invariant":126}], 25:[function(_dereq_, module, exports) {
    var ReactBrowserEventEmitter = _dereq_("./ReactBrowserEventEmitter");
    var accumulateInto = _dereq_("./accumulateInto");
    var forEachAccumulated = _dereq_("./forEachAccumulated");
    var invariant = _dereq_("./invariant");
    function remove(event) {
      event.remove();
    }
    var LocalEventTrapMixin = {trapBubbledEvent:function(topLevelType, handlerBaseName) {
      "production" !== "development" ? invariant(this.isMounted(), "Must be mounted to trap events") : invariant(this.isMounted());
      var listener = ReactBrowserEventEmitter.trapBubbledEvent(topLevelType, handlerBaseName, this.getDOMNode());
      this._localEventListeners = accumulateInto(this._localEventListeners, listener);
    }, componentWillUnmount:function() {
      if (this._localEventListeners) {
        forEachAccumulated(this._localEventListeners, remove);
      }
    }};
    module.exports = LocalEventTrapMixin;
  }, {"./ReactBrowserEventEmitter":30, "./accumulateInto":97, "./forEachAccumulated":112, "./invariant":126}], 26:[function(_dereq_, module, exports) {
    var EventConstants = _dereq_("./EventConstants");
    var emptyFunction = _dereq_("./emptyFunction");
    var topLevelTypes = EventConstants.topLevelTypes;
    var MobileSafariClickEventPlugin = {eventTypes:null, extractEvents:function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent) {
      if (topLevelType === topLevelTypes.topTouchStart) {
        var target = nativeEvent.target;
        if (target && !target.onclick) {
          target.onclick = emptyFunction;
        }
      }
    }};
    module.exports = MobileSafariClickEventPlugin;
  }, {"./EventConstants":16, "./emptyFunction":107}], 27:[function(_dereq_, module, exports) {
    function assign(target, sources) {
      if (target == null) {
        throw new TypeError("Object.assign target cannot be null or undefined");
      }
      var to = Object(target);
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      for (var nextIndex = 1;nextIndex < arguments.length;nextIndex++) {
        var nextSource = arguments[nextIndex];
        if (nextSource == null) {
          continue;
        }
        var from = Object(nextSource);
        for (var key in from) {
          if (hasOwnProperty.call(from, key)) {
            to[key] = from[key];
          }
        }
      }
      return to;
    }
    module.exports = assign;
  }, {}], 28:[function(_dereq_, module, exports) {
    var invariant = _dereq_("./invariant");
    var oneArgumentPooler = function(copyFieldsFrom) {
      var Klass = this;
      if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        Klass.call(instance, copyFieldsFrom);
        return instance;
      } else {
        return new Klass(copyFieldsFrom);
      }
    };
    var twoArgumentPooler = function(a1, a2) {
      var Klass = this;
      if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        Klass.call(instance, a1, a2);
        return instance;
      } else {
        return new Klass(a1, a2);
      }
    };
    var threeArgumentPooler = function(a1, a2, a3) {
      var Klass = this;
      if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        Klass.call(instance, a1, a2, a3);
        return instance;
      } else {
        return new Klass(a1, a2, a3);
      }
    };
    var fiveArgumentPooler = function(a1, a2, a3, a4, a5) {
      var Klass = this;
      if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        Klass.call(instance, a1, a2, a3, a4, a5);
        return instance;
      } else {
        return new Klass(a1, a2, a3, a4, a5);
      }
    };
    var standardReleaser = function(instance) {
      var Klass = this;
      "production" !== "development" ? invariant(instance instanceof Klass, "Trying to release an instance into a pool of a different type.") : invariant(instance instanceof Klass);
      if (instance.destructor) {
        instance.destructor();
      }
      if (Klass.instancePool.length < Klass.poolSize) {
        Klass.instancePool.push(instance);
      }
    };
    var DEFAULT_POOL_SIZE = 10;
    var DEFAULT_POOLER = oneArgumentPooler;
    var addPoolingTo = function(CopyConstructor, pooler) {
      var NewKlass = CopyConstructor;
      NewKlass.instancePool = [];
      NewKlass.getPooled = pooler || DEFAULT_POOLER;
      if (!NewKlass.poolSize) {
        NewKlass.poolSize = DEFAULT_POOL_SIZE;
      }
      NewKlass.release = standardReleaser;
      return NewKlass;
    };
    var PooledClass = {addPoolingTo:addPoolingTo, oneArgumentPooler:oneArgumentPooler, twoArgumentPooler:twoArgumentPooler, threeArgumentPooler:threeArgumentPooler, fiveArgumentPooler:fiveArgumentPooler};
    module.exports = PooledClass;
  }, {"./invariant":126}], 29:[function(_dereq_, module, exports) {
    var ReactEmptyComponent = _dereq_("./ReactEmptyComponent");
    var ReactMount = _dereq_("./ReactMount");
    var invariant = _dereq_("./invariant");
    var ReactBrowserComponentMixin = {getDOMNode:function() {
      "production" !== "development" ? invariant(this.isMounted(), "getDOMNode(): A component must be mounted to have a DOM node.") : invariant(this.isMounted());
      if (ReactEmptyComponent.isNullComponentID(this._rootNodeID)) {
        return null;
      }
      return ReactMount.getNode(this._rootNodeID);
    }};
    module.exports = ReactBrowserComponentMixin;
  }, {"./ReactEmptyComponent":54, "./ReactMount":63, "./invariant":126}], 30:[function(_dereq_, module, exports) {
    var EventConstants = _dereq_("./EventConstants");
    var EventPluginHub = _dereq_("./EventPluginHub");
    var EventPluginRegistry = _dereq_("./EventPluginRegistry");
    var ReactEventEmitterMixin = _dereq_("./ReactEventEmitterMixin");
    var ViewportMetrics = _dereq_("./ViewportMetrics");
    var assign = _dereq_("./Object.assign");
    var isEventSupported = _dereq_("./isEventSupported");
    var alreadyListeningTo = {};
    var isMonitoringScrollValue = false;
    var reactTopListenersCounter = 0;
    var topEventMapping = {topBlur:"blur", topChange:"change", topClick:"click", topCompositionEnd:"compositionend", topCompositionStart:"compositionstart", topCompositionUpdate:"compositionupdate", topContextMenu:"contextmenu", topCopy:"copy", topCut:"cut", topDoubleClick:"dblclick", topDrag:"drag", topDragEnd:"dragend", topDragEnter:"dragenter", topDragExit:"dragexit", topDragLeave:"dragleave", topDragOver:"dragover", topDragStart:"dragstart", topDrop:"drop", topFocus:"focus", topInput:"input", 
    topKeyDown:"keydown", topKeyPress:"keypress", topKeyUp:"keyup", topMouseDown:"mousedown", topMouseMove:"mousemove", topMouseOut:"mouseout", topMouseOver:"mouseover", topMouseUp:"mouseup", topPaste:"paste", topScroll:"scroll", topSelectionChange:"selectionchange", topTextInput:"textInput", topTouchCancel:"touchcancel", topTouchEnd:"touchend", topTouchMove:"touchmove", topTouchStart:"touchstart", topWheel:"wheel"};
    var topListenersIDKey = "_reactListenersID" + String(Math.random()).slice(2);
    function getListeningForDocument(mountAt) {
      if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
        mountAt[topListenersIDKey] = reactTopListenersCounter++;
        alreadyListeningTo[mountAt[topListenersIDKey]] = {};
      }
      return alreadyListeningTo[mountAt[topListenersIDKey]];
    }
    var ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {ReactEventListener:null, injection:{injectReactEventListener:function(ReactEventListener) {
      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
    }}, setEnabled:function(enabled) {
      if (ReactBrowserEventEmitter.ReactEventListener) {
        ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
      }
    }, isEnabled:function() {
      return!!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
    }, listenTo:function(registrationName, contentDocumentHandle) {
      var mountAt = contentDocumentHandle;
      var isListening = getListeningForDocument(mountAt);
      var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];
      var topLevelTypes = EventConstants.topLevelTypes;
      for (var i = 0, l = dependencies.length;i < l;i++) {
        var dependency = dependencies[i];
        if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
          if (dependency === topLevelTypes.topWheel) {
            if (isEventSupported("wheel")) {
              ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, "wheel", mountAt);
            } else {
              if (isEventSupported("mousewheel")) {
                ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, "mousewheel", mountAt);
              } else {
                ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, "DOMMouseScroll", mountAt);
              }
            }
          } else {
            if (dependency === topLevelTypes.topScroll) {
              if (isEventSupported("scroll", true)) {
                ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, "scroll", mountAt);
              } else {
                ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, "scroll", ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
              }
            } else {
              if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {
                if (isEventSupported("focus", true)) {
                  ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, "focus", mountAt);
                  ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, "blur", mountAt);
                } else {
                  if (isEventSupported("focusin")) {
                    ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, "focusin", mountAt);
                    ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, "focusout", mountAt);
                  }
                }
                isListening[topLevelTypes.topBlur] = true;
                isListening[topLevelTypes.topFocus] = true;
              } else {
                if (topEventMapping.hasOwnProperty(dependency)) {
                  ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
                }
              }
            }
          }
          isListening[dependency] = true;
        }
      }
    }, trapBubbledEvent:function(topLevelType, handlerBaseName, handle) {
      return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
    }, trapCapturedEvent:function(topLevelType, handlerBaseName, handle) {
      return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
    }, ensureScrollValueMonitoring:function() {
      if (!isMonitoringScrollValue) {
        var refresh = ViewportMetrics.refreshScrollValues;
        ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
        isMonitoringScrollValue = true;
      }
    }, eventNameDispatchConfigs:EventPluginHub.eventNameDispatchConfigs, registrationNameModules:EventPluginHub.registrationNameModules, putListener:EventPluginHub.putListener, getListener:EventPluginHub.getListener, deleteListener:EventPluginHub.deleteListener, deleteAllListeners:EventPluginHub.deleteAllListeners});
    module.exports = ReactBrowserEventEmitter;
  }, {"./EventConstants":16, "./EventPluginHub":18, "./EventPluginRegistry":19, "./Object.assign":27, "./ReactEventEmitterMixin":56, "./ViewportMetrics":96, "./isEventSupported":127}], 31:[function(_dereq_, module, exports) {
    var PooledClass = _dereq_("./PooledClass");
    var traverseAllChildren = _dereq_("./traverseAllChildren");
    var warning = _dereq_("./warning");
    var twoArgumentPooler = PooledClass.twoArgumentPooler;
    var threeArgumentPooler = PooledClass.threeArgumentPooler;
    function ForEachBookKeeping(forEachFunction, forEachContext) {
      this.forEachFunction = forEachFunction;
      this.forEachContext = forEachContext;
    }
    PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);
    function forEachSingleChild(traverseContext, child, name, i) {
      var forEachBookKeeping = traverseContext;
      forEachBookKeeping.forEachFunction.call(forEachBookKeeping.forEachContext, child, i);
    }
    function forEachChildren(children, forEachFunc, forEachContext) {
      if (children == null) {
        return children;
      }
      var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
      traverseAllChildren(children, forEachSingleChild, traverseContext);
      ForEachBookKeeping.release(traverseContext);
    }
    function MapBookKeeping(mapResult, mapFunction, mapContext) {
      this.mapResult = mapResult;
      this.mapFunction = mapFunction;
      this.mapContext = mapContext;
    }
    PooledClass.addPoolingTo(MapBookKeeping, threeArgumentPooler);
    function mapSingleChildIntoContext(traverseContext, child, name, i) {
      var mapBookKeeping = traverseContext;
      var mapResult = mapBookKeeping.mapResult;
      var keyUnique = !mapResult.hasOwnProperty(name);
      "production" !== "development" ? warning(keyUnique, "ReactChildren.map(...): Encountered two children with the same key, " + "`%s`. Child keys must be unique; when two children share a key, only " + "the first child will be used.", name) : null;
      if (keyUnique) {
        var mappedChild = mapBookKeeping.mapFunction.call(mapBookKeeping.mapContext, child, i);
        mapResult[name] = mappedChild;
      }
    }
    function mapChildren(children, func, context) {
      if (children == null) {
        return children;
      }
      var mapResult = {};
      var traverseContext = MapBookKeeping.getPooled(mapResult, func, context);
      traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
      MapBookKeeping.release(traverseContext);
      return mapResult;
    }
    function forEachSingleChildDummy(traverseContext, child, name, i) {
      return null;
    }
    function countChildren(children, context) {
      return traverseAllChildren(children, forEachSingleChildDummy, null);
    }
    var ReactChildren = {forEach:forEachChildren, map:mapChildren, count:countChildren};
    module.exports = ReactChildren;
  }, {"./PooledClass":28, "./traverseAllChildren":144, "./warning":145}], 32:[function(_dereq_, module, exports) {
    var ReactElement = _dereq_("./ReactElement");
    var ReactOwner = _dereq_("./ReactOwner");
    var ReactUpdates = _dereq_("./ReactUpdates");
    var assign = _dereq_("./Object.assign");
    var invariant = _dereq_("./invariant");
    var keyMirror = _dereq_("./keyMirror");
    var ComponentLifeCycle = keyMirror({MOUNTED:null, UNMOUNTED:null});
    var injected = false;
    var unmountIDFromEnvironment = null;
    var mountImageIntoNode = null;
    var ReactComponent = {injection:{injectEnvironment:function(ReactComponentEnvironment) {
      "production" !== "development" ? invariant(!injected, "ReactComponent: injectEnvironment() can only be called once.") : invariant(!injected);
      mountImageIntoNode = ReactComponentEnvironment.mountImageIntoNode;
      unmountIDFromEnvironment = ReactComponentEnvironment.unmountIDFromEnvironment;
      ReactComponent.BackendIDOperations = ReactComponentEnvironment.BackendIDOperations;
      injected = true;
    }}, LifeCycle:ComponentLifeCycle, BackendIDOperations:null, Mixin:{isMounted:function() {
      return this._lifeCycleState === ComponentLifeCycle.MOUNTED;
    }, setProps:function(partialProps, callback) {
      var element = this._pendingElement || this._currentElement;
      this.replaceProps(assign({}, element.props, partialProps), callback);
    }, replaceProps:function(props, callback) {
      "production" !== "development" ? invariant(this.isMounted(), "replaceProps(...): Can only update a mounted component.") : invariant(this.isMounted());
      "production" !== "development" ? invariant(this._mountDepth === 0, "replaceProps(...): You called `setProps` or `replaceProps` on a " + "component with a parent. This is an anti-pattern since props will " + "get reactively updated when rendered. Instead, change the owner's " + "`render` method to pass the correct value as props to the component " + "where it is created.") : invariant(this._mountDepth === 0);
      this._pendingElement = ReactElement.cloneAndReplaceProps(this._pendingElement || this._currentElement, props);
      ReactUpdates.enqueueUpdate(this, callback);
    }, _setPropsInternal:function(partialProps, callback) {
      var element = this._pendingElement || this._currentElement;
      this._pendingElement = ReactElement.cloneAndReplaceProps(element, assign({}, element.props, partialProps));
      ReactUpdates.enqueueUpdate(this, callback);
    }, construct:function(element) {
      this.props = element.props;
      this._owner = element._owner;
      this._lifeCycleState = ComponentLifeCycle.UNMOUNTED;
      this._pendingCallbacks = null;
      this._currentElement = element;
      this._pendingElement = null;
    }, mountComponent:function(rootID, transaction, mountDepth) {
      "production" !== "development" ? invariant(!this.isMounted(), "mountComponent(%s, ...): Can only mount an unmounted component. " + "Make sure to avoid storing components between renders or reusing a " + "single component instance in multiple places.", rootID) : invariant(!this.isMounted());
      var ref = this._currentElement.ref;
      if (ref != null) {
        var owner = this._currentElement._owner;
        ReactOwner.addComponentAsRefTo(this, ref, owner);
      }
      this._rootNodeID = rootID;
      this._lifeCycleState = ComponentLifeCycle.MOUNTED;
      this._mountDepth = mountDepth;
    }, unmountComponent:function() {
      "production" !== "development" ? invariant(this.isMounted(), "unmountComponent(): Can only unmount a mounted component.") : invariant(this.isMounted());
      var ref = this._currentElement.ref;
      if (ref != null) {
        ReactOwner.removeComponentAsRefFrom(this, ref, this._owner);
      }
      unmountIDFromEnvironment(this._rootNodeID);
      this._rootNodeID = null;
      this._lifeCycleState = ComponentLifeCycle.UNMOUNTED;
    }, receiveComponent:function(nextElement, transaction) {
      "production" !== "development" ? invariant(this.isMounted(), "receiveComponent(...): Can only update a mounted component.") : invariant(this.isMounted());
      this._pendingElement = nextElement;
      this.performUpdateIfNecessary(transaction);
    }, performUpdateIfNecessary:function(transaction) {
      if (this._pendingElement == null) {
        return;
      }
      var prevElement = this._currentElement;
      var nextElement = this._pendingElement;
      this._currentElement = nextElement;
      this.props = nextElement.props;
      this._owner = nextElement._owner;
      this._pendingElement = null;
      this.updateComponent(transaction, prevElement);
    }, updateComponent:function(transaction, prevElement) {
      var nextElement = this._currentElement;
      if (nextElement._owner !== prevElement._owner || nextElement.ref !== prevElement.ref) {
        if (prevElement.ref != null) {
          ReactOwner.removeComponentAsRefFrom(this, prevElement.ref, prevElement._owner);
        }
        if (nextElement.ref != null) {
          ReactOwner.addComponentAsRefTo(this, nextElement.ref, nextElement._owner);
        }
      }
    }, mountComponentIntoNode:function(rootID, container, shouldReuseMarkup) {
      var transaction = ReactUpdates.ReactReconcileTransaction.getPooled();
      transaction.perform(this._mountComponentIntoNode, this, rootID, container, transaction, shouldReuseMarkup);
      ReactUpdates.ReactReconcileTransaction.release(transaction);
    }, _mountComponentIntoNode:function(rootID, container, transaction, shouldReuseMarkup) {
      var markup = this.mountComponent(rootID, transaction, 0);
      mountImageIntoNode(markup, container, shouldReuseMarkup);
    }, isOwnedBy:function(owner) {
      return this._owner === owner;
    }, getSiblingByRef:function(ref) {
      var owner = this._owner;
      if (!owner || !owner.refs) {
        return null;
      }
      return owner.refs[ref];
    }}};
    module.exports = ReactComponent;
  }, {"./Object.assign":27, "./ReactElement":52, "./ReactOwner":67, "./ReactUpdates":79, "./invariant":126, "./keyMirror":132}], 33:[function(_dereq_, module, exports) {
    var ReactDOMIDOperations = _dereq_("./ReactDOMIDOperations");
    var ReactMarkupChecksum = _dereq_("./ReactMarkupChecksum");
    var ReactMount = _dereq_("./ReactMount");
    var ReactPerf = _dereq_("./ReactPerf");
    var ReactReconcileTransaction = _dereq_("./ReactReconcileTransaction");
    var getReactRootElementInContainer = _dereq_("./getReactRootElementInContainer");
    var invariant = _dereq_("./invariant");
    var setInnerHTML = _dereq_("./setInnerHTML");
    var ELEMENT_NODE_TYPE = 1;
    var DOC_NODE_TYPE = 9;
    var ReactComponentBrowserEnvironment = {ReactReconcileTransaction:ReactReconcileTransaction, BackendIDOperations:ReactDOMIDOperations, unmountIDFromEnvironment:function(rootNodeID) {
      ReactMount.purgeID(rootNodeID);
    }, mountImageIntoNode:ReactPerf.measure("ReactComponentBrowserEnvironment", "mountImageIntoNode", function(markup, container, shouldReuseMarkup) {
      "production" !== "development" ? invariant(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE), "mountComponentIntoNode(...): Target container is not valid.") : invariant(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE));
      if (shouldReuseMarkup) {
        if (ReactMarkupChecksum.canReuseMarkup(markup, getReactRootElementInContainer(container))) {
          return;
        } else {
          "production" !== "development" ? invariant(container.nodeType !== DOC_NODE_TYPE, "You're trying to render a component to the document using " + "server rendering but the checksum was invalid. This usually " + "means you rendered a different component type or props on " + "the client from the one on the server, or your render() " + "methods are impure. React cannot handle this case due to " + "cross-browser quirks by rendering at the document root. You " + "should look for environment dependent code in your components " + 
          "and ensure the props are the same client and server side.") : invariant(container.nodeType !== DOC_NODE_TYPE);
          if ("production" !== "development") {
            console.warn("React attempted to use reuse markup in a container but the " + "checksum was invalid. This generally means that you are " + "using server rendering and the markup generated on the " + "server was not what the client was expecting. React injected " + "new markup to compensate which works but you have lost many " + "of the benefits of server rendering. Instead, figure out " + "why the markup being generated is different on the client " + "or server.");
          }
        }
      }
      "production" !== "development" ? invariant(container.nodeType !== DOC_NODE_TYPE, "You're trying to render a component to the document but " + "you didn't use server rendering. We can't do this " + "without using server rendering due to cross-browser quirks. " + "See renderComponentToString() for server rendering.") : invariant(container.nodeType !== DOC_NODE_TYPE);
      setInnerHTML(container, markup);
    })};
    module.exports = ReactComponentBrowserEnvironment;
  }, {"./ReactDOMIDOperations":41, "./ReactMarkupChecksum":62, "./ReactMount":63, "./ReactPerf":68, "./ReactReconcileTransaction":74, "./getReactRootElementInContainer":120, "./invariant":126, "./setInnerHTML":140}], 34:[function(_dereq_, module, exports) {
    var ReactComponent = _dereq_("./ReactComponent");
    var ReactContext = _dereq_("./ReactContext");
    var ReactCurrentOwner = _dereq_("./ReactCurrentOwner");
    var ReactElement = _dereq_("./ReactElement");
    var ReactElementValidator = _dereq_("./ReactElementValidator");
    var ReactEmptyComponent = _dereq_("./ReactEmptyComponent");
    var ReactErrorUtils = _dereq_("./ReactErrorUtils");
    var ReactLegacyElement = _dereq_("./ReactLegacyElement");
    var ReactOwner = _dereq_("./ReactOwner");
    var ReactPerf = _dereq_("./ReactPerf");
    var ReactPropTransferer = _dereq_("./ReactPropTransferer");
    var ReactPropTypeLocations = _dereq_("./ReactPropTypeLocations");
    var ReactPropTypeLocationNames = _dereq_("./ReactPropTypeLocationNames");
    var ReactUpdates = _dereq_("./ReactUpdates");
    var assign = _dereq_("./Object.assign");
    var instantiateReactComponent = _dereq_("./instantiateReactComponent");
    var invariant = _dereq_("./invariant");
    var keyMirror = _dereq_("./keyMirror");
    var keyOf = _dereq_("./keyOf");
    var monitorCodeUse = _dereq_("./monitorCodeUse");
    var mapObject = _dereq_("./mapObject");
    var shouldUpdateReactComponent = _dereq_("./shouldUpdateReactComponent");
    var warning = _dereq_("./warning");
    var MIXINS_KEY = keyOf({mixins:null});
    var SpecPolicy = keyMirror({DEFINE_ONCE:null, DEFINE_MANY:null, OVERRIDE_BASE:null, DEFINE_MANY_MERGED:null});
    var injectedMixins = [];
    var ReactCompositeComponentInterface = {mixins:SpecPolicy.DEFINE_MANY, statics:SpecPolicy.DEFINE_MANY, propTypes:SpecPolicy.DEFINE_MANY, contextTypes:SpecPolicy.DEFINE_MANY, childContextTypes:SpecPolicy.DEFINE_MANY, getDefaultProps:SpecPolicy.DEFINE_MANY_MERGED, getInitialState:SpecPolicy.DEFINE_MANY_MERGED, getChildContext:SpecPolicy.DEFINE_MANY_MERGED, render:SpecPolicy.DEFINE_ONCE, componentWillMount:SpecPolicy.DEFINE_MANY, componentDidMount:SpecPolicy.DEFINE_MANY, componentWillReceiveProps:SpecPolicy.DEFINE_MANY, 
    shouldComponentUpdate:SpecPolicy.DEFINE_ONCE, componentWillUpdate:SpecPolicy.DEFINE_MANY, componentDidUpdate:SpecPolicy.DEFINE_MANY, componentWillUnmount:SpecPolicy.DEFINE_MANY, updateComponent:SpecPolicy.OVERRIDE_BASE};
    var RESERVED_SPEC_KEYS = {displayName:function(Constructor, displayName) {
      Constructor.displayName = displayName;
    }, mixins:function(Constructor, mixins) {
      if (mixins) {
        for (var i = 0;i < mixins.length;i++) {
          mixSpecIntoComponent(Constructor, mixins[i]);
        }
      }
    }, childContextTypes:function(Constructor, childContextTypes) {
      validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);
      Constructor.childContextTypes = assign({}, Constructor.childContextTypes, childContextTypes);
    }, contextTypes:function(Constructor, contextTypes) {
      validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);
      Constructor.contextTypes = assign({}, Constructor.contextTypes, contextTypes);
    }, getDefaultProps:function(Constructor, getDefaultProps) {
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
      } else {
        Constructor.getDefaultProps = getDefaultProps;
      }
    }, propTypes:function(Constructor, propTypes) {
      validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);
      Constructor.propTypes = assign({}, Constructor.propTypes, propTypes);
    }, statics:function(Constructor, statics) {
      mixStaticSpecIntoComponent(Constructor, statics);
    }};
    function getDeclarationErrorAddendum(component) {
      var owner = component._owner || null;
      if (owner && owner.constructor && owner.constructor.displayName) {
        return " Check the render method of `" + owner.constructor.displayName + "`.";
      }
      return "";
    }
    function validateTypeDef(Constructor, typeDef, location) {
      for (var propName in typeDef) {
        if (typeDef.hasOwnProperty(propName)) {
          "production" !== "development" ? invariant(typeof typeDef[propName] == "function", "%s: %s type `%s` is invalid; it must be a function, usually from " + "React.PropTypes.", Constructor.displayName || "ReactCompositeComponent", ReactPropTypeLocationNames[location], propName) : invariant(typeof typeDef[propName] == "function");
        }
      }
    }
    function validateMethodOverride(proto, name) {
      var specPolicy = ReactCompositeComponentInterface.hasOwnProperty(name) ? ReactCompositeComponentInterface[name] : null;
      if (ReactCompositeComponentMixin.hasOwnProperty(name)) {
        "production" !== "development" ? invariant(specPolicy === SpecPolicy.OVERRIDE_BASE, "ReactCompositeComponentInterface: You are attempting to override " + "`%s` from your class specification. Ensure that your method names " + "do not overlap with React methods.", name) : invariant(specPolicy === SpecPolicy.OVERRIDE_BASE);
      }
      if (proto.hasOwnProperty(name)) {
        "production" !== "development" ? invariant(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED, "ReactCompositeComponentInterface: You are attempting to define " + "`%s` on your component more than once. This conflict may be due " + "to a mixin.", name) : invariant(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED);
      }
    }
    function validateLifeCycleOnReplaceState(instance) {
      var compositeLifeCycleState = instance._compositeLifeCycleState;
      "production" !== "development" ? invariant(instance.isMounted() || compositeLifeCycleState === CompositeLifeCycle.MOUNTING, "replaceState(...): Can only update a mounted or mounting component.") : invariant(instance.isMounted() || compositeLifeCycleState === CompositeLifeCycle.MOUNTING);
      "production" !== "development" ? invariant(ReactCurrentOwner.current == null, "replaceState(...): Cannot update during an existing state transition " + "(such as within `render`). Render methods should be a pure function " + "of props and state.") : invariant(ReactCurrentOwner.current == null);
      "production" !== "development" ? invariant(compositeLifeCycleState !== CompositeLifeCycle.UNMOUNTING, "replaceState(...): Cannot update while unmounting component. This " + "usually means you called setState() on an unmounted component.") : invariant(compositeLifeCycleState !== CompositeLifeCycle.UNMOUNTING);
    }
    function mixSpecIntoComponent(Constructor, spec) {
      if (!spec) {
        return;
      }
      "production" !== "development" ? invariant(!ReactLegacyElement.isValidFactory(spec), "ReactCompositeComponent: You're attempting to " + "use a component class as a mixin. Instead, just use a regular object.") : invariant(!ReactLegacyElement.isValidFactory(spec));
      "production" !== "development" ? invariant(!ReactElement.isValidElement(spec), "ReactCompositeComponent: You're attempting to " + "use a component as a mixin. Instead, just use a regular object.") : invariant(!ReactElement.isValidElement(spec));
      var proto = Constructor.prototype;
      if (spec.hasOwnProperty(MIXINS_KEY)) {
        RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
      }
      for (var name in spec) {
        if (!spec.hasOwnProperty(name)) {
          continue;
        }
        if (name === MIXINS_KEY) {
          continue;
        }
        var property = spec[name];
        validateMethodOverride(proto, name);
        if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
          RESERVED_SPEC_KEYS[name](Constructor, property);
        } else {
          var isCompositeComponentMethod = ReactCompositeComponentInterface.hasOwnProperty(name);
          var isAlreadyDefined = proto.hasOwnProperty(name);
          var markedDontBind = property && property.__reactDontBind;
          var isFunction = typeof property === "function";
          var shouldAutoBind = isFunction && !isCompositeComponentMethod && !isAlreadyDefined && !markedDontBind;
          if (shouldAutoBind) {
            if (!proto.__reactAutoBindMap) {
              proto.__reactAutoBindMap = {};
            }
            proto.__reactAutoBindMap[name] = property;
            proto[name] = property;
          } else {
            if (isAlreadyDefined) {
              var specPolicy = ReactCompositeComponentInterface[name];
              "production" !== "development" ? invariant(isCompositeComponentMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY), "ReactCompositeComponent: Unexpected spec policy %s for key %s " + "when mixing in component specs.", specPolicy, name) : invariant(isCompositeComponentMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY));
              if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
                proto[name] = createMergedResultFunction(proto[name], property);
              } else {
                if (specPolicy === SpecPolicy.DEFINE_MANY) {
                  proto[name] = createChainedFunction(proto[name], property);
                }
              }
            } else {
              proto[name] = property;
              if ("production" !== "development") {
                if (typeof property === "function" && spec.displayName) {
                  proto[name].displayName = spec.displayName + "_" + name;
                }
              }
            }
          }
        }
      }
    }
    function mixStaticSpecIntoComponent(Constructor, statics) {
      if (!statics) {
        return;
      }
      for (var name in statics) {
        var property = statics[name];
        if (!statics.hasOwnProperty(name)) {
          continue;
        }
        var isReserved = name in RESERVED_SPEC_KEYS;
        "production" !== "development" ? invariant(!isReserved, "ReactCompositeComponent: You are attempting to define a reserved " + 'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' + "as an instance property instead; it will still be accessible on the " + "constructor.", name) : invariant(!isReserved);
        var isInherited = name in Constructor;
        "production" !== "development" ? invariant(!isInherited, "ReactCompositeComponent: You are attempting to define " + "`%s` on your component more than once. This conflict may be " + "due to a mixin.", name) : invariant(!isInherited);
        Constructor[name] = property;
      }
    }
    function mergeObjectsWithNoDuplicateKeys(one, two) {
      "production" !== "development" ? invariant(one && two && typeof one === "object" && typeof two === "object", "mergeObjectsWithNoDuplicateKeys(): Cannot merge non-objects") : invariant(one && two && typeof one === "object" && typeof two === "object");
      mapObject(two, function(value, key) {
        "production" !== "development" ? invariant(one[key] === undefined, "mergeObjectsWithNoDuplicateKeys(): " + "Tried to merge two objects with the same key: `%s`. This conflict " + "may be due to a mixin; in particular, this may be caused by two " + "getInitialState() or getDefaultProps() methods returning objects " + "with clashing keys.", key) : invariant(one[key] === undefined);
        one[key] = value;
      });
      return one;
    }
    function createMergedResultFunction(one, two) {
      return function mergedResult() {
        var a = one.apply(this, arguments);
        var b = two.apply(this, arguments);
        if (a == null) {
          return b;
        } else {
          if (b == null) {
            return a;
          }
        }
        return mergeObjectsWithNoDuplicateKeys(a, b);
      };
    }
    function createChainedFunction(one, two) {
      return function chainedFunction() {
        one.apply(this, arguments);
        two.apply(this, arguments);
      };
    }
    var CompositeLifeCycle = keyMirror({MOUNTING:null, UNMOUNTING:null, RECEIVING_PROPS:null});
    var ReactCompositeComponentMixin = {construct:function(element) {
      ReactComponent.Mixin.construct.apply(this, arguments);
      ReactOwner.Mixin.construct.apply(this, arguments);
      this.state = null;
      this._pendingState = null;
      this.context = null;
      this._compositeLifeCycleState = null;
    }, isMounted:function() {
      return ReactComponent.Mixin.isMounted.call(this) && this._compositeLifeCycleState !== CompositeLifeCycle.MOUNTING;
    }, mountComponent:ReactPerf.measure("ReactCompositeComponent", "mountComponent", function(rootID, transaction, mountDepth) {
      ReactComponent.Mixin.mountComponent.call(this, rootID, transaction, mountDepth);
      this._compositeLifeCycleState = CompositeLifeCycle.MOUNTING;
      if (this.__reactAutoBindMap) {
        this._bindAutoBindMethods();
      }
      this.context = this._processContext(this._currentElement._context);
      this.props = this._processProps(this.props);
      this.state = this.getInitialState ? this.getInitialState() : null;
      "production" !== "development" ? invariant(typeof this.state === "object" && !Array.isArray(this.state), "%s.getInitialState(): must return an object or null", this.constructor.displayName || "ReactCompositeComponent") : invariant(typeof this.state === "object" && !Array.isArray(this.state));
      this._pendingState = null;
      this._pendingForceUpdate = false;
      if (this.componentWillMount) {
        this.componentWillMount();
        if (this._pendingState) {
          this.state = this._pendingState;
          this._pendingState = null;
        }
      }
      this._renderedComponent = instantiateReactComponent(this._renderValidatedComponent(), this._currentElement.type);
      this._compositeLifeCycleState = null;
      var markup = this._renderedComponent.mountComponent(rootID, transaction, mountDepth + 1);
      if (this.componentDidMount) {
        transaction.getReactMountReady().enqueue(this.componentDidMount, this);
      }
      return markup;
    }), unmountComponent:function() {
      this._compositeLifeCycleState = CompositeLifeCycle.UNMOUNTING;
      if (this.componentWillUnmount) {
        this.componentWillUnmount();
      }
      this._compositeLifeCycleState = null;
      this._renderedComponent.unmountComponent();
      this._renderedComponent = null;
      ReactComponent.Mixin.unmountComponent.call(this);
    }, setState:function(partialState, callback) {
      "production" !== "development" ? invariant(typeof partialState === "object" || partialState == null, "setState(...): takes an object of state variables to update.") : invariant(typeof partialState === "object" || partialState == null);
      if ("production" !== "development") {
        "production" !== "development" ? warning(partialState != null, "setState(...): You passed an undefined or null state object; " + "instead, use forceUpdate().") : null;
      }
      this.replaceState(assign({}, this._pendingState || this.state, partialState), callback);
    }, replaceState:function(completeState, callback) {
      validateLifeCycleOnReplaceState(this);
      this._pendingState = completeState;
      if (this._compositeLifeCycleState !== CompositeLifeCycle.MOUNTING) {
        ReactUpdates.enqueueUpdate(this, callback);
      }
    }, _processContext:function(context) {
      var maskedContext = null;
      var contextTypes = this.constructor.contextTypes;
      if (contextTypes) {
        maskedContext = {};
        for (var contextName in contextTypes) {
          maskedContext[contextName] = context[contextName];
        }
        if ("production" !== "development") {
          this._checkPropTypes(contextTypes, maskedContext, ReactPropTypeLocations.context);
        }
      }
      return maskedContext;
    }, _processChildContext:function(currentContext) {
      var childContext = this.getChildContext && this.getChildContext();
      var displayName = this.constructor.displayName || "ReactCompositeComponent";
      if (childContext) {
        "production" !== "development" ? invariant(typeof this.constructor.childContextTypes === "object", "%s.getChildContext(): childContextTypes must be defined in order to " + "use getChildContext().", displayName) : invariant(typeof this.constructor.childContextTypes === "object");
        if ("production" !== "development") {
          this._checkPropTypes(this.constructor.childContextTypes, childContext, ReactPropTypeLocations.childContext);
        }
        for (var name in childContext) {
          "production" !== "development" ? invariant(name in this.constructor.childContextTypes, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', displayName, name) : invariant(name in this.constructor.childContextTypes);
        }
        return assign({}, currentContext, childContext);
      }
      return currentContext;
    }, _processProps:function(newProps) {
      if ("production" !== "development") {
        var propTypes = this.constructor.propTypes;
        if (propTypes) {
          this._checkPropTypes(propTypes, newProps, ReactPropTypeLocations.prop);
        }
      }
      return newProps;
    }, _checkPropTypes:function(propTypes, props, location) {
      var componentName = this.constructor.displayName;
      for (var propName in propTypes) {
        if (propTypes.hasOwnProperty(propName)) {
          var error = propTypes[propName](props, propName, componentName, location);
          if (error instanceof Error) {
            var addendum = getDeclarationErrorAddendum(this);
            "production" !== "development" ? warning(false, error.message + addendum) : null;
          }
        }
      }
    }, performUpdateIfNecessary:function(transaction) {
      var compositeLifeCycleState = this._compositeLifeCycleState;
      if (compositeLifeCycleState === CompositeLifeCycle.MOUNTING || compositeLifeCycleState === CompositeLifeCycle.RECEIVING_PROPS) {
        return;
      }
      if (this._pendingElement == null && this._pendingState == null && !this._pendingForceUpdate) {
        return;
      }
      var nextContext = this.context;
      var nextProps = this.props;
      var nextElement = this._currentElement;
      if (this._pendingElement != null) {
        nextElement = this._pendingElement;
        nextContext = this._processContext(nextElement._context);
        nextProps = this._processProps(nextElement.props);
        this._pendingElement = null;
        this._compositeLifeCycleState = CompositeLifeCycle.RECEIVING_PROPS;
        if (this.componentWillReceiveProps) {
          this.componentWillReceiveProps(nextProps, nextContext);
        }
      }
      this._compositeLifeCycleState = null;
      var nextState = this._pendingState || this.state;
      this._pendingState = null;
      var shouldUpdate = this._pendingForceUpdate || !this.shouldComponentUpdate || this.shouldComponentUpdate(nextProps, nextState, nextContext);
      if ("production" !== "development") {
        if (typeof shouldUpdate === "undefined") {
          console.warn((this.constructor.displayName || "ReactCompositeComponent") + ".shouldComponentUpdate(): Returned undefined instead of a " + "boolean value. Make sure to return true or false.");
        }
      }
      if (shouldUpdate) {
        this._pendingForceUpdate = false;
        this._performComponentUpdate(nextElement, nextProps, nextState, nextContext, transaction);
      } else {
        this._currentElement = nextElement;
        this.props = nextProps;
        this.state = nextState;
        this.context = nextContext;
        this._owner = nextElement._owner;
      }
    }, _performComponentUpdate:function(nextElement, nextProps, nextState, nextContext, transaction) {
      var prevElement = this._currentElement;
      var prevProps = this.props;
      var prevState = this.state;
      var prevContext = this.context;
      if (this.componentWillUpdate) {
        this.componentWillUpdate(nextProps, nextState, nextContext);
      }
      this._currentElement = nextElement;
      this.props = nextProps;
      this.state = nextState;
      this.context = nextContext;
      this._owner = nextElement._owner;
      this.updateComponent(transaction, prevElement);
      if (this.componentDidUpdate) {
        transaction.getReactMountReady().enqueue(this.componentDidUpdate.bind(this, prevProps, prevState, prevContext), this);
      }
    }, receiveComponent:function(nextElement, transaction) {
      if (nextElement === this._currentElement && nextElement._owner != null) {
        return;
      }
      ReactComponent.Mixin.receiveComponent.call(this, nextElement, transaction);
    }, updateComponent:ReactPerf.measure("ReactCompositeComponent", "updateComponent", function(transaction, prevParentElement) {
      ReactComponent.Mixin.updateComponent.call(this, transaction, prevParentElement);
      var prevComponentInstance = this._renderedComponent;
      var prevElement = prevComponentInstance._currentElement;
      var nextElement = this._renderValidatedComponent();
      if (shouldUpdateReactComponent(prevElement, nextElement)) {
        prevComponentInstance.receiveComponent(nextElement, transaction);
      } else {
        var thisID = this._rootNodeID;
        var prevComponentID = prevComponentInstance._rootNodeID;
        prevComponentInstance.unmountComponent();
        this._renderedComponent = instantiateReactComponent(nextElement, this._currentElement.type);
        var nextMarkup = this._renderedComponent.mountComponent(thisID, transaction, this._mountDepth + 1);
        ReactComponent.BackendIDOperations.dangerouslyReplaceNodeWithMarkupByID(prevComponentID, nextMarkup);
      }
    }), forceUpdate:function(callback) {
      var compositeLifeCycleState = this._compositeLifeCycleState;
      "production" !== "development" ? invariant(this.isMounted() || compositeLifeCycleState === CompositeLifeCycle.MOUNTING, "forceUpdate(...): Can only force an update on mounted or mounting " + "components.") : invariant(this.isMounted() || compositeLifeCycleState === CompositeLifeCycle.MOUNTING);
      "production" !== "development" ? invariant(compositeLifeCycleState !== CompositeLifeCycle.UNMOUNTING && ReactCurrentOwner.current == null, "forceUpdate(...): Cannot force an update while unmounting component " + "or within a `render` function.") : invariant(compositeLifeCycleState !== CompositeLifeCycle.UNMOUNTING && ReactCurrentOwner.current == null);
      this._pendingForceUpdate = true;
      ReactUpdates.enqueueUpdate(this, callback);
    }, _renderValidatedComponent:ReactPerf.measure("ReactCompositeComponent", "_renderValidatedComponent", function() {
      var renderedComponent;
      var previousContext = ReactContext.current;
      ReactContext.current = this._processChildContext(this._currentElement._context);
      ReactCurrentOwner.current = this;
      try {
        renderedComponent = this.render();
        if (renderedComponent === null || renderedComponent === false) {
          renderedComponent = ReactEmptyComponent.getEmptyComponent();
          ReactEmptyComponent.registerNullComponentID(this._rootNodeID);
        } else {
          ReactEmptyComponent.deregisterNullComponentID(this._rootNodeID);
        }
      } finally {
        ReactContext.current = previousContext;
        ReactCurrentOwner.current = null;
      }
      "production" !== "development" ? invariant(ReactElement.isValidElement(renderedComponent), "%s.render(): A valid ReactComponent must be returned. You may have " + "returned undefined, an array or some other invalid object.", this.constructor.displayName || "ReactCompositeComponent") : invariant(ReactElement.isValidElement(renderedComponent));
      return renderedComponent;
    }), _bindAutoBindMethods:function() {
      for (var autoBindKey in this.__reactAutoBindMap) {
        if (!this.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {
          continue;
        }
        var method = this.__reactAutoBindMap[autoBindKey];
        this[autoBindKey] = this._bindAutoBindMethod(ReactErrorUtils.guard(method, this.constructor.displayName + "." + autoBindKey));
      }
    }, _bindAutoBindMethod:function(method) {
      var component = this;
      var boundMethod = method.bind(component);
      if ("production" !== "development") {
        boundMethod.__reactBoundContext = component;
        boundMethod.__reactBoundMethod = method;
        boundMethod.__reactBoundArguments = null;
        var componentName = component.constructor.displayName;
        var _bind = boundMethod.bind;
        boundMethod.bind = function(newThis) {
          for (var args = [], $__0 = 1, $__1 = arguments.length;$__0 < $__1;$__0++) {
            args.push(arguments[$__0]);
          }
          if (newThis !== component && newThis !== null) {
            monitorCodeUse("react_bind_warning", {component:componentName});
            console.warn("bind(): React component methods may only be bound to the " + "component instance. See " + componentName);
          } else {
            if (!args.length) {
              monitorCodeUse("react_bind_warning", {component:componentName});
              console.warn("bind(): You are binding a component method to the component. " + "React does this for you automatically in a high-performance " + "way, so you can safely remove this call. See " + componentName);
              return boundMethod;
            }
          }
          var reboundMethod = _bind.apply(boundMethod, arguments);
          reboundMethod.__reactBoundContext = component;
          reboundMethod.__reactBoundMethod = method;
          reboundMethod.__reactBoundArguments = args;
          return reboundMethod;
        };
      }
      return boundMethod;
    }};
    var ReactCompositeComponentBase = function() {
    };
    assign(ReactCompositeComponentBase.prototype, ReactComponent.Mixin, ReactOwner.Mixin, ReactPropTransferer.Mixin, ReactCompositeComponentMixin);
    var ReactCompositeComponent = {LifeCycle:CompositeLifeCycle, Base:ReactCompositeComponentBase, createClass:function(spec) {
      var Constructor = function(props) {
      };
      Constructor.prototype = new ReactCompositeComponentBase;
      Constructor.prototype.constructor = Constructor;
      injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));
      mixSpecIntoComponent(Constructor, spec);
      if (Constructor.getDefaultProps) {
        Constructor.defaultProps = Constructor.getDefaultProps();
      }
      "production" !== "development" ? invariant(Constructor.prototype.render, "createClass(...): Class specification must implement a `render` method.") : invariant(Constructor.prototype.render);
      if ("production" !== "development") {
        if (Constructor.prototype.componentShouldUpdate) {
          monitorCodeUse("react_component_should_update_warning", {component:spec.displayName});
          console.warn((spec.displayName || "A component") + " has a method called " + "componentShouldUpdate(). Did you mean shouldComponentUpdate()? " + "The name is phrased as a question because the function is " + "expected to return a value.");
        }
      }
      for (var methodName in ReactCompositeComponentInterface) {
        if (!Constructor.prototype[methodName]) {
          Constructor.prototype[methodName] = null;
        }
      }
      if ("production" !== "development") {
        return ReactLegacyElement.wrapFactory(ReactElementValidator.createFactory(Constructor));
      }
      return ReactLegacyElement.wrapFactory(ReactElement.createFactory(Constructor));
    }, injection:{injectMixin:function(mixin) {
      injectedMixins.push(mixin);
    }}};
    module.exports = ReactCompositeComponent;
  }, {"./Object.assign":27, "./ReactComponent":32, "./ReactContext":35, "./ReactCurrentOwner":36, "./ReactElement":52, "./ReactElementValidator":53, "./ReactEmptyComponent":54, "./ReactErrorUtils":55, "./ReactLegacyElement":61, "./ReactOwner":67, "./ReactPerf":68, "./ReactPropTransferer":69, "./ReactPropTypeLocationNames":70, "./ReactPropTypeLocations":71, "./ReactUpdates":79, "./instantiateReactComponent":125, "./invariant":126, "./keyMirror":132, "./keyOf":133, "./mapObject":134, "./monitorCodeUse":136, 
  "./shouldUpdateReactComponent":142, "./warning":145}], 35:[function(_dereq_, module, exports) {
    var assign = _dereq_("./Object.assign");
    var ReactContext = {current:{}, withContext:function(newContext, scopedCallback) {
      var result;
      var previousContext = ReactContext.current;
      ReactContext.current = assign({}, previousContext, newContext);
      try {
        result = scopedCallback();
      } finally {
        ReactContext.current = previousContext;
      }
      return result;
    }};
    module.exports = ReactContext;
  }, {"./Object.assign":27}], 36:[function(_dereq_, module, exports) {
    var ReactCurrentOwner = {current:null};
    module.exports = ReactCurrentOwner;
  }, {}], 37:[function(_dereq_, module, exports) {
    var ReactElement = _dereq_("./ReactElement");
    var ReactElementValidator = _dereq_("./ReactElementValidator");
    var ReactLegacyElement = _dereq_("./ReactLegacyElement");
    var mapObject = _dereq_("./mapObject");
    function createDOMFactory(tag) {
      if ("production" !== "development") {
        return ReactLegacyElement.markNonLegacyFactory(ReactElementValidator.createFactory(tag));
      }
      return ReactLegacyElement.markNonLegacyFactory(ReactElement.createFactory(tag));
    }
    var ReactDOM = mapObject({a:"a", abbr:"abbr", address:"address", area:"area", article:"article", aside:"aside", audio:"audio", b:"b", base:"base", bdi:"bdi", bdo:"bdo", big:"big", blockquote:"blockquote", body:"body", br:"br", button:"button", canvas:"canvas", caption:"caption", cite:"cite", code:"code", col:"col", colgroup:"colgroup", data:"data", datalist:"datalist", dd:"dd", del:"del", details:"details", dfn:"dfn", dialog:"dialog", div:"div", dl:"dl", dt:"dt", em:"em", embed:"embed", fieldset:"fieldset", 
    figcaption:"figcaption", figure:"figure", footer:"footer", form:"form", h1:"h1", h2:"h2", h3:"h3", h4:"h4", h5:"h5", h6:"h6", head:"head", header:"header", hr:"hr", html:"html", i:"i", iframe:"iframe", img:"img", input:"input", ins:"ins", kbd:"kbd", keygen:"keygen", label:"label", legend:"legend", li:"li", link:"link", main:"main", map:"map", mark:"mark", menu:"menu", menuitem:"menuitem", meta:"meta", meter:"meter", nav:"nav", noscript:"noscript", object:"object", ol:"ol", optgroup:"optgroup", 
    option:"option", output:"output", p:"p", param:"param", picture:"picture", pre:"pre", progress:"progress", q:"q", rp:"rp", rt:"rt", ruby:"ruby", s:"s", samp:"samp", script:"script", section:"section", select:"select", small:"small", source:"source", span:"span", strong:"strong", style:"style", sub:"sub", summary:"summary", sup:"sup", table:"table", tbody:"tbody", td:"td", textarea:"textarea", tfoot:"tfoot", th:"th", thead:"thead", time:"time", title:"title", tr:"tr", track:"track", u:"u", ul:"ul", 
    "var":"var", video:"video", wbr:"wbr", circle:"circle", defs:"defs", ellipse:"ellipse", g:"g", line:"line", linearGradient:"linearGradient", mask:"mask", path:"path", pattern:"pattern", polygon:"polygon", polyline:"polyline", radialGradient:"radialGradient", rect:"rect", stop:"stop", svg:"svg", text:"text", tspan:"tspan"}, createDOMFactory);
    module.exports = ReactDOM;
  }, {"./ReactElement":52, "./ReactElementValidator":53, "./ReactLegacyElement":61, "./mapObject":134}], 38:[function(_dereq_, module, exports) {
    var AutoFocusMixin = _dereq_("./AutoFocusMixin");
    var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
    var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
    var ReactElement = _dereq_("./ReactElement");
    var ReactDOM = _dereq_("./ReactDOM");
    var keyMirror = _dereq_("./keyMirror");
    var button = ReactElement.createFactory(ReactDOM.button.type);
    var mouseListenerNames = keyMirror({onClick:true, onDoubleClick:true, onMouseDown:true, onMouseMove:true, onMouseUp:true, onClickCapture:true, onDoubleClickCapture:true, onMouseDownCapture:true, onMouseMoveCapture:true, onMouseUpCapture:true});
    var ReactDOMButton = ReactCompositeComponent.createClass({displayName:"ReactDOMButton", mixins:[AutoFocusMixin, ReactBrowserComponentMixin], render:function() {
      var props = {};
      for (var key in this.props) {
        if (this.props.hasOwnProperty(key) && (!this.props.disabled || !mouseListenerNames[key])) {
          props[key] = this.props[key];
        }
      }
      return button(props, this.props.children);
    }});
    module.exports = ReactDOMButton;
  }, {"./AutoFocusMixin":2, "./ReactBrowserComponentMixin":29, "./ReactCompositeComponent":34, "./ReactDOM":37, "./ReactElement":52, "./keyMirror":132}], 39:[function(_dereq_, module, exports) {
    var CSSPropertyOperations = _dereq_("./CSSPropertyOperations");
    var DOMProperty = _dereq_("./DOMProperty");
    var DOMPropertyOperations = _dereq_("./DOMPropertyOperations");
    var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
    var ReactComponent = _dereq_("./ReactComponent");
    var ReactBrowserEventEmitter = _dereq_("./ReactBrowserEventEmitter");
    var ReactMount = _dereq_("./ReactMount");
    var ReactMultiChild = _dereq_("./ReactMultiChild");
    var ReactPerf = _dereq_("./ReactPerf");
    var assign = _dereq_("./Object.assign");
    var escapeTextForBrowser = _dereq_("./escapeTextForBrowser");
    var invariant = _dereq_("./invariant");
    var isEventSupported = _dereq_("./isEventSupported");
    var keyOf = _dereq_("./keyOf");
    var monitorCodeUse = _dereq_("./monitorCodeUse");
    var deleteListener = ReactBrowserEventEmitter.deleteListener;
    var listenTo = ReactBrowserEventEmitter.listenTo;
    var registrationNameModules = ReactBrowserEventEmitter.registrationNameModules;
    var CONTENT_TYPES = {"string":true, "number":true};
    var STYLE = keyOf({style:null});
    var ELEMENT_NODE_TYPE = 1;
    function assertValidProps(props) {
      if (!props) {
        return;
      }
      "production" !== "development" ? invariant(props.children == null || props.dangerouslySetInnerHTML == null, "Can only set one of `children` or `props.dangerouslySetInnerHTML`.") : invariant(props.children == null || props.dangerouslySetInnerHTML == null);
      if ("production" !== "development") {
        if (props.contentEditable && props.children != null) {
          console.warn("A component is `contentEditable` and contains `children` managed by " + "React. It is now your responsibility to guarantee that none of those " + "nodes are unexpectedly modified or duplicated. This is probably not " + "intentional.");
        }
      }
      "production" !== "development" ? invariant(props.style == null || typeof props.style === "object", "The `style` prop expects a mapping from style properties to values, " + "not a string.") : invariant(props.style == null || typeof props.style === "object");
    }
    function putListener(id, registrationName, listener, transaction) {
      if ("production" !== "development") {
        if (registrationName === "onScroll" && !isEventSupported("scroll", true)) {
          monitorCodeUse("react_no_scroll_event");
          console.warn("This browser doesn't support the `onScroll` event");
        }
      }
      var container = ReactMount.findReactContainerForID(id);
      if (container) {
        var doc = container.nodeType === ELEMENT_NODE_TYPE ? container.ownerDocument : container;
        listenTo(registrationName, doc);
      }
      transaction.getPutListenerQueue().enqueuePutListener(id, registrationName, listener);
    }
    var omittedCloseTags = {"area":true, "base":true, "br":true, "col":true, "embed":true, "hr":true, "img":true, "input":true, "keygen":true, "link":true, "meta":true, "param":true, "source":true, "track":true, "wbr":true};
    var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/;
    var validatedTagCache = {};
    var hasOwnProperty = {}.hasOwnProperty;
    function validateDangerousTag(tag) {
      if (!hasOwnProperty.call(validatedTagCache, tag)) {
        "production" !== "development" ? invariant(VALID_TAG_REGEX.test(tag), "Invalid tag: %s", tag) : invariant(VALID_TAG_REGEX.test(tag));
        validatedTagCache[tag] = true;
      }
    }
    function ReactDOMComponent(tag) {
      validateDangerousTag(tag);
      this._tag = tag;
      this.tagName = tag.toUpperCase();
    }
    ReactDOMComponent.displayName = "ReactDOMComponent";
    ReactDOMComponent.Mixin = {mountComponent:ReactPerf.measure("ReactDOMComponent", "mountComponent", function(rootID, transaction, mountDepth) {
      ReactComponent.Mixin.mountComponent.call(this, rootID, transaction, mountDepth);
      assertValidProps(this.props);
      var closeTag = omittedCloseTags[this._tag] ? "" : "\x3c/" + this._tag + "\x3e";
      return this._createOpenTagMarkupAndPutListeners(transaction) + this._createContentMarkup(transaction) + closeTag;
    }), _createOpenTagMarkupAndPutListeners:function(transaction) {
      var props = this.props;
      var ret = "\x3c" + this._tag;
      for (var propKey in props) {
        if (!props.hasOwnProperty(propKey)) {
          continue;
        }
        var propValue = props[propKey];
        if (propValue == null) {
          continue;
        }
        if (registrationNameModules.hasOwnProperty(propKey)) {
          putListener(this._rootNodeID, propKey, propValue, transaction);
        } else {
          if (propKey === STYLE) {
            if (propValue) {
              propValue = props.style = assign({}, props.style);
            }
            propValue = CSSPropertyOperations.createMarkupForStyles(propValue);
          }
          var markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
          if (markup) {
            ret += " " + markup;
          }
        }
      }
      if (transaction.renderToStaticMarkup) {
        return ret + "\x3e";
      }
      var markupForID = DOMPropertyOperations.createMarkupForID(this._rootNodeID);
      return ret + " " + markupForID + "\x3e";
    }, _createContentMarkup:function(transaction) {
      var innerHTML = this.props.dangerouslySetInnerHTML;
      if (innerHTML != null) {
        if (innerHTML.__html != null) {
          return innerHTML.__html;
        }
      } else {
        var contentToUse = CONTENT_TYPES[typeof this.props.children] ? this.props.children : null;
        var childrenToUse = contentToUse != null ? null : this.props.children;
        if (contentToUse != null) {
          return escapeTextForBrowser(contentToUse);
        } else {
          if (childrenToUse != null) {
            var mountImages = this.mountChildren(childrenToUse, transaction);
            return mountImages.join("");
          }
        }
      }
      return "";
    }, receiveComponent:function(nextElement, transaction) {
      if (nextElement === this._currentElement && nextElement._owner != null) {
        return;
      }
      ReactComponent.Mixin.receiveComponent.call(this, nextElement, transaction);
    }, updateComponent:ReactPerf.measure("ReactDOMComponent", "updateComponent", function(transaction, prevElement) {
      assertValidProps(this._currentElement.props);
      ReactComponent.Mixin.updateComponent.call(this, transaction, prevElement);
      this._updateDOMProperties(prevElement.props, transaction);
      this._updateDOMChildren(prevElement.props, transaction);
    }), _updateDOMProperties:function(lastProps, transaction) {
      var nextProps = this.props;
      var propKey;
      var styleName;
      var styleUpdates;
      for (propKey in lastProps) {
        if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey)) {
          continue;
        }
        if (propKey === STYLE) {
          var lastStyle = lastProps[propKey];
          for (styleName in lastStyle) {
            if (lastStyle.hasOwnProperty(styleName)) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = "";
            }
          }
        } else {
          if (registrationNameModules.hasOwnProperty(propKey)) {
            deleteListener(this._rootNodeID, propKey);
          } else {
            if (DOMProperty.isStandardName[propKey] || DOMProperty.isCustomAttribute(propKey)) {
              ReactComponent.BackendIDOperations.deletePropertyByID(this._rootNodeID, propKey);
            }
          }
        }
      }
      for (propKey in nextProps) {
        var nextProp = nextProps[propKey];
        var lastProp = lastProps[propKey];
        if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp) {
          continue;
        }
        if (propKey === STYLE) {
          if (nextProp) {
            nextProp = nextProps.style = assign({}, nextProp);
          }
          if (lastProp) {
            for (styleName in lastProp) {
              if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
                styleUpdates = styleUpdates || {};
                styleUpdates[styleName] = "";
              }
            }
            for (styleName in nextProp) {
              if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
                styleUpdates = styleUpdates || {};
                styleUpdates[styleName] = nextProp[styleName];
              }
            }
          } else {
            styleUpdates = nextProp;
          }
        } else {
          if (registrationNameModules.hasOwnProperty(propKey)) {
            putListener(this._rootNodeID, propKey, nextProp, transaction);
          } else {
            if (DOMProperty.isStandardName[propKey] || DOMProperty.isCustomAttribute(propKey)) {
              ReactComponent.BackendIDOperations.updatePropertyByID(this._rootNodeID, propKey, nextProp);
            }
          }
        }
      }
      if (styleUpdates) {
        ReactComponent.BackendIDOperations.updateStylesByID(this._rootNodeID, styleUpdates);
      }
    }, _updateDOMChildren:function(lastProps, transaction) {
      var nextProps = this.props;
      var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
      var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;
      var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
      var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;
      var lastChildren = lastContent != null ? null : lastProps.children;
      var nextChildren = nextContent != null ? null : nextProps.children;
      var lastHasContentOrHtml = lastContent != null || lastHtml != null;
      var nextHasContentOrHtml = nextContent != null || nextHtml != null;
      if (lastChildren != null && nextChildren == null) {
        this.updateChildren(null, transaction);
      } else {
        if (lastHasContentOrHtml && !nextHasContentOrHtml) {
          this.updateTextContent("");
        }
      }
      if (nextContent != null) {
        if (lastContent !== nextContent) {
          this.updateTextContent("" + nextContent);
        }
      } else {
        if (nextHtml != null) {
          if (lastHtml !== nextHtml) {
            ReactComponent.BackendIDOperations.updateInnerHTMLByID(this._rootNodeID, nextHtml);
          }
        } else {
          if (nextChildren != null) {
            this.updateChildren(nextChildren, transaction);
          }
        }
      }
    }, unmountComponent:function() {
      this.unmountChildren();
      ReactBrowserEventEmitter.deleteAllListeners(this._rootNodeID);
      ReactComponent.Mixin.unmountComponent.call(this);
    }};
    assign(ReactDOMComponent.prototype, ReactComponent.Mixin, ReactDOMComponent.Mixin, ReactMultiChild.Mixin, ReactBrowserComponentMixin);
    module.exports = ReactDOMComponent;
  }, {"./CSSPropertyOperations":5, "./DOMProperty":11, "./DOMPropertyOperations":12, "./Object.assign":27, "./ReactBrowserComponentMixin":29, "./ReactBrowserEventEmitter":30, "./ReactComponent":32, "./ReactMount":63, "./ReactMultiChild":64, "./ReactPerf":68, "./escapeTextForBrowser":109, "./invariant":126, "./isEventSupported":127, "./keyOf":133, "./monitorCodeUse":136}], 40:[function(_dereq_, module, exports) {
    var EventConstants = _dereq_("./EventConstants");
    var LocalEventTrapMixin = _dereq_("./LocalEventTrapMixin");
    var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
    var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
    var ReactElement = _dereq_("./ReactElement");
    var ReactDOM = _dereq_("./ReactDOM");
    var form = ReactElement.createFactory(ReactDOM.form.type);
    var ReactDOMForm = ReactCompositeComponent.createClass({displayName:"ReactDOMForm", mixins:[ReactBrowserComponentMixin, LocalEventTrapMixin], render:function() {
      return form(this.props);
    }, componentDidMount:function() {
      this.trapBubbledEvent(EventConstants.topLevelTypes.topReset, "reset");
      this.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, "submit");
    }});
    module.exports = ReactDOMForm;
  }, {"./EventConstants":16, "./LocalEventTrapMixin":25, "./ReactBrowserComponentMixin":29, "./ReactCompositeComponent":34, "./ReactDOM":37, "./ReactElement":52}], 41:[function(_dereq_, module, exports) {
    var CSSPropertyOperations = _dereq_("./CSSPropertyOperations");
    var DOMChildrenOperations = _dereq_("./DOMChildrenOperations");
    var DOMPropertyOperations = _dereq_("./DOMPropertyOperations");
    var ReactMount = _dereq_("./ReactMount");
    var ReactPerf = _dereq_("./ReactPerf");
    var invariant = _dereq_("./invariant");
    var setInnerHTML = _dereq_("./setInnerHTML");
    var INVALID_PROPERTY_ERRORS = {dangerouslySetInnerHTML:"`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.", style:"`style` must be set using `updateStylesByID()`."};
    var ReactDOMIDOperations = {updatePropertyByID:ReactPerf.measure("ReactDOMIDOperations", "updatePropertyByID", function(id, name, value) {
      var node = ReactMount.getNode(id);
      "production" !== "development" ? invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name), "updatePropertyByID(...): %s", INVALID_PROPERTY_ERRORS[name]) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name));
      if (value != null) {
        DOMPropertyOperations.setValueForProperty(node, name, value);
      } else {
        DOMPropertyOperations.deleteValueForProperty(node, name);
      }
    }), deletePropertyByID:ReactPerf.measure("ReactDOMIDOperations", "deletePropertyByID", function(id, name, value) {
      var node = ReactMount.getNode(id);
      "production" !== "development" ? invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name), "updatePropertyByID(...): %s", INVALID_PROPERTY_ERRORS[name]) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name));
      DOMPropertyOperations.deleteValueForProperty(node, name, value);
    }), updateStylesByID:ReactPerf.measure("ReactDOMIDOperations", "updateStylesByID", function(id, styles) {
      var node = ReactMount.getNode(id);
      CSSPropertyOperations.setValueForStyles(node, styles);
    }), updateInnerHTMLByID:ReactPerf.measure("ReactDOMIDOperations", "updateInnerHTMLByID", function(id, html) {
      var node = ReactMount.getNode(id);
      setInnerHTML(node, html);
    }), updateTextContentByID:ReactPerf.measure("ReactDOMIDOperations", "updateTextContentByID", function(id, content) {
      var node = ReactMount.getNode(id);
      DOMChildrenOperations.updateTextContent(node, content);
    }), dangerouslyReplaceNodeWithMarkupByID:ReactPerf.measure("ReactDOMIDOperations", "dangerouslyReplaceNodeWithMarkupByID", function(id, markup) {
      var node = ReactMount.getNode(id);
      DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node, markup);
    }), dangerouslyProcessChildrenUpdates:ReactPerf.measure("ReactDOMIDOperations", "dangerouslyProcessChildrenUpdates", function(updates, markup) {
      for (var i = 0;i < updates.length;i++) {
        updates[i].parentNode = ReactMount.getNode(updates[i].parentID);
      }
      DOMChildrenOperations.processUpdates(updates, markup);
    })};
    module.exports = ReactDOMIDOperations;
  }, {"./CSSPropertyOperations":5, "./DOMChildrenOperations":10, "./DOMPropertyOperations":12, "./ReactMount":63, "./ReactPerf":68, "./invariant":126, "./setInnerHTML":140}], 42:[function(_dereq_, module, exports) {
    var EventConstants = _dereq_("./EventConstants");
    var LocalEventTrapMixin = _dereq_("./LocalEventTrapMixin");
    var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
    var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
    var ReactElement = _dereq_("./ReactElement");
    var ReactDOM = _dereq_("./ReactDOM");
    var img = ReactElement.createFactory(ReactDOM.img.type);
    var ReactDOMImg = ReactCompositeComponent.createClass({displayName:"ReactDOMImg", tagName:"IMG", mixins:[ReactBrowserComponentMixin, LocalEventTrapMixin], render:function() {
      return img(this.props);
    }, componentDidMount:function() {
      this.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, "load");
      this.trapBubbledEvent(EventConstants.topLevelTypes.topError, "error");
    }});
    module.exports = ReactDOMImg;
  }, {"./EventConstants":16, "./LocalEventTrapMixin":25, "./ReactBrowserComponentMixin":29, "./ReactCompositeComponent":34, "./ReactDOM":37, "./ReactElement":52}], 43:[function(_dereq_, module, exports) {
    var AutoFocusMixin = _dereq_("./AutoFocusMixin");
    var DOMPropertyOperations = _dereq_("./DOMPropertyOperations");
    var LinkedValueUtils = _dereq_("./LinkedValueUtils");
    var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
    var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
    var ReactElement = _dereq_("./ReactElement");
    var ReactDOM = _dereq_("./ReactDOM");
    var ReactMount = _dereq_("./ReactMount");
    var ReactUpdates = _dereq_("./ReactUpdates");
    var assign = _dereq_("./Object.assign");
    var invariant = _dereq_("./invariant");
    var input = ReactElement.createFactory(ReactDOM.input.type);
    var instancesByReactID = {};
    function forceUpdateIfMounted() {
      if (this.isMounted()) {
        this.forceUpdate();
      }
    }
    var ReactDOMInput = ReactCompositeComponent.createClass({displayName:"ReactDOMInput", mixins:[AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin], getInitialState:function() {
      var defaultValue = this.props.defaultValue;
      return{initialChecked:this.props.defaultChecked || false, initialValue:defaultValue != null ? defaultValue : null};
    }, render:function() {
      var props = assign({}, this.props);
      props.defaultChecked = null;
      props.defaultValue = null;
      var value = LinkedValueUtils.getValue(this);
      props.value = value != null ? value : this.state.initialValue;
      var checked = LinkedValueUtils.getChecked(this);
      props.checked = checked != null ? checked : this.state.initialChecked;
      props.onChange = this._handleChange;
      return input(props, this.props.children);
    }, componentDidMount:function() {
      var id = ReactMount.getID(this.getDOMNode());
      instancesByReactID[id] = this;
    }, componentWillUnmount:function() {
      var rootNode = this.getDOMNode();
      var id = ReactMount.getID(rootNode);
      delete instancesByReactID[id];
    }, componentDidUpdate:function(prevProps, prevState, prevContext) {
      var rootNode = this.getDOMNode();
      if (this.props.checked != null) {
        DOMPropertyOperations.setValueForProperty(rootNode, "checked", this.props.checked || false);
      }
      var value = LinkedValueUtils.getValue(this);
      if (value != null) {
        DOMPropertyOperations.setValueForProperty(rootNode, "value", "" + value);
      }
    }, _handleChange:function(event) {
      var returnValue;
      var onChange = LinkedValueUtils.getOnChange(this);
      if (onChange) {
        returnValue = onChange.call(this, event);
      }
      ReactUpdates.asap(forceUpdateIfMounted, this);
      var name = this.props.name;
      if (this.props.type === "radio" && name != null) {
        var rootNode = this.getDOMNode();
        var queryRoot = rootNode;
        while (queryRoot.parentNode) {
          queryRoot = queryRoot.parentNode;
        }
        var group = queryRoot.querySelectorAll("input[name\x3d" + JSON.stringify("" + name) + '][type\x3d"radio"]');
        for (var i = 0, groupLen = group.length;i < groupLen;i++) {
          var otherNode = group[i];
          if (otherNode === rootNode || otherNode.form !== rootNode.form) {
            continue;
          }
          var otherID = ReactMount.getID(otherNode);
          "production" !== "development" ? invariant(otherID, "ReactDOMInput: Mixing React and non-React radio inputs with the " + "same `name` is not supported.") : invariant(otherID);
          var otherInstance = instancesByReactID[otherID];
          "production" !== "development" ? invariant(otherInstance, "ReactDOMInput: Unknown radio button ID %s.", otherID) : invariant(otherInstance);
          ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
        }
      }
      return returnValue;
    }});
    module.exports = ReactDOMInput;
  }, {"./AutoFocusMixin":2, "./DOMPropertyOperations":12, "./LinkedValueUtils":24, "./Object.assign":27, "./ReactBrowserComponentMixin":29, "./ReactCompositeComponent":34, "./ReactDOM":37, "./ReactElement":52, "./ReactMount":63, "./ReactUpdates":79, "./invariant":126}], 44:[function(_dereq_, module, exports) {
    var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
    var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
    var ReactElement = _dereq_("./ReactElement");
    var ReactDOM = _dereq_("./ReactDOM");
    var warning = _dereq_("./warning");
    var option = ReactElement.createFactory(ReactDOM.option.type);
    var ReactDOMOption = ReactCompositeComponent.createClass({displayName:"ReactDOMOption", mixins:[ReactBrowserComponentMixin], componentWillMount:function() {
      if ("production" !== "development") {
        "production" !== "development" ? warning(this.props.selected == null, "Use the `defaultValue` or `value` props on \x3cselect\x3e instead of " + "setting `selected` on \x3coption\x3e.") : null;
      }
    }, render:function() {
      return option(this.props, this.props.children);
    }});
    module.exports = ReactDOMOption;
  }, {"./ReactBrowserComponentMixin":29, "./ReactCompositeComponent":34, "./ReactDOM":37, "./ReactElement":52, "./warning":145}], 45:[function(_dereq_, module, exports) {
    var AutoFocusMixin = _dereq_("./AutoFocusMixin");
    var LinkedValueUtils = _dereq_("./LinkedValueUtils");
    var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
    var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
    var ReactElement = _dereq_("./ReactElement");
    var ReactDOM = _dereq_("./ReactDOM");
    var ReactUpdates = _dereq_("./ReactUpdates");
    var assign = _dereq_("./Object.assign");
    var select = ReactElement.createFactory(ReactDOM.select.type);
    function updateWithPendingValueIfMounted() {
      if (this.isMounted()) {
        this.setState({value:this._pendingValue});
        this._pendingValue = 0;
      }
    }
    function selectValueType(props, propName, componentName) {
      if (props[propName] == null) {
        return;
      }
      if (props.multiple) {
        if (!Array.isArray(props[propName])) {
          return new Error("The `" + propName + "` prop supplied to \x3cselect\x3e must be an array if " + "`multiple` is true.");
        }
      } else {
        if (Array.isArray(props[propName])) {
          return new Error("The `" + propName + "` prop supplied to \x3cselect\x3e must be a scalar " + "value if `multiple` is false.");
        }
      }
    }
    function updateOptions(component, propValue) {
      var multiple = component.props.multiple;
      var value = propValue != null ? propValue : component.state.value;
      var options = component.getDOMNode().options;
      var selectedValue, i, l;
      if (multiple) {
        selectedValue = {};
        for (i = 0, l = value.length;i < l;++i) {
          selectedValue["" + value[i]] = true;
        }
      } else {
        selectedValue = "" + value;
      }
      for (i = 0, l = options.length;i < l;i++) {
        var selected = multiple ? selectedValue.hasOwnProperty(options[i].value) : options[i].value === selectedValue;
        if (selected !== options[i].selected) {
          options[i].selected = selected;
        }
      }
    }
    var ReactDOMSelect = ReactCompositeComponent.createClass({displayName:"ReactDOMSelect", mixins:[AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin], propTypes:{defaultValue:selectValueType, value:selectValueType}, getInitialState:function() {
      return{value:this.props.defaultValue || (this.props.multiple ? [] : "")};
    }, componentWillMount:function() {
      this._pendingValue = null;
    }, componentWillReceiveProps:function(nextProps) {
      if (!this.props.multiple && nextProps.multiple) {
        this.setState({value:[this.state.value]});
      } else {
        if (this.props.multiple && !nextProps.multiple) {
          this.setState({value:this.state.value[0]});
        }
      }
    }, render:function() {
      var props = assign({}, this.props);
      props.onChange = this._handleChange;
      props.value = null;
      return select(props, this.props.children);
    }, componentDidMount:function() {
      updateOptions(this, LinkedValueUtils.getValue(this));
    }, componentDidUpdate:function(prevProps) {
      var value = LinkedValueUtils.getValue(this);
      var prevMultiple = !!prevProps.multiple;
      var multiple = !!this.props.multiple;
      if (value != null || prevMultiple !== multiple) {
        updateOptions(this, value);
      }
    }, _handleChange:function(event) {
      var returnValue;
      var onChange = LinkedValueUtils.getOnChange(this);
      if (onChange) {
        returnValue = onChange.call(this, event);
      }
      var selectedValue;
      if (this.props.multiple) {
        selectedValue = [];
        var options = event.target.options;
        for (var i = 0, l = options.length;i < l;i++) {
          if (options[i].selected) {
            selectedValue.push(options[i].value);
          }
        }
      } else {
        selectedValue = event.target.value;
      }
      this._pendingValue = selectedValue;
      ReactUpdates.asap(updateWithPendingValueIfMounted, this);
      return returnValue;
    }});
    module.exports = ReactDOMSelect;
  }, {"./AutoFocusMixin":2, "./LinkedValueUtils":24, "./Object.assign":27, "./ReactBrowserComponentMixin":29, "./ReactCompositeComponent":34, "./ReactDOM":37, "./ReactElement":52, "./ReactUpdates":79}], 46:[function(_dereq_, module, exports) {
    var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
    var getNodeForCharacterOffset = _dereq_("./getNodeForCharacterOffset");
    var getTextContentAccessor = _dereq_("./getTextContentAccessor");
    function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
      return anchorNode === focusNode && anchorOffset === focusOffset;
    }
    function getIEOffsets(node) {
      var selection = document.selection;
      var selectedRange = selection.createRange();
      var selectedLength = selectedRange.text.length;
      var fromStart = selectedRange.duplicate();
      fromStart.moveToElementText(node);
      fromStart.setEndPoint("EndToStart", selectedRange);
      var startOffset = fromStart.text.length;
      var endOffset = startOffset + selectedLength;
      return{start:startOffset, end:endOffset};
    }
    function getModernOffsets(node) {
      var selection = window.getSelection && window.getSelection();
      if (!selection || selection.rangeCount === 0) {
        return null;
      }
      var anchorNode = selection.anchorNode;
      var anchorOffset = selection.anchorOffset;
      var focusNode = selection.focusNode;
      var focusOffset = selection.focusOffset;
      var currentRange = selection.getRangeAt(0);
      var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);
      var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;
      var tempRange = currentRange.cloneRange();
      tempRange.selectNodeContents(node);
      tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);
      var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);
      var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
      var end = start + rangeLength;
      var detectionRange = document.createRange();
      detectionRange.setStart(anchorNode, anchorOffset);
      detectionRange.setEnd(focusNode, focusOffset);
      var isBackward = detectionRange.collapsed;
      return{start:isBackward ? end : start, end:isBackward ? start : end};
    }
    function setIEOffsets(node, offsets) {
      var range = document.selection.createRange().duplicate();
      var start, end;
      if (typeof offsets.end === "undefined") {
        start = offsets.start;
        end = start;
      } else {
        if (offsets.start > offsets.end) {
          start = offsets.end;
          end = offsets.start;
        } else {
          start = offsets.start;
          end = offsets.end;
        }
      }
      range.moveToElementText(node);
      range.moveStart("character", start);
      range.setEndPoint("EndToStart", range);
      range.moveEnd("character", end - start);
      range.select();
    }
    function setModernOffsets(node, offsets) {
      if (!window.getSelection) {
        return;
      }
      var selection = window.getSelection();
      var length = node[getTextContentAccessor()].length;
      var start = Math.min(offsets.start, length);
      var end = typeof offsets.end === "undefined" ? start : Math.min(offsets.end, length);
      if (!selection.extend && start > end) {
        var temp = end;
        end = start;
        start = temp;
      }
      var startMarker = getNodeForCharacterOffset(node, start);
      var endMarker = getNodeForCharacterOffset(node, end);
      if (startMarker && endMarker) {
        var range = document.createRange();
        range.setStart(startMarker.node, startMarker.offset);
        selection.removeAllRanges();
        if (start > end) {
          selection.addRange(range);
          selection.extend(endMarker.node, endMarker.offset);
        } else {
          range.setEnd(endMarker.node, endMarker.offset);
          selection.addRange(range);
        }
      }
    }
    var useIEOffsets = ExecutionEnvironment.canUseDOM && document.selection;
    var ReactDOMSelection = {getOffsets:useIEOffsets ? getIEOffsets : getModernOffsets, setOffsets:useIEOffsets ? setIEOffsets : setModernOffsets};
    module.exports = ReactDOMSelection;
  }, {"./ExecutionEnvironment":22, "./getNodeForCharacterOffset":119, "./getTextContentAccessor":121}], 47:[function(_dereq_, module, exports) {
    var AutoFocusMixin = _dereq_("./AutoFocusMixin");
    var DOMPropertyOperations = _dereq_("./DOMPropertyOperations");
    var LinkedValueUtils = _dereq_("./LinkedValueUtils");
    var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
    var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
    var ReactElement = _dereq_("./ReactElement");
    var ReactDOM = _dereq_("./ReactDOM");
    var ReactUpdates = _dereq_("./ReactUpdates");
    var assign = _dereq_("./Object.assign");
    var invariant = _dereq_("./invariant");
    var warning = _dereq_("./warning");
    var textarea = ReactElement.createFactory(ReactDOM.textarea.type);
    function forceUpdateIfMounted() {
      if (this.isMounted()) {
        this.forceUpdate();
      }
    }
    var ReactDOMTextarea = ReactCompositeComponent.createClass({displayName:"ReactDOMTextarea", mixins:[AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin], getInitialState:function() {
      var defaultValue = this.props.defaultValue;
      var children = this.props.children;
      if (children != null) {
        if ("production" !== "development") {
          "production" !== "development" ? warning(false, "Use the `defaultValue` or `value` props instead of setting " + "children on \x3ctextarea\x3e.") : null;
        }
        "production" !== "development" ? invariant(defaultValue == null, "If you supply `defaultValue` on a \x3ctextarea\x3e, do not pass children.") : invariant(defaultValue == null);
        if (Array.isArray(children)) {
          "production" !== "development" ? invariant(children.length <= 1, "\x3ctextarea\x3e can only have at most one child.") : invariant(children.length <= 1);
          children = children[0];
        }
        defaultValue = "" + children;
      }
      if (defaultValue == null) {
        defaultValue = "";
      }
      var value = LinkedValueUtils.getValue(this);
      return{initialValue:"" + (value != null ? value : defaultValue)};
    }, render:function() {
      var props = assign({}, this.props);
      "production" !== "development" ? invariant(props.dangerouslySetInnerHTML == null, "`dangerouslySetInnerHTML` does not make sense on \x3ctextarea\x3e.") : invariant(props.dangerouslySetInnerHTML == null);
      props.defaultValue = null;
      props.value = null;
      props.onChange = this._handleChange;
      return textarea(props, this.state.initialValue);
    }, componentDidUpdate:function(prevProps, prevState, prevContext) {
      var value = LinkedValueUtils.getValue(this);
      if (value != null) {
        var rootNode = this.getDOMNode();
        DOMPropertyOperations.setValueForProperty(rootNode, "value", "" + value);
      }
    }, _handleChange:function(event) {
      var returnValue;
      var onChange = LinkedValueUtils.getOnChange(this);
      if (onChange) {
        returnValue = onChange.call(this, event);
      }
      ReactUpdates.asap(forceUpdateIfMounted, this);
      return returnValue;
    }});
    module.exports = ReactDOMTextarea;
  }, {"./AutoFocusMixin":2, "./DOMPropertyOperations":12, "./LinkedValueUtils":24, "./Object.assign":27, "./ReactBrowserComponentMixin":29, "./ReactCompositeComponent":34, "./ReactDOM":37, "./ReactElement":52, "./ReactUpdates":79, "./invariant":126, "./warning":145}], 48:[function(_dereq_, module, exports) {
    var ReactUpdates = _dereq_("./ReactUpdates");
    var Transaction = _dereq_("./Transaction");
    var assign = _dereq_("./Object.assign");
    var emptyFunction = _dereq_("./emptyFunction");
    var RESET_BATCHED_UPDATES = {initialize:emptyFunction, close:function() {
      ReactDefaultBatchingStrategy.isBatchingUpdates = false;
    }};
    var FLUSH_BATCHED_UPDATES = {initialize:emptyFunction, close:ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)};
    var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];
    function ReactDefaultBatchingStrategyTransaction() {
      this.reinitializeTransaction();
    }
    assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {getTransactionWrappers:function() {
      return TRANSACTION_WRAPPERS;
    }});
    var transaction = new ReactDefaultBatchingStrategyTransaction;
    var ReactDefaultBatchingStrategy = {isBatchingUpdates:false, batchedUpdates:function(callback, a, b) {
      var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;
      ReactDefaultBatchingStrategy.isBatchingUpdates = true;
      if (alreadyBatchingUpdates) {
        callback(a, b);
      } else {
        transaction.perform(callback, null, a, b);
      }
    }};
    module.exports = ReactDefaultBatchingStrategy;
  }, {"./Object.assign":27, "./ReactUpdates":79, "./Transaction":95, "./emptyFunction":107}], 49:[function(_dereq_, module, exports) {
    var BeforeInputEventPlugin = _dereq_("./BeforeInputEventPlugin");
    var ChangeEventPlugin = _dereq_("./ChangeEventPlugin");
    var ClientReactRootIndex = _dereq_("./ClientReactRootIndex");
    var CompositionEventPlugin = _dereq_("./CompositionEventPlugin");
    var DefaultEventPluginOrder = _dereq_("./DefaultEventPluginOrder");
    var EnterLeaveEventPlugin = _dereq_("./EnterLeaveEventPlugin");
    var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
    var HTMLDOMPropertyConfig = _dereq_("./HTMLDOMPropertyConfig");
    var MobileSafariClickEventPlugin = _dereq_("./MobileSafariClickEventPlugin");
    var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
    var ReactComponentBrowserEnvironment = _dereq_("./ReactComponentBrowserEnvironment");
    var ReactDefaultBatchingStrategy = _dereq_("./ReactDefaultBatchingStrategy");
    var ReactDOMComponent = _dereq_("./ReactDOMComponent");
    var ReactDOMButton = _dereq_("./ReactDOMButton");
    var ReactDOMForm = _dereq_("./ReactDOMForm");
    var ReactDOMImg = _dereq_("./ReactDOMImg");
    var ReactDOMInput = _dereq_("./ReactDOMInput");
    var ReactDOMOption = _dereq_("./ReactDOMOption");
    var ReactDOMSelect = _dereq_("./ReactDOMSelect");
    var ReactDOMTextarea = _dereq_("./ReactDOMTextarea");
    var ReactEventListener = _dereq_("./ReactEventListener");
    var ReactInjection = _dereq_("./ReactInjection");
    var ReactInstanceHandles = _dereq_("./ReactInstanceHandles");
    var ReactMount = _dereq_("./ReactMount");
    var SelectEventPlugin = _dereq_("./SelectEventPlugin");
    var ServerReactRootIndex = _dereq_("./ServerReactRootIndex");
    var SimpleEventPlugin = _dereq_("./SimpleEventPlugin");
    var SVGDOMPropertyConfig = _dereq_("./SVGDOMPropertyConfig");
    var createFullPageComponent = _dereq_("./createFullPageComponent");
    function inject() {
      ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);
      ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
      ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);
      ReactInjection.EventPluginHub.injectMount(ReactMount);
      ReactInjection.EventPluginHub.injectEventPluginsByName({SimpleEventPlugin:SimpleEventPlugin, EnterLeaveEventPlugin:EnterLeaveEventPlugin, ChangeEventPlugin:ChangeEventPlugin, CompositionEventPlugin:CompositionEventPlugin, MobileSafariClickEventPlugin:MobileSafariClickEventPlugin, SelectEventPlugin:SelectEventPlugin, BeforeInputEventPlugin:BeforeInputEventPlugin});
      ReactInjection.NativeComponent.injectGenericComponentClass(ReactDOMComponent);
      ReactInjection.NativeComponent.injectComponentClasses({"button":ReactDOMButton, "form":ReactDOMForm, "img":ReactDOMImg, "input":ReactDOMInput, "option":ReactDOMOption, "select":ReactDOMSelect, "textarea":ReactDOMTextarea, "html":createFullPageComponent("html"), "head":createFullPageComponent("head"), "body":createFullPageComponent("body")});
      ReactInjection.CompositeComponent.injectMixin(ReactBrowserComponentMixin);
      ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
      ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);
      ReactInjection.EmptyComponent.injectEmptyComponent("noscript");
      ReactInjection.Updates.injectReconcileTransaction(ReactComponentBrowserEnvironment.ReactReconcileTransaction);
      ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);
      ReactInjection.RootIndex.injectCreateReactRootIndex(ExecutionEnvironment.canUseDOM ? ClientReactRootIndex.createReactRootIndex : ServerReactRootIndex.createReactRootIndex);
      ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
      if ("production" !== "development") {
        var url = ExecutionEnvironment.canUseDOM && window.location.href || "";
        if (/[?&]react_perf\b/.test(url)) {
          var ReactDefaultPerf = _dereq_("./ReactDefaultPerf");
          ReactDefaultPerf.start();
        }
      }
    }
    module.exports = {inject:inject};
  }, {"./BeforeInputEventPlugin":3, "./ChangeEventPlugin":7, "./ClientReactRootIndex":8, "./CompositionEventPlugin":9, "./DefaultEventPluginOrder":14, "./EnterLeaveEventPlugin":15, "./ExecutionEnvironment":22, "./HTMLDOMPropertyConfig":23, "./MobileSafariClickEventPlugin":26, "./ReactBrowserComponentMixin":29, "./ReactComponentBrowserEnvironment":33, "./ReactDOMButton":38, "./ReactDOMComponent":39, "./ReactDOMForm":40, "./ReactDOMImg":42, "./ReactDOMInput":43, "./ReactDOMOption":44, "./ReactDOMSelect":45, 
  "./ReactDOMTextarea":47, "./ReactDefaultBatchingStrategy":48, "./ReactDefaultPerf":50, "./ReactEventListener":57, "./ReactInjection":58, "./ReactInstanceHandles":60, "./ReactMount":63, "./SVGDOMPropertyConfig":80, "./SelectEventPlugin":81, "./ServerReactRootIndex":82, "./SimpleEventPlugin":83, "./createFullPageComponent":103}], 50:[function(_dereq_, module, exports) {
    var DOMProperty = _dereq_("./DOMProperty");
    var ReactDefaultPerfAnalysis = _dereq_("./ReactDefaultPerfAnalysis");
    var ReactMount = _dereq_("./ReactMount");
    var ReactPerf = _dereq_("./ReactPerf");
    var performanceNow = _dereq_("./performanceNow");
    function roundFloat(val) {
      return Math.floor(val * 100) / 100;
    }
    function addValue(obj, key, val) {
      obj[key] = (obj[key] || 0) + val;
    }
    var ReactDefaultPerf = {_allMeasurements:[], _mountStack:[0], _injected:false, start:function() {
      if (!ReactDefaultPerf._injected) {
        ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);
      }
      ReactDefaultPerf._allMeasurements.length = 0;
      ReactPerf.enableMeasure = true;
    }, stop:function() {
      ReactPerf.enableMeasure = false;
    }, getLastMeasurements:function() {
      return ReactDefaultPerf._allMeasurements;
    }, printExclusive:function(measurements) {
      measurements = measurements || ReactDefaultPerf._allMeasurements;
      var summary = ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);
      console.table(summary.map(function(item) {
        return{"Component class name":item.componentName, "Total inclusive time (ms)":roundFloat(item.inclusive), "Exclusive mount time (ms)":roundFloat(item.exclusive), "Exclusive render time (ms)":roundFloat(item.render), "Mount time per instance (ms)":roundFloat(item.exclusive / item.count), "Render time per instance (ms)":roundFloat(item.render / item.count), "Instances":item.count};
      }));
    }, printInclusive:function(measurements) {
      measurements = measurements || ReactDefaultPerf._allMeasurements;
      var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);
      console.table(summary.map(function(item) {
        return{"Owner \x3e component":item.componentName, "Inclusive time (ms)":roundFloat(item.time), "Instances":item.count};
      }));
      console.log("Total time:", ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + " ms");
    }, getMeasurementsSummaryMap:function(measurements) {
      var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements, true);
      return summary.map(function(item) {
        return{"Owner \x3e component":item.componentName, "Wasted time (ms)":item.time, "Instances":item.count};
      });
    }, printWasted:function(measurements) {
      measurements = measurements || ReactDefaultPerf._allMeasurements;
      console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));
      console.log("Total time:", ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + " ms");
    }, printDOM:function(measurements) {
      measurements = measurements || ReactDefaultPerf._allMeasurements;
      var summary = ReactDefaultPerfAnalysis.getDOMSummary(measurements);
      console.table(summary.map(function(item) {
        var result = {};
        result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;
        result["type"] = item.type;
        result["args"] = JSON.stringify(item.args);
        return result;
      }));
      console.log("Total time:", ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + " ms");
    }, _recordWrite:function(id, fnName, totalTime, args) {
      var writes = ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].writes;
      writes[id] = writes[id] || [];
      writes[id].push({type:fnName, time:totalTime, args:args});
    }, measure:function(moduleName, fnName, func) {
      return function() {
        for (var args = [], $__0 = 0, $__1 = arguments.length;$__0 < $__1;$__0++) {
          args.push(arguments[$__0]);
        }
        var totalTime;
        var rv;
        var start;
        if (fnName === "_renderNewRootComponent" || fnName === "flushBatchedUpdates") {
          ReactDefaultPerf._allMeasurements.push({exclusive:{}, inclusive:{}, render:{}, counts:{}, writes:{}, displayNames:{}, totalTime:0});
          start = performanceNow();
          rv = func.apply(this, args);
          ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].totalTime = performanceNow() - start;
          return rv;
        } else {
          if (moduleName === "ReactDOMIDOperations" || moduleName === "ReactComponentBrowserEnvironment") {
            start = performanceNow();
            rv = func.apply(this, args);
            totalTime = performanceNow() - start;
            if (fnName === "mountImageIntoNode") {
              var mountID = ReactMount.getID(args[1]);
              ReactDefaultPerf._recordWrite(mountID, fnName, totalTime, args[0]);
            } else {
              if (fnName === "dangerouslyProcessChildrenUpdates") {
                args[0].forEach(function(update) {
                  var writeArgs = {};
                  if (update.fromIndex !== null) {
                    writeArgs.fromIndex = update.fromIndex;
                  }
                  if (update.toIndex !== null) {
                    writeArgs.toIndex = update.toIndex;
                  }
                  if (update.textContent !== null) {
                    writeArgs.textContent = update.textContent;
                  }
                  if (update.markupIndex !== null) {
                    writeArgs.markup = args[1][update.markupIndex];
                  }
                  ReactDefaultPerf._recordWrite(update.parentID, update.type, totalTime, writeArgs);
                });
              } else {
                ReactDefaultPerf._recordWrite(args[0], fnName, totalTime, Array.prototype.slice.call(args, 1));
              }
            }
            return rv;
          } else {
            if (moduleName === "ReactCompositeComponent" && (fnName === "mountComponent" || fnName === "updateComponent" || fnName === "_renderValidatedComponent")) {
              var rootNodeID = fnName === "mountComponent" ? args[0] : this._rootNodeID;
              var isRender = fnName === "_renderValidatedComponent";
              var isMount = fnName === "mountComponent";
              var mountStack = ReactDefaultPerf._mountStack;
              var entry = ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1];
              if (isRender) {
                addValue(entry.counts, rootNodeID, 1);
              } else {
                if (isMount) {
                  mountStack.push(0);
                }
              }
              start = performanceNow();
              rv = func.apply(this, args);
              totalTime = performanceNow() - start;
              if (isRender) {
                addValue(entry.render, rootNodeID, totalTime);
              } else {
                if (isMount) {
                  var subMountTime = mountStack.pop();
                  mountStack[mountStack.length - 1] += totalTime;
                  addValue(entry.exclusive, rootNodeID, totalTime - subMountTime);
                  addValue(entry.inclusive, rootNodeID, totalTime);
                } else {
                  addValue(entry.inclusive, rootNodeID, totalTime);
                }
              }
              entry.displayNames[rootNodeID] = {current:this.constructor.displayName, owner:this._owner ? this._owner.constructor.displayName : "\x3croot\x3e"};
              return rv;
            } else {
              return func.apply(this, args);
            }
          }
        }
      };
    }};
    module.exports = ReactDefaultPerf;
  }, {"./DOMProperty":11, "./ReactDefaultPerfAnalysis":51, "./ReactMount":63, "./ReactPerf":68, "./performanceNow":139}], 51:[function(_dereq_, module, exports) {
    var assign = _dereq_("./Object.assign");
    var DONT_CARE_THRESHOLD = 1.2;
    var DOM_OPERATION_TYPES = {"mountImageIntoNode":"set innerHTML", INSERT_MARKUP:"set innerHTML", MOVE_EXISTING:"move", REMOVE_NODE:"remove", TEXT_CONTENT:"set textContent", "updatePropertyByID":"update attribute", "deletePropertyByID":"delete attribute", "updateStylesByID":"update styles", "updateInnerHTMLByID":"set innerHTML", "dangerouslyReplaceNodeWithMarkupByID":"replace"};
    function getTotalTime(measurements) {
      var totalTime = 0;
      for (var i = 0;i < measurements.length;i++) {
        var measurement = measurements[i];
        totalTime += measurement.totalTime;
      }
      return totalTime;
    }
    function getDOMSummary(measurements) {
      var items = [];
      for (var i = 0;i < measurements.length;i++) {
        var measurement = measurements[i];
        var id;
        for (id in measurement.writes) {
          measurement.writes[id].forEach(function(write) {
            items.push({id:id, type:DOM_OPERATION_TYPES[write.type] || write.type, args:write.args});
          });
        }
      }
      return items;
    }
    function getExclusiveSummary(measurements) {
      var candidates = {};
      var displayName;
      for (var i = 0;i < measurements.length;i++) {
        var measurement = measurements[i];
        var allIDs = assign({}, measurement.exclusive, measurement.inclusive);
        for (var id in allIDs) {
          displayName = measurement.displayNames[id].current;
          candidates[displayName] = candidates[displayName] || {componentName:displayName, inclusive:0, exclusive:0, render:0, count:0};
          if (measurement.render[id]) {
            candidates[displayName].render += measurement.render[id];
          }
          if (measurement.exclusive[id]) {
            candidates[displayName].exclusive += measurement.exclusive[id];
          }
          if (measurement.inclusive[id]) {
            candidates[displayName].inclusive += measurement.inclusive[id];
          }
          if (measurement.counts[id]) {
            candidates[displayName].count += measurement.counts[id];
          }
        }
      }
      var arr = [];
      for (displayName in candidates) {
        if (candidates[displayName].exclusive >= DONT_CARE_THRESHOLD) {
          arr.push(candidates[displayName]);
        }
      }
      arr.sort(function(a, b) {
        return b.exclusive - a.exclusive;
      });
      return arr;
    }
    function getInclusiveSummary(measurements, onlyClean) {
      var candidates = {};
      var inclusiveKey;
      for (var i = 0;i < measurements.length;i++) {
        var measurement = measurements[i];
        var allIDs = assign({}, measurement.exclusive, measurement.inclusive);
        var cleanComponents;
        if (onlyClean) {
          cleanComponents = getUnchangedComponents(measurement);
        }
        for (var id in allIDs) {
          if (onlyClean && !cleanComponents[id]) {
            continue;
          }
          var displayName = measurement.displayNames[id];
          inclusiveKey = displayName.owner + " \x3e " + displayName.current;
          candidates[inclusiveKey] = candidates[inclusiveKey] || {componentName:inclusiveKey, time:0, count:0};
          if (measurement.inclusive[id]) {
            candidates[inclusiveKey].time += measurement.inclusive[id];
          }
          if (measurement.counts[id]) {
            candidates[inclusiveKey].count += measurement.counts[id];
          }
        }
      }
      var arr = [];
      for (inclusiveKey in candidates) {
        if (candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD) {
          arr.push(candidates[inclusiveKey]);
        }
      }
      arr.sort(function(a, b) {
        return b.time - a.time;
      });
      return arr;
    }
    function getUnchangedComponents(measurement) {
      var cleanComponents = {};
      var dirtyLeafIDs = Object.keys(measurement.writes);
      var allIDs = assign({}, measurement.exclusive, measurement.inclusive);
      for (var id in allIDs) {
        var isDirty = false;
        for (var i = 0;i < dirtyLeafIDs.length;i++) {
          if (dirtyLeafIDs[i].indexOf(id) === 0) {
            isDirty = true;
            break;
          }
        }
        if (!isDirty && measurement.counts[id] > 0) {
          cleanComponents[id] = true;
        }
      }
      return cleanComponents;
    }
    var ReactDefaultPerfAnalysis = {getExclusiveSummary:getExclusiveSummary, getInclusiveSummary:getInclusiveSummary, getDOMSummary:getDOMSummary, getTotalTime:getTotalTime};
    module.exports = ReactDefaultPerfAnalysis;
  }, {"./Object.assign":27}], 52:[function(_dereq_, module, exports) {
    var ReactContext = _dereq_("./ReactContext");
    var ReactCurrentOwner = _dereq_("./ReactCurrentOwner");
    var warning = _dereq_("./warning");
    var RESERVED_PROPS = {key:true, ref:true};
    function defineWarningProperty(object, key) {
      Object.defineProperty(object, key, {configurable:false, enumerable:true, get:function() {
        if (!this._store) {
          return null;
        }
        return this._store[key];
      }, set:function(value) {
        "production" !== "development" ? warning(false, "Don't set the " + key + " property of the component. " + "Mutate the existing props object instead.") : null;
        this._store[key] = value;
      }});
    }
    var useMutationMembrane = false;
    function defineMutationMembrane(prototype) {
      try {
        var pseudoFrozenProperties = {props:true};
        for (var key in pseudoFrozenProperties) {
          defineWarningProperty(prototype, key);
        }
        useMutationMembrane = true;
      } catch (x) {
      }
    }
    var ReactElement = function(type, key, ref, owner, context, props) {
      this.type = type;
      this.key = key;
      this.ref = ref;
      this._owner = owner;
      this._context = context;
      if ("production" !== "development") {
        this._store = {validated:false, props:props};
        if (useMutationMembrane) {
          Object.freeze(this);
          return;
        }
      }
      this.props = props;
    };
    ReactElement.prototype = {_isReactElement:true};
    if ("production" !== "development") {
      defineMutationMembrane(ReactElement.prototype);
    }
    ReactElement.createElement = function(type, config, children) {
      var propName;
      var props = {};
      var key = null;
      var ref = null;
      if (config != null) {
        ref = config.ref === undefined ? null : config.ref;
        if ("production" !== "development") {
          "production" !== "development" ? warning(config.key !== null, "createElement(...): Encountered component with a `key` of null. In " + "a future version, this will be treated as equivalent to the string " + "'null'; instead, provide an explicit key or use undefined.") : null;
        }
        key = config.key == null ? null : "" + config.key;
        for (propName in config) {
          if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
            props[propName] = config[propName];
          }
        }
      }
      var childrenLength = arguments.length - 2;
      if (childrenLength === 1) {
        props.children = children;
      } else {
        if (childrenLength > 1) {
          var childArray = Array(childrenLength);
          for (var i = 0;i < childrenLength;i++) {
            childArray[i] = arguments[i + 2];
          }
          props.children = childArray;
        }
      }
      if (type && type.defaultProps) {
        var defaultProps = type.defaultProps;
        for (propName in defaultProps) {
          if (typeof props[propName] === "undefined") {
            props[propName] = defaultProps[propName];
          }
        }
      }
      return new ReactElement(type, key, ref, ReactCurrentOwner.current, ReactContext.current, props);
    };
    ReactElement.createFactory = function(type) {
      var factory = ReactElement.createElement.bind(null, type);
      factory.type = type;
      return factory;
    };
    ReactElement.cloneAndReplaceProps = function(oldElement, newProps) {
      var newElement = new ReactElement(oldElement.type, oldElement.key, oldElement.ref, oldElement._owner, oldElement._context, newProps);
      if ("production" !== "development") {
        newElement._store.validated = oldElement._store.validated;
      }
      return newElement;
    };
    ReactElement.isValidElement = function(object) {
      var isElement = !!(object && object._isReactElement);
      return isElement;
    };
    module.exports = ReactElement;
  }, {"./ReactContext":35, "./ReactCurrentOwner":36, "./warning":145}], 53:[function(_dereq_, module, exports) {
    var ReactElement = _dereq_("./ReactElement");
    var ReactPropTypeLocations = _dereq_("./ReactPropTypeLocations");
    var ReactCurrentOwner = _dereq_("./ReactCurrentOwner");
    var monitorCodeUse = _dereq_("./monitorCodeUse");
    var warning = _dereq_("./warning");
    var ownerHasKeyUseWarning = {"react_key_warning":{}, "react_numeric_key_warning":{}};
    var ownerHasMonitoredObjectMap = {};
    var loggedTypeFailures = {};
    var NUMERIC_PROPERTY_REGEX = /^\d+$/;
    function getCurrentOwnerDisplayName() {
      var current = ReactCurrentOwner.current;
      return current && current.constructor.displayName || undefined;
    }
    function validateExplicitKey(component, parentType) {
      if (component._store.validated || component.key != null) {
        return;
      }
      component._store.validated = true;
      warnAndMonitorForKeyUse("react_key_warning", 'Each child in an array should have a unique "key" prop.', component, parentType);
    }
    function validatePropertyKey(name, component, parentType) {
      if (!NUMERIC_PROPERTY_REGEX.test(name)) {
        return;
      }
      warnAndMonitorForKeyUse("react_numeric_key_warning", "Child objects should have non-numeric keys so ordering is preserved.", component, parentType);
    }
    function warnAndMonitorForKeyUse(warningID, message, component, parentType) {
      var ownerName = getCurrentOwnerDisplayName();
      var parentName = parentType.displayName;
      var useName = ownerName || parentName;
      var memoizer = ownerHasKeyUseWarning[warningID];
      if (memoizer.hasOwnProperty(useName)) {
        return;
      }
      memoizer[useName] = true;
      message += ownerName ? " Check the render method of " + ownerName + "." : " Check the renderComponent call using \x3c" + parentName + "\x3e.";
      var childOwnerName = null;
      if (component._owner && component._owner !== ReactCurrentOwner.current) {
        childOwnerName = component._owner.constructor.displayName;
        message += " It was passed a child from " + childOwnerName + ".";
      }
      message += " See http://fb.me/react-warning-keys for more information.";
      monitorCodeUse(warningID, {component:useName, componentOwner:childOwnerName});
      console.warn(message);
    }
    function monitorUseOfObjectMap() {
      var currentName = getCurrentOwnerDisplayName() || "";
      if (ownerHasMonitoredObjectMap.hasOwnProperty(currentName)) {
        return;
      }
      ownerHasMonitoredObjectMap[currentName] = true;
      monitorCodeUse("react_object_map_children");
    }
    function validateChildKeys(component, parentType) {
      if (Array.isArray(component)) {
        for (var i = 0;i < component.length;i++) {
          var child = component[i];
          if (ReactElement.isValidElement(child)) {
            validateExplicitKey(child, parentType);
          }
        }
      } else {
        if (ReactElement.isValidElement(component)) {
          component._store.validated = true;
        } else {
          if (component && typeof component === "object") {
            monitorUseOfObjectMap();
            for (var name in component) {
              validatePropertyKey(name, component[name], parentType);
            }
          }
        }
      }
    }
    function checkPropTypes(componentName, propTypes, props, location) {
      for (var propName in propTypes) {
        if (propTypes.hasOwnProperty(propName)) {
          var error;
          try {
            error = propTypes[propName](props, propName, componentName, location);
          } catch (ex) {
            error = ex;
          }
          if (error instanceof Error && !(error.message in loggedTypeFailures)) {
            loggedTypeFailures[error.message] = true;
            monitorCodeUse("react_failed_descriptor_type_check", {message:error.message});
          }
        }
      }
    }
    var ReactElementValidator = {createElement:function(type, props, children) {
      "production" !== "development" ? warning(type != null, "React.createElement: type should not be null or undefined. It should " + "be a string (for DOM elements) or a ReactClass (for composite " + "components).") : null;
      var element = ReactElement.createElement.apply(this, arguments);
      if (element == null) {
        return element;
      }
      for (var i = 2;i < arguments.length;i++) {
        validateChildKeys(arguments[i], type);
      }
      if (type) {
        var name = type.displayName;
        if (type.propTypes) {
          checkPropTypes(name, type.propTypes, element.props, ReactPropTypeLocations.prop);
        }
        if (type.contextTypes) {
          checkPropTypes(name, type.contextTypes, element._context, ReactPropTypeLocations.context);
        }
      }
      return element;
    }, createFactory:function(type) {
      var validatedFactory = ReactElementValidator.createElement.bind(null, type);
      validatedFactory.type = type;
      return validatedFactory;
    }};
    module.exports = ReactElementValidator;
  }, {"./ReactCurrentOwner":36, "./ReactElement":52, "./ReactPropTypeLocations":71, "./monitorCodeUse":136, "./warning":145}], 54:[function(_dereq_, module, exports) {
    var ReactElement = _dereq_("./ReactElement");
    var invariant = _dereq_("./invariant");
    var component;
    var nullComponentIdsRegistry = {};
    var ReactEmptyComponentInjection = {injectEmptyComponent:function(emptyComponent) {
      component = ReactElement.createFactory(emptyComponent);
    }};
    function getEmptyComponent() {
      "production" !== "development" ? invariant(component, "Trying to return null from a render, but no null placeholder component " + "was injected.") : invariant(component);
      return component();
    }
    function registerNullComponentID(id) {
      nullComponentIdsRegistry[id] = true;
    }
    function deregisterNullComponentID(id) {
      delete nullComponentIdsRegistry[id];
    }
    function isNullComponentID(id) {
      return nullComponentIdsRegistry[id];
    }
    var ReactEmptyComponent = {deregisterNullComponentID:deregisterNullComponentID, getEmptyComponent:getEmptyComponent, injection:ReactEmptyComponentInjection, isNullComponentID:isNullComponentID, registerNullComponentID:registerNullComponentID};
    module.exports = ReactEmptyComponent;
  }, {"./ReactElement":52, "./invariant":126}], 55:[function(_dereq_, module, exports) {
    var ReactErrorUtils = {guard:function(func, name) {
      return func;
    }};
    module.exports = ReactErrorUtils;
  }, {}], 56:[function(_dereq_, module, exports) {
    var EventPluginHub = _dereq_("./EventPluginHub");
    function runEventQueueInBatch(events) {
      EventPluginHub.enqueueEvents(events);
      EventPluginHub.processEventQueue();
    }
    var ReactEventEmitterMixin = {handleTopLevel:function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent) {
      var events = EventPluginHub.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent);
      runEventQueueInBatch(events);
    }};
    module.exports = ReactEventEmitterMixin;
  }, {"./EventPluginHub":18}], 57:[function(_dereq_, module, exports) {
    var EventListener = _dereq_("./EventListener");
    var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
    var PooledClass = _dereq_("./PooledClass");
    var ReactInstanceHandles = _dereq_("./ReactInstanceHandles");
    var ReactMount = _dereq_("./ReactMount");
    var ReactUpdates = _dereq_("./ReactUpdates");
    var assign = _dereq_("./Object.assign");
    var getEventTarget = _dereq_("./getEventTarget");
    var getUnboundedScrollPosition = _dereq_("./getUnboundedScrollPosition");
    function findParent(node) {
      var nodeID = ReactMount.getID(node);
      var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);
      var container = ReactMount.findReactContainerForID(rootID);
      var parent = ReactMount.getFirstReactDOM(container);
      return parent;
    }
    function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
      this.topLevelType = topLevelType;
      this.nativeEvent = nativeEvent;
      this.ancestors = [];
    }
    assign(TopLevelCallbackBookKeeping.prototype, {destructor:function() {
      this.topLevelType = null;
      this.nativeEvent = null;
      this.ancestors.length = 0;
    }});
    PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);
    function handleTopLevelImpl(bookKeeping) {
      var topLevelTarget = ReactMount.getFirstReactDOM(getEventTarget(bookKeeping.nativeEvent)) || window;
      var ancestor = topLevelTarget;
      while (ancestor) {
        bookKeeping.ancestors.push(ancestor);
        ancestor = findParent(ancestor);
      }
      for (var i = 0, l = bookKeeping.ancestors.length;i < l;i++) {
        topLevelTarget = bookKeeping.ancestors[i];
        var topLevelTargetID = ReactMount.getID(topLevelTarget) || "";
        ReactEventListener._handleTopLevel(bookKeeping.topLevelType, topLevelTarget, topLevelTargetID, bookKeeping.nativeEvent);
      }
    }
    function scrollValueMonitor(cb) {
      var scrollPosition = getUnboundedScrollPosition(window);
      cb(scrollPosition);
    }
    var ReactEventListener = {_enabled:true, _handleTopLevel:null, WINDOW_HANDLE:ExecutionEnvironment.canUseDOM ? window : null, setHandleTopLevel:function(handleTopLevel) {
      ReactEventListener._handleTopLevel = handleTopLevel;
    }, setEnabled:function(enabled) {
      ReactEventListener._enabled = !!enabled;
    }, isEnabled:function() {
      return ReactEventListener._enabled;
    }, trapBubbledEvent:function(topLevelType, handlerBaseName, handle) {
      var element = handle;
      if (!element) {
        return;
      }
      return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
    }, trapCapturedEvent:function(topLevelType, handlerBaseName, handle) {
      var element = handle;
      if (!element) {
        return;
      }
      return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
    }, monitorScrollValue:function(refresh) {
      var callback = scrollValueMonitor.bind(null, refresh);
      EventListener.listen(window, "scroll", callback);
      EventListener.listen(window, "resize", callback);
    }, dispatchEvent:function(topLevelType, nativeEvent) {
      if (!ReactEventListener._enabled) {
        return;
      }
      var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
      try {
        ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
      } finally {
        TopLevelCallbackBookKeeping.release(bookKeeping);
      }
    }};
    module.exports = ReactEventListener;
  }, {"./EventListener":17, "./ExecutionEnvironment":22, "./Object.assign":27, "./PooledClass":28, "./ReactInstanceHandles":60, "./ReactMount":63, "./ReactUpdates":79, "./getEventTarget":117, "./getUnboundedScrollPosition":122}], 58:[function(_dereq_, module, exports) {
    var DOMProperty = _dereq_("./DOMProperty");
    var EventPluginHub = _dereq_("./EventPluginHub");
    var ReactComponent = _dereq_("./ReactComponent");
    var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
    var ReactEmptyComponent = _dereq_("./ReactEmptyComponent");
    var ReactBrowserEventEmitter = _dereq_("./ReactBrowserEventEmitter");
    var ReactNativeComponent = _dereq_("./ReactNativeComponent");
    var ReactPerf = _dereq_("./ReactPerf");
    var ReactRootIndex = _dereq_("./ReactRootIndex");
    var ReactUpdates = _dereq_("./ReactUpdates");
    var ReactInjection = {Component:ReactComponent.injection, CompositeComponent:ReactCompositeComponent.injection, DOMProperty:DOMProperty.injection, EmptyComponent:ReactEmptyComponent.injection, EventPluginHub:EventPluginHub.injection, EventEmitter:ReactBrowserEventEmitter.injection, NativeComponent:ReactNativeComponent.injection, Perf:ReactPerf.injection, RootIndex:ReactRootIndex.injection, Updates:ReactUpdates.injection};
    module.exports = ReactInjection;
  }, {"./DOMProperty":11, "./EventPluginHub":18, "./ReactBrowserEventEmitter":30, "./ReactComponent":32, "./ReactCompositeComponent":34, "./ReactEmptyComponent":54, "./ReactNativeComponent":66, "./ReactPerf":68, "./ReactRootIndex":75, "./ReactUpdates":79}], 59:[function(_dereq_, module, exports) {
    var ReactDOMSelection = _dereq_("./ReactDOMSelection");
    var containsNode = _dereq_("./containsNode");
    var focusNode = _dereq_("./focusNode");
    var getActiveElement = _dereq_("./getActiveElement");
    function isInDocument(node) {
      return containsNode(document.documentElement, node);
    }
    var ReactInputSelection = {hasSelectionCapabilities:function(elem) {
      return elem && (elem.nodeName === "INPUT" && elem.type === "text" || elem.nodeName === "TEXTAREA" || elem.contentEditable === "true");
    }, getSelectionInformation:function() {
      var focusedElem = getActiveElement();
      return{focusedElem:focusedElem, selectionRange:ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null};
    }, restoreSelection:function(priorSelectionInformation) {
      var curFocusedElem = getActiveElement();
      var priorFocusedElem = priorSelectionInformation.focusedElem;
      var priorSelectionRange = priorSelectionInformation.selectionRange;
      if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
        if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
          ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
        }
        focusNode(priorFocusedElem);
      }
    }, getSelection:function(input) {
      var selection;
      if ("selectionStart" in input) {
        selection = {start:input.selectionStart, end:input.selectionEnd};
      } else {
        if (document.selection && input.nodeName === "INPUT") {
          var range = document.selection.createRange();
          if (range.parentElement() === input) {
            selection = {start:-range.moveStart("character", -input.value.length), end:-range.moveEnd("character", -input.value.length)};
          }
        } else {
          selection = ReactDOMSelection.getOffsets(input);
        }
      }
      return selection || {start:0, end:0};
    }, setSelection:function(input, offsets) {
      var start = offsets.start;
      var end = offsets.end;
      if (typeof end === "undefined") {
        end = start;
      }
      if ("selectionStart" in input) {
        input.selectionStart = start;
        input.selectionEnd = Math.min(end, input.value.length);
      } else {
        if (document.selection && input.nodeName === "INPUT") {
          var range = input.createTextRange();
          range.collapse(true);
          range.moveStart("character", start);
          range.moveEnd("character", end - start);
          range.select();
        } else {
          ReactDOMSelection.setOffsets(input, offsets);
        }
      }
    }};
    module.exports = ReactInputSelection;
  }, {"./ReactDOMSelection":46, "./containsNode":101, "./focusNode":111, "./getActiveElement":113}], 60:[function(_dereq_, module, exports) {
    var ReactRootIndex = _dereq_("./ReactRootIndex");
    var invariant = _dereq_("./invariant");
    var SEPARATOR = ".";
    var SEPARATOR_LENGTH = SEPARATOR.length;
    var MAX_TREE_DEPTH = 100;
    function getReactRootIDString(index) {
      return SEPARATOR + index.toString(36);
    }
    function isBoundary(id, index) {
      return id.charAt(index) === SEPARATOR || index === id.length;
    }
    function isValidID(id) {
      return id === "" || id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR;
    }
    function isAncestorIDOf(ancestorID, descendantID) {
      return descendantID.indexOf(ancestorID) === 0 && isBoundary(descendantID, ancestorID.length);
    }
    function getParentID(id) {
      return id ? id.substr(0, id.lastIndexOf(SEPARATOR)) : "";
    }
    function getNextDescendantID(ancestorID, destinationID) {
      "production" !== "development" ? invariant(isValidID(ancestorID) && isValidID(destinationID), "getNextDescendantID(%s, %s): Received an invalid React DOM ID.", ancestorID, destinationID) : invariant(isValidID(ancestorID) && isValidID(destinationID));
      "production" !== "development" ? invariant(isAncestorIDOf(ancestorID, destinationID), "getNextDescendantID(...): React has made an invalid assumption about " + "the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.", ancestorID, destinationID) : invariant(isAncestorIDOf(ancestorID, destinationID));
      if (ancestorID === destinationID) {
        return ancestorID;
      }
      var start = ancestorID.length + SEPARATOR_LENGTH;
      for (var i = start;i < destinationID.length;i++) {
        if (isBoundary(destinationID, i)) {
          break;
        }
      }
      return destinationID.substr(0, i);
    }
    function getFirstCommonAncestorID(oneID, twoID) {
      var minLength = Math.min(oneID.length, twoID.length);
      if (minLength === 0) {
        return "";
      }
      var lastCommonMarkerIndex = 0;
      for (var i = 0;i <= minLength;i++) {
        if (isBoundary(oneID, i) && isBoundary(twoID, i)) {
          lastCommonMarkerIndex = i;
        } else {
          if (oneID.charAt(i) !== twoID.charAt(i)) {
            break;
          }
        }
      }
      var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);
      "production" !== "development" ? invariant(isValidID(longestCommonID), "getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s", oneID, twoID, longestCommonID) : invariant(isValidID(longestCommonID));
      return longestCommonID;
    }
    function traverseParentPath(start, stop, cb, arg, skipFirst, skipLast) {
      start = start || "";
      stop = stop || "";
      "production" !== "development" ? invariant(start !== stop, "traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.", start) : invariant(start !== stop);
      var traverseUp = isAncestorIDOf(stop, start);
      "production" !== "development" ? invariant(traverseUp || isAncestorIDOf(start, stop), "traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do " + "not have a parent path.", start, stop) : invariant(traverseUp || isAncestorIDOf(start, stop));
      var depth = 0;
      var traverse = traverseUp ? getParentID : getNextDescendantID;
      for (var id = start;;id = traverse(id, stop)) {
        var ret;
        if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {
          ret = cb(id, traverseUp, arg);
        }
        if (ret === false || id === stop) {
          break;
        }
        "production" !== "development" ? invariant(depth++ < MAX_TREE_DEPTH, "traverseParentPath(%s, %s, ...): Detected an infinite loop while " + "traversing the React DOM ID tree. This may be due to malformed IDs: %s", start, stop) : invariant(depth++ < MAX_TREE_DEPTH);
      }
    }
    var ReactInstanceHandles = {createReactRootID:function() {
      return getReactRootIDString(ReactRootIndex.createReactRootIndex());
    }, createReactID:function(rootID, name) {
      return rootID + name;
    }, getReactRootIDFromNodeID:function(id) {
      if (id && id.charAt(0) === SEPARATOR && id.length > 1) {
        var index = id.indexOf(SEPARATOR, 1);
        return index > -1 ? id.substr(0, index) : id;
      }
      return null;
    }, traverseEnterLeave:function(leaveID, enterID, cb, upArg, downArg) {
      var ancestorID = getFirstCommonAncestorID(leaveID, enterID);
      if (ancestorID !== leaveID) {
        traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);
      }
      if (ancestorID !== enterID) {
        traverseParentPath(ancestorID, enterID, cb, downArg, true, false);
      }
    }, traverseTwoPhase:function(targetID, cb, arg) {
      if (targetID) {
        traverseParentPath("", targetID, cb, arg, true, false);
        traverseParentPath(targetID, "", cb, arg, false, true);
      }
    }, traverseAncestors:function(targetID, cb, arg) {
      traverseParentPath("", targetID, cb, arg, true, false);
    }, _getFirstCommonAncestorID:getFirstCommonAncestorID, _getNextDescendantID:getNextDescendantID, isAncestorIDOf:isAncestorIDOf, SEPARATOR:SEPARATOR};
    module.exports = ReactInstanceHandles;
  }, {"./ReactRootIndex":75, "./invariant":126}], 61:[function(_dereq_, module, exports) {
    var ReactCurrentOwner = _dereq_("./ReactCurrentOwner");
    var invariant = _dereq_("./invariant");
    var monitorCodeUse = _dereq_("./monitorCodeUse");
    var warning = _dereq_("./warning");
    var legacyFactoryLogs = {};
    function warnForLegacyFactoryCall() {
      if (!ReactLegacyElementFactory._isLegacyCallWarningEnabled) {
        return;
      }
      var owner = ReactCurrentOwner.current;
      var name = owner && owner.constructor ? owner.constructor.displayName : "";
      if (!name) {
        name = "Something";
      }
      if (legacyFactoryLogs.hasOwnProperty(name)) {
        return;
      }
      legacyFactoryLogs[name] = true;
      "production" !== "development" ? warning(false, name + " is calling a React component directly. " + "Use a factory or JSX instead. See: http://fb.me/react-legacyfactory") : null;
      monitorCodeUse("react_legacy_factory_call", {version:3, name:name});
    }
    function warnForPlainFunctionType(type) {
      var isReactClass = type.prototype && typeof type.prototype.mountComponent === "function" && typeof type.prototype.receiveComponent === "function";
      if (isReactClass) {
        "production" !== "development" ? warning(false, "Did not expect to get a React class here. Use `Component` instead " + "of `Component.type` or `this.constructor`.") : null;
      } else {
        if (!type._reactWarnedForThisType) {
          try {
            type._reactWarnedForThisType = true;
          } catch (x) {
          }
          monitorCodeUse("react_non_component_in_jsx", {version:3, name:type.name});
        }
        "production" !== "development" ? warning(false, "This JSX uses a plain function. Only React components are " + "valid in React's JSX transform.") : null;
      }
    }
    function warnForNonLegacyFactory(type) {
      "production" !== "development" ? warning(false, "Do not pass React.DOM." + type.type + " to JSX or createFactory. " + 'Use the string "' + type.type + '" instead.') : null;
    }
    function proxyStaticMethods(target, source) {
      if (typeof source !== "function") {
        return;
      }
      for (var key in source) {
        if (source.hasOwnProperty(key)) {
          var value = source[key];
          if (typeof value === "function") {
            var bound = value.bind(source);
            for (var k in value) {
              if (value.hasOwnProperty(k)) {
                bound[k] = value[k];
              }
            }
            target[key] = bound;
          } else {
            target[key] = value;
          }
        }
      }
    }
    var LEGACY_MARKER = {};
    var NON_LEGACY_MARKER = {};
    var ReactLegacyElementFactory = {};
    ReactLegacyElementFactory.wrapCreateFactory = function(createFactory) {
      var legacyCreateFactory = function(type) {
        if (typeof type !== "function") {
          return createFactory(type);
        }
        if (type.isReactNonLegacyFactory) {
          if ("production" !== "development") {
            warnForNonLegacyFactory(type);
          }
          return createFactory(type.type);
        }
        if (type.isReactLegacyFactory) {
          return createFactory(type.type);
        }
        if ("production" !== "development") {
          warnForPlainFunctionType(type);
        }
        return type;
      };
      return legacyCreateFactory;
    };
    ReactLegacyElementFactory.wrapCreateElement = function(createElement) {
      var legacyCreateElement = function(type, props, children) {
        if (typeof type !== "function") {
          return createElement.apply(this, arguments);
        }
        var args;
        if (type.isReactNonLegacyFactory) {
          if ("production" !== "development") {
            warnForNonLegacyFactory(type);
          }
          args = Array.prototype.slice.call(arguments, 0);
          args[0] = type.type;
          return createElement.apply(this, args);
        }
        if (type.isReactLegacyFactory) {
          if (type._isMockFunction) {
            type.type._mockedReactClassConstructor = type;
          }
          args = Array.prototype.slice.call(arguments, 0);
          args[0] = type.type;
          return createElement.apply(this, args);
        }
        if ("production" !== "development") {
          warnForPlainFunctionType(type);
        }
        return type.apply(null, Array.prototype.slice.call(arguments, 1));
      };
      return legacyCreateElement;
    };
    ReactLegacyElementFactory.wrapFactory = function(factory) {
      "production" !== "development" ? invariant(typeof factory === "function", "This is suppose to accept a element factory") : invariant(typeof factory === "function");
      var legacyElementFactory = function(config, children) {
        if ("production" !== "development") {
          warnForLegacyFactoryCall();
        }
        return factory.apply(this, arguments);
      };
      proxyStaticMethods(legacyElementFactory, factory.type);
      legacyElementFactory.isReactLegacyFactory = LEGACY_MARKER;
      legacyElementFactory.type = factory.type;
      return legacyElementFactory;
    };
    ReactLegacyElementFactory.markNonLegacyFactory = function(factory) {
      factory.isReactNonLegacyFactory = NON_LEGACY_MARKER;
      return factory;
    };
    ReactLegacyElementFactory.isValidFactory = function(factory) {
      return typeof factory === "function" && factory.isReactLegacyFactory === LEGACY_MARKER;
    };
    ReactLegacyElementFactory.isValidClass = function(factory) {
      if ("production" !== "development") {
        "production" !== "development" ? warning(false, "isValidClass is deprecated and will be removed in a future release. " + "Use a more specific validator instead.") : null;
      }
      return ReactLegacyElementFactory.isValidFactory(factory);
    };
    ReactLegacyElementFactory._isLegacyCallWarningEnabled = true;
    module.exports = ReactLegacyElementFactory;
  }, {"./ReactCurrentOwner":36, "./invariant":126, "./monitorCodeUse":136, "./warning":145}], 62:[function(_dereq_, module, exports) {
    var adler32 = _dereq_("./adler32");
    var ReactMarkupChecksum = {CHECKSUM_ATTR_NAME:"data-react-checksum", addChecksumToMarkup:function(markup) {
      var checksum = adler32(markup);
      return markup.replace("\x3e", " " + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '\x3d"' + checksum + '"\x3e');
    }, canReuseMarkup:function(markup, element) {
      var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
      existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
      var markupChecksum = adler32(markup);
      return markupChecksum === existingChecksum;
    }};
    module.exports = ReactMarkupChecksum;
  }, {"./adler32":98}], 63:[function(_dereq_, module, exports) {
    var DOMProperty = _dereq_("./DOMProperty");
    var ReactBrowserEventEmitter = _dereq_("./ReactBrowserEventEmitter");
    var ReactCurrentOwner = _dereq_("./ReactCurrentOwner");
    var ReactElement = _dereq_("./ReactElement");
    var ReactLegacyElement = _dereq_("./ReactLegacyElement");
    var ReactInstanceHandles = _dereq_("./ReactInstanceHandles");
    var ReactPerf = _dereq_("./ReactPerf");
    var containsNode = _dereq_("./containsNode");
    var deprecated = _dereq_("./deprecated");
    var getReactRootElementInContainer = _dereq_("./getReactRootElementInContainer");
    var instantiateReactComponent = _dereq_("./instantiateReactComponent");
    var invariant = _dereq_("./invariant");
    var shouldUpdateReactComponent = _dereq_("./shouldUpdateReactComponent");
    var warning = _dereq_("./warning");
    var createElement = ReactLegacyElement.wrapCreateElement(ReactElement.createElement);
    var SEPARATOR = ReactInstanceHandles.SEPARATOR;
    var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
    var nodeCache = {};
    var ELEMENT_NODE_TYPE = 1;
    var DOC_NODE_TYPE = 9;
    var instancesByReactRootID = {};
    var containersByReactRootID = {};
    if ("production" !== "development") {
      var rootElementsByReactRootID = {}
    }
    var findComponentRootReusableArray = [];
    function getReactRootID(container) {
      var rootElement = getReactRootElementInContainer(container);
      return rootElement && ReactMount.getID(rootElement);
    }
    function getID(node) {
      var id = internalGetID(node);
      if (id) {
        if (nodeCache.hasOwnProperty(id)) {
          var cached = nodeCache[id];
          if (cached !== node) {
            "production" !== "development" ? invariant(!isValid(cached, id), "ReactMount: Two valid but unequal nodes with the same `%s`: %s", ATTR_NAME, id) : invariant(!isValid(cached, id));
            nodeCache[id] = node;
          }
        } else {
          nodeCache[id] = node;
        }
      }
      return id;
    }
    function internalGetID(node) {
      return node && node.getAttribute && node.getAttribute(ATTR_NAME) || "";
    }
    function setID(node, id) {
      var oldID = internalGetID(node);
      if (oldID !== id) {
        delete nodeCache[oldID];
      }
      node.setAttribute(ATTR_NAME, id);
      nodeCache[id] = node;
    }
    function getNode(id) {
      if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
        nodeCache[id] = ReactMount.findReactNodeByID(id);
      }
      return nodeCache[id];
    }
    function isValid(node, id) {
      if (node) {
        "production" !== "development" ? invariant(internalGetID(node) === id, "ReactMount: Unexpected modification of `%s`", ATTR_NAME) : invariant(internalGetID(node) === id);
        var container = ReactMount.findReactContainerForID(id);
        if (container && containsNode(container, node)) {
          return true;
        }
      }
      return false;
    }
    function purgeID(id) {
      delete nodeCache[id];
    }
    var deepestNodeSoFar = null;
    function findDeepestCachedAncestorImpl(ancestorID) {
      var ancestor = nodeCache[ancestorID];
      if (ancestor && isValid(ancestor, ancestorID)) {
        deepestNodeSoFar = ancestor;
      } else {
        return false;
      }
    }
    function findDeepestCachedAncestor(targetID) {
      deepestNodeSoFar = null;
      ReactInstanceHandles.traverseAncestors(targetID, findDeepestCachedAncestorImpl);
      var foundNode = deepestNodeSoFar;
      deepestNodeSoFar = null;
      return foundNode;
    }
    var ReactMount = {_instancesByReactRootID:instancesByReactRootID, scrollMonitor:function(container, renderCallback) {
      renderCallback();
    }, _updateRootComponent:function(prevComponent, nextComponent, container, callback) {
      var nextProps = nextComponent.props;
      ReactMount.scrollMonitor(container, function() {
        prevComponent.replaceProps(nextProps, callback);
      });
      if ("production" !== "development") {
        rootElementsByReactRootID[getReactRootID(container)] = getReactRootElementInContainer(container);
      }
      return prevComponent;
    }, _registerComponent:function(nextComponent, container) {
      "production" !== "development" ? invariant(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE), "_registerComponent(...): Target container is not a DOM element.") : invariant(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE));
      ReactBrowserEventEmitter.ensureScrollValueMonitoring();
      var reactRootID = ReactMount.registerContainer(container);
      instancesByReactRootID[reactRootID] = nextComponent;
      return reactRootID;
    }, _renderNewRootComponent:ReactPerf.measure("ReactMount", "_renderNewRootComponent", function(nextComponent, container, shouldReuseMarkup) {
      "production" !== "development" ? warning(ReactCurrentOwner.current == null, "_renderNewRootComponent(): Render methods should be a pure function " + "of props and state; triggering nested component updates from " + "render is not allowed. If necessary, trigger nested updates in " + "componentDidUpdate.") : null;
      var componentInstance = instantiateReactComponent(nextComponent, null);
      var reactRootID = ReactMount._registerComponent(componentInstance, container);
      componentInstance.mountComponentIntoNode(reactRootID, container, shouldReuseMarkup);
      if ("production" !== "development") {
        rootElementsByReactRootID[reactRootID] = getReactRootElementInContainer(container);
      }
      return componentInstance;
    }), render:function(nextElement, container, callback) {
      "production" !== "development" ? invariant(ReactElement.isValidElement(nextElement), "renderComponent(): Invalid component element.%s", typeof nextElement === "string" ? " Instead of passing an element string, make sure to instantiate " + "it by passing it to React.createElement." : ReactLegacyElement.isValidFactory(nextElement) ? " Instead of passing a component class, make sure to instantiate " + "it by passing it to React.createElement." : typeof nextElement.props !== "undefined" ? " This may be caused by unintentionally loading two independent " + 
      "copies of React." : "") : invariant(ReactElement.isValidElement(nextElement));
      var prevComponent = instancesByReactRootID[getReactRootID(container)];
      if (prevComponent) {
        var prevElement = prevComponent._currentElement;
        if (shouldUpdateReactComponent(prevElement, nextElement)) {
          return ReactMount._updateRootComponent(prevComponent, nextElement, container, callback);
        } else {
          ReactMount.unmountComponentAtNode(container);
        }
      }
      var reactRootElement = getReactRootElementInContainer(container);
      var containerHasReactMarkup = reactRootElement && ReactMount.isRenderedByReact(reactRootElement);
      var shouldReuseMarkup = containerHasReactMarkup && !prevComponent;
      var component = ReactMount._renderNewRootComponent(nextElement, container, shouldReuseMarkup);
      callback && callback.call(component);
      return component;
    }, constructAndRenderComponent:function(constructor, props, container) {
      var element = createElement(constructor, props);
      return ReactMount.render(element, container);
    }, constructAndRenderComponentByID:function(constructor, props, id) {
      var domNode = document.getElementById(id);
      "production" !== "development" ? invariant(domNode, 'Tried to get element with id of "%s" but it is not present on the page.', id) : invariant(domNode);
      return ReactMount.constructAndRenderComponent(constructor, props, domNode);
    }, registerContainer:function(container) {
      var reactRootID = getReactRootID(container);
      if (reactRootID) {
        reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);
      }
      if (!reactRootID) {
        reactRootID = ReactInstanceHandles.createReactRootID();
      }
      containersByReactRootID[reactRootID] = container;
      return reactRootID;
    }, unmountComponentAtNode:function(container) {
      "production" !== "development" ? warning(ReactCurrentOwner.current == null, "unmountComponentAtNode(): Render methods should be a pure function of " + "props and state; triggering nested component updates from render is " + "not allowed. If necessary, trigger nested updates in " + "componentDidUpdate.") : null;
      var reactRootID = getReactRootID(container);
      var component = instancesByReactRootID[reactRootID];
      if (!component) {
        return false;
      }
      ReactMount.unmountComponentFromNode(component, container);
      delete instancesByReactRootID[reactRootID];
      delete containersByReactRootID[reactRootID];
      if ("production" !== "development") {
        delete rootElementsByReactRootID[reactRootID];
      }
      return true;
    }, unmountComponentFromNode:function(instance, container) {
      instance.unmountComponent();
      if (container.nodeType === DOC_NODE_TYPE) {
        container = container.documentElement;
      }
      while (container.lastChild) {
        container.removeChild(container.lastChild);
      }
    }, findReactContainerForID:function(id) {
      var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);
      var container = containersByReactRootID[reactRootID];
      if ("production" !== "development") {
        var rootElement = rootElementsByReactRootID[reactRootID];
        if (rootElement && rootElement.parentNode !== container) {
          "production" !== "development" ? invariant(internalGetID(rootElement) === reactRootID, "ReactMount: Root element ID differed from reactRootID.") : invariant(internalGetID(rootElement) === reactRootID);
          var containerChild = container.firstChild;
          if (containerChild && reactRootID === internalGetID(containerChild)) {
            rootElementsByReactRootID[reactRootID] = containerChild;
          } else {
            console.warn("ReactMount: Root element has been removed from its original " + "container. New container:", rootElement.parentNode);
          }
        }
      }
      return container;
    }, findReactNodeByID:function(id) {
      var reactRoot = ReactMount.findReactContainerForID(id);
      return ReactMount.findComponentRoot(reactRoot, id);
    }, isRenderedByReact:function(node) {
      if (node.nodeType !== 1) {
        return false;
      }
      var id = ReactMount.getID(node);
      return id ? id.charAt(0) === SEPARATOR : false;
    }, getFirstReactDOM:function(node) {
      var current = node;
      while (current && current.parentNode !== current) {
        if (ReactMount.isRenderedByReact(current)) {
          return current;
        }
        current = current.parentNode;
      }
      return null;
    }, findComponentRoot:function(ancestorNode, targetID) {
      var firstChildren = findComponentRootReusableArray;
      var childIndex = 0;
      var deepestAncestor = findDeepestCachedAncestor(targetID) || ancestorNode;
      firstChildren[0] = deepestAncestor.firstChild;
      firstChildren.length = 1;
      while (childIndex < firstChildren.length) {
        var child = firstChildren[childIndex++];
        var targetChild;
        while (child) {
          var childID = ReactMount.getID(child);
          if (childID) {
            if (targetID === childID) {
              targetChild = child;
            } else {
              if (ReactInstanceHandles.isAncestorIDOf(childID, targetID)) {
                firstChildren.length = childIndex = 0;
                firstChildren.push(child.firstChild);
              }
            }
          } else {
            firstChildren.push(child.firstChild);
          }
          child = child.nextSibling;
        }
        if (targetChild) {
          firstChildren.length = 0;
          return targetChild;
        }
      }
      firstChildren.length = 0;
      "production" !== "development" ? invariant(false, "findComponentRoot(..., %s): Unable to find element. This probably " + "means the DOM was unexpectedly mutated (e.g., by the browser), " + "usually due to forgetting a \x3ctbody\x3e when using tables, nesting tags " + "like \x3cform\x3e, \x3cp\x3e, or \x3ca\x3e, or using non-SVG elements in an \x3csvg\x3e " + "parent. " + "Try inspecting the child nodes of the element with React ID `%s`.", targetID, ReactMount.getID(ancestorNode)) : invariant(false);
    }, getReactRootID:getReactRootID, getID:getID, setID:setID, getNode:getNode, purgeID:purgeID};
    ReactMount.renderComponent = deprecated("ReactMount", "renderComponent", "render", this, ReactMount.render);
    module.exports = ReactMount;
  }, {"./DOMProperty":11, "./ReactBrowserEventEmitter":30, "./ReactCurrentOwner":36, "./ReactElement":52, "./ReactInstanceHandles":60, "./ReactLegacyElement":61, "./ReactPerf":68, "./containsNode":101, "./deprecated":106, "./getReactRootElementInContainer":120, "./instantiateReactComponent":125, "./invariant":126, "./shouldUpdateReactComponent":142, "./warning":145}], 64:[function(_dereq_, module, exports) {
    var ReactComponent = _dereq_("./ReactComponent");
    var ReactMultiChildUpdateTypes = _dereq_("./ReactMultiChildUpdateTypes");
    var flattenChildren = _dereq_("./flattenChildren");
    var instantiateReactComponent = _dereq_("./instantiateReactComponent");
    var shouldUpdateReactComponent = _dereq_("./shouldUpdateReactComponent");
    var updateDepth = 0;
    var updateQueue = [];
    var markupQueue = [];
    function enqueueMarkup(parentID, markup, toIndex) {
      updateQueue.push({parentID:parentID, parentNode:null, type:ReactMultiChildUpdateTypes.INSERT_MARKUP, markupIndex:markupQueue.push(markup) - 1, textContent:null, fromIndex:null, toIndex:toIndex});
    }
    function enqueueMove(parentID, fromIndex, toIndex) {
      updateQueue.push({parentID:parentID, parentNode:null, type:ReactMultiChildUpdateTypes.MOVE_EXISTING, markupIndex:null, textContent:null, fromIndex:fromIndex, toIndex:toIndex});
    }
    function enqueueRemove(parentID, fromIndex) {
      updateQueue.push({parentID:parentID, parentNode:null, type:ReactMultiChildUpdateTypes.REMOVE_NODE, markupIndex:null, textContent:null, fromIndex:fromIndex, toIndex:null});
    }
    function enqueueTextContent(parentID, textContent) {
      updateQueue.push({parentID:parentID, parentNode:null, type:ReactMultiChildUpdateTypes.TEXT_CONTENT, markupIndex:null, textContent:textContent, fromIndex:null, toIndex:null});
    }
    function processQueue() {
      if (updateQueue.length) {
        ReactComponent.BackendIDOperations.dangerouslyProcessChildrenUpdates(updateQueue, markupQueue);
        clearQueue();
      }
    }
    function clearQueue() {
      updateQueue.length = 0;
      markupQueue.length = 0;
    }
    var ReactMultiChild = {Mixin:{mountChildren:function(nestedChildren, transaction) {
      var children = flattenChildren(nestedChildren);
      var mountImages = [];
      var index = 0;
      this._renderedChildren = children;
      for (var name in children) {
        var child = children[name];
        if (children.hasOwnProperty(name)) {
          var childInstance = instantiateReactComponent(child, null);
          children[name] = childInstance;
          var rootID = this._rootNodeID + name;
          var mountImage = childInstance.mountComponent(rootID, transaction, this._mountDepth + 1);
          childInstance._mountIndex = index;
          mountImages.push(mountImage);
          index++;
        }
      }
      return mountImages;
    }, updateTextContent:function(nextContent) {
      updateDepth++;
      var errorThrown = true;
      try {
        var prevChildren = this._renderedChildren;
        for (var name in prevChildren) {
          if (prevChildren.hasOwnProperty(name)) {
            this._unmountChildByName(prevChildren[name], name);
          }
        }
        this.setTextContent(nextContent);
        errorThrown = false;
      } finally {
        updateDepth--;
        if (!updateDepth) {
          errorThrown ? clearQueue() : processQueue();
        }
      }
    }, updateChildren:function(nextNestedChildren, transaction) {
      updateDepth++;
      var errorThrown = true;
      try {
        this._updateChildren(nextNestedChildren, transaction);
        errorThrown = false;
      } finally {
        updateDepth--;
        if (!updateDepth) {
          errorThrown ? clearQueue() : processQueue();
        }
      }
    }, _updateChildren:function(nextNestedChildren, transaction) {
      var nextChildren = flattenChildren(nextNestedChildren);
      var prevChildren = this._renderedChildren;
      if (!nextChildren && !prevChildren) {
        return;
      }
      var name;
      var lastIndex = 0;
      var nextIndex = 0;
      for (name in nextChildren) {
        if (!nextChildren.hasOwnProperty(name)) {
          continue;
        }
        var prevChild = prevChildren && prevChildren[name];
        var prevElement = prevChild && prevChild._currentElement;
        var nextElement = nextChildren[name];
        if (shouldUpdateReactComponent(prevElement, nextElement)) {
          this.moveChild(prevChild, nextIndex, lastIndex);
          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
          prevChild.receiveComponent(nextElement, transaction);
          prevChild._mountIndex = nextIndex;
        } else {
          if (prevChild) {
            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
            this._unmountChildByName(prevChild, name);
          }
          var nextChildInstance = instantiateReactComponent(nextElement, null);
          this._mountChildByNameAtIndex(nextChildInstance, name, nextIndex, transaction);
        }
        nextIndex++;
      }
      for (name in prevChildren) {
        if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren[name])) {
          this._unmountChildByName(prevChildren[name], name);
        }
      }
    }, unmountChildren:function() {
      var renderedChildren = this._renderedChildren;
      for (var name in renderedChildren) {
        var renderedChild = renderedChildren[name];
        if (renderedChild.unmountComponent) {
          renderedChild.unmountComponent();
        }
      }
      this._renderedChildren = null;
    }, moveChild:function(child, toIndex, lastIndex) {
      if (child._mountIndex < lastIndex) {
        enqueueMove(this._rootNodeID, child._mountIndex, toIndex);
      }
    }, createChild:function(child, mountImage) {
      enqueueMarkup(this._rootNodeID, mountImage, child._mountIndex);
    }, removeChild:function(child) {
      enqueueRemove(this._rootNodeID, child._mountIndex);
    }, setTextContent:function(textContent) {
      enqueueTextContent(this._rootNodeID, textContent);
    }, _mountChildByNameAtIndex:function(child, name, index, transaction) {
      var rootID = this._rootNodeID + name;
      var mountImage = child.mountComponent(rootID, transaction, this._mountDepth + 1);
      child._mountIndex = index;
      this.createChild(child, mountImage);
      this._renderedChildren = this._renderedChildren || {};
      this._renderedChildren[name] = child;
    }, _unmountChildByName:function(child, name) {
      this.removeChild(child);
      child._mountIndex = null;
      child.unmountComponent();
      delete this._renderedChildren[name];
    }}};
    module.exports = ReactMultiChild;
  }, {"./ReactComponent":32, "./ReactMultiChildUpdateTypes":65, "./flattenChildren":110, "./instantiateReactComponent":125, "./shouldUpdateReactComponent":142}], 65:[function(_dereq_, module, exports) {
    var keyMirror = _dereq_("./keyMirror");
    var ReactMultiChildUpdateTypes = keyMirror({INSERT_MARKUP:null, MOVE_EXISTING:null, REMOVE_NODE:null, TEXT_CONTENT:null});
    module.exports = ReactMultiChildUpdateTypes;
  }, {"./keyMirror":132}], 66:[function(_dereq_, module, exports) {
    var assign = _dereq_("./Object.assign");
    var invariant = _dereq_("./invariant");
    var genericComponentClass = null;
    var tagToComponentClass = {};
    var ReactNativeComponentInjection = {injectGenericComponentClass:function(componentClass) {
      genericComponentClass = componentClass;
    }, injectComponentClasses:function(componentClasses) {
      assign(tagToComponentClass, componentClasses);
    }};
    function createInstanceForTag(tag, props, parentType) {
      var componentClass = tagToComponentClass[tag];
      if (componentClass == null) {
        "production" !== "development" ? invariant(genericComponentClass, "There is no registered component for the tag %s", tag) : invariant(genericComponentClass);
        return new genericComponentClass(tag, props);
      }
      if (parentType === tag) {
        "production" !== "development" ? invariant(genericComponentClass, "There is no registered component for the tag %s", tag) : invariant(genericComponentClass);
        return new genericComponentClass(tag, props);
      }
      return new componentClass.type(props);
    }
    var ReactNativeComponent = {createInstanceForTag:createInstanceForTag, injection:ReactNativeComponentInjection};
    module.exports = ReactNativeComponent;
  }, {"./Object.assign":27, "./invariant":126}], 67:[function(_dereq_, module, exports) {
    var emptyObject = _dereq_("./emptyObject");
    var invariant = _dereq_("./invariant");
    var ReactOwner = {isValidOwner:function(object) {
      return!!(object && typeof object.attachRef === "function" && typeof object.detachRef === "function");
    }, addComponentAsRefTo:function(component, ref, owner) {
      "production" !== "development" ? invariant(ReactOwner.isValidOwner(owner), "addComponentAsRefTo(...): Only a ReactOwner can have refs. This " + "usually means that you're trying to add a ref to a component that " + "doesn't have an owner (that is, was not created inside of another " + "component's `render` method). Try rendering this component inside of " + "a new top-level component which will hold the ref.") : invariant(ReactOwner.isValidOwner(owner));
      owner.attachRef(ref, component);
    }, removeComponentAsRefFrom:function(component, ref, owner) {
      "production" !== "development" ? invariant(ReactOwner.isValidOwner(owner), "removeComponentAsRefFrom(...): Only a ReactOwner can have refs. This " + "usually means that you're trying to remove a ref to a component that " + "doesn't have an owner (that is, was not created inside of another " + "component's `render` method). Try rendering this component inside of " + "a new top-level component which will hold the ref.") : invariant(ReactOwner.isValidOwner(owner));
      if (owner.refs[ref] === component) {
        owner.detachRef(ref);
      }
    }, Mixin:{construct:function() {
      this.refs = emptyObject;
    }, attachRef:function(ref, component) {
      "production" !== "development" ? invariant(component.isOwnedBy(this), "attachRef(%s, ...): Only a component's owner can store a ref to it.", ref) : invariant(component.isOwnedBy(this));
      var refs = this.refs === emptyObject ? this.refs = {} : this.refs;
      refs[ref] = component;
    }, detachRef:function(ref) {
      delete this.refs[ref];
    }}};
    module.exports = ReactOwner;
  }, {"./emptyObject":108, "./invariant":126}], 68:[function(_dereq_, module, exports) {
    var ReactPerf = {enableMeasure:false, storedMeasure:_noMeasure, measure:function(objName, fnName, func) {
      if ("production" !== "development") {
        var measuredFunc = null;
        var wrapper = function() {
          if (ReactPerf.enableMeasure) {
            if (!measuredFunc) {
              measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);
            }
            return measuredFunc.apply(this, arguments);
          }
          return func.apply(this, arguments);
        };
        wrapper.displayName = objName + "_" + fnName;
        return wrapper;
      }
      return func;
    }, injection:{injectMeasure:function(measure) {
      ReactPerf.storedMeasure = measure;
    }}};
    function _noMeasure(objName, fnName, func) {
      return func;
    }
    module.exports = ReactPerf;
  }, {}], 69:[function(_dereq_, module, exports) {
    var assign = _dereq_("./Object.assign");
    var emptyFunction = _dereq_("./emptyFunction");
    var invariant = _dereq_("./invariant");
    var joinClasses = _dereq_("./joinClasses");
    var warning = _dereq_("./warning");
    var didWarn = false;
    function createTransferStrategy(mergeStrategy) {
      return function(props, key, value) {
        if (!props.hasOwnProperty(key)) {
          props[key] = value;
        } else {
          props[key] = mergeStrategy(props[key], value);
        }
      };
    }
    var transferStrategyMerge = createTransferStrategy(function(a, b) {
      return assign({}, b, a);
    });
    var TransferStrategies = {children:emptyFunction, className:createTransferStrategy(joinClasses), style:transferStrategyMerge};
    function transferInto(props, newProps) {
      for (var thisKey in newProps) {
        if (!newProps.hasOwnProperty(thisKey)) {
          continue;
        }
        var transferStrategy = TransferStrategies[thisKey];
        if (transferStrategy && TransferStrategies.hasOwnProperty(thisKey)) {
          transferStrategy(props, thisKey, newProps[thisKey]);
        } else {
          if (!props.hasOwnProperty(thisKey)) {
            props[thisKey] = newProps[thisKey];
          }
        }
      }
      return props;
    }
    var ReactPropTransferer = {TransferStrategies:TransferStrategies, mergeProps:function(oldProps, newProps) {
      return transferInto(assign({}, oldProps), newProps);
    }, Mixin:{transferPropsTo:function(element) {
      "production" !== "development" ? invariant(element._owner === this, "%s: You can't call transferPropsTo() on a component that you " + "don't own, %s. This usually means you are calling " + "transferPropsTo() on a component passed in as props or children.", this.constructor.displayName, typeof element.type === "string" ? element.type : element.type.displayName) : invariant(element._owner === this);
      if ("production" !== "development") {
        if (!didWarn) {
          didWarn = true;
          "production" !== "development" ? warning(false, "transferPropsTo is deprecated. " + "See http://fb.me/react-transferpropsto for more information.") : null;
        }
      }
      transferInto(element.props, this.props);
      return element;
    }}};
    module.exports = ReactPropTransferer;
  }, {"./Object.assign":27, "./emptyFunction":107, "./invariant":126, "./joinClasses":131, "./warning":145}], 70:[function(_dereq_, module, exports) {
    var ReactPropTypeLocationNames = {};
    if ("production" !== "development") {
      ReactPropTypeLocationNames = {prop:"prop", context:"context", childContext:"child context"};
    }
    module.exports = ReactPropTypeLocationNames;
  }, {}], 71:[function(_dereq_, module, exports) {
    var keyMirror = _dereq_("./keyMirror");
    var ReactPropTypeLocations = keyMirror({prop:null, context:null, childContext:null});
    module.exports = ReactPropTypeLocations;
  }, {"./keyMirror":132}], 72:[function(_dereq_, module, exports) {
    var ReactElement = _dereq_("./ReactElement");
    var ReactPropTypeLocationNames = _dereq_("./ReactPropTypeLocationNames");
    var deprecated = _dereq_("./deprecated");
    var emptyFunction = _dereq_("./emptyFunction");
    var ANONYMOUS = "\x3c\x3canonymous\x3e\x3e";
    var elementTypeChecker = createElementTypeChecker();
    var nodeTypeChecker = createNodeChecker();
    var ReactPropTypes = {array:createPrimitiveTypeChecker("array"), bool:createPrimitiveTypeChecker("boolean"), func:createPrimitiveTypeChecker("function"), number:createPrimitiveTypeChecker("number"), object:createPrimitiveTypeChecker("object"), string:createPrimitiveTypeChecker("string"), any:createAnyTypeChecker(), arrayOf:createArrayOfTypeChecker, element:elementTypeChecker, instanceOf:createInstanceTypeChecker, node:nodeTypeChecker, objectOf:createObjectOfTypeChecker, oneOf:createEnumTypeChecker, 
    oneOfType:createUnionTypeChecker, shape:createShapeTypeChecker, component:deprecated("React.PropTypes", "component", "element", this, elementTypeChecker), renderable:deprecated("React.PropTypes", "renderable", "node", this, nodeTypeChecker)};
    function createChainableTypeChecker(validate) {
      function checkType(isRequired, props, propName, componentName, location) {
        componentName = componentName || ANONYMOUS;
        if (props[propName] == null) {
          var locationName = ReactPropTypeLocationNames[location];
          if (isRequired) {
            return new Error("Required " + locationName + " `" + propName + "` was not specified in " + ("`" + componentName + "`."));
          }
        } else {
          return validate(props, propName, componentName, location);
        }
      }
      var chainedCheckType = checkType.bind(null, false);
      chainedCheckType.isRequired = checkType.bind(null, true);
      return chainedCheckType;
    }
    function createPrimitiveTypeChecker(expectedType) {
      function validate(props, propName, componentName, location) {
        var propValue = props[propName];
        var propType = getPropType(propValue);
        if (propType !== expectedType) {
          var locationName = ReactPropTypeLocationNames[location];
          var preciseType = getPreciseType(propValue);
          return new Error("Invalid " + locationName + " `" + propName + "` of type `" + preciseType + "` " + ("supplied to `" + componentName + "`, expected `" + expectedType + "`."));
        }
      }
      return createChainableTypeChecker(validate);
    }
    function createAnyTypeChecker() {
      return createChainableTypeChecker(emptyFunction.thatReturns());
    }
    function createArrayOfTypeChecker(typeChecker) {
      function validate(props, propName, componentName, location) {
        var propValue = props[propName];
        if (!Array.isArray(propValue)) {
          var locationName = ReactPropTypeLocationNames[location];
          var propType = getPropType(propValue);
          return new Error("Invalid " + locationName + " `" + propName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
        }
        for (var i = 0;i < propValue.length;i++) {
          var error = typeChecker(propValue, i, componentName, location);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return createChainableTypeChecker(validate);
    }
    function createElementTypeChecker() {
      function validate(props, propName, componentName, location) {
        if (!ReactElement.isValidElement(props[propName])) {
          var locationName = ReactPropTypeLocationNames[location];
          return new Error("Invalid " + locationName + " `" + propName + "` supplied to " + ("`" + componentName + "`, expected a ReactElement."));
        }
      }
      return createChainableTypeChecker(validate);
    }
    function createInstanceTypeChecker(expectedClass) {
      function validate(props, propName, componentName, location) {
        if (!(props[propName] instanceof expectedClass)) {
          var locationName = ReactPropTypeLocationNames[location];
          var expectedClassName = expectedClass.name || ANONYMOUS;
          return new Error("Invalid " + locationName + " `" + propName + "` supplied to " + ("`" + componentName + "`, expected instance of `" + expectedClassName + "`."));
        }
      }
      return createChainableTypeChecker(validate);
    }
    function createEnumTypeChecker(expectedValues) {
      function validate(props, propName, componentName, location) {
        var propValue = props[propName];
        for (var i = 0;i < expectedValues.length;i++) {
          if (propValue === expectedValues[i]) {
            return;
          }
        }
        var locationName = ReactPropTypeLocationNames[location];
        var valuesString = JSON.stringify(expectedValues);
        return new Error("Invalid " + locationName + " `" + propName + "` of value `" + propValue + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
      }
      return createChainableTypeChecker(validate);
    }
    function createObjectOfTypeChecker(typeChecker) {
      function validate(props, propName, componentName, location) {
        var propValue = props[propName];
        var propType = getPropType(propValue);
        if (propType !== "object") {
          var locationName = ReactPropTypeLocationNames[location];
          return new Error("Invalid " + locationName + " `" + propName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
        }
        for (var key in propValue) {
          if (propValue.hasOwnProperty(key)) {
            var error = typeChecker(propValue, key, componentName, location);
            if (error instanceof Error) {
              return error;
            }
          }
        }
      }
      return createChainableTypeChecker(validate);
    }
    function createUnionTypeChecker(arrayOfTypeCheckers) {
      function validate(props, propName, componentName, location) {
        for (var i = 0;i < arrayOfTypeCheckers.length;i++) {
          var checker = arrayOfTypeCheckers[i];
          if (checker(props, propName, componentName, location) == null) {
            return;
          }
        }
        var locationName = ReactPropTypeLocationNames[location];
        return new Error("Invalid " + locationName + " `" + propName + "` supplied to " + ("`" + componentName + "`."));
      }
      return createChainableTypeChecker(validate);
    }
    function createNodeChecker() {
      function validate(props, propName, componentName, location) {
        if (!isNode(props[propName])) {
          var locationName = ReactPropTypeLocationNames[location];
          return new Error("Invalid " + locationName + " `" + propName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
        }
      }
      return createChainableTypeChecker(validate);
    }
    function createShapeTypeChecker(shapeTypes) {
      function validate(props, propName, componentName, location) {
        var propValue = props[propName];
        var propType = getPropType(propValue);
        if (propType !== "object") {
          var locationName = ReactPropTypeLocationNames[location];
          return new Error("Invalid " + locationName + " `" + propName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
        }
        for (var key in shapeTypes) {
          var checker = shapeTypes[key];
          if (!checker) {
            continue;
          }
          var error = checker(propValue, key, componentName, location);
          if (error) {
            return error;
          }
        }
      }
      return createChainableTypeChecker(validate, "expected `object`");
    }
    function isNode(propValue) {
      switch(typeof propValue) {
        case "number":
        ;
        case "string":
          return true;
        case "boolean":
          return!propValue;
        case "object":
          if (Array.isArray(propValue)) {
            return propValue.every(isNode);
          }
          if (ReactElement.isValidElement(propValue)) {
            return true;
          }
          for (var k in propValue) {
            if (!isNode(propValue[k])) {
              return false;
            }
          }
          return true;
        default:
          return false;
      }
    }
    function getPropType(propValue) {
      var propType = typeof propValue;
      if (Array.isArray(propValue)) {
        return "array";
      }
      if (propValue instanceof RegExp) {
        return "object";
      }
      return propType;
    }
    function getPreciseType(propValue) {
      var propType = getPropType(propValue);
      if (propType === "object") {
        if (propValue instanceof Date) {
          return "date";
        } else {
          if (propValue instanceof RegExp) {
            return "regexp";
          }
        }
      }
      return propType;
    }
    module.exports = ReactPropTypes;
  }, {"./ReactElement":52, "./ReactPropTypeLocationNames":70, "./deprecated":106, "./emptyFunction":107}], 73:[function(_dereq_, module, exports) {
    var PooledClass = _dereq_("./PooledClass");
    var ReactBrowserEventEmitter = _dereq_("./ReactBrowserEventEmitter");
    var assign = _dereq_("./Object.assign");
    function ReactPutListenerQueue() {
      this.listenersToPut = [];
    }
    assign(ReactPutListenerQueue.prototype, {enqueuePutListener:function(rootNodeID, propKey, propValue) {
      this.listenersToPut.push({rootNodeID:rootNodeID, propKey:propKey, propValue:propValue});
    }, putListeners:function() {
      for (var i = 0;i < this.listenersToPut.length;i++) {
        var listenerToPut = this.listenersToPut[i];
        ReactBrowserEventEmitter.putListener(listenerToPut.rootNodeID, listenerToPut.propKey, listenerToPut.propValue);
      }
    }, reset:function() {
      this.listenersToPut.length = 0;
    }, destructor:function() {
      this.reset();
    }});
    PooledClass.addPoolingTo(ReactPutListenerQueue);
    module.exports = ReactPutListenerQueue;
  }, {"./Object.assign":27, "./PooledClass":28, "./ReactBrowserEventEmitter":30}], 74:[function(_dereq_, module, exports) {
    var CallbackQueue = _dereq_("./CallbackQueue");
    var PooledClass = _dereq_("./PooledClass");
    var ReactBrowserEventEmitter = _dereq_("./ReactBrowserEventEmitter");
    var ReactInputSelection = _dereq_("./ReactInputSelection");
    var ReactPutListenerQueue = _dereq_("./ReactPutListenerQueue");
    var Transaction = _dereq_("./Transaction");
    var assign = _dereq_("./Object.assign");
    var SELECTION_RESTORATION = {initialize:ReactInputSelection.getSelectionInformation, close:ReactInputSelection.restoreSelection};
    var EVENT_SUPPRESSION = {initialize:function() {
      var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
      ReactBrowserEventEmitter.setEnabled(false);
      return currentlyEnabled;
    }, close:function(previouslyEnabled) {
      ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
    }};
    var ON_DOM_READY_QUEUEING = {initialize:function() {
      this.reactMountReady.reset();
    }, close:function() {
      this.reactMountReady.notifyAll();
    }};
    var PUT_LISTENER_QUEUEING = {initialize:function() {
      this.putListenerQueue.reset();
    }, close:function() {
      this.putListenerQueue.putListeners();
    }};
    var TRANSACTION_WRAPPERS = [PUT_LISTENER_QUEUEING, SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];
    function ReactReconcileTransaction() {
      this.reinitializeTransaction();
      this.renderToStaticMarkup = false;
      this.reactMountReady = CallbackQueue.getPooled(null);
      this.putListenerQueue = ReactPutListenerQueue.getPooled();
    }
    var Mixin = {getTransactionWrappers:function() {
      return TRANSACTION_WRAPPERS;
    }, getReactMountReady:function() {
      return this.reactMountReady;
    }, getPutListenerQueue:function() {
      return this.putListenerQueue;
    }, destructor:function() {
      CallbackQueue.release(this.reactMountReady);
      this.reactMountReady = null;
      ReactPutListenerQueue.release(this.putListenerQueue);
      this.putListenerQueue = null;
    }};
    assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);
    PooledClass.addPoolingTo(ReactReconcileTransaction);
    module.exports = ReactReconcileTransaction;
  }, {"./CallbackQueue":6, "./Object.assign":27, "./PooledClass":28, "./ReactBrowserEventEmitter":30, "./ReactInputSelection":59, "./ReactPutListenerQueue":73, "./Transaction":95}], 75:[function(_dereq_, module, exports) {
    var ReactRootIndexInjection = {injectCreateReactRootIndex:function(_createReactRootIndex) {
      ReactRootIndex.createReactRootIndex = _createReactRootIndex;
    }};
    var ReactRootIndex = {createReactRootIndex:null, injection:ReactRootIndexInjection};
    module.exports = ReactRootIndex;
  }, {}], 76:[function(_dereq_, module, exports) {
    var ReactElement = _dereq_("./ReactElement");
    var ReactInstanceHandles = _dereq_("./ReactInstanceHandles");
    var ReactMarkupChecksum = _dereq_("./ReactMarkupChecksum");
    var ReactServerRenderingTransaction = _dereq_("./ReactServerRenderingTransaction");
    var instantiateReactComponent = _dereq_("./instantiateReactComponent");
    var invariant = _dereq_("./invariant");
    function renderToString(element) {
      "production" !== "development" ? invariant(ReactElement.isValidElement(element), "renderToString(): You must pass a valid ReactElement.") : invariant(ReactElement.isValidElement(element));
      var transaction;
      try {
        var id = ReactInstanceHandles.createReactRootID();
        transaction = ReactServerRenderingTransaction.getPooled(false);
        return transaction.perform(function() {
          var componentInstance = instantiateReactComponent(element, null);
          var markup = componentInstance.mountComponent(id, transaction, 0);
          return ReactMarkupChecksum.addChecksumToMarkup(markup);
        }, null);
      } finally {
        ReactServerRenderingTransaction.release(transaction);
      }
    }
    function renderToStaticMarkup(element) {
      "production" !== "development" ? invariant(ReactElement.isValidElement(element), "renderToStaticMarkup(): You must pass a valid ReactElement.") : invariant(ReactElement.isValidElement(element));
      var transaction;
      try {
        var id = ReactInstanceHandles.createReactRootID();
        transaction = ReactServerRenderingTransaction.getPooled(true);
        return transaction.perform(function() {
          var componentInstance = instantiateReactComponent(element, null);
          return componentInstance.mountComponent(id, transaction, 0);
        }, null);
      } finally {
        ReactServerRenderingTransaction.release(transaction);
      }
    }
    module.exports = {renderToString:renderToString, renderToStaticMarkup:renderToStaticMarkup};
  }, {"./ReactElement":52, "./ReactInstanceHandles":60, "./ReactMarkupChecksum":62, "./ReactServerRenderingTransaction":77, "./instantiateReactComponent":125, "./invariant":126}], 77:[function(_dereq_, module, exports) {
    var PooledClass = _dereq_("./PooledClass");
    var CallbackQueue = _dereq_("./CallbackQueue");
    var ReactPutListenerQueue = _dereq_("./ReactPutListenerQueue");
    var Transaction = _dereq_("./Transaction");
    var assign = _dereq_("./Object.assign");
    var emptyFunction = _dereq_("./emptyFunction");
    var ON_DOM_READY_QUEUEING = {initialize:function() {
      this.reactMountReady.reset();
    }, close:emptyFunction};
    var PUT_LISTENER_QUEUEING = {initialize:function() {
      this.putListenerQueue.reset();
    }, close:emptyFunction};
    var TRANSACTION_WRAPPERS = [PUT_LISTENER_QUEUEING, ON_DOM_READY_QUEUEING];
    function ReactServerRenderingTransaction(renderToStaticMarkup) {
      this.reinitializeTransaction();
      this.renderToStaticMarkup = renderToStaticMarkup;
      this.reactMountReady = CallbackQueue.getPooled(null);
      this.putListenerQueue = ReactPutListenerQueue.getPooled();
    }
    var Mixin = {getTransactionWrappers:function() {
      return TRANSACTION_WRAPPERS;
    }, getReactMountReady:function() {
      return this.reactMountReady;
    }, getPutListenerQueue:function() {
      return this.putListenerQueue;
    }, destructor:function() {
      CallbackQueue.release(this.reactMountReady);
      this.reactMountReady = null;
      ReactPutListenerQueue.release(this.putListenerQueue);
      this.putListenerQueue = null;
    }};
    assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);
    PooledClass.addPoolingTo(ReactServerRenderingTransaction);
    module.exports = ReactServerRenderingTransaction;
  }, {"./CallbackQueue":6, "./Object.assign":27, "./PooledClass":28, "./ReactPutListenerQueue":73, "./Transaction":95, "./emptyFunction":107}], 78:[function(_dereq_, module, exports) {
    var DOMPropertyOperations = _dereq_("./DOMPropertyOperations");
    var ReactComponent = _dereq_("./ReactComponent");
    var ReactElement = _dereq_("./ReactElement");
    var assign = _dereq_("./Object.assign");
    var escapeTextForBrowser = _dereq_("./escapeTextForBrowser");
    var ReactTextComponent = function(props) {
    };
    assign(ReactTextComponent.prototype, ReactComponent.Mixin, {mountComponent:function(rootID, transaction, mountDepth) {
      ReactComponent.Mixin.mountComponent.call(this, rootID, transaction, mountDepth);
      var escapedText = escapeTextForBrowser(this.props);
      if (transaction.renderToStaticMarkup) {
        return escapedText;
      }
      return "\x3cspan " + DOMPropertyOperations.createMarkupForID(rootID) + "\x3e" + escapedText + "\x3c/span\x3e";
    }, receiveComponent:function(nextComponent, transaction) {
      var nextProps = nextComponent.props;
      if (nextProps !== this.props) {
        this.props = nextProps;
        ReactComponent.BackendIDOperations.updateTextContentByID(this._rootNodeID, nextProps);
      }
    }});
    var ReactTextComponentFactory = function(text) {
      return new ReactElement(ReactTextComponent, null, null, null, null, text);
    };
    ReactTextComponentFactory.type = ReactTextComponent;
    module.exports = ReactTextComponentFactory;
  }, {"./DOMPropertyOperations":12, "./Object.assign":27, "./ReactComponent":32, "./ReactElement":52, "./escapeTextForBrowser":109}], 79:[function(_dereq_, module, exports) {
    var CallbackQueue = _dereq_("./CallbackQueue");
    var PooledClass = _dereq_("./PooledClass");
    var ReactCurrentOwner = _dereq_("./ReactCurrentOwner");
    var ReactPerf = _dereq_("./ReactPerf");
    var Transaction = _dereq_("./Transaction");
    var assign = _dereq_("./Object.assign");
    var invariant = _dereq_("./invariant");
    var warning = _dereq_("./warning");
    var dirtyComponents = [];
    var asapCallbackQueue = CallbackQueue.getPooled();
    var asapEnqueued = false;
    var batchingStrategy = null;
    function ensureInjected() {
      "production" !== "development" ? invariant(ReactUpdates.ReactReconcileTransaction && batchingStrategy, "ReactUpdates: must inject a reconcile transaction class and batching " + "strategy") : invariant(ReactUpdates.ReactReconcileTransaction && batchingStrategy);
    }
    var NESTED_UPDATES = {initialize:function() {
      this.dirtyComponentsLength = dirtyComponents.length;
    }, close:function() {
      if (this.dirtyComponentsLength !== dirtyComponents.length) {
        dirtyComponents.splice(0, this.dirtyComponentsLength);
        flushBatchedUpdates();
      } else {
        dirtyComponents.length = 0;
      }
    }};
    var UPDATE_QUEUEING = {initialize:function() {
      this.callbackQueue.reset();
    }, close:function() {
      this.callbackQueue.notifyAll();
    }};
    var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];
    function ReactUpdatesFlushTransaction() {
      this.reinitializeTransaction();
      this.dirtyComponentsLength = null;
      this.callbackQueue = CallbackQueue.getPooled();
      this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled();
    }
    assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {getTransactionWrappers:function() {
      return TRANSACTION_WRAPPERS;
    }, destructor:function() {
      this.dirtyComponentsLength = null;
      CallbackQueue.release(this.callbackQueue);
      this.callbackQueue = null;
      ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
      this.reconcileTransaction = null;
    }, perform:function(method, scope, a) {
      return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
    }});
    PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);
    function batchedUpdates(callback, a, b) {
      ensureInjected();
      batchingStrategy.batchedUpdates(callback, a, b);
    }
    function mountDepthComparator(c1, c2) {
      return c1._mountDepth - c2._mountDepth;
    }
    function runBatchedUpdates(transaction) {
      var len = transaction.dirtyComponentsLength;
      "production" !== "development" ? invariant(len === dirtyComponents.length, "Expected flush transaction's stored dirty-components length (%s) to " + "match dirty-components array length (%s).", len, dirtyComponents.length) : invariant(len === dirtyComponents.length);
      dirtyComponents.sort(mountDepthComparator);
      for (var i = 0;i < len;i++) {
        var component = dirtyComponents[i];
        if (component.isMounted()) {
          var callbacks = component._pendingCallbacks;
          component._pendingCallbacks = null;
          component.performUpdateIfNecessary(transaction.reconcileTransaction);
          if (callbacks) {
            for (var j = 0;j < callbacks.length;j++) {
              transaction.callbackQueue.enqueue(callbacks[j], component);
            }
          }
        }
      }
    }
    var flushBatchedUpdates = ReactPerf.measure("ReactUpdates", "flushBatchedUpdates", function() {
      while (dirtyComponents.length || asapEnqueued) {
        if (dirtyComponents.length) {
          var transaction = ReactUpdatesFlushTransaction.getPooled();
          transaction.perform(runBatchedUpdates, null, transaction);
          ReactUpdatesFlushTransaction.release(transaction);
        }
        if (asapEnqueued) {
          asapEnqueued = false;
          var queue = asapCallbackQueue;
          asapCallbackQueue = CallbackQueue.getPooled();
          queue.notifyAll();
          CallbackQueue.release(queue);
        }
      }
    });
    function enqueueUpdate(component, callback) {
      "production" !== "development" ? invariant(!callback || typeof callback === "function", "enqueueUpdate(...): You called `setProps`, `replaceProps`, " + "`setState`, `replaceState`, or `forceUpdate` with a callback that " + "isn't callable.") : invariant(!callback || typeof callback === "function");
      ensureInjected();
      "production" !== "development" ? warning(ReactCurrentOwner.current == null, "enqueueUpdate(): Render methods should be a pure function of props " + "and state; triggering nested component updates from render is not " + "allowed. If necessary, trigger nested updates in " + "componentDidUpdate.") : null;
      if (!batchingStrategy.isBatchingUpdates) {
        batchingStrategy.batchedUpdates(enqueueUpdate, component, callback);
        return;
      }
      dirtyComponents.push(component);
      if (callback) {
        if (component._pendingCallbacks) {
          component._pendingCallbacks.push(callback);
        } else {
          component._pendingCallbacks = [callback];
        }
      }
    }
    function asap(callback, context) {
      "production" !== "development" ? invariant(batchingStrategy.isBatchingUpdates, "ReactUpdates.asap: Can't enqueue an asap callback in a context where" + "updates are not being batched.") : invariant(batchingStrategy.isBatchingUpdates);
      asapCallbackQueue.enqueue(callback, context);
      asapEnqueued = true;
    }
    var ReactUpdatesInjection = {injectReconcileTransaction:function(ReconcileTransaction) {
      "production" !== "development" ? invariant(ReconcileTransaction, "ReactUpdates: must provide a reconcile transaction class") : invariant(ReconcileTransaction);
      ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
    }, injectBatchingStrategy:function(_batchingStrategy) {
      "production" !== "development" ? invariant(_batchingStrategy, "ReactUpdates: must provide a batching strategy") : invariant(_batchingStrategy);
      "production" !== "development" ? invariant(typeof _batchingStrategy.batchedUpdates === "function", "ReactUpdates: must provide a batchedUpdates() function") : invariant(typeof _batchingStrategy.batchedUpdates === "function");
      "production" !== "development" ? invariant(typeof _batchingStrategy.isBatchingUpdates === "boolean", "ReactUpdates: must provide an isBatchingUpdates boolean attribute") : invariant(typeof _batchingStrategy.isBatchingUpdates === "boolean");
      batchingStrategy = _batchingStrategy;
    }};
    var ReactUpdates = {ReactReconcileTransaction:null, batchedUpdates:batchedUpdates, enqueueUpdate:enqueueUpdate, flushBatchedUpdates:flushBatchedUpdates, injection:ReactUpdatesInjection, asap:asap};
    module.exports = ReactUpdates;
  }, {"./CallbackQueue":6, "./Object.assign":27, "./PooledClass":28, "./ReactCurrentOwner":36, "./ReactPerf":68, "./Transaction":95, "./invariant":126, "./warning":145}], 80:[function(_dereq_, module, exports) {
    var DOMProperty = _dereq_("./DOMProperty");
    var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;
    var SVGDOMPropertyConfig = {Properties:{cx:MUST_USE_ATTRIBUTE, cy:MUST_USE_ATTRIBUTE, d:MUST_USE_ATTRIBUTE, dx:MUST_USE_ATTRIBUTE, dy:MUST_USE_ATTRIBUTE, fill:MUST_USE_ATTRIBUTE, fillOpacity:MUST_USE_ATTRIBUTE, fontFamily:MUST_USE_ATTRIBUTE, fontSize:MUST_USE_ATTRIBUTE, fx:MUST_USE_ATTRIBUTE, fy:MUST_USE_ATTRIBUTE, gradientTransform:MUST_USE_ATTRIBUTE, gradientUnits:MUST_USE_ATTRIBUTE, markerEnd:MUST_USE_ATTRIBUTE, markerMid:MUST_USE_ATTRIBUTE, markerStart:MUST_USE_ATTRIBUTE, offset:MUST_USE_ATTRIBUTE, 
    opacity:MUST_USE_ATTRIBUTE, patternContentUnits:MUST_USE_ATTRIBUTE, patternUnits:MUST_USE_ATTRIBUTE, points:MUST_USE_ATTRIBUTE, preserveAspectRatio:MUST_USE_ATTRIBUTE, r:MUST_USE_ATTRIBUTE, rx:MUST_USE_ATTRIBUTE, ry:MUST_USE_ATTRIBUTE, spreadMethod:MUST_USE_ATTRIBUTE, stopColor:MUST_USE_ATTRIBUTE, stopOpacity:MUST_USE_ATTRIBUTE, stroke:MUST_USE_ATTRIBUTE, strokeDasharray:MUST_USE_ATTRIBUTE, strokeLinecap:MUST_USE_ATTRIBUTE, strokeOpacity:MUST_USE_ATTRIBUTE, strokeWidth:MUST_USE_ATTRIBUTE, textAnchor:MUST_USE_ATTRIBUTE, 
    transform:MUST_USE_ATTRIBUTE, version:MUST_USE_ATTRIBUTE, viewBox:MUST_USE_ATTRIBUTE, x1:MUST_USE_ATTRIBUTE, x2:MUST_USE_ATTRIBUTE, x:MUST_USE_ATTRIBUTE, y1:MUST_USE_ATTRIBUTE, y2:MUST_USE_ATTRIBUTE, y:MUST_USE_ATTRIBUTE}, DOMAttributeNames:{fillOpacity:"fill-opacity", fontFamily:"font-family", fontSize:"font-size", gradientTransform:"gradientTransform", gradientUnits:"gradientUnits", markerEnd:"marker-end", markerMid:"marker-mid", markerStart:"marker-start", patternContentUnits:"patternContentUnits", 
    patternUnits:"patternUnits", preserveAspectRatio:"preserveAspectRatio", spreadMethod:"spreadMethod", stopColor:"stop-color", stopOpacity:"stop-opacity", strokeDasharray:"stroke-dasharray", strokeLinecap:"stroke-linecap", strokeOpacity:"stroke-opacity", strokeWidth:"stroke-width", textAnchor:"text-anchor", viewBox:"viewBox"}};
    module.exports = SVGDOMPropertyConfig;
  }, {"./DOMProperty":11}], 81:[function(_dereq_, module, exports) {
    var EventConstants = _dereq_("./EventConstants");
    var EventPropagators = _dereq_("./EventPropagators");
    var ReactInputSelection = _dereq_("./ReactInputSelection");
    var SyntheticEvent = _dereq_("./SyntheticEvent");
    var getActiveElement = _dereq_("./getActiveElement");
    var isTextInputElement = _dereq_("./isTextInputElement");
    var keyOf = _dereq_("./keyOf");
    var shallowEqual = _dereq_("./shallowEqual");
    var topLevelTypes = EventConstants.topLevelTypes;
    var eventTypes = {select:{phasedRegistrationNames:{bubbled:keyOf({onSelect:null}), captured:keyOf({onSelectCapture:null})}, dependencies:[topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]}};
    var activeElement = null;
    var activeElementID = null;
    var lastSelection = null;
    var mouseDown = false;
    function getSelection(node) {
      if ("selectionStart" in node && ReactInputSelection.hasSelectionCapabilities(node)) {
        return{start:node.selectionStart, end:node.selectionEnd};
      } else {
        if (window.getSelection) {
          var selection = window.getSelection();
          return{anchorNode:selection.anchorNode, anchorOffset:selection.anchorOffset, focusNode:selection.focusNode, focusOffset:selection.focusOffset};
        } else {
          if (document.selection) {
            var range = document.selection.createRange();
            return{parentElement:range.parentElement(), text:range.text, top:range.boundingTop, left:range.boundingLeft};
          }
        }
      }
    }
    function constructSelectEvent(nativeEvent) {
      if (mouseDown || activeElement == null || activeElement != getActiveElement()) {
        return;
      }
      var currentSelection = getSelection(activeElement);
      if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
        lastSelection = currentSelection;
        var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementID, nativeEvent);
        syntheticEvent.type = "select";
        syntheticEvent.target = activeElement;
        EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);
        return syntheticEvent;
      }
    }
    var SelectEventPlugin = {eventTypes:eventTypes, extractEvents:function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent) {
      switch(topLevelType) {
        case topLevelTypes.topFocus:
          if (isTextInputElement(topLevelTarget) || topLevelTarget.contentEditable === "true") {
            activeElement = topLevelTarget;
            activeElementID = topLevelTargetID;
            lastSelection = null;
          }
          break;
        case topLevelTypes.topBlur:
          activeElement = null;
          activeElementID = null;
          lastSelection = null;
          break;
        case topLevelTypes.topMouseDown:
          mouseDown = true;
          break;
        case topLevelTypes.topContextMenu:
        ;
        case topLevelTypes.topMouseUp:
          mouseDown = false;
          return constructSelectEvent(nativeEvent);
        case topLevelTypes.topSelectionChange:
        ;
        case topLevelTypes.topKeyDown:
        ;
        case topLevelTypes.topKeyUp:
          return constructSelectEvent(nativeEvent);
      }
    }};
    module.exports = SelectEventPlugin;
  }, {"./EventConstants":16, "./EventPropagators":21, "./ReactInputSelection":59, "./SyntheticEvent":87, "./getActiveElement":113, "./isTextInputElement":129, "./keyOf":133, "./shallowEqual":141}], 82:[function(_dereq_, module, exports) {
    var GLOBAL_MOUNT_POINT_MAX = Math.pow(2, 53);
    var ServerReactRootIndex = {createReactRootIndex:function() {
      return Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX);
    }};
    module.exports = ServerReactRootIndex;
  }, {}], 83:[function(_dereq_, module, exports) {
    var EventConstants = _dereq_("./EventConstants");
    var EventPluginUtils = _dereq_("./EventPluginUtils");
    var EventPropagators = _dereq_("./EventPropagators");
    var SyntheticClipboardEvent = _dereq_("./SyntheticClipboardEvent");
    var SyntheticEvent = _dereq_("./SyntheticEvent");
    var SyntheticFocusEvent = _dereq_("./SyntheticFocusEvent");
    var SyntheticKeyboardEvent = _dereq_("./SyntheticKeyboardEvent");
    var SyntheticMouseEvent = _dereq_("./SyntheticMouseEvent");
    var SyntheticDragEvent = _dereq_("./SyntheticDragEvent");
    var SyntheticTouchEvent = _dereq_("./SyntheticTouchEvent");
    var SyntheticUIEvent = _dereq_("./SyntheticUIEvent");
    var SyntheticWheelEvent = _dereq_("./SyntheticWheelEvent");
    var getEventCharCode = _dereq_("./getEventCharCode");
    var invariant = _dereq_("./invariant");
    var keyOf = _dereq_("./keyOf");
    var warning = _dereq_("./warning");
    var topLevelTypes = EventConstants.topLevelTypes;
    var eventTypes = {blur:{phasedRegistrationNames:{bubbled:keyOf({onBlur:true}), captured:keyOf({onBlurCapture:true})}}, click:{phasedRegistrationNames:{bubbled:keyOf({onClick:true}), captured:keyOf({onClickCapture:true})}}, contextMenu:{phasedRegistrationNames:{bubbled:keyOf({onContextMenu:true}), captured:keyOf({onContextMenuCapture:true})}}, copy:{phasedRegistrationNames:{bubbled:keyOf({onCopy:true}), captured:keyOf({onCopyCapture:true})}}, cut:{phasedRegistrationNames:{bubbled:keyOf({onCut:true}), 
    captured:keyOf({onCutCapture:true})}}, doubleClick:{phasedRegistrationNames:{bubbled:keyOf({onDoubleClick:true}), captured:keyOf({onDoubleClickCapture:true})}}, drag:{phasedRegistrationNames:{bubbled:keyOf({onDrag:true}), captured:keyOf({onDragCapture:true})}}, dragEnd:{phasedRegistrationNames:{bubbled:keyOf({onDragEnd:true}), captured:keyOf({onDragEndCapture:true})}}, dragEnter:{phasedRegistrationNames:{bubbled:keyOf({onDragEnter:true}), captured:keyOf({onDragEnterCapture:true})}}, dragExit:{phasedRegistrationNames:{bubbled:keyOf({onDragExit:true}), 
    captured:keyOf({onDragExitCapture:true})}}, dragLeave:{phasedRegistrationNames:{bubbled:keyOf({onDragLeave:true}), captured:keyOf({onDragLeaveCapture:true})}}, dragOver:{phasedRegistrationNames:{bubbled:keyOf({onDragOver:true}), captured:keyOf({onDragOverCapture:true})}}, dragStart:{phasedRegistrationNames:{bubbled:keyOf({onDragStart:true}), captured:keyOf({onDragStartCapture:true})}}, drop:{phasedRegistrationNames:{bubbled:keyOf({onDrop:true}), captured:keyOf({onDropCapture:true})}}, focus:{phasedRegistrationNames:{bubbled:keyOf({onFocus:true}), 
    captured:keyOf({onFocusCapture:true})}}, input:{phasedRegistrationNames:{bubbled:keyOf({onInput:true}), captured:keyOf({onInputCapture:true})}}, keyDown:{phasedRegistrationNames:{bubbled:keyOf({onKeyDown:true}), captured:keyOf({onKeyDownCapture:true})}}, keyPress:{phasedRegistrationNames:{bubbled:keyOf({onKeyPress:true}), captured:keyOf({onKeyPressCapture:true})}}, keyUp:{phasedRegistrationNames:{bubbled:keyOf({onKeyUp:true}), captured:keyOf({onKeyUpCapture:true})}}, load:{phasedRegistrationNames:{bubbled:keyOf({onLoad:true}), 
    captured:keyOf({onLoadCapture:true})}}, error:{phasedRegistrationNames:{bubbled:keyOf({onError:true}), captured:keyOf({onErrorCapture:true})}}, mouseDown:{phasedRegistrationNames:{bubbled:keyOf({onMouseDown:true}), captured:keyOf({onMouseDownCapture:true})}}, mouseMove:{phasedRegistrationNames:{bubbled:keyOf({onMouseMove:true}), captured:keyOf({onMouseMoveCapture:true})}}, mouseOut:{phasedRegistrationNames:{bubbled:keyOf({onMouseOut:true}), captured:keyOf({onMouseOutCapture:true})}}, mouseOver:{phasedRegistrationNames:{bubbled:keyOf({onMouseOver:true}), 
    captured:keyOf({onMouseOverCapture:true})}}, mouseUp:{phasedRegistrationNames:{bubbled:keyOf({onMouseUp:true}), captured:keyOf({onMouseUpCapture:true})}}, paste:{phasedRegistrationNames:{bubbled:keyOf({onPaste:true}), captured:keyOf({onPasteCapture:true})}}, reset:{phasedRegistrationNames:{bubbled:keyOf({onReset:true}), captured:keyOf({onResetCapture:true})}}, scroll:{phasedRegistrationNames:{bubbled:keyOf({onScroll:true}), captured:keyOf({onScrollCapture:true})}}, submit:{phasedRegistrationNames:{bubbled:keyOf({onSubmit:true}), 
    captured:keyOf({onSubmitCapture:true})}}, touchCancel:{phasedRegistrationNames:{bubbled:keyOf({onTouchCancel:true}), captured:keyOf({onTouchCancelCapture:true})}}, touchEnd:{phasedRegistrationNames:{bubbled:keyOf({onTouchEnd:true}), captured:keyOf({onTouchEndCapture:true})}}, touchMove:{phasedRegistrationNames:{bubbled:keyOf({onTouchMove:true}), captured:keyOf({onTouchMoveCapture:true})}}, touchStart:{phasedRegistrationNames:{bubbled:keyOf({onTouchStart:true}), captured:keyOf({onTouchStartCapture:true})}}, 
    wheel:{phasedRegistrationNames:{bubbled:keyOf({onWheel:true}), captured:keyOf({onWheelCapture:true})}}};
    var topLevelEventsToDispatchConfig = {topBlur:eventTypes.blur, topClick:eventTypes.click, topContextMenu:eventTypes.contextMenu, topCopy:eventTypes.copy, topCut:eventTypes.cut, topDoubleClick:eventTypes.doubleClick, topDrag:eventTypes.drag, topDragEnd:eventTypes.dragEnd, topDragEnter:eventTypes.dragEnter, topDragExit:eventTypes.dragExit, topDragLeave:eventTypes.dragLeave, topDragOver:eventTypes.dragOver, topDragStart:eventTypes.dragStart, topDrop:eventTypes.drop, topError:eventTypes.error, topFocus:eventTypes.focus, 
    topInput:eventTypes.input, topKeyDown:eventTypes.keyDown, topKeyPress:eventTypes.keyPress, topKeyUp:eventTypes.keyUp, topLoad:eventTypes.load, topMouseDown:eventTypes.mouseDown, topMouseMove:eventTypes.mouseMove, topMouseOut:eventTypes.mouseOut, topMouseOver:eventTypes.mouseOver, topMouseUp:eventTypes.mouseUp, topPaste:eventTypes.paste, topReset:eventTypes.reset, topScroll:eventTypes.scroll, topSubmit:eventTypes.submit, topTouchCancel:eventTypes.touchCancel, topTouchEnd:eventTypes.touchEnd, topTouchMove:eventTypes.touchMove, 
    topTouchStart:eventTypes.touchStart, topWheel:eventTypes.wheel};
    for (var topLevelType in topLevelEventsToDispatchConfig) {
      topLevelEventsToDispatchConfig[topLevelType].dependencies = [topLevelType];
    }
    var SimpleEventPlugin = {eventTypes:eventTypes, executeDispatch:function(event, listener, domID) {
      var returnValue = EventPluginUtils.executeDispatch(event, listener, domID);
      "production" !== "development" ? warning(typeof returnValue !== "boolean", "Returning `false` from an event handler is deprecated and will be " + "ignored in a future release. Instead, manually call " + "e.stopPropagation() or e.preventDefault(), as appropriate.") : null;
      if (returnValue === false) {
        event.stopPropagation();
        event.preventDefault();
      }
    }, extractEvents:function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent) {
      var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
      if (!dispatchConfig) {
        return null;
      }
      var EventConstructor;
      switch(topLevelType) {
        case topLevelTypes.topInput:
        ;
        case topLevelTypes.topLoad:
        ;
        case topLevelTypes.topError:
        ;
        case topLevelTypes.topReset:
        ;
        case topLevelTypes.topSubmit:
          EventConstructor = SyntheticEvent;
          break;
        case topLevelTypes.topKeyPress:
          if (getEventCharCode(nativeEvent) === 0) {
            return null;
          }
        ;
        case topLevelTypes.topKeyDown:
        ;
        case topLevelTypes.topKeyUp:
          EventConstructor = SyntheticKeyboardEvent;
          break;
        case topLevelTypes.topBlur:
        ;
        case topLevelTypes.topFocus:
          EventConstructor = SyntheticFocusEvent;
          break;
        case topLevelTypes.topClick:
          if (nativeEvent.button === 2) {
            return null;
          }
        ;
        case topLevelTypes.topContextMenu:
        ;
        case topLevelTypes.topDoubleClick:
        ;
        case topLevelTypes.topMouseDown:
        ;
        case topLevelTypes.topMouseMove:
        ;
        case topLevelTypes.topMouseOut:
        ;
        case topLevelTypes.topMouseOver:
        ;
        case topLevelTypes.topMouseUp:
          EventConstructor = SyntheticMouseEvent;
          break;
        case topLevelTypes.topDrag:
        ;
        case topLevelTypes.topDragEnd:
        ;
        case topLevelTypes.topDragEnter:
        ;
        case topLevelTypes.topDragExit:
        ;
        case topLevelTypes.topDragLeave:
        ;
        case topLevelTypes.topDragOver:
        ;
        case topLevelTypes.topDragStart:
        ;
        case topLevelTypes.topDrop:
          EventConstructor = SyntheticDragEvent;
          break;
        case topLevelTypes.topTouchCancel:
        ;
        case topLevelTypes.topTouchEnd:
        ;
        case topLevelTypes.topTouchMove:
        ;
        case topLevelTypes.topTouchStart:
          EventConstructor = SyntheticTouchEvent;
          break;
        case topLevelTypes.topScroll:
          EventConstructor = SyntheticUIEvent;
          break;
        case topLevelTypes.topWheel:
          EventConstructor = SyntheticWheelEvent;
          break;
        case topLevelTypes.topCopy:
        ;
        case topLevelTypes.topCut:
        ;
        case topLevelTypes.topPaste:
          EventConstructor = SyntheticClipboardEvent;
          break;
      }
      "production" !== "development" ? invariant(EventConstructor, "SimpleEventPlugin: Unhandled event type, `%s`.", topLevelType) : invariant(EventConstructor);
      var event = EventConstructor.getPooled(dispatchConfig, topLevelTargetID, nativeEvent);
      EventPropagators.accumulateTwoPhaseDispatches(event);
      return event;
    }};
    module.exports = SimpleEventPlugin;
  }, {"./EventConstants":16, "./EventPluginUtils":20, "./EventPropagators":21, "./SyntheticClipboardEvent":84, "./SyntheticDragEvent":86, "./SyntheticEvent":87, "./SyntheticFocusEvent":88, "./SyntheticKeyboardEvent":90, "./SyntheticMouseEvent":91, "./SyntheticTouchEvent":92, "./SyntheticUIEvent":93, "./SyntheticWheelEvent":94, "./getEventCharCode":114, "./invariant":126, "./keyOf":133, "./warning":145}], 84:[function(_dereq_, module, exports) {
    var SyntheticEvent = _dereq_("./SyntheticEvent");
    var ClipboardEventInterface = {clipboardData:function(event) {
      return "clipboardData" in event ? event.clipboardData : window.clipboardData;
    }};
    function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {
      SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
    }
    SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);
    module.exports = SyntheticClipboardEvent;
  }, {"./SyntheticEvent":87}], 85:[function(_dereq_, module, exports) {
    var SyntheticEvent = _dereq_("./SyntheticEvent");
    var CompositionEventInterface = {data:null};
    function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent) {
      SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
    }
    SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);
    module.exports = SyntheticCompositionEvent;
  }, {"./SyntheticEvent":87}], 86:[function(_dereq_, module, exports) {
    var SyntheticMouseEvent = _dereq_("./SyntheticMouseEvent");
    var DragEventInterface = {dataTransfer:null};
    function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent) {
      SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
    }
    SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);
    module.exports = SyntheticDragEvent;
  }, {"./SyntheticMouseEvent":91}], 87:[function(_dereq_, module, exports) {
    var PooledClass = _dereq_("./PooledClass");
    var assign = _dereq_("./Object.assign");
    var emptyFunction = _dereq_("./emptyFunction");
    var getEventTarget = _dereq_("./getEventTarget");
    var EventInterface = {type:null, target:getEventTarget, currentTarget:emptyFunction.thatReturnsNull, eventPhase:null, bubbles:null, cancelable:null, timeStamp:function(event) {
      return event.timeStamp || Date.now();
    }, defaultPrevented:null, isTrusted:null};
    function SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent) {
      this.dispatchConfig = dispatchConfig;
      this.dispatchMarker = dispatchMarker;
      this.nativeEvent = nativeEvent;
      var Interface = this.constructor.Interface;
      for (var propName in Interface) {
        if (!Interface.hasOwnProperty(propName)) {
          continue;
        }
        var normalize = Interface[propName];
        if (normalize) {
          this[propName] = normalize(nativeEvent);
        } else {
          this[propName] = nativeEvent[propName];
        }
      }
      var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
      if (defaultPrevented) {
        this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
      } else {
        this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
      }
      this.isPropagationStopped = emptyFunction.thatReturnsFalse;
    }
    assign(SyntheticEvent.prototype, {preventDefault:function() {
      this.defaultPrevented = true;
      var event = this.nativeEvent;
      event.preventDefault ? event.preventDefault() : event.returnValue = false;
      this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
    }, stopPropagation:function() {
      var event = this.nativeEvent;
      event.stopPropagation ? event.stopPropagation() : event.cancelBubble = true;
      this.isPropagationStopped = emptyFunction.thatReturnsTrue;
    }, persist:function() {
      this.isPersistent = emptyFunction.thatReturnsTrue;
    }, isPersistent:emptyFunction.thatReturnsFalse, destructor:function() {
      var Interface = this.constructor.Interface;
      for (var propName in Interface) {
        this[propName] = null;
      }
      this.dispatchConfig = null;
      this.dispatchMarker = null;
      this.nativeEvent = null;
    }});
    SyntheticEvent.Interface = EventInterface;
    SyntheticEvent.augmentClass = function(Class, Interface) {
      var Super = this;
      var prototype = Object.create(Super.prototype);
      assign(prototype, Class.prototype);
      Class.prototype = prototype;
      Class.prototype.constructor = Class;
      Class.Interface = assign({}, Super.Interface, Interface);
      Class.augmentClass = Super.augmentClass;
      PooledClass.addPoolingTo(Class, PooledClass.threeArgumentPooler);
    };
    PooledClass.addPoolingTo(SyntheticEvent, PooledClass.threeArgumentPooler);
    module.exports = SyntheticEvent;
  }, {"./Object.assign":27, "./PooledClass":28, "./emptyFunction":107, "./getEventTarget":117}], 88:[function(_dereq_, module, exports) {
    var SyntheticUIEvent = _dereq_("./SyntheticUIEvent");
    var FocusEventInterface = {relatedTarget:null};
    function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent) {
      SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
    }
    SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);
    module.exports = SyntheticFocusEvent;
  }, {"./SyntheticUIEvent":93}], 89:[function(_dereq_, module, exports) {
    var SyntheticEvent = _dereq_("./SyntheticEvent");
    var InputEventInterface = {data:null};
    function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent) {
      SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
    }
    SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);
    module.exports = SyntheticInputEvent;
  }, {"./SyntheticEvent":87}], 90:[function(_dereq_, module, exports) {
    var SyntheticUIEvent = _dereq_("./SyntheticUIEvent");
    var getEventCharCode = _dereq_("./getEventCharCode");
    var getEventKey = _dereq_("./getEventKey");
    var getEventModifierState = _dereq_("./getEventModifierState");
    var KeyboardEventInterface = {key:getEventKey, location:null, ctrlKey:null, shiftKey:null, altKey:null, metaKey:null, repeat:null, locale:null, getModifierState:getEventModifierState, charCode:function(event) {
      if (event.type === "keypress") {
        return getEventCharCode(event);
      }
      return 0;
    }, keyCode:function(event) {
      if (event.type === "keydown" || event.type === "keyup") {
        return event.keyCode;
      }
      return 0;
    }, which:function(event) {
      if (event.type === "keypress") {
        return getEventCharCode(event);
      }
      if (event.type === "keydown" || event.type === "keyup") {
        return event.keyCode;
      }
      return 0;
    }};
    function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {
      SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
    }
    SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);
    module.exports = SyntheticKeyboardEvent;
  }, {"./SyntheticUIEvent":93, "./getEventCharCode":114, "./getEventKey":115, "./getEventModifierState":116}], 91:[function(_dereq_, module, exports) {
    var SyntheticUIEvent = _dereq_("./SyntheticUIEvent");
    var ViewportMetrics = _dereq_("./ViewportMetrics");
    var getEventModifierState = _dereq_("./getEventModifierState");
    var MouseEventInterface = {screenX:null, screenY:null, clientX:null, clientY:null, ctrlKey:null, shiftKey:null, altKey:null, metaKey:null, getModifierState:getEventModifierState, button:function(event) {
      var button = event.button;
      if ("which" in event) {
        return button;
      }
      return button === 2 ? 2 : button === 4 ? 1 : 0;
    }, buttons:null, relatedTarget:function(event) {
      return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
    }, pageX:function(event) {
      return "pageX" in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
    }, pageY:function(event) {
      return "pageY" in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
    }};
    function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent) {
      SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
    }
    SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);
    module.exports = SyntheticMouseEvent;
  }, {"./SyntheticUIEvent":93, "./ViewportMetrics":96, "./getEventModifierState":116}], 92:[function(_dereq_, module, exports) {
    var SyntheticUIEvent = _dereq_("./SyntheticUIEvent");
    var getEventModifierState = _dereq_("./getEventModifierState");
    var TouchEventInterface = {touches:null, targetTouches:null, changedTouches:null, altKey:null, metaKey:null, ctrlKey:null, shiftKey:null, getModifierState:getEventModifierState};
    function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent) {
      SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
    }
    SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);
    module.exports = SyntheticTouchEvent;
  }, {"./SyntheticUIEvent":93, "./getEventModifierState":116}], 93:[function(_dereq_, module, exports) {
    var SyntheticEvent = _dereq_("./SyntheticEvent");
    var getEventTarget = _dereq_("./getEventTarget");
    var UIEventInterface = {view:function(event) {
      if (event.view) {
        return event.view;
      }
      var target = getEventTarget(event);
      if (target != null && target.window === target) {
        return target;
      }
      var doc = target.ownerDocument;
      if (doc) {
        return doc.defaultView || doc.parentWindow;
      } else {
        return window;
      }
    }, detail:function(event) {
      return event.detail || 0;
    }};
    function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent) {
      SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
    }
    SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);
    module.exports = SyntheticUIEvent;
  }, {"./SyntheticEvent":87, "./getEventTarget":117}], 94:[function(_dereq_, module, exports) {
    var SyntheticMouseEvent = _dereq_("./SyntheticMouseEvent");
    var WheelEventInterface = {deltaX:function(event) {
      return "deltaX" in event ? event.deltaX : "wheelDeltaX" in event ? -event.wheelDeltaX : 0;
    }, deltaY:function(event) {
      return "deltaY" in event ? event.deltaY : "wheelDeltaY" in event ? -event.wheelDeltaY : "wheelDelta" in event ? -event.wheelDelta : 0;
    }, deltaZ:null, deltaMode:null};
    function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent) {
      SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
    }
    SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);
    module.exports = SyntheticWheelEvent;
  }, {"./SyntheticMouseEvent":91}], 95:[function(_dereq_, module, exports) {
    var invariant = _dereq_("./invariant");
    var Mixin = {reinitializeTransaction:function() {
      this.transactionWrappers = this.getTransactionWrappers();
      if (!this.wrapperInitData) {
        this.wrapperInitData = [];
      } else {
        this.wrapperInitData.length = 0;
      }
      this._isInTransaction = false;
    }, _isInTransaction:false, getTransactionWrappers:null, isInTransaction:function() {
      return!!this._isInTransaction;
    }, perform:function(method, scope, a, b, c, d, e, f) {
      "production" !== "development" ? invariant(!this.isInTransaction(), "Transaction.perform(...): Cannot initialize a transaction when there " + "is already an outstanding transaction.") : invariant(!this.isInTransaction());
      var errorThrown;
      var ret;
      try {
        this._isInTransaction = true;
        errorThrown = true;
        this.initializeAll(0);
        ret = method.call(scope, a, b, c, d, e, f);
        errorThrown = false;
      } finally {
        try {
          if (errorThrown) {
            try {
              this.closeAll(0);
            } catch (err) {
            }
          } else {
            this.closeAll(0);
          }
        } finally {
          this._isInTransaction = false;
        }
      }
      return ret;
    }, initializeAll:function(startIndex) {
      var transactionWrappers = this.transactionWrappers;
      for (var i = startIndex;i < transactionWrappers.length;i++) {
        var wrapper = transactionWrappers[i];
        try {
          this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
          this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
        } finally {
          if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
            try {
              this.initializeAll(i + 1);
            } catch (err) {
            }
          }
        }
      }
    }, closeAll:function(startIndex) {
      "production" !== "development" ? invariant(this.isInTransaction(), "Transaction.closeAll(): Cannot close transaction when none are open.") : invariant(this.isInTransaction());
      var transactionWrappers = this.transactionWrappers;
      for (var i = startIndex;i < transactionWrappers.length;i++) {
        var wrapper = transactionWrappers[i];
        var initData = this.wrapperInitData[i];
        var errorThrown;
        try {
          errorThrown = true;
          if (initData !== Transaction.OBSERVED_ERROR) {
            wrapper.close && wrapper.close.call(this, initData);
          }
          errorThrown = false;
        } finally {
          if (errorThrown) {
            try {
              this.closeAll(i + 1);
            } catch (e) {
            }
          }
        }
      }
      this.wrapperInitData.length = 0;
    }};
    var Transaction = {Mixin:Mixin, OBSERVED_ERROR:{}};
    module.exports = Transaction;
  }, {"./invariant":126}], 96:[function(_dereq_, module, exports) {
    var getUnboundedScrollPosition = _dereq_("./getUnboundedScrollPosition");
    var ViewportMetrics = {currentScrollLeft:0, currentScrollTop:0, refreshScrollValues:function() {
      var scrollPosition = getUnboundedScrollPosition(window);
      ViewportMetrics.currentScrollLeft = scrollPosition.x;
      ViewportMetrics.currentScrollTop = scrollPosition.y;
    }};
    module.exports = ViewportMetrics;
  }, {"./getUnboundedScrollPosition":122}], 97:[function(_dereq_, module, exports) {
    var invariant = _dereq_("./invariant");
    function accumulateInto(current, next) {
      "production" !== "development" ? invariant(next != null, "accumulateInto(...): Accumulated items must not be null or undefined.") : invariant(next != null);
      if (current == null) {
        return next;
      }
      var currentIsArray = Array.isArray(current);
      var nextIsArray = Array.isArray(next);
      if (currentIsArray && nextIsArray) {
        current.push.apply(current, next);
        return current;
      }
      if (currentIsArray) {
        current.push(next);
        return current;
      }
      if (nextIsArray) {
        return[current].concat(next);
      }
      return[current, next];
    }
    module.exports = accumulateInto;
  }, {"./invariant":126}], 98:[function(_dereq_, module, exports) {
    var MOD = 65521;
    function adler32(data) {
      var a = 1;
      var b = 0;
      for (var i = 0;i < data.length;i++) {
        a = (a + data.charCodeAt(i)) % MOD;
        b = (b + a) % MOD;
      }
      return a | b << 16;
    }
    module.exports = adler32;
  }, {}], 99:[function(_dereq_, module, exports) {
    var _hyphenPattern = /-(.)/g;
    function camelize(string) {
      return string.replace(_hyphenPattern, function(_, character) {
        return character.toUpperCase();
      });
    }
    module.exports = camelize;
  }, {}], 100:[function(_dereq_, module, exports) {
    var camelize = _dereq_("./camelize");
    var msPattern = /^-ms-/;
    function camelizeStyleName(string) {
      return camelize(string.replace(msPattern, "ms-"));
    }
    module.exports = camelizeStyleName;
  }, {"./camelize":99}], 101:[function(_dereq_, module, exports) {
    var isTextNode = _dereq_("./isTextNode");
    function containsNode(outerNode, innerNode) {
      if (!outerNode || !innerNode) {
        return false;
      } else {
        if (outerNode === innerNode) {
          return true;
        } else {
          if (isTextNode(outerNode)) {
            return false;
          } else {
            if (isTextNode(innerNode)) {
              return containsNode(outerNode, innerNode.parentNode);
            } else {
              if (outerNode.contains) {
                return outerNode.contains(innerNode);
              } else {
                if (outerNode.compareDocumentPosition) {
                  return!!(outerNode.compareDocumentPosition(innerNode) & 16);
                } else {
                  return false;
                }
              }
            }
          }
        }
      }
    }
    module.exports = containsNode;
  }, {"./isTextNode":130}], 102:[function(_dereq_, module, exports) {
    var toArray = _dereq_("./toArray");
    function hasArrayNature(obj) {
      return!!obj && (typeof obj == "object" || typeof obj == "function") && "length" in obj && !("setInterval" in obj) && typeof obj.nodeType != "number" && (Array.isArray(obj) || "callee" in obj || "item" in obj);
    }
    function createArrayFrom(obj) {
      if (!hasArrayNature(obj)) {
        return[obj];
      } else {
        if (Array.isArray(obj)) {
          return obj.slice();
        } else {
          return toArray(obj);
        }
      }
    }
    module.exports = createArrayFrom;
  }, {"./toArray":143}], 103:[function(_dereq_, module, exports) {
    var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
    var ReactElement = _dereq_("./ReactElement");
    var invariant = _dereq_("./invariant");
    function createFullPageComponent(tag) {
      var elementFactory = ReactElement.createFactory(tag);
      var FullPageComponent = ReactCompositeComponent.createClass({displayName:"ReactFullPageComponent" + tag, componentWillUnmount:function() {
        "production" !== "development" ? invariant(false, "%s tried to unmount. Because of cross-browser quirks it is " + "impossible to unmount some top-level components (eg \x3chtml\x3e, \x3chead\x3e, " + "and \x3cbody\x3e) reliably and efficiently. To fix this, have a single " + "top-level component that never unmounts render these elements.", this.constructor.displayName) : invariant(false);
      }, render:function() {
        return elementFactory(this.props);
      }});
      return FullPageComponent;
    }
    module.exports = createFullPageComponent;
  }, {"./ReactCompositeComponent":34, "./ReactElement":52, "./invariant":126}], 104:[function(_dereq_, module, exports) {
    var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
    var createArrayFrom = _dereq_("./createArrayFrom");
    var getMarkupWrap = _dereq_("./getMarkupWrap");
    var invariant = _dereq_("./invariant");
    var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement("div") : null;
    var nodeNamePattern = /^\s*<(\w+)/;
    function getNodeName(markup) {
      var nodeNameMatch = markup.match(nodeNamePattern);
      return nodeNameMatch && nodeNameMatch[1].toLowerCase();
    }
    function createNodesFromMarkup(markup, handleScript) {
      var node = dummyNode;
      "production" !== "development" ? invariant(!!dummyNode, "createNodesFromMarkup dummy not initialized") : invariant(!!dummyNode);
      var nodeName = getNodeName(markup);
      var wrap = nodeName && getMarkupWrap(nodeName);
      if (wrap) {
        node.innerHTML = wrap[1] + markup + wrap[2];
        var wrapDepth = wrap[0];
        while (wrapDepth--) {
          node = node.lastChild;
        }
      } else {
        node.innerHTML = markup;
      }
      var scripts = node.getElementsByTagName("script");
      if (scripts.length) {
        "production" !== "development" ? invariant(handleScript, "createNodesFromMarkup(...): Unexpected \x3cscript\x3e element rendered.") : invariant(handleScript);
        createArrayFrom(scripts).forEach(handleScript);
      }
      var nodes = createArrayFrom(node.childNodes);
      while (node.lastChild) {
        node.removeChild(node.lastChild);
      }
      return nodes;
    }
    module.exports = createNodesFromMarkup;
  }, {"./ExecutionEnvironment":22, "./createArrayFrom":102, "./getMarkupWrap":118, "./invariant":126}], 105:[function(_dereq_, module, exports) {
    var CSSProperty = _dereq_("./CSSProperty");
    var isUnitlessNumber = CSSProperty.isUnitlessNumber;
    function dangerousStyleValue(name, value) {
      var isEmpty = value == null || typeof value === "boolean" || value === "";
      if (isEmpty) {
        return "";
      }
      var isNonNumeric = isNaN(value);
      if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
        return "" + value;
      }
      if (typeof value === "string") {
        value = value.trim();
      }
      return value + "px";
    }
    module.exports = dangerousStyleValue;
  }, {"./CSSProperty":4}], 106:[function(_dereq_, module, exports) {
    var assign = _dereq_("./Object.assign");
    var warning = _dereq_("./warning");
    function deprecated(namespace, oldName, newName, ctx, fn) {
      var warned = false;
      if ("production" !== "development") {
        var newFn = function() {
          "production" !== "development" ? warning(warned, namespace + "." + oldName + " will be deprecated in a future version. " + ("Use " + namespace + "." + newName + " instead.")) : null;
          warned = true;
          return fn.apply(ctx, arguments);
        };
        newFn.displayName = namespace + "_" + oldName;
        return assign(newFn, fn);
      }
      return fn;
    }
    module.exports = deprecated;
  }, {"./Object.assign":27, "./warning":145}], 107:[function(_dereq_, module, exports) {
    function makeEmptyFunction(arg) {
      return function() {
        return arg;
      };
    }
    function emptyFunction() {
    }
    emptyFunction.thatReturns = makeEmptyFunction;
    emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
    emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
    emptyFunction.thatReturnsNull = makeEmptyFunction(null);
    emptyFunction.thatReturnsThis = function() {
      return this;
    };
    emptyFunction.thatReturnsArgument = function(arg) {
      return arg;
    };
    module.exports = emptyFunction;
  }, {}], 108:[function(_dereq_, module, exports) {
    var emptyObject = {};
    if ("production" !== "development") {
      Object.freeze(emptyObject);
    }
    module.exports = emptyObject;
  }, {}], 109:[function(_dereq_, module, exports) {
    var ESCAPE_LOOKUP = {"\x26":"\x26amp;", "\x3e":"\x26gt;", "\x3c":"\x26lt;", '"':"\x26quot;", "'":"\x26#x27;"};
    var ESCAPE_REGEX = /[&><"']/g;
    function escaper(match) {
      return ESCAPE_LOOKUP[match];
    }
    function escapeTextForBrowser(text) {
      return("" + text).replace(ESCAPE_REGEX, escaper);
    }
    module.exports = escapeTextForBrowser;
  }, {}], 110:[function(_dereq_, module, exports) {
    var ReactTextComponent = _dereq_("./ReactTextComponent");
    var traverseAllChildren = _dereq_("./traverseAllChildren");
    var warning = _dereq_("./warning");
    function flattenSingleChildIntoContext(traverseContext, child, name) {
      var result = traverseContext;
      var keyUnique = !result.hasOwnProperty(name);
      "production" !== "development" ? warning(keyUnique, "flattenChildren(...): Encountered two children with the same key, " + "`%s`. Child keys must be unique; when two children share a key, only " + "the first child will be used.", name) : null;
      if (keyUnique && child != null) {
        var type = typeof child;
        var normalizedValue;
        if (type === "string") {
          normalizedValue = ReactTextComponent(child);
        } else {
          if (type === "number") {
            normalizedValue = ReactTextComponent("" + child);
          } else {
            normalizedValue = child;
          }
        }
        result[name] = normalizedValue;
      }
    }
    function flattenChildren(children) {
      if (children == null) {
        return children;
      }
      var result = {};
      traverseAllChildren(children, flattenSingleChildIntoContext, result);
      return result;
    }
    module.exports = flattenChildren;
  }, {"./ReactTextComponent":78, "./traverseAllChildren":144, "./warning":145}], 111:[function(_dereq_, module, exports) {
    function focusNode(node) {
      try {
        node.focus();
      } catch (e) {
      }
    }
    module.exports = focusNode;
  }, {}], 112:[function(_dereq_, module, exports) {
    var forEachAccumulated = function(arr, cb, scope) {
      if (Array.isArray(arr)) {
        arr.forEach(cb, scope);
      } else {
        if (arr) {
          cb.call(scope, arr);
        }
      }
    };
    module.exports = forEachAccumulated;
  }, {}], 113:[function(_dereq_, module, exports) {
    function getActiveElement() {
      try {
        return document.activeElement || document.body;
      } catch (e) {
        return document.body;
      }
    }
    module.exports = getActiveElement;
  }, {}], 114:[function(_dereq_, module, exports) {
    function getEventCharCode(nativeEvent) {
      var charCode;
      var keyCode = nativeEvent.keyCode;
      if ("charCode" in nativeEvent) {
        charCode = nativeEvent.charCode;
        if (charCode === 0 && keyCode === 13) {
          charCode = 13;
        }
      } else {
        charCode = keyCode;
      }
      if (charCode >= 32 || charCode === 13) {
        return charCode;
      }
      return 0;
    }
    module.exports = getEventCharCode;
  }, {}], 115:[function(_dereq_, module, exports) {
    var getEventCharCode = _dereq_("./getEventCharCode");
    var normalizeKey = {"Esc":"Escape", "Spacebar":" ", "Left":"ArrowLeft", "Up":"ArrowUp", "Right":"ArrowRight", "Down":"ArrowDown", "Del":"Delete", "Win":"OS", "Menu":"ContextMenu", "Apps":"ContextMenu", "Scroll":"ScrollLock", "MozPrintableKey":"Unidentified"};
    var translateToKey = {8:"Backspace", 9:"Tab", 12:"Clear", 13:"Enter", 16:"Shift", 17:"Control", 18:"Alt", 19:"Pause", 20:"CapsLock", 27:"Escape", 32:" ", 33:"PageUp", 34:"PageDown", 35:"End", 36:"Home", 37:"ArrowLeft", 38:"ArrowUp", 39:"ArrowRight", 40:"ArrowDown", 45:"Insert", 46:"Delete", 112:"F1", 113:"F2", 114:"F3", 115:"F4", 116:"F5", 117:"F6", 118:"F7", 119:"F8", 120:"F9", 121:"F10", 122:"F11", 123:"F12", 144:"NumLock", 145:"ScrollLock", 224:"Meta"};
    function getEventKey(nativeEvent) {
      if (nativeEvent.key) {
        var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
        if (key !== "Unidentified") {
          return key;
        }
      }
      if (nativeEvent.type === "keypress") {
        var charCode = getEventCharCode(nativeEvent);
        return charCode === 13 ? "Enter" : String.fromCharCode(charCode);
      }
      if (nativeEvent.type === "keydown" || nativeEvent.type === "keyup") {
        return translateToKey[nativeEvent.keyCode] || "Unidentified";
      }
      return "";
    }
    module.exports = getEventKey;
  }, {"./getEventCharCode":114}], 116:[function(_dereq_, module, exports) {
    var modifierKeyToProp = {"Alt":"altKey", "Control":"ctrlKey", "Meta":"metaKey", "Shift":"shiftKey"};
    function modifierStateGetter(keyArg) {
      var syntheticEvent = this;
      var nativeEvent = syntheticEvent.nativeEvent;
      if (nativeEvent.getModifierState) {
        return nativeEvent.getModifierState(keyArg);
      }
      var keyProp = modifierKeyToProp[keyArg];
      return keyProp ? !!nativeEvent[keyProp] : false;
    }
    function getEventModifierState(nativeEvent) {
      return modifierStateGetter;
    }
    module.exports = getEventModifierState;
  }, {}], 117:[function(_dereq_, module, exports) {
    function getEventTarget(nativeEvent) {
      var target = nativeEvent.target || nativeEvent.srcElement || window;
      return target.nodeType === 3 ? target.parentNode : target;
    }
    module.exports = getEventTarget;
  }, {}], 118:[function(_dereq_, module, exports) {
    var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
    var invariant = _dereq_("./invariant");
    var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement("div") : null;
    var shouldWrap = {"circle":true, "defs":true, "ellipse":true, "g":true, "line":true, "linearGradient":true, "path":true, "polygon":true, "polyline":true, "radialGradient":true, "rect":true, "stop":true, "text":true};
    var selectWrap = [1, '\x3cselect multiple\x3d"true"\x3e', "\x3c/select\x3e"];
    var tableWrap = [1, "\x3ctable\x3e", "\x3c/table\x3e"];
    var trWrap = [3, "\x3ctable\x3e\x3ctbody\x3e\x3ctr\x3e", "\x3c/tr\x3e\x3c/tbody\x3e\x3c/table\x3e"];
    var svgWrap = [1, "\x3csvg\x3e", "\x3c/svg\x3e"];
    var markupWrap = {"*":[1, "?\x3cdiv\x3e", "\x3c/div\x3e"], "area":[1, "\x3cmap\x3e", "\x3c/map\x3e"], "col":[2, "\x3ctable\x3e\x3ctbody\x3e\x3c/tbody\x3e\x3ccolgroup\x3e", "\x3c/colgroup\x3e\x3c/table\x3e"], "legend":[1, "\x3cfieldset\x3e", "\x3c/fieldset\x3e"], "param":[1, "\x3cobject\x3e", "\x3c/object\x3e"], "tr":[2, "\x3ctable\x3e\x3ctbody\x3e", "\x3c/tbody\x3e\x3c/table\x3e"], "optgroup":selectWrap, "option":selectWrap, "caption":tableWrap, "colgroup":tableWrap, "tbody":tableWrap, "tfoot":tableWrap, 
    "thead":tableWrap, "td":trWrap, "th":trWrap, "circle":svgWrap, "defs":svgWrap, "ellipse":svgWrap, "g":svgWrap, "line":svgWrap, "linearGradient":svgWrap, "path":svgWrap, "polygon":svgWrap, "polyline":svgWrap, "radialGradient":svgWrap, "rect":svgWrap, "stop":svgWrap, "text":svgWrap};
    function getMarkupWrap(nodeName) {
      "production" !== "development" ? invariant(!!dummyNode, "Markup wrapping node not initialized") : invariant(!!dummyNode);
      if (!markupWrap.hasOwnProperty(nodeName)) {
        nodeName = "*";
      }
      if (!shouldWrap.hasOwnProperty(nodeName)) {
        if (nodeName === "*") {
          dummyNode.innerHTML = "\x3clink /\x3e";
        } else {
          dummyNode.innerHTML = "\x3c" + nodeName + "\x3e\x3c/" + nodeName + "\x3e";
        }
        shouldWrap[nodeName] = !dummyNode.firstChild;
      }
      return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
    }
    module.exports = getMarkupWrap;
  }, {"./ExecutionEnvironment":22, "./invariant":126}], 119:[function(_dereq_, module, exports) {
    function getLeafNode(node) {
      while (node && node.firstChild) {
        node = node.firstChild;
      }
      return node;
    }
    function getSiblingNode(node) {
      while (node) {
        if (node.nextSibling) {
          return node.nextSibling;
        }
        node = node.parentNode;
      }
    }
    function getNodeForCharacterOffset(root, offset) {
      var node = getLeafNode(root);
      var nodeStart = 0;
      var nodeEnd = 0;
      while (node) {
        if (node.nodeType == 3) {
          nodeEnd = nodeStart + node.textContent.length;
          if (nodeStart <= offset && nodeEnd >= offset) {
            return{node:node, offset:offset - nodeStart};
          }
          nodeStart = nodeEnd;
        }
        node = getLeafNode(getSiblingNode(node));
      }
    }
    module.exports = getNodeForCharacterOffset;
  }, {}], 120:[function(_dereq_, module, exports) {
    var DOC_NODE_TYPE = 9;
    function getReactRootElementInContainer(container) {
      if (!container) {
        return null;
      }
      if (container.nodeType === DOC_NODE_TYPE) {
        return container.documentElement;
      } else {
        return container.firstChild;
      }
    }
    module.exports = getReactRootElementInContainer;
  }, {}], 121:[function(_dereq_, module, exports) {
    var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
    var contentKey = null;
    function getTextContentAccessor() {
      if (!contentKey && ExecutionEnvironment.canUseDOM) {
        contentKey = "textContent" in document.documentElement ? "textContent" : "innerText";
      }
      return contentKey;
    }
    module.exports = getTextContentAccessor;
  }, {"./ExecutionEnvironment":22}], 122:[function(_dereq_, module, exports) {
    function getUnboundedScrollPosition(scrollable) {
      if (scrollable === window) {
        return{x:window.pageXOffset || document.documentElement.scrollLeft, y:window.pageYOffset || document.documentElement.scrollTop};
      }
      return{x:scrollable.scrollLeft, y:scrollable.scrollTop};
    }
    module.exports = getUnboundedScrollPosition;
  }, {}], 123:[function(_dereq_, module, exports) {
    var _uppercasePattern = /([A-Z])/g;
    function hyphenate(string) {
      return string.replace(_uppercasePattern, "-$1").toLowerCase();
    }
    module.exports = hyphenate;
  }, {}], 124:[function(_dereq_, module, exports) {
    var hyphenate = _dereq_("./hyphenate");
    var msPattern = /^ms-/;
    function hyphenateStyleName(string) {
      return hyphenate(string).replace(msPattern, "-ms-");
    }
    module.exports = hyphenateStyleName;
  }, {"./hyphenate":123}], 125:[function(_dereq_, module, exports) {
    var warning = _dereq_("./warning");
    var ReactElement = _dereq_("./ReactElement");
    var ReactLegacyElement = _dereq_("./ReactLegacyElement");
    var ReactNativeComponent = _dereq_("./ReactNativeComponent");
    var ReactEmptyComponent = _dereq_("./ReactEmptyComponent");
    function instantiateReactComponent(element, parentCompositeType) {
      var instance;
      if ("production" !== "development") {
        "production" !== "development" ? warning(element && (typeof element.type === "function" || typeof element.type === "string"), "Only functions or strings can be mounted as React components.") : null;
        if (element.type._mockedReactClassConstructor) {
          ReactLegacyElement._isLegacyCallWarningEnabled = false;
          try {
            instance = new element.type._mockedReactClassConstructor(element.props);
          } finally {
            ReactLegacyElement._isLegacyCallWarningEnabled = true;
          }
          if (ReactElement.isValidElement(instance)) {
            instance = new instance.type(instance.props);
          }
          var render = instance.render;
          if (!render) {
            element = ReactEmptyComponent.getEmptyComponent();
          } else {
            if (render._isMockFunction && !render._getMockImplementation()) {
              render.mockImplementation(ReactEmptyComponent.getEmptyComponent);
            }
            instance.construct(element);
            return instance;
          }
        }
      }
      if (typeof element.type === "string") {
        instance = ReactNativeComponent.createInstanceForTag(element.type, element.props, parentCompositeType);
      } else {
        instance = new element.type(element.props);
      }
      if ("production" !== "development") {
        "production" !== "development" ? warning(typeof instance.construct === "function" && typeof instance.mountComponent === "function" && typeof instance.receiveComponent === "function", "Only React Components can be mounted.") : null;
      }
      instance.construct(element);
      return instance;
    }
    module.exports = instantiateReactComponent;
  }, {"./ReactElement":52, "./ReactEmptyComponent":54, "./ReactLegacyElement":61, "./ReactNativeComponent":66, "./warning":145}], 126:[function(_dereq_, module, exports) {
    var invariant = function(condition, format, a, b, c, d, e, f) {
      if ("production" !== "development") {
        if (format === undefined) {
          throw new Error("invariant requires an error message argument");
        }
      }
      if (!condition) {
        var error;
        if (format === undefined) {
          error = new Error("Minified exception occurred; use the non-minified dev environment " + "for the full error message and additional helpful warnings.");
        } else {
          var args = [a, b, c, d, e, f];
          var argIndex = 0;
          error = new Error("Invariant Violation: " + format.replace(/%s/g, function() {
            return args[argIndex++];
          }));
        }
        error.framesToPop = 1;
        throw error;
      }
    };
    module.exports = invariant;
  }, {}], 127:[function(_dereq_, module, exports) {
    var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
    var useHasFeature;
    if (ExecutionEnvironment.canUseDOM) {
      useHasFeature = document.implementation && document.implementation.hasFeature && document.implementation.hasFeature("", "") !== true;
    }
    function isEventSupported(eventNameSuffix, capture) {
      if (!ExecutionEnvironment.canUseDOM || capture && !("addEventListener" in document)) {
        return false;
      }
      var eventName = "on" + eventNameSuffix;
      var isSupported = eventName in document;
      if (!isSupported) {
        var element = document.createElement("div");
        element.setAttribute(eventName, "return;");
        isSupported = typeof element[eventName] === "function";
      }
      if (!isSupported && useHasFeature && eventNameSuffix === "wheel") {
        isSupported = document.implementation.hasFeature("Events.wheel", "3.0");
      }
      return isSupported;
    }
    module.exports = isEventSupported;
  }, {"./ExecutionEnvironment":22}], 128:[function(_dereq_, module, exports) {
    function isNode(object) {
      return!!(object && (typeof Node === "function" ? object instanceof Node : typeof object === "object" && typeof object.nodeType === "number" && typeof object.nodeName === "string"));
    }
    module.exports = isNode;
  }, {}], 129:[function(_dereq_, module, exports) {
    var supportedInputTypes = {"color":true, "date":true, "datetime":true, "datetime-local":true, "email":true, "month":true, "number":true, "password":true, "range":true, "search":true, "tel":true, "text":true, "time":true, "url":true, "week":true};
    function isTextInputElement(elem) {
      return elem && (elem.nodeName === "INPUT" && supportedInputTypes[elem.type] || elem.nodeName === "TEXTAREA");
    }
    module.exports = isTextInputElement;
  }, {}], 130:[function(_dereq_, module, exports) {
    var isNode = _dereq_("./isNode");
    function isTextNode(object) {
      return isNode(object) && object.nodeType == 3;
    }
    module.exports = isTextNode;
  }, {"./isNode":128}], 131:[function(_dereq_, module, exports) {
    function joinClasses(className) {
      if (!className) {
        className = "";
      }
      var nextClass;
      var argLength = arguments.length;
      if (argLength > 1) {
        for (var ii = 1;ii < argLength;ii++) {
          nextClass = arguments[ii];
          if (nextClass) {
            className = (className ? className + " " : "") + nextClass;
          }
        }
      }
      return className;
    }
    module.exports = joinClasses;
  }, {}], 132:[function(_dereq_, module, exports) {
    var invariant = _dereq_("./invariant");
    var keyMirror = function(obj) {
      var ret = {};
      var key;
      "production" !== "development" ? invariant(obj instanceof Object && !Array.isArray(obj), "keyMirror(...): Argument must be an object.") : invariant(obj instanceof Object && !Array.isArray(obj));
      for (key in obj) {
        if (!obj.hasOwnProperty(key)) {
          continue;
        }
        ret[key] = key;
      }
      return ret;
    };
    module.exports = keyMirror;
  }, {"./invariant":126}], 133:[function(_dereq_, module, exports) {
    var keyOf = function(oneKeyObj) {
      var key;
      for (key in oneKeyObj) {
        if (!oneKeyObj.hasOwnProperty(key)) {
          continue;
        }
        return key;
      }
      return null;
    };
    module.exports = keyOf;
  }, {}], 134:[function(_dereq_, module, exports) {
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    function mapObject(object, callback, context) {
      if (!object) {
        return null;
      }
      var result = {};
      for (var name in object) {
        if (hasOwnProperty.call(object, name)) {
          result[name] = callback.call(context, object[name], name, object);
        }
      }
      return result;
    }
    module.exports = mapObject;
  }, {}], 135:[function(_dereq_, module, exports) {
    function memoizeStringOnly(callback) {
      var cache = {};
      return function(string) {
        if (cache.hasOwnProperty(string)) {
          return cache[string];
        } else {
          return cache[string] = callback.call(this, string);
        }
      };
    }
    module.exports = memoizeStringOnly;
  }, {}], 136:[function(_dereq_, module, exports) {
    var invariant = _dereq_("./invariant");
    function monitorCodeUse(eventName, data) {
      "production" !== "development" ? invariant(eventName && !/[^a-z0-9_]/.test(eventName), "You must provide an eventName using only the characters [a-z0-9_]") : invariant(eventName && !/[^a-z0-9_]/.test(eventName));
    }
    module.exports = monitorCodeUse;
  }, {"./invariant":126}], 137:[function(_dereq_, module, exports) {
    var ReactElement = _dereq_("./ReactElement");
    var invariant = _dereq_("./invariant");
    function onlyChild(children) {
      "production" !== "development" ? invariant(ReactElement.isValidElement(children), "onlyChild must be passed a children with exactly one child.") : invariant(ReactElement.isValidElement(children));
      return children;
    }
    module.exports = onlyChild;
  }, {"./ReactElement":52, "./invariant":126}], 138:[function(_dereq_, module, exports) {
    var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
    var performance;
    if (ExecutionEnvironment.canUseDOM) {
      performance = window.performance || window.msPerformance || window.webkitPerformance;
    }
    module.exports = performance || {};
  }, {"./ExecutionEnvironment":22}], 139:[function(_dereq_, module, exports) {
    var performance = _dereq_("./performance");
    if (!performance || !performance.now) {
      performance = Date;
    }
    var performanceNow = performance.now.bind(performance);
    module.exports = performanceNow;
  }, {"./performance":138}], 140:[function(_dereq_, module, exports) {
    var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
    var WHITESPACE_TEST = /^[ \r\n\t\f]/;
    var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;
    var setInnerHTML = function(node, html) {
      node.innerHTML = html;
    };
    if (ExecutionEnvironment.canUseDOM) {
      var testElement = document.createElement("div");
      testElement.innerHTML = " ";
      if (testElement.innerHTML === "") {
        setInnerHTML = function(node, html) {
          if (node.parentNode) {
            node.parentNode.replaceChild(node, node);
          }
          if (WHITESPACE_TEST.test(html) || html[0] === "\x3c" && NONVISIBLE_TEST.test(html)) {
            node.innerHTML = "\ufeff" + html;
            var textNode = node.firstChild;
            if (textNode.data.length === 1) {
              node.removeChild(textNode);
            } else {
              textNode.deleteData(0, 1);
            }
          } else {
            node.innerHTML = html;
          }
        };
      }
    }
    module.exports = setInnerHTML;
  }, {"./ExecutionEnvironment":22}], 141:[function(_dereq_, module, exports) {
    function shallowEqual(objA, objB) {
      if (objA === objB) {
        return true;
      }
      var key;
      for (key in objA) {
        if (objA.hasOwnProperty(key) && (!objB.hasOwnProperty(key) || objA[key] !== objB[key])) {
          return false;
        }
      }
      for (key in objB) {
        if (objB.hasOwnProperty(key) && !objA.hasOwnProperty(key)) {
          return false;
        }
      }
      return true;
    }
    module.exports = shallowEqual;
  }, {}], 142:[function(_dereq_, module, exports) {
    function shouldUpdateReactComponent(prevElement, nextElement) {
      if (prevElement && nextElement && prevElement.type === nextElement.type && prevElement.key === nextElement.key && prevElement._owner === nextElement._owner) {
        return true;
      }
      return false;
    }
    module.exports = shouldUpdateReactComponent;
  }, {}], 143:[function(_dereq_, module, exports) {
    var invariant = _dereq_("./invariant");
    function toArray(obj) {
      var length = obj.length;
      "production" !== "development" ? invariant(!Array.isArray(obj) && (typeof obj === "object" || typeof obj === "function"), "toArray: Array-like object expected") : invariant(!Array.isArray(obj) && (typeof obj === "object" || typeof obj === "function"));
      "production" !== "development" ? invariant(typeof length === "number", "toArray: Object needs a length property") : invariant(typeof length === "number");
      "production" !== "development" ? invariant(length === 0 || length - 1 in obj, "toArray: Object should have keys for indices") : invariant(length === 0 || length - 1 in obj);
      if (obj.hasOwnProperty) {
        try {
          return Array.prototype.slice.call(obj);
        } catch (e) {
        }
      }
      var ret = Array(length);
      for (var ii = 0;ii < length;ii++) {
        ret[ii] = obj[ii];
      }
      return ret;
    }
    module.exports = toArray;
  }, {"./invariant":126}], 144:[function(_dereq_, module, exports) {
    var ReactElement = _dereq_("./ReactElement");
    var ReactInstanceHandles = _dereq_("./ReactInstanceHandles");
    var invariant = _dereq_("./invariant");
    var SEPARATOR = ReactInstanceHandles.SEPARATOR;
    var SUBSEPARATOR = ":";
    var userProvidedKeyEscaperLookup = {"\x3d":"\x3d0", ".":"\x3d1", ":":"\x3d2"};
    var userProvidedKeyEscapeRegex = /[=.:]/g;
    function userProvidedKeyEscaper(match) {
      return userProvidedKeyEscaperLookup[match];
    }
    function getComponentKey(component, index) {
      if (component && component.key != null) {
        return wrapUserProvidedKey(component.key);
      }
      return index.toString(36);
    }
    function escapeUserProvidedKey(text) {
      return("" + text).replace(userProvidedKeyEscapeRegex, userProvidedKeyEscaper);
    }
    function wrapUserProvidedKey(key) {
      return "$" + escapeUserProvidedKey(key);
    }
    var traverseAllChildrenImpl = function(children, nameSoFar, indexSoFar, callback, traverseContext) {
      var nextName, nextIndex;
      var subtreeCount = 0;
      if (Array.isArray(children)) {
        for (var i = 0;i < children.length;i++) {
          var child = children[i];
          nextName = nameSoFar + (nameSoFar ? SUBSEPARATOR : SEPARATOR) + getComponentKey(child, i);
          nextIndex = indexSoFar + subtreeCount;
          subtreeCount += traverseAllChildrenImpl(child, nextName, nextIndex, callback, traverseContext);
        }
      } else {
        var type = typeof children;
        var isOnlyChild = nameSoFar === "";
        var storageName = isOnlyChild ? SEPARATOR + getComponentKey(children, 0) : nameSoFar;
        if (children == null || type === "boolean") {
          callback(traverseContext, null, storageName, indexSoFar);
          subtreeCount = 1;
        } else {
          if (type === "string" || type === "number" || ReactElement.isValidElement(children)) {
            callback(traverseContext, children, storageName, indexSoFar);
            subtreeCount = 1;
          } else {
            if (type === "object") {
              "production" !== "development" ? invariant(!children || children.nodeType !== 1, "traverseAllChildren(...): Encountered an invalid child; DOM " + "elements are not valid children of React components.") : invariant(!children || children.nodeType !== 1);
              for (var key in children) {
                if (children.hasOwnProperty(key)) {
                  nextName = nameSoFar + (nameSoFar ? SUBSEPARATOR : SEPARATOR) + wrapUserProvidedKey(key) + SUBSEPARATOR + getComponentKey(children[key], 0);
                  nextIndex = indexSoFar + subtreeCount;
                  subtreeCount += traverseAllChildrenImpl(children[key], nextName, nextIndex, callback, traverseContext);
                }
              }
            }
          }
        }
      }
      return subtreeCount;
    };
    function traverseAllChildren(children, callback, traverseContext) {
      if (children == null) {
        return 0;
      }
      return traverseAllChildrenImpl(children, "", 0, callback, traverseContext);
    }
    module.exports = traverseAllChildren;
  }, {"./ReactElement":52, "./ReactInstanceHandles":60, "./invariant":126}], 145:[function(_dereq_, module, exports) {
    var emptyFunction = _dereq_("./emptyFunction");
    var warning = emptyFunction;
    if ("production" !== "development") {
      warning = function(condition, format) {
        for (var args = [], $__0 = 2, $__1 = arguments.length;$__0 < $__1;$__0++) {
          args.push(arguments[$__0]);
        }
        if (format === undefined) {
          throw new Error("`warning(condition, format, ...args)` requires a warning " + "message argument");
        }
        if (!condition) {
          var argIndex = 0;
          console.warn("Warning: " + format.replace(/%s/g, function() {
            return args[argIndex++];
          }));
        }
      };
    }
    module.exports = warning;
  }, {"./emptyFunction":107}]}, {}, [1])(1);
});
goog.provide("reagent.impl.batching");
goog.require("cljs.core");
goog.require("reagent.impl.util");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("reagent.impl.util");
goog.require("reagent.ratom");
goog.require("reagent.ratom");
goog.require("reagent.interop");
goog.require("reagent.debug");
if (typeof reagent.impl.batching.mount_count !== "undefined") {
} else {
  reagent.impl.batching.mount_count = 0;
}
reagent.impl.batching.next_mount_count = function next_mount_count() {
  return reagent.impl.batching.mount_count = reagent.impl.batching.mount_count + 1;
};
reagent.impl.batching.fake_raf = function fake_raf(f) {
  return setTimeout(f, 16);
};
reagent.impl.batching.next_tick = cljs.core.not.call(null, reagent.impl.util.is_client) ? reagent.impl.batching.fake_raf : function() {
  var w = window;
  var or__3761__auto__ = w["requestAnimationFrame"];
  if (cljs.core.truth_(or__3761__auto__)) {
    return or__3761__auto__;
  } else {
    var or__3761__auto____$1 = w["webkitRequestAnimationFrame"];
    if (cljs.core.truth_(or__3761__auto____$1)) {
      return or__3761__auto____$1;
    } else {
      var or__3761__auto____$2 = w["mozRequestAnimationFrame"];
      if (cljs.core.truth_(or__3761__auto____$2)) {
        return or__3761__auto____$2;
      } else {
        var or__3761__auto____$3 = w["msRequestAnimationFrame"];
        if (cljs.core.truth_(or__3761__auto____$3)) {
          return or__3761__auto____$3;
        } else {
          return reagent.impl.batching.fake_raf;
        }
      }
    }
  }
}();
reagent.impl.batching.compare_mount_order = function compare_mount_order(c1, c2) {
  return c1["cljsMountOrder"] - c2["cljsMountOrder"];
};
reagent.impl.batching.run_queue = function run_queue(a) {
  a.sort(reagent.impl.batching.compare_mount_order);
  var n__4643__auto__ = a.length;
  var i = 0;
  while (true) {
    if (i < n__4643__auto__) {
      var c_17709 = a[i];
      if (cljs.core.truth_(c_17709["cljsIsDirty"])) {
        c_17709["forceUpdate"]();
      } else {
      }
      var G__17710 = i + 1;
      i = G__17710;
      continue;
    } else {
      return null;
    }
    break;
  }
};
reagent.impl.batching.run_funs = function run_funs(a) {
  var n__4643__auto__ = a.length;
  var i = 0;
  while (true) {
    if (i < n__4643__auto__) {
      a[i].call(null);
      var G__17711 = i + 1;
      i = G__17711;
      continue;
    } else {
      return null;
    }
    break;
  }
};
reagent.impl.batching.RenderQueue = function(queue, scheduled_QMARK_, after_render) {
  this.queue = queue;
  this.scheduled_QMARK_ = scheduled_QMARK_;
  this.after_render = after_render;
};
reagent.impl.batching.RenderQueue.prototype.queue_render = function(c) {
  var self__ = this;
  var this$ = this;
  self__.queue.push(c);
  return this$.schedule();
};
reagent.impl.batching.RenderQueue.prototype.add_after_render = function(f) {
  var self__ = this;
  var _ = this;
  return self__.after_render.push(f);
};
reagent.impl.batching.RenderQueue.prototype.schedule = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.truth_(self__.scheduled_QMARK_)) {
    return null;
  } else {
    self__.scheduled_QMARK_ = true;
    return reagent.impl.batching.next_tick.call(null, function(this$) {
      return function() {
        return this$.run_queue();
      };
    }(this$));
  }
};
reagent.impl.batching.RenderQueue.prototype.run_queue = function() {
  var self__ = this;
  var _ = this;
  var q = self__.queue;
  var aq = self__.after_render;
  self__.queue = [];
  self__.after_render = [];
  self__.scheduled_QMARK_ = false;
  reagent.impl.batching.run_queue.call(null, q);
  return reagent.impl.batching.run_funs.call(null, aq);
};
reagent.impl.batching.RenderQueue.cljs$lang$type = true;
reagent.impl.batching.RenderQueue.cljs$lang$ctorStr = "reagent.impl.batching/RenderQueue";
reagent.impl.batching.RenderQueue.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "reagent.impl.batching/RenderQueue");
};
reagent.impl.batching.__GT_RenderQueue = function __GT_RenderQueue(queue, scheduled_QMARK_, after_render) {
  return new reagent.impl.batching.RenderQueue(queue, scheduled_QMARK_, after_render);
};
reagent.impl.batching.render_queue = new reagent.impl.batching.RenderQueue([], false, []);
reagent.impl.batching.flush = function flush() {
  return reagent.impl.batching.render_queue.run_queue();
};
reagent.impl.batching.queue_render = function queue_render(c) {
  c["cljsIsDirty"] = true;
  return reagent.impl.batching.render_queue.queue_render(c);
};
reagent.impl.batching.mark_rendered = function mark_rendered(c) {
  return c["cljsIsDirty"] = false;
};
reagent.impl.batching.do_after_flush = function do_after_flush(f) {
  return reagent.impl.batching.render_queue.add_after_render(f);
};
reagent.impl.batching.do_later = function do_later(f) {
  reagent.impl.batching.do_after_flush.call(null, f);
  return reagent.impl.batching.render_queue.schedule();
};
reagent.impl.batching.is_reagent_component = function is_reagent_component(c) {
  var G__17713 = c;
  var G__17713__$1 = G__17713 == null ? null : G__17713["props"];
  var G__17713__$2 = G__17713__$1 == null ? null : G__17713__$1["argv"];
  return G__17713__$2;
};
reagent.impl.batching.run_reactively = function run_reactively(c, run) {
  if (cljs.core.truth_(reagent.impl.batching.is_reagent_component.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "is-reagent-component", "is-reagent-component", -1856228005, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  reagent.impl.batching.mark_rendered.call(null, c);
  var rat = c["cljsRatom"];
  if (rat == null) {
    var res = reagent.ratom.capture_derefed.call(null, run, c);
    var derefed = reagent.ratom.captured.call(null, c);
    if (!(derefed == null)) {
      c["cljsRatom"] = reagent.ratom.make_reaction.call(null, run, new cljs.core.Keyword(null, "auto-run", "auto-run", 1958400437), function(res, derefed, rat) {
        return function() {
          return reagent.impl.batching.queue_render.call(null, c);
        };
      }(res, derefed, rat), new cljs.core.Keyword(null, "derefed", "derefed", 590684583), derefed);
    } else {
    }
    return res;
  } else {
    return reagent.ratom.run.call(null, rat);
  }
};
reagent.impl.batching.dispose = function dispose(c) {
  var G__17715_17716 = c["cljsRatom"];
  var G__17715_17717__$1 = G__17715_17716 == null ? null : reagent.ratom.dispose_BANG_.call(null, G__17715_17716);
  return reagent.impl.batching.mark_rendered.call(null, c);
};
goog.provide("reagent.impl.component");
goog.require("cljs.core");
goog.require("reagent.debug");
goog.require("reagent.interop");
goog.require("reagent.ratom");
goog.require("reagent.ratom");
goog.require("reagent.impl.batching");
goog.require("reagent.impl.batching");
goog.require("reagent.impl.util");
goog.require("reagent.impl.util");
reagent.impl.component.state_atom = function state_atom(this$) {
  var sa = this$["cljsState"];
  if (!(sa == null)) {
    return sa;
  } else {
    return this$["cljsState"] = reagent.ratom.atom.call(null, null);
  }
};
reagent.impl.component.as_element = function as_element(x) {
  return reagent.impl.template.as_element(x);
};
reagent.impl.component.do_render = function do_render(c) {
  var _STAR_current_component_STAR_17676 = reagent.impl.component._STAR_current_component_STAR_;
  try {
    reagent.impl.component._STAR_current_component_STAR_ = c;
    var f = c["cljsRender"];
    var _ = cljs.core.ifn_QMARK_.call(null, f) ? null : function() {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }();
    var p = c["props"];
    var res = c["reagentRender"] == null ? f.call(null, c) : function() {
      var argv = p["argv"];
      var n = cljs.core.count.call(null, argv);
      var G__17677 = n;
      switch(G__17677) {
        case 1:
          return f.call(null);
          break;
        case 2:
          return f.call(null, cljs.core.nth.call(null, argv, 1));
          break;
        case 3:
          return f.call(null, cljs.core.nth.call(null, argv, 1), cljs.core.nth.call(null, argv, 2));
          break;
        case 4:
          return f.call(null, cljs.core.nth.call(null, argv, 1), cljs.core.nth.call(null, argv, 2), cljs.core.nth.call(null, argv, 3));
          break;
        case 5:
          return f.call(null, cljs.core.nth.call(null, argv, 1), cljs.core.nth.call(null, argv, 2), cljs.core.nth.call(null, argv, 3), cljs.core.nth.call(null, argv, 4));
          break;
        default:
          return cljs.core.apply.call(null, f, cljs.core.subvec.call(null, argv, 1));
      }
    }();
    if (cljs.core.vector_QMARK_.call(null, res)) {
      return reagent.impl.component.as_element.call(null, res);
    } else {
      if (cljs.core.ifn_QMARK_.call(null, res)) {
        c["cljsRender"] = res;
        return do_render.call(null, c);
      } else {
        return res;
      }
    }
  } finally {
    reagent.impl.component._STAR_current_component_STAR_ = _STAR_current_component_STAR_17676;
  }
};
reagent.impl.component.static_fns = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "render", "render", -1408033454), function() {
  var c = this;
  if (cljs.core.not.call(null, reagent.impl.component._STAR_non_reactive_STAR_)) {
    return reagent.impl.batching.run_reactively.call(null, c, function(c) {
      return function() {
        return reagent.impl.component.do_render.call(null, c);
      };
    }(c));
  } else {
    return reagent.impl.component.do_render.call(null, c);
  }
}], null);
reagent.impl.component.custom_wrapper = function custom_wrapper(key, f) {
  var G__17680 = key instanceof cljs.core.Keyword ? key.fqn : null;
  switch(G__17680) {
    case "componentWillUnmount":
      return function(G__17680) {
        return function() {
          var c = this;
          reagent.impl.batching.dispose.call(null, c);
          if (f == null) {
            return null;
          } else {
            return f.call(null, c);
          }
        };
      }(G__17680);
      break;
    case "componentWillMount":
      return function(G__17680) {
        return function() {
          var c = this;
          c["cljsMountOrder"] = reagent.impl.batching.next_mount_count.call(null);
          if (f == null) {
            return null;
          } else {
            return f.call(null, c);
          }
        };
      }(G__17680);
      break;
    case "componentDidUpdate":
      return function(G__17680) {
        return function(oldprops) {
          var c = this;
          return f.call(null, c, oldprops["argv"]);
        };
      }(G__17680);
      break;
    case "componentWillUpdate":
      return function(G__17680) {
        return function(nextprops) {
          var c = this;
          return f.call(null, c, nextprops["argv"]);
        };
      }(G__17680);
      break;
    case "shouldComponentUpdate":
      return function(G__17680) {
        return function(nextprops, nextstate) {
          var or__3761__auto__ = reagent.impl.util._STAR_always_update_STAR_;
          if (cljs.core.truth_(or__3761__auto__)) {
            return or__3761__auto__;
          } else {
            var c = this;
            var old_argv = c["props"]["argv"];
            var new_argv = nextprops["argv"];
            if (f == null) {
              return old_argv == null || new_argv == null || cljs.core.not_EQ_.call(null, old_argv, new_argv);
            } else {
              return f.call(null, c, old_argv, new_argv);
            }
          }
        };
      }(G__17680);
      break;
    case "componentWillReceiveProps":
      return function(G__17680) {
        return function(props) {
          var c = this;
          return f.call(null, c, props["argv"]);
        };
      }(G__17680);
      break;
    case "getInitialState":
      return function(G__17680) {
        return function() {
          var c = this;
          return cljs.core.reset_BANG_.call(null, reagent.impl.component.state_atom.call(null, c), f.call(null, c));
        };
      }(G__17680);
      break;
    case "getDefaultProps":
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("getDefaultProps not supported yet"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, false))].join(""));break;
    default:
      return null;
  }
};
reagent.impl.component.default_wrapper = function default_wrapper(f) {
  if (cljs.core.ifn_QMARK_.call(null, f)) {
    return function() {
      var G__17682__delegate = function(args) {
        var c = this;
        return cljs.core.apply.call(null, f, c, args);
      };
      var G__17682 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__17682__delegate.call(this, args);
      };
      G__17682.cljs$lang$maxFixedArity = 0;
      G__17682.cljs$lang$applyTo = function(arglist__17683) {
        var args = cljs.core.seq(arglist__17683);
        return G__17682__delegate(args);
      };
      G__17682.cljs$core$IFn$_invoke$arity$variadic = G__17682__delegate;
      return G__17682;
    }();
  } else {
    return f;
  }
};
reagent.impl.component.dont_wrap = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "cljsRender", "cljsRender", 247449928), null, new cljs.core.Keyword(null, "reagentRender", "reagentRender", -358306383), null, new cljs.core.Keyword(null, "render", "render", -1408033454), null, new cljs.core.Keyword(null, "cljsName", "cljsName", 999824949), null], null), null);
reagent.impl.component.dont_bind = function dont_bind(f) {
  if (cljs.core.fn_QMARK_.call(null, f)) {
    var G__17685 = f;
    G__17685["__reactDontBind"] = true;
    return G__17685;
  } else {
    return f;
  }
};
reagent.impl.component.get_wrapper = function get_wrapper(key, f, name) {
  if (cljs.core.truth_(reagent.impl.component.dont_wrap.call(null, key))) {
    return reagent.impl.component.dont_bind.call(null, f);
  } else {
    var wrap = reagent.impl.component.custom_wrapper.call(null, key, f);
    if (cljs.core.truth_(function() {
      var and__3749__auto__ = wrap;
      if (cljs.core.truth_(and__3749__auto__)) {
        return f;
      } else {
        return and__3749__auto__;
      }
    }())) {
      if (cljs.core.ifn_QMARK_.call(null, f)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Expected function in "), cljs.core.str(name), cljs.core.str(key), cljs.core.str(" but got "), cljs.core.str(f)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
      }
    } else {
    }
    var or__3761__auto__ = wrap;
    if (cljs.core.truth_(or__3761__auto__)) {
      return or__3761__auto__;
    } else {
      return reagent.impl.component.default_wrapper.call(null, f);
    }
  }
};
reagent.impl.component.obligatory = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "shouldComponentUpdate", "shouldComponentUpdate", 1795750960), null, new cljs.core.Keyword(null, "componentWillMount", "componentWillMount", -285327619), null, new cljs.core.Keyword(null, "componentWillUnmount", "componentWillUnmount", 1573788814), null], null);
reagent.impl.component.dash_to_camel = reagent.impl.util.memoize_1.call(null, reagent.impl.util.dash_to_camel);
reagent.impl.component.camelify_map_keys = function camelify_map_keys(fun_map) {
  return cljs.core.reduce_kv.call(null, function(m, k, v) {
    return cljs.core.assoc.call(null, m, cljs.core.keyword.call(null, reagent.impl.component.dash_to_camel.call(null, k)), v);
  }, cljs.core.PersistentArrayMap.EMPTY, fun_map);
};
reagent.impl.component.add_obligatory = function add_obligatory(fun_map) {
  return cljs.core.merge.call(null, reagent.impl.component.obligatory, fun_map);
};
reagent.impl.component.add_render = function add_render(fun_map, render_f, name) {
  var fm = cljs.core.assoc.call(null, fun_map, new cljs.core.Keyword(null, "cljsRender", "cljsRender", 247449928), render_f, new cljs.core.Keyword(null, "render", "render", -1408033454), (new cljs.core.Keyword(null, "render", "render", -1408033454)).cljs$core$IFn$_invoke$arity$1(reagent.impl.component.static_fns));
  return cljs.core.assoc.call(null, fm, new cljs.core.Keyword(null, "cljsName", "cljsName", 999824949), function(fm) {
    return function() {
      return name;
    };
  }(fm));
};
reagent.impl.component.fun_name = function fun_name(f) {
  var or__3761__auto__ = function() {
    var and__3749__auto__ = cljs.core.fn_QMARK_.call(null, f);
    if (and__3749__auto__) {
      var or__3761__auto__ = f["displayName"];
      if (cljs.core.truth_(or__3761__auto__)) {
        return or__3761__auto__;
      } else {
        return f["name"];
      }
    } else {
      return and__3749__auto__;
    }
  }();
  if (cljs.core.truth_(or__3761__auto__)) {
    return or__3761__auto__;
  } else {
    var or__3761__auto____$1 = function() {
      var and__3749__auto__ = function() {
        var G__17693 = f;
        if (G__17693) {
          var bit__4430__auto__ = G__17693.cljs$lang$protocol_mask$partition1$ & 4096;
          if (bit__4430__auto__ || G__17693.cljs$core$INamed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }();
      if (and__3749__auto__) {
        return cljs.core.name.call(null, f);
      } else {
        return and__3749__auto__;
      }
    }();
    if (cljs.core.truth_(or__3761__auto____$1)) {
      return or__3761__auto____$1;
    } else {
      var m = cljs.core.meta.call(null, f);
      if (cljs.core.map_QMARK_.call(null, m)) {
        return(new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(m);
      } else {
        return null;
      }
    }
  }
};
reagent.impl.component.wrap_funs = function wrap_funs(fmap) {
  var fun_map = function() {
    var temp__4128__auto__ = (new cljs.core.Keyword(null, "componentFunction", "componentFunction", 825866104)).cljs$core$IFn$_invoke$arity$1(fmap);
    if (temp__4128__auto__ == null) {
      return fmap;
    } else {
      var cf = temp__4128__auto__;
      return cljs.core.dissoc.call(null, cljs.core.assoc.call(null, fmap, new cljs.core.Keyword(null, "reagentRender", "reagentRender", -358306383), cf), new cljs.core.Keyword(null, "componentFunction", "componentFunction", 825866104));
    }
  }();
  var render_fun = function() {
    var or__3761__auto__ = (new cljs.core.Keyword(null, "reagentRender", "reagentRender", -358306383)).cljs$core$IFn$_invoke$arity$1(fun_map);
    if (cljs.core.truth_(or__3761__auto__)) {
      return or__3761__auto__;
    } else {
      return(new cljs.core.Keyword(null, "render", "render", -1408033454)).cljs$core$IFn$_invoke$arity$1(fun_map);
    }
  }();
  var _ = cljs.core.ifn_QMARK_.call(null, render_fun) ? null : function() {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Render must be a function, not "), cljs.core.str(cljs.core.pr_str.call(null, render_fun))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "render-fun", "render-fun", -1209513086, null))))].join(""));
  }();
  var name = [cljs.core.str(function() {
    var or__3761__auto__ = (new cljs.core.Keyword(null, "displayName", "displayName", -809144601)).cljs$core$IFn$_invoke$arity$1(fun_map);
    if (cljs.core.truth_(or__3761__auto__)) {
      return or__3761__auto__;
    } else {
      return reagent.impl.component.fun_name.call(null, render_fun);
    }
  }())].join("");
  var name_SINGLEQUOTE_ = cljs.core.empty_QMARK_.call(null, name) ? [cljs.core.str(cljs.core.gensym.call(null, "reagent"))].join("") : name;
  var fmap__$1 = reagent.impl.component.add_render.call(null, cljs.core.assoc.call(null, fun_map, new cljs.core.Keyword(null, "displayName", "displayName", -809144601), name_SINGLEQUOTE_), render_fun, name_SINGLEQUOTE_);
  return cljs.core.reduce_kv.call(null, function(fun_map, render_fun, _, name, name_SINGLEQUOTE_, fmap__$1) {
    return function(m, k, v) {
      return cljs.core.assoc.call(null, m, k, reagent.impl.component.get_wrapper.call(null, k, v, name_SINGLEQUOTE_));
    };
  }(fun_map, render_fun, _, name, name_SINGLEQUOTE_, fmap__$1), cljs.core.PersistentArrayMap.EMPTY, fmap__$1);
};
reagent.impl.component.map_to_js = function map_to_js(m) {
  return cljs.core.reduce_kv.call(null, function(o, k, v) {
    var G__17695 = o;
    G__17695[cljs.core.name.call(null, k)] = v;
    return G__17695;
  }, {}, m);
};
reagent.impl.component.cljsify = function cljsify(body) {
  return reagent.impl.component.map_to_js.call(null, reagent.impl.component.wrap_funs.call(null, reagent.impl.component.add_obligatory.call(null, reagent.impl.component.camelify_map_keys.call(null, body))));
};
reagent.impl.component.create_class = function create_class(body) {
  if (cljs.core.map_QMARK_.call(null, body)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "body", "body", -408674142, null))))].join(""));
  }
  var spec = reagent.impl.component.cljsify.call(null, body);
  var res = React["createClass"](spec);
  var f = function(spec, res) {
    return function() {
      var G__17696__delegate = function(args) {
        return reagent.impl.component.as_element.call(null, cljs.core.apply.call(null, cljs.core.vector, res, args));
      };
      var G__17696 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__17696__delegate.call(this, args);
      };
      G__17696.cljs$lang$maxFixedArity = 0;
      G__17696.cljs$lang$applyTo = function(arglist__17697) {
        var args = cljs.core.seq(arglist__17697);
        return G__17696__delegate(args);
      };
      G__17696.cljs$core$IFn$_invoke$arity$variadic = G__17696__delegate;
      return G__17696;
    }();
  }(spec, res);
  reagent.impl.util.cache_react_class.call(null, f, res);
  reagent.impl.util.cache_react_class.call(null, res, res);
  return f;
};
reagent.impl.component.comp_name = function comp_name() {
  var n = function() {
    var G__17699 = reagent.impl.component._STAR_current_component_STAR_;
    var G__17699__$1 = G__17699 == null ? null : G__17699["cljsName"]();
    return G__17699__$1;
  }();
  if (!cljs.core.empty_QMARK_.call(null, n)) {
    return[cljs.core.str(" (in "), cljs.core.str(n), cljs.core.str(")")].join("");
  } else {
    return "";
  }
};
reagent.impl.component.shallow_obj_to_map = function shallow_obj_to_map(o) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__4512__auto__ = function iter__17704(s__17705) {
      return new cljs.core.LazySeq(null, function() {
        var s__17705__$1 = s__17705;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__17705__$1);
          if (temp__4126__auto__) {
            var s__17705__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__17705__$2)) {
              var c__4510__auto__ = cljs.core.chunk_first.call(null, s__17705__$2);
              var size__4511__auto__ = cljs.core.count.call(null, c__4510__auto__);
              var b__17707 = cljs.core.chunk_buffer.call(null, size__4511__auto__);
              if (function() {
                var i__17706 = 0;
                while (true) {
                  if (i__17706 < size__4511__auto__) {
                    var k = cljs.core._nth.call(null, c__4510__auto__, i__17706);
                    cljs.core.chunk_append.call(null, b__17707, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), o[k]], null));
                    var G__17708 = i__17706 + 1;
                    i__17706 = G__17708;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17707), iter__17704.call(null, cljs.core.chunk_rest.call(null, s__17705__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17707), null);
              }
            } else {
              var k = cljs.core.first.call(null, s__17705__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), o[k]], null), iter__17704.call(null, cljs.core.rest.call(null, s__17705__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4512__auto__.call(null, cljs.core.js_keys.call(null, o));
  }());
};
reagent.impl.component.elem_counter = 0;
reagent.impl.component.reactify_component = function reactify_component(comp) {
  return React["createClass"]({"render":function() {
    var this$ = this;
    return reagent.impl.component.as_element.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [comp, cljs.core.assoc.call(null, reagent.impl.component.shallow_obj_to_map.call(null, this$["props"]), new cljs.core.Keyword(null, "-elem-count", "-elem-count", 663797079), reagent.impl.component.elem_counter = reagent.impl.component.elem_counter + 1)], null));
  }, "displayName":"react-wrapper"});
};
goog.provide("reagent.impl.template");
goog.require("cljs.core");
goog.require("reagent.impl.util");
goog.require("reagent.impl.util");
goog.require("reagent.impl.component");
goog.require("reagent.interop");
goog.require("reagent.ratom");
goog.require("reagent.impl.batching");
goog.require("reagent.impl.component");
goog.require("reagent.impl.util");
goog.require("reagent.ratom");
goog.require("clojure.string");
goog.require("reagent.impl.batching");
goog.require("reagent.debug");
goog.require("clojure.string");
reagent.impl.template.re_tag = /([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?/;
reagent.impl.template.NativeWrapper = function(comp) {
  this.comp = comp;
};
reagent.impl.template.NativeWrapper.cljs$lang$type = true;
reagent.impl.template.NativeWrapper.cljs$lang$ctorStr = "reagent.impl.template/NativeWrapper";
reagent.impl.template.NativeWrapper.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "reagent.impl.template/NativeWrapper");
};
reagent.impl.template.__GT_NativeWrapper = function __GT_NativeWrapper(comp) {
  return new reagent.impl.template.NativeWrapper(comp);
};
reagent.impl.template.named_QMARK_ = function named_QMARK_(x) {
  return x instanceof cljs.core.Keyword || x instanceof cljs.core.Symbol;
};
reagent.impl.template.hiccup_tag_QMARK_ = function hiccup_tag_QMARK_(x) {
  return reagent.impl.template.named_QMARK_.call(null, x) || typeof x === "string";
};
reagent.impl.template.valid_tag_QMARK_ = function valid_tag_QMARK_(x) {
  return reagent.impl.template.hiccup_tag_QMARK_.call(null, x) || cljs.core.ifn_QMARK_.call(null, x) || x instanceof reagent.impl.template.NativeWrapper;
};
reagent.impl.template.prop_name_cache = {"charset":"charSet", "for":"htmlFor", "class":"className"};
reagent.impl.template.obj_get = function obj_get(o, k) {
  if (cljs.core.truth_(o.hasOwnProperty(k))) {
    return o[k];
  } else {
    return null;
  }
};
reagent.impl.template.cached_prop_name = function cached_prop_name(k) {
  if (reagent.impl.template.named_QMARK_.call(null, k)) {
    var temp__4128__auto__ = reagent.impl.template.obj_get.call(null, reagent.impl.template.prop_name_cache, cljs.core.name.call(null, k));
    if (temp__4128__auto__ == null) {
      return reagent.impl.template.prop_name_cache[cljs.core.name.call(null, k)] = reagent.impl.util.dash_to_camel.call(null, k);
    } else {
      var k_SINGLEQUOTE_ = temp__4128__auto__;
      return k_SINGLEQUOTE_;
    }
  } else {
    return k;
  }
};
reagent.impl.template.convert_prop_value = function convert_prop_value(x) {
  if (typeof x === "string" || typeof x === "number" || cljs.core.fn_QMARK_.call(null, x)) {
    return x;
  } else {
    if (reagent.impl.template.named_QMARK_.call(null, x)) {
      return cljs.core.name.call(null, x);
    } else {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.reduce_kv.call(null, function(o, k, v) {
          var G__17733 = o;
          G__17733[reagent.impl.template.cached_prop_name.call(null, k)] = convert_prop_value.call(null, v);
          return G__17733;
        }, {}, x);
      } else {
        if (cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.clj__GT_js.call(null, x);
        } else {
          if (cljs.core.ifn_QMARK_.call(null, x)) {
            return function() {
              var G__17734__delegate = function(args) {
                return cljs.core.apply.call(null, x, args);
              };
              var G__17734 = function(var_args) {
                var args = null;
                if (arguments.length > 0) {
                  args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
                }
                return G__17734__delegate.call(this, args);
              };
              G__17734.cljs$lang$maxFixedArity = 0;
              G__17734.cljs$lang$applyTo = function(arglist__17735) {
                var args = cljs.core.seq(arglist__17735);
                return G__17734__delegate(args);
              };
              G__17734.cljs$core$IFn$_invoke$arity$variadic = G__17734__delegate;
              return G__17734;
            }();
          } else {
            return cljs.core.clj__GT_js.call(null, x);
          }
        }
      }
    }
  }
};
reagent.impl.template.set_id_class = function set_id_class(props, id, class$) {
  var p = props == null ? {} : props;
  if (cljs.core.some_QMARK_.call(null, id) && p["id"] == null) {
    p["id"] = id;
  } else {
  }
  if (cljs.core.some_QMARK_.call(null, class$)) {
    var old_17736 = p["className"];
    p["className"] = cljs.core.some_QMARK_.call(null, old_17736) ? [cljs.core.str(class$), cljs.core.str(" "), cljs.core.str(old_17736)].join("") : class$;
  } else {
  }
  return p;
};
reagent.impl.template.convert_props = function convert_props(props, id_class) {
  var id = id_class["id"];
  var class$ = id_class["className"];
  var no_id_class = id == null && class$ == null;
  if (no_id_class && cljs.core.empty_QMARK_.call(null, props)) {
    return null;
  } else {
    var objprops = reagent.impl.template.convert_prop_value.call(null, props);
    if (no_id_class) {
      return objprops;
    } else {
      return reagent.impl.template.set_id_class.call(null, objprops, id, class$);
    }
  }
};
reagent.impl.template.input_unmount = function input_unmount(this$) {
  return this$["cljsInputValue"] = null;
};
reagent.impl.template.input_set_value = function input_set_value(this$) {
  var temp__4130__auto__ = this$["cljsInputValue"];
  if (temp__4130__auto__ == null) {
    return null;
  } else {
    var value = temp__4130__auto__;
    this$["cljsInputDirty"] = false;
    var node = this$["getDOMNode"]();
    if (cljs.core.not_EQ_.call(null, value, node["value"])) {
      return node["value"] = value;
    } else {
      return null;
    }
  }
};
reagent.impl.template.input_handle_change = function input_handle_change(this$, on_change, e) {
  var res = on_change.call(null, e);
  if (cljs.core.truth_(this$["cljsInputDirty"])) {
  } else {
    this$["cljsInputDirty"] = true;
    reagent.impl.batching.do_later.call(null, function(res) {
      return function() {
        return reagent.impl.template.input_set_value.call(null, this$);
      };
    }(res));
  }
  return res;
};
reagent.impl.template.input_render_setup = function input_render_setup(this$, jsprops) {
  if (cljs.core.truth_(function() {
    var and__3749__auto__ = jsprops["hasOwnProperty"]("onChange");
    if (cljs.core.truth_(and__3749__auto__)) {
      return jsprops["hasOwnProperty"]("value");
    } else {
      return and__3749__auto__;
    }
  }())) {
    var v = jsprops["value"];
    var value = v == null ? "" : v;
    var on_change = jsprops["onChange"];
    this$["cljsInputValue"] = value;
    delete jsprops["value"];
    var G__17739 = jsprops;
    G__17739["defaultValue"] = value;
    G__17739["onChange"] = function(G__17739, v, value, on_change) {
      return function(p1__17737_SHARP_) {
        return reagent.impl.template.input_handle_change.call(null, this$, on_change, p1__17737_SHARP_);
      };
    }(G__17739, v, value, on_change);
    return G__17739;
  } else {
    return this$["cljsInputValue"] = null;
  }
};
reagent.impl.template.input_component_QMARK_ = function input_component_QMARK_(x) {
  return x === "input" || x === "textarea";
};
reagent.impl.template.reagent_input_class = null;
reagent.impl.template.input_spec = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "display-name", "display-name", 694513143), "ReagentInput", new cljs.core.Keyword(null, "component-did-update", "component-did-update", -1468549173), reagent.impl.template.input_set_value, new cljs.core.Keyword(null, "component-will-unmount", "component-will-unmount", -2058314698), reagent.impl.template.input_unmount, new cljs.core.Keyword(null, "reagent-render", "reagent-render", -985383853), 
function(argv, comp, jsprops, first_child) {
  var this$ = reagent.impl.component._STAR_current_component_STAR_;
  reagent.impl.template.input_render_setup.call(null, this$, jsprops);
  return reagent.impl.template.make_element.call(null, argv, comp, jsprops, first_child);
}], null);
reagent.impl.template.reagent_input = function reagent_input(argv, comp, jsprops, first_child) {
  if (reagent.impl.template.reagent_input_class == null) {
    reagent.impl.template.reagent_input_class = reagent.impl.component.create_class.call(null, reagent.impl.template.input_spec);
  } else {
  }
  return reagent.impl.template.reagent_input_class.call(null, argv, comp, jsprops, first_child);
};
reagent.impl.template.parse_tag = function parse_tag(hiccup_tag) {
  var vec__17741 = cljs.core.next.call(null, cljs.core.re_matches.call(null, reagent.impl.template.re_tag, cljs.core.name.call(null, hiccup_tag)));
  var tag = cljs.core.nth.call(null, vec__17741, 0, null);
  var id = cljs.core.nth.call(null, vec__17741, 1, null);
  var class$ = cljs.core.nth.call(null, vec__17741, 2, null);
  var class_SINGLEQUOTE_ = cljs.core.truth_(class$) ? clojure.string.replace.call(null, class$, /\./, " ") : null;
  if (cljs.core.truth_(tag)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Invalid tag: '"), cljs.core.str(hiccup_tag), cljs.core.str("'"), cljs.core.str(reagent.impl.component.comp_name.call(null))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "tag", "tag", 350170304, null)))].join(""));
  }
  return{"className":class_SINGLEQUOTE_, "id":id, "name":tag};
};
reagent.impl.template.fn_to_class = function fn_to_class(f) {
  if (cljs.core.ifn_QMARK_.call(null, f)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Expected a function, not "), cljs.core.str(cljs.core.pr_str.call(null, f))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
  }
  if (!!(cljs.core.fn_QMARK_.call(null, f) && cljs.core.some_QMARK_.call(null, f["type"])) && typeof console !== "undefined") {
    console.warn([cljs.core.str("Warning: "), cljs.core.str("Using native React classes directly in Hiccup forms "), cljs.core.str("is not supported. Use create-element or "), cljs.core.str("adapt-react-class instead: "), cljs.core.str(f["type"]), cljs.core.str(reagent.impl.component.comp_name.call(null))].join(""));
  } else {
  }
  var spec = cljs.core.meta.call(null, f);
  var withrender = cljs.core.assoc.call(null, spec, new cljs.core.Keyword(null, "reagent-render", "reagent-render", -985383853), f);
  var res = reagent.impl.component.create_class.call(null, withrender);
  var wrapf = reagent.impl.util.cached_react_class.call(null, res);
  reagent.impl.util.cache_react_class.call(null, f, wrapf);
  return wrapf;
};
reagent.impl.template.as_class = function as_class(tag) {
  var temp__4128__auto__ = reagent.impl.util.cached_react_class.call(null, tag);
  if (temp__4128__auto__ == null) {
    return reagent.impl.template.fn_to_class.call(null, tag);
  } else {
    var cached_class = temp__4128__auto__;
    return cached_class;
  }
};
reagent.impl.template.get_key = function get_key(x) {
  if (cljs.core.map_QMARK_.call(null, x)) {
    return cljs.core.get.call(null, x, new cljs.core.Keyword(null, "key", "key", -1516042587));
  } else {
    return null;
  }
};
reagent.impl.template.key_from_vec = function key_from_vec(v) {
  var temp__4128__auto__ = function() {
    var G__17743 = cljs.core.meta.call(null, v);
    var G__17743__$1 = G__17743 == null ? null : reagent.impl.template.get_key.call(null, G__17743);
    return G__17743__$1;
  }();
  if (temp__4128__auto__ == null) {
    return reagent.impl.template.get_key.call(null, cljs.core.nth.call(null, v, 1, null));
  } else {
    var k = temp__4128__auto__;
    return k;
  }
};
reagent.impl.template.reag_element = function reag_element(tag, v) {
  var c = reagent.impl.template.as_class.call(null, tag);
  var jsprops = {"argv":v};
  var G__17745_17746 = v;
  var G__17745_17747__$1 = G__17745_17746 == null ? null : reagent.impl.template.key_from_vec.call(null, G__17745_17746);
  var G__17745_17748__$2 = G__17745_17747__$1 == null ? null : jsprops["key"] = G__17745_17747__$1;
  return React["createElement"](c, jsprops);
};
reagent.impl.template.adapt_react_class = function adapt_react_class(c) {
  return new reagent.impl.template.NativeWrapper({"class":null, "id":null, "name":c});
};
reagent.impl.template.tag_name_cache = {};
reagent.impl.template.cached_parse = function cached_parse(x) {
  if (reagent.impl.template.hiccup_tag_QMARK_.call(null, x)) {
    var temp__4128__auto__ = reagent.impl.template.obj_get.call(null, reagent.impl.template.tag_name_cache, cljs.core.name.call(null, x));
    if (temp__4128__auto__ == null) {
      return reagent.impl.template.tag_name_cache[cljs.core.name.call(null, x)] = reagent.impl.template.parse_tag.call(null, x);
    } else {
      var s = temp__4128__auto__;
      return s;
    }
  } else {
    if (x instanceof reagent.impl.template.NativeWrapper) {
      return x.comp;
    } else {
      return null;
    }
  }
};
reagent.impl.template.native_element = function native_element(tag, argv) {
  var temp__4126__auto__ = reagent.impl.template.cached_parse.call(null, tag);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var parsed = temp__4126__auto__;
    var comp = parsed["name"];
    var props = cljs.core.nth.call(null, argv, 1, null);
    var hasprops = props == null || cljs.core.map_QMARK_.call(null, props);
    var jsprops = reagent.impl.template.convert_props.call(null, hasprops ? props : null, parsed);
    var first_child = hasprops ? 2 : 1;
    if (reagent.impl.template.input_component_QMARK_.call(null, comp)) {
      return reagent.impl.template.as_element.call(null, cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [reagent.impl.template.reagent_input, argv, comp, jsprops, first_child], null), cljs.core.meta.call(null, argv)));
    } else {
      var p = function() {
        var temp__4128__auto__ = function() {
          var G__17751 = cljs.core.meta.call(null, argv);
          var G__17751__$1 = G__17751 == null ? null : reagent.impl.template.get_key.call(null, G__17751);
          return G__17751__$1;
        }();
        if (temp__4128__auto__ == null) {
          return jsprops;
        } else {
          var key = temp__4128__auto__;
          var G__17752 = jsprops == null ? {} : jsprops;
          G__17752["key"] = key;
          return G__17752;
        }
      }();
      return reagent.impl.template.make_element.call(null, argv, comp, p, first_child);
    }
  } else {
    return null;
  }
};
reagent.impl.template.vec_to_elem = function vec_to_elem(v) {
  if (cljs.core.count.call(null, v) > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Hiccup form should not be empty: "), cljs.core.str(cljs.core.pr_str.call(null, v)), cljs.core.str(reagent.impl.component.comp_name.call(null))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "pos?", "pos?", -244377722, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "v", "v", 1661996586, 
    null)))))].join(""));
  }
  var tag = cljs.core.nth.call(null, v, 0);
  if (reagent.impl.template.valid_tag_QMARK_.call(null, tag)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Invalid Hiccup form: "), cljs.core.str(cljs.core.pr_str.call(null, v)), cljs.core.str(reagent.impl.component.comp_name.call(null))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "valid-tag?", "valid-tag?", 1243064160, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null))))].join(""));
  }
  var temp__4128__auto__ = reagent.impl.template.native_element.call(null, tag, v);
  if (temp__4128__auto__ == null) {
    return reagent.impl.template.reag_element.call(null, tag, v);
  } else {
    var ne = temp__4128__auto__;
    return ne;
  }
};
reagent.impl.template.as_element = function as_element(x) {
  if (typeof x === "string") {
    return x;
  } else {
    if (cljs.core.vector_QMARK_.call(null, x)) {
      return reagent.impl.template.vec_to_elem.call(null, x);
    } else {
      if (cljs.core.seq_QMARK_.call(null, x)) {
        return reagent.impl.template.expand_seq_check.call(null, x);
      } else {
        return x;
      }
    }
  }
};
reagent.impl.template.expand_seq = function expand_seq(s) {
  var a = cljs.core.into_array.call(null, s);
  var n__4643__auto___17753 = a.length;
  var i_17754 = 0;
  while (true) {
    if (i_17754 < n__4643__auto___17753) {
      a[i_17754] = reagent.impl.template.as_element.call(null, a[i_17754]);
      var G__17755 = i_17754 + 1;
      i_17754 = G__17755;
      continue;
    } else {
    }
    break;
  }
  return a;
};
reagent.impl.template.expand_seq_dev = function expand_seq_dev(s, o) {
  var a = cljs.core.into_array.call(null, s);
  var n__4643__auto___17756 = a.length;
  var i_17757 = 0;
  while (true) {
    if (i_17757 < n__4643__auto___17756) {
      var val_17758 = a[i_17757];
      if (cljs.core.vector_QMARK_.call(null, val_17758) && reagent.impl.template.key_from_vec.call(null, val_17758) == null) {
        o["no-key"] = true;
      } else {
      }
      a[i_17757] = reagent.impl.template.as_element.call(null, val_17758);
      var G__17759 = i_17757 + 1;
      i_17757 = G__17759;
      continue;
    } else {
    }
    break;
  }
  return a;
};
reagent.impl.template.expand_seq_check = function expand_seq_check(x) {
  var ctx = {};
  var res = reagent.ratom._STAR_ratom_context_STAR_ == null ? reagent.impl.template.expand_seq_dev.call(null, x, ctx) : reagent.ratom.capture_derefed.call(null, function(ctx) {
    return function() {
      return reagent.impl.template.expand_seq_dev.call(null, x, ctx);
    };
  }(ctx), ctx);
  if (cljs.core.truth_(reagent.ratom.captured.call(null, ctx))) {
    if (typeof console !== "undefined") {
      console.warn([cljs.core.str("Warning: "), cljs.core.str("Reactive deref not supported in lazy seq, "), cljs.core.str("it should be wrapped in doall"), cljs.core.str(reagent.impl.component.comp_name.call(null)), cljs.core.str(". Value:\n"), cljs.core.str(cljs.core.pr_str.call(null, x))].join(""));
    } else {
    }
  } else {
  }
  if (cljs.core.truth_(ctx["no-key"])) {
    if (typeof console !== "undefined") {
      console.warn([cljs.core.str("Warning: "), cljs.core.str("Every element in a seq should have a unique "), cljs.core.str(":key"), cljs.core.str(reagent.impl.component.comp_name.call(null)), cljs.core.str(". Value: "), cljs.core.str(cljs.core.pr_str.call(null, x))].join(""));
    } else {
    }
  } else {
  }
  return res;
};
reagent.impl.template.make_element = function make_element(argv, comp, jsprops, first_child) {
  var G__17761 = cljs.core.count.call(null, argv) - first_child;
  switch(G__17761) {
    case 0:
      return React["createElement"](comp, jsprops);
      break;
    case 1:
      return React["createElement"](comp, jsprops, reagent.impl.template.as_element.call(null, cljs.core.nth.call(null, argv, first_child)));
      break;
    default:
      return React["createElement"].apply(null, cljs.core.reduce_kv.call(null, function(G__17761) {
        return function(a, k, v) {
          if (k >= first_child) {
            a.push(reagent.impl.template.as_element.call(null, v));
          } else {
          }
          return a;
        };
      }(G__17761), [comp, jsprops], argv));
  }
};
goog.provide("reagent.core");
goog.require("cljs.core");
goog.require("reagent.impl.util");
goog.require("reagent.impl.component");
goog.require("reagent.interop");
goog.require("reagent.ratom");
goog.require("cljsjs.react");
goog.require("reagent.impl.template");
goog.require("reagent.impl.batching");
goog.require("reagent.impl.component");
goog.require("reagent.impl.util");
goog.require("reagent.impl.template");
goog.require("reagent.ratom");
goog.require("reagent.debug");
goog.require("reagent.impl.batching");
goog.require("reagent.debug");
reagent.core.is_client = reagent.impl.util.is_client;
reagent.core.create_element = function() {
  var create_element = null;
  var create_element__1 = function(type) {
    return create_element.call(null, type, null);
  };
  var create_element__2 = function(type, props) {
    if (!cljs.core.map_QMARK_.call(null, props)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "props", "props", 2093813254, null)))))].join(""));
    }
    return React.createElement(type, props);
  };
  var create_element__3 = function(type, props, child) {
    if (!cljs.core.map_QMARK_.call(null, props)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "props", "props", 2093813254, null)))))].join(""));
    }
    return React.createElement(type, props, child);
  };
  var create_element__4 = function() {
    var G__17664__delegate = function(type, props, child, children) {
      if (!cljs.core.map_QMARK_.call(null, props)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "props", "props", 2093813254, null)))))].join(""));
      }
      return cljs.core.apply.call(null, React.createElement, type, props, child, children);
    };
    var G__17664 = function(type, props, child, var_args) {
      var children = null;
      if (arguments.length > 3) {
        children = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__17664__delegate.call(this, type, props, child, children);
    };
    G__17664.cljs$lang$maxFixedArity = 3;
    G__17664.cljs$lang$applyTo = function(arglist__17665) {
      var type = cljs.core.first(arglist__17665);
      arglist__17665 = cljs.core.next(arglist__17665);
      var props = cljs.core.first(arglist__17665);
      arglist__17665 = cljs.core.next(arglist__17665);
      var child = cljs.core.first(arglist__17665);
      var children = cljs.core.rest(arglist__17665);
      return G__17664__delegate(type, props, child, children);
    };
    G__17664.cljs$core$IFn$_invoke$arity$variadic = G__17664__delegate;
    return G__17664;
  }();
  create_element = function(type, props, child, var_args) {
    var children = var_args;
    switch(arguments.length) {
      case 1:
        return create_element__1.call(this, type);
      case 2:
        return create_element__2.call(this, type, props);
      case 3:
        return create_element__3.call(this, type, props, child);
      default:
        return create_element__4.cljs$core$IFn$_invoke$arity$variadic(type, props, child, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_element.cljs$lang$maxFixedArity = 3;
  create_element.cljs$lang$applyTo = create_element__4.cljs$lang$applyTo;
  create_element.cljs$core$IFn$_invoke$arity$1 = create_element__1;
  create_element.cljs$core$IFn$_invoke$arity$2 = create_element__2;
  create_element.cljs$core$IFn$_invoke$arity$3 = create_element__3;
  create_element.cljs$core$IFn$_invoke$arity$variadic = create_element__4.cljs$core$IFn$_invoke$arity$variadic;
  return create_element;
}();
reagent.core.as_element = function as_element(form) {
  return reagent.impl.template.as_element.call(null, form);
};
reagent.core.adapt_react_class = function adapt_react_class(c) {
  return reagent.impl.template.adapt_react_class.call(null, c);
};
reagent.core.reactify_component = function reactify_component(c) {
  return reagent.impl.component.reactify_component.call(null, c);
};
reagent.core.render = function() {
  var render = null;
  var render__2 = function(comp, container) {
    return render.call(null, comp, container, null);
  };
  var render__3 = function(comp, container, callback) {
    var f = function() {
      return reagent.core.as_element.call(null, cljs.core.fn_QMARK_.call(null, comp) ? comp.call(null) : comp);
    };
    return reagent.impl.util.render_component.call(null, f, container, callback);
  };
  render = function(comp, container, callback) {
    switch(arguments.length) {
      case 2:
        return render__2.call(this, comp, container);
      case 3:
        return render__3.call(this, comp, container, callback);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  render.cljs$core$IFn$_invoke$arity$2 = render__2;
  render.cljs$core$IFn$_invoke$arity$3 = render__3;
  return render;
}();
reagent.core.unmount_component_at_node = function unmount_component_at_node(container) {
  return reagent.impl.util.unmount_component_at_node.call(null, container);
};
reagent.core.render_to_string = function render_to_string(component) {
  var _STAR_non_reactive_STAR_17667 = reagent.impl.component._STAR_non_reactive_STAR_;
  try {
    reagent.impl.component._STAR_non_reactive_STAR_ = true;
    return React["renderToString"](reagent.core.as_element.call(null, component));
  } finally {
    reagent.impl.component._STAR_non_reactive_STAR_ = _STAR_non_reactive_STAR_17667;
  }
};
reagent.core.as_component = reagent.core.as_element;
reagent.core.render_component = reagent.core.render;
reagent.core.render_component_to_string = reagent.core.render_to_string;
reagent.core.render_to_static_markup = function render_to_static_markup(component) {
  var _STAR_non_reactive_STAR_17669 = reagent.impl.component._STAR_non_reactive_STAR_;
  try {
    reagent.impl.component._STAR_non_reactive_STAR_ = true;
    return React["renderToStaticMarkup"](reagent.core.as_element.call(null, component));
  } finally {
    reagent.impl.component._STAR_non_reactive_STAR_ = _STAR_non_reactive_STAR_17669;
  }
};
reagent.core.force_update_all = function force_update_all() {
  return reagent.impl.util.force_update_all.call(null);
};
goog.exportSymbol("reagent.core.force_update_all", reagent.core.force_update_all);
reagent.core.create_class = function create_class(spec) {
  return reagent.impl.component.create_class.call(null, spec);
};
reagent.core.current_component = function current_component() {
  return reagent.impl.component._STAR_current_component_STAR_;
};
reagent.core.state_atom = function state_atom(this$) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  return reagent.impl.component.state_atom.call(null, this$);
};
reagent.core.state = function state(this$) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  return cljs.core.deref.call(null, reagent.core.state_atom.call(null, this$));
};
reagent.core.replace_state = function replace_state(this$, new_state) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  if (new_state == null || cljs.core.map_QMARK_.call(null, new_state)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "new-state", "new-state", 1150182315, null)), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "new-state", "new-state", 1150182315, null)))))].join(""));
  }
  return cljs.core.reset_BANG_.call(null, reagent.core.state_atom.call(null, this$), new_state);
};
reagent.core.set_state = function set_state(this$, new_state) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  if (new_state == null || cljs.core.map_QMARK_.call(null, new_state)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "new-state", "new-state", 1150182315, null)), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "new-state", "new-state", 1150182315, null)))))].join(""));
  }
  return cljs.core.swap_BANG_.call(null, reagent.core.state_atom.call(null, this$), cljs.core.merge, new_state);
};
reagent.core.props = function props(this$) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  return reagent.impl.util.get_props.call(null, this$);
};
reagent.core.children = function children(this$) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  return reagent.impl.util.get_children.call(null, this$);
};
reagent.core.argv = function argv(this$) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  return reagent.impl.util.get_argv.call(null, this$);
};
reagent.core.dom_node = function dom_node(this$) {
  return this$["getDOMNode"]();
};
reagent.core.merge_props = function merge_props(defaults, props) {
  return reagent.impl.util.merge_props.call(null, defaults, props);
};
reagent.core.flush = function flush() {
  return reagent.impl.batching.flush.call(null);
};
reagent.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return reagent.ratom.atom.call(null, x);
  };
  var atom__2 = function() {
    var G__17670__delegate = function(x, rest) {
      return cljs.core.apply.call(null, reagent.ratom.atom, x, rest);
    };
    var G__17670 = function(x, var_args) {
      var rest = null;
      if (arguments.length > 1) {
        rest = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__17670__delegate.call(this, x, rest);
    };
    G__17670.cljs$lang$maxFixedArity = 1;
    G__17670.cljs$lang$applyTo = function(arglist__17671) {
      var x = cljs.core.first(arglist__17671);
      var rest = cljs.core.rest(arglist__17671);
      return G__17670__delegate(x, rest);
    };
    G__17670.cljs$core$IFn$_invoke$arity$variadic = G__17670__delegate;
    return G__17670;
  }();
  atom = function(x, var_args) {
    var rest = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
reagent.core.wrap = function() {
  var wrap__delegate = function(value, reset_fn, args) {
    if (cljs.core.ifn_QMARK_.call(null, reset_fn)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "reset-fn", "reset-fn", 949643977, null))))].join(""));
    }
    return reagent.ratom.make_wrapper.call(null, value, reset_fn, args);
  };
  var wrap = function(value, reset_fn, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return wrap__delegate.call(this, value, reset_fn, args);
  };
  wrap.cljs$lang$maxFixedArity = 2;
  wrap.cljs$lang$applyTo = function(arglist__17672) {
    var value = cljs.core.first(arglist__17672);
    arglist__17672 = cljs.core.next(arglist__17672);
    var reset_fn = cljs.core.first(arglist__17672);
    var args = cljs.core.rest(arglist__17672);
    return wrap__delegate(value, reset_fn, args);
  };
  wrap.cljs$core$IFn$_invoke$arity$variadic = wrap__delegate;
  return wrap;
}();
reagent.core.cursor = function cursor(src, path) {
  return reagent.ratom.cursor.call(null, src, path);
};
reagent.core.next_tick = function next_tick(f) {
  return reagent.impl.batching.next_tick.call(null, f);
};
reagent.core.partial = function() {
  var partial__delegate = function(f, args) {
    return new reagent.impl.util.partial_ifn(f, args, null);
  };
  var partial = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return partial__delegate.call(this, f, args);
  };
  partial.cljs$lang$maxFixedArity = 1;
  partial.cljs$lang$applyTo = function(arglist__17673) {
    var f = cljs.core.first(arglist__17673);
    var args = cljs.core.rest(arglist__17673);
    return partial__delegate(f, args);
  };
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__delegate;
  return partial;
}();
goog.provide("logging_dashboard.components.header");
goog.require("cljs.core");
goog.require("reagent.core");
goog.require("reagent.core");
logging_dashboard.components.header.render_header = function render_header() {
  return reagent.core.render_component.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [logging_dashboard.components.header.header], null), document.body);
};
logging_dashboard.components.header.header = function header() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.header", "div.header", 1964513620), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), "Header"], null)], null);
};
goog.provide("clojure.walk");
goog.require("cljs.core");
clojure.walk.walk = function walk(inner, outer, form) {
  if (cljs.core.seq_QMARK_.call(null, form)) {
    return outer.call(null, cljs.core.doall.call(null, cljs.core.map.call(null, inner, form)));
  } else {
    if (cljs.core.coll_QMARK_.call(null, form)) {
      return outer.call(null, cljs.core.into.call(null, cljs.core.empty.call(null, form), cljs.core.map.call(null, inner, form)));
    } else {
      return outer.call(null, form);
    }
  }
};
clojure.walk.postwalk = function postwalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, postwalk, f), f, form);
};
clojure.walk.prewalk = function prewalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, prewalk, f), cljs.core.identity, f.call(null, form));
};
clojure.walk.keywordize_keys = function keywordize_keys(m) {
  var f = function(p__23434) {
    var vec__23435 = p__23434;
    var k = cljs.core.nth.call(null, vec__23435, 0, null);
    var v = cljs.core.nth.call(null, vec__23435, 1, null);
    if (typeof k === "string") {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.stringify_keys = function stringify_keys(m) {
  var f = function(p__23438) {
    var vec__23439 = p__23438;
    var k = cljs.core.nth.call(null, vec__23439, 0, null);
    var v = cljs.core.nth.call(null, vec__23439, 1, null);
    if (k instanceof cljs.core.Keyword) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.prewalk_replace = function prewalk_replace(smap, form) {
  return clojure.walk.prewalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
clojure.walk.postwalk_replace = function postwalk_replace(smap, form) {
  return clojure.walk.postwalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
goog.provide("secretary.core");
goog.require("cljs.core");
goog.require("clojure.walk");
goog.require("clojure.walk");
goog.require("clojure.string");
goog.require("clojure.string");
secretary.core.IRouteMatches = function() {
  var obj23353 = {};
  return obj23353;
}();
secretary.core.route_matches = function route_matches(this$, route) {
  if (function() {
    var and__3749__auto__ = this$;
    if (and__3749__auto__) {
      return this$.secretary$core$IRouteMatches$route_matches$arity$2;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return this$.secretary$core$IRouteMatches$route_matches$arity$2(this$, route);
  } else {
    var x__4400__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3761__auto__ = secretary.core.route_matches[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = secretary.core.route_matches["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRouteMatches.route-matches", this$);
        }
      }
    }().call(null, this$, route);
  }
};
secretary.core.IRouteValue = function() {
  var obj23355 = {};
  return obj23355;
}();
secretary.core.route_value = function route_value(this$) {
  if (function() {
    var and__3749__auto__ = this$;
    if (and__3749__auto__) {
      return this$.secretary$core$IRouteValue$route_value$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return this$.secretary$core$IRouteValue$route_value$arity$1(this$);
  } else {
    var x__4400__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3761__auto__ = secretary.core.route_value[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = secretary.core.route_value["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRouteValue.route-value", this$);
        }
      }
    }().call(null, this$);
  }
};
secretary.core.IRenderRoute = function() {
  var obj23357 = {};
  return obj23357;
}();
secretary.core.render_route = function() {
  var render_route = null;
  var render_route__1 = function(this$) {
    if (function() {
      var and__3749__auto__ = this$;
      if (and__3749__auto__) {
        return this$.secretary$core$IRenderRoute$render_route$arity$1;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return this$.secretary$core$IRenderRoute$render_route$arity$1(this$);
    } else {
      var x__4400__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3761__auto__ = secretary.core.render_route[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = secretary.core.render_route["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IRenderRoute.render-route", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var render_route__2 = function(this$, params) {
    if (function() {
      var and__3749__auto__ = this$;
      if (and__3749__auto__) {
        return this$.secretary$core$IRenderRoute$render_route$arity$2;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return this$.secretary$core$IRenderRoute$render_route$arity$2(this$, params);
    } else {
      var x__4400__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3761__auto__ = secretary.core.render_route[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = secretary.core.render_route["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IRenderRoute.render-route", this$);
          }
        }
      }().call(null, this$, params);
    }
  };
  render_route = function(this$, params) {
    switch(arguments.length) {
      case 1:
        return render_route__1.call(this, this$);
      case 2:
        return render_route__2.call(this, this$, params);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  render_route.cljs$core$IFn$_invoke$arity$1 = render_route__1;
  render_route.cljs$core$IFn$_invoke$arity$2 = render_route__2;
  return render_route;
}();
secretary.core._STAR_config_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), ""], null));
secretary.core.get_config = function get_config(path) {
  var path__$1 = cljs.core.sequential_QMARK_.call(null, path) ? path : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [path], null);
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, secretary.core._STAR_config_STAR_), path__$1);
};
secretary.core.set_config_BANG_ = function set_config_BANG_(path, val) {
  var path__$1 = cljs.core.sequential_QMARK_.call(null, path) ? path : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [path], null);
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_config_STAR_, cljs.core.assoc_in, path__$1, val);
};
secretary.core.encode = encodeURIComponent;
secretary.core.encode_pair = function() {
  var method_table__4653__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4654__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4655__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4656__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4657__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn(cljs.core.symbol.call(null, "secretary.core", "encode-pair"), function(method_table__4653__auto__, prefer_table__4654__auto__, method_cache__4655__auto__, cached_hierarchy__4656__auto__, hierarchy__4657__auto__) {
    return function(p__23358) {
      var vec__23359 = p__23358;
      var k = cljs.core.nth.call(null, vec__23359, 0, null);
      var v = cljs.core.nth.call(null, vec__23359, 1, null);
      if (cljs.core.sequential_QMARK_.call(null, v) || cljs.core.set_QMARK_.call(null, v)) {
        return new cljs.core.Keyword("secretary.core", "sequential", "secretary.core/sequential", -347187207);
      } else {
        if (function() {
          var or__3761__auto__ = cljs.core.map_QMARK_.call(null, v);
          if (or__3761__auto__) {
            return or__3761__auto__;
          } else {
            var G__23361 = v;
            if (G__23361) {
              var bit__4437__auto__ = G__23361.cljs$lang$protocol_mask$partition0$ & 67108864;
              if (bit__4437__auto__ || G__23361.cljs$core$IRecord$) {
                return true;
              } else {
                if (!G__23361.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IRecord, G__23361);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IRecord, G__23361);
            }
          }
        }()) {
          return new cljs.core.Keyword("secretary.core", "map", "secretary.core/map", -31086646);
        } else {
          return null;
        }
      }
    };
  }(method_table__4653__auto__, prefer_table__4654__auto__, method_cache__4655__auto__, cached_hierarchy__4656__auto__, hierarchy__4657__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4657__auto__, method_table__4653__auto__, prefer_table__4654__auto__, method_cache__4655__auto__, cached_hierarchy__4656__auto__);
}();
secretary.core.key_index = function() {
  var key_index = null;
  var key_index__1 = function(k) {
    return[cljs.core.str(cljs.core.name.call(null, k)), cljs.core.str("[]")].join("");
  };
  var key_index__2 = function(k, index) {
    return[cljs.core.str(cljs.core.name.call(null, k)), cljs.core.str("["), cljs.core.str(index), cljs.core.str("]")].join("");
  };
  key_index = function(k, index) {
    switch(arguments.length) {
      case 1:
        return key_index__1.call(this, k);
      case 2:
        return key_index__2.call(this, k, index);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  key_index.cljs$core$IFn$_invoke$arity$1 = key_index__1;
  key_index.cljs$core$IFn$_invoke$arity$2 = key_index__2;
  return key_index;
}();
cljs.core._add_method.call(null, secretary.core.encode_pair, new cljs.core.Keyword("secretary.core", "sequential", "secretary.core/sequential", -347187207), function(p__23362) {
  var vec__23363 = p__23362;
  var k = cljs.core.nth.call(null, vec__23363, 0, null);
  var v = cljs.core.nth.call(null, vec__23363, 1, null);
  var encoded = cljs.core.map_indexed.call(null, function(vec__23363, k, v) {
    return function(i, x) {
      var pair = cljs.core.coll_QMARK_.call(null, x) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [secretary.core.key_index.call(null, k, i), x], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [secretary.core.key_index.call(null, k), x], null);
      return secretary.core.encode_pair.call(null, pair);
    };
  }(vec__23363, k, v), v);
  return clojure.string.join.call(null, "\x26", encoded);
});
cljs.core._add_method.call(null, secretary.core.encode_pair, new cljs.core.Keyword("secretary.core", "map", "secretary.core/map", -31086646), function(p__23364) {
  var vec__23365 = p__23364;
  var k = cljs.core.nth.call(null, vec__23365, 0, null);
  var v = cljs.core.nth.call(null, vec__23365, 1, null);
  var encoded = cljs.core.map.call(null, function(vec__23365, k, v) {
    return function(p__23366) {
      var vec__23367 = p__23366;
      var ik = cljs.core.nth.call(null, vec__23367, 0, null);
      var iv = cljs.core.nth.call(null, vec__23367, 1, null);
      return secretary.core.encode_pair.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [secretary.core.key_index.call(null, k, cljs.core.name.call(null, ik)), iv], null));
    };
  }(vec__23365, k, v), v);
  return clojure.string.join.call(null, "\x26", encoded);
});
cljs.core._add_method.call(null, secretary.core.encode_pair, new cljs.core.Keyword(null, "default", "default", -1987822328), function(p__23368) {
  var vec__23369 = p__23368;
  var k = cljs.core.nth.call(null, vec__23369, 0, null);
  var v = cljs.core.nth.call(null, vec__23369, 1, null);
  return[cljs.core.str(cljs.core.name.call(null, k)), cljs.core.str("\x3d"), cljs.core.str(secretary.core.encode.call(null, [cljs.core.str(v)].join("")))].join("");
});
secretary.core.encode_query_params = function encode_query_params(query_params) {
  return clojure.string.join.call(null, "\x26", cljs.core.map.call(null, secretary.core.encode_pair, query_params));
};
secretary.core.encode_uri = function encode_uri(uri) {
  return clojure.string.join.call(null, "/", cljs.core.map.call(null, secretary.core.encode, clojure.string.split.call(null, uri, /\//)));
};
secretary.core.decode = decodeURIComponent;
secretary.core.parse_path = function parse_path(path) {
  var index_re = /\[([^\]]*)\]*/;
  var parts = cljs.core.re_seq.call(null, index_re, path);
  return cljs.core.map.call(null, function(index_re, parts) {
    return function(p__23372) {
      var vec__23373 = p__23372;
      var _ = cljs.core.nth.call(null, vec__23373, 0, null);
      var part = cljs.core.nth.call(null, vec__23373, 1, null);
      if (cljs.core.empty_QMARK_.call(null, part)) {
        return 0;
      } else {
        if (cljs.core.truth_(cljs.core.re_matches.call(null, /\d+/, part))) {
          return parseInt(part);
        } else {
          return part;
        }
      }
    };
  }(index_re, parts), parts);
};
secretary.core.key_parse = function key_parse(k) {
  var re = /([^\[\]]+)((?:\[[^\]]*\])*)?/;
  var vec__23375 = cljs.core.re_matches.call(null, re, k);
  var _ = cljs.core.nth.call(null, vec__23375, 0, null);
  var key = cljs.core.nth.call(null, vec__23375, 1, null);
  var path = cljs.core.nth.call(null, vec__23375, 2, null);
  var parsed_path = cljs.core.truth_(path) ? secretary.core.parse_path.call(null, path) : null;
  return cljs.core.cons.call(null, key, parsed_path);
};
secretary.core.assoc_in_query_params = function assoc_in_query_params(m, path, v) {
  var heads = function(xs) {
    return cljs.core.map_indexed.call(null, function(i, _) {
      return cljs.core.take.call(null, i + 1, xs);
    }, xs);
  };
  var hs = heads.call(null, path);
  var m__$1 = cljs.core.reduce.call(null, function(heads, hs) {
    return function(m__$1, h) {
      if (typeof cljs.core.last.call(null, h) === "number" && !cljs.core.vector_QMARK_.call(null, cljs.core.get_in.call(null, m__$1, cljs.core.butlast.call(null, h)))) {
        return cljs.core.assoc_in.call(null, m__$1, cljs.core.butlast.call(null, h), cljs.core.PersistentVector.EMPTY);
      } else {
        return m__$1;
      }
    };
  }(heads, hs), m, hs);
  if (cljs.core.last.call(null, path) === 0) {
    return cljs.core.update_in.call(null, m__$1, cljs.core.butlast.call(null, path), cljs.core.conj, v);
  } else {
    return cljs.core.assoc_in.call(null, m__$1, path, v);
  }
};
secretary.core.decode_query_params = function decode_query_params(query_string) {
  var parts = clojure.string.split.call(null, query_string, /&/);
  var params = cljs.core.reduce.call(null, function(parts) {
    return function(m, part) {
      var vec__23377 = clojure.string.split.call(null, part, /=/, 2);
      var k = cljs.core.nth.call(null, vec__23377, 0, null);
      var v = cljs.core.nth.call(null, vec__23377, 1, null);
      return secretary.core.assoc_in_query_params.call(null, m, secretary.core.key_parse.call(null, k), secretary.core.decode.call(null, v));
    };
  }(parts), cljs.core.PersistentArrayMap.EMPTY, parts);
  var params__$1 = clojure.walk.keywordize_keys.call(null, params);
  return params__$1;
};
secretary.core.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var ms = cljs.core.re_matches.call(null, re, s);
  if (cljs.core.truth_(ms)) {
    if (cljs.core.sequential_QMARK_.call(null, ms)) {
      return ms;
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ms, ms], null);
    }
  } else {
    return null;
  }
};
secretary.core.re_escape_chars = cljs.core.set.call(null, "\\.*+|?()[]{}$^");
secretary.core.re_escape = function re_escape(s) {
  return cljs.core.reduce.call(null, function(s__$1, c) {
    if (cljs.core.truth_(secretary.core.re_escape_chars.call(null, c))) {
      return[cljs.core.str(s__$1), cljs.core.str("\\"), cljs.core.str(c)].join("");
    } else {
      return[cljs.core.str(s__$1), cljs.core.str(c)].join("");
    }
  }, "", s);
};
secretary.core.lex_STAR_ = function lex_STAR_(s, clauses) {
  return cljs.core.some.call(null, function(p__23381) {
    var vec__23382 = p__23381;
    var re = cljs.core.nth.call(null, vec__23382, 0, null);
    var action = cljs.core.nth.call(null, vec__23382, 1, null);
    var temp__4126__auto__ = cljs.core.re_find.call(null, re, s);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__23383 = temp__4126__auto__;
      var m = cljs.core.nth.call(null, vec__23383, 0, null);
      var c = cljs.core.nth.call(null, vec__23383, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, cljs.core.count.call(null, m)), action.call(null, c)], null);
    } else {
      return null;
    }
  }, clauses);
};
secretary.core.lex_route = function lex_route(s, clauses) {
  var s__$1 = s;
  var pattern = "";
  var params = cljs.core.PersistentVector.EMPTY;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      var vec__23386 = secretary.core.lex_STAR_.call(null, s__$1, clauses);
      var s__$2 = cljs.core.nth.call(null, vec__23386, 0, null);
      var vec__23387 = cljs.core.nth.call(null, vec__23386, 1, null);
      var r = cljs.core.nth.call(null, vec__23387, 0, null);
      var p = cljs.core.nth.call(null, vec__23387, 1, null);
      var G__23388 = s__$2;
      var G__23389 = [cljs.core.str(pattern), cljs.core.str(r)].join("");
      var G__23390 = cljs.core.conj.call(null, params, p);
      s__$1 = G__23388;
      pattern = G__23389;
      params = G__23390;
      continue;
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.re_pattern.call(null, [cljs.core.str("^"), cljs.core.str(pattern), cljs.core.str("$")].join("")), cljs.core.remove.call(null, cljs.core.nil_QMARK_, params)], null);
    }
    break;
  }
};
secretary.core.compile_route = function compile_route(orig_route) {
  var clauses = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^\*([^\s.:*\/]*)/, function(v) {
    var r = "(.*?)";
    var p = cljs.core.seq.call(null, v) ? cljs.core.keyword.call(null, v) : new cljs.core.Keyword(null, "*", "*", -1294732318);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [r, p], null);
  }], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^\:([^\s.:*\/]+)/, function(v) {
    var r = "([^,;?/]+)";
    var p = cljs.core.keyword.call(null, v);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [r, p], null);
  }], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^([^:*]+)/, function(v) {
    var r = secretary.core.re_escape.call(null, v);
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [r], null);
  }], null)], null);
  var vec__23396 = secretary.core.lex_route.call(null, orig_route, clauses);
  var re = cljs.core.nth.call(null, vec__23396, 0, null);
  var params = cljs.core.nth.call(null, vec__23396, 1, null);
  if (typeof secretary.core.t23397 !== "undefined") {
  } else {
    secretary.core.t23397 = function(params, re, vec__23396, clauses, orig_route, compile_route, meta23398) {
      this.params = params;
      this.re = re;
      this.vec__23396 = vec__23396;
      this.clauses = clauses;
      this.orig_route = orig_route;
      this.compile_route = compile_route;
      this.meta23398 = meta23398;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    secretary.core.t23397.prototype.secretary$core$IRouteMatches$ = true;
    secretary.core.t23397.prototype.secretary$core$IRouteMatches$route_matches$arity$2 = function(clauses, vec__23396, re, params) {
      return function(_, route) {
        var self__ = this;
        var ___$1 = this;
        var temp__4126__auto__ = secretary.core.re_matches_STAR_.call(null, self__.re, route);
        if (cljs.core.truth_(temp__4126__auto__)) {
          var vec__23400 = temp__4126__auto__;
          var ___$2 = cljs.core.nth.call(null, vec__23400, 0, null);
          var ms = cljs.core.nthnext.call(null, vec__23400, 1);
          return cljs.core.merge_with.call(null, cljs.core.vector, cljs.core.PersistentArrayMap.EMPTY, cljs.core.partition.call(null, 2, cljs.core.interleave.call(null, self__.params, cljs.core.map.call(null, secretary.core.decode, ms))));
        } else {
          return null;
        }
      };
    }(clauses, vec__23396, re, params);
    secretary.core.t23397.prototype.secretary$core$IRouteValue$ = true;
    secretary.core.t23397.prototype.secretary$core$IRouteValue$route_value$arity$1 = function(clauses, vec__23396, re, params) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        return self__.orig_route;
      };
    }(clauses, vec__23396, re, params);
    secretary.core.t23397.prototype.cljs$core$IMeta$_meta$arity$1 = function(clauses, vec__23396, re, params) {
      return function(_23399) {
        var self__ = this;
        var _23399__$1 = this;
        return self__.meta23398;
      };
    }(clauses, vec__23396, re, params);
    secretary.core.t23397.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(clauses, vec__23396, re, params) {
      return function(_23399, meta23398__$1) {
        var self__ = this;
        var _23399__$1 = this;
        return new secretary.core.t23397(self__.params, self__.re, self__.vec__23396, self__.clauses, self__.orig_route, self__.compile_route, meta23398__$1);
      };
    }(clauses, vec__23396, re, params);
    secretary.core.t23397.cljs$lang$type = true;
    secretary.core.t23397.cljs$lang$ctorStr = "secretary.core/t23397";
    secretary.core.t23397.cljs$lang$ctorPrWriter = function(clauses, vec__23396, re, params) {
      return function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
        return cljs.core._write.call(null, writer__4344__auto__, "secretary.core/t23397");
      };
    }(clauses, vec__23396, re, params);
    secretary.core.__GT_t23397 = function(clauses, vec__23396, re, params) {
      return function __GT_t23397(params__$1, re__$1, vec__23396__$1, clauses__$1, orig_route__$1, compile_route__$1, meta23398) {
        return new secretary.core.t23397(params__$1, re__$1, vec__23396__$1, clauses__$1, orig_route__$1, compile_route__$1, meta23398);
      };
    }(clauses, vec__23396, re, params);
  }
  return new secretary.core.t23397(params, re, vec__23396, clauses, orig_route, compile_route, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 41, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 252, new cljs.core.Keyword(null, "column", "column", 2078222095), 4, new cljs.core.Keyword(null, "line", "line", 212345235), 243, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/tim/clojure/logging-dashboard/resources/public/js/secretary/core.cljs"], 
  null));
};
secretary.core.render_route_STAR_ = function() {
  var render_route_STAR___delegate = function(obj, args) {
    if (function() {
      var G__23402 = obj;
      if (G__23402) {
        var bit__4437__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3761__auto__ = bit__4437__auto__;
          if (cljs.core.truth_(or__3761__auto__)) {
            return or__3761__auto__;
          } else {
            return G__23402.secretary$core$IRenderRoute$;
          }
        }())) {
          return true;
        } else {
          if (!G__23402.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, secretary.core.IRenderRoute, G__23402);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, secretary.core.IRenderRoute, G__23402);
      }
    }()) {
      return cljs.core.apply.call(null, secretary.core.render_route, obj, args);
    } else {
      return null;
    }
  };
  var render_route_STAR_ = function(obj, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return render_route_STAR___delegate.call(this, obj, args);
  };
  render_route_STAR_.cljs$lang$maxFixedArity = 1;
  render_route_STAR_.cljs$lang$applyTo = function(arglist__23403) {
    var obj = cljs.core.first(arglist__23403);
    var args = cljs.core.rest(arglist__23403);
    return render_route_STAR___delegate(obj, args);
  };
  render_route_STAR_.cljs$core$IFn$_invoke$arity$variadic = render_route_STAR___delegate;
  return render_route_STAR_;
}();
secretary.core._STAR_routes_STAR_ = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
secretary.core.add_route_BANG_ = function add_route_BANG_(obj, action) {
  var obj__$1 = typeof obj === "string" ? secretary.core.compile_route.call(null, obj) : obj;
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_routes_STAR_, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [obj__$1, action], null));
};
secretary.core.remove_route_BANG_ = function remove_route_BANG_(obj) {
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_routes_STAR_, function(rs) {
    return cljs.core.filterv.call(null, function(p__23406) {
      var vec__23407 = p__23406;
      var x = cljs.core.nth.call(null, vec__23407, 0, null);
      var _ = cljs.core.nth.call(null, vec__23407, 1, null);
      return cljs.core.not_EQ_.call(null, x, obj);
    }, rs);
  });
};
secretary.core.reset_routes_BANG_ = function reset_routes_BANG_() {
  return cljs.core.reset_BANG_.call(null, secretary.core._STAR_routes_STAR_, cljs.core.PersistentVector.EMPTY);
};
secretary.core.locate_route = function locate_route(route) {
  return cljs.core.some.call(null, function(p__23410) {
    var vec__23411 = p__23410;
    var compiled_route = cljs.core.nth.call(null, vec__23411, 0, null);
    var action = cljs.core.nth.call(null, vec__23411, 1, null);
    var temp__4126__auto__ = secretary.core.route_matches.call(null, compiled_route, route);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var params = temp__4126__auto__;
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "action", "action", -811238024), action, new cljs.core.Keyword(null, "params", "params", 710516235), params, new cljs.core.Keyword(null, "route", "route", 329891309), compiled_route], null);
    } else {
      return null;
    }
  }, cljs.core.deref.call(null, secretary.core._STAR_routes_STAR_));
};
secretary.core.locate_route_value = function locate_route_value(uri) {
  return secretary.core.route_value.call(null, (new cljs.core.Keyword(null, "route", "route", 329891309)).cljs$core$IFn$_invoke$arity$1(secretary.core.locate_route.call(null, uri)));
};
secretary.core.prefix = function prefix() {
  return[cljs.core.str(secretary.core.get_config.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465)], null)))].join("");
};
secretary.core.uri_without_prefix = function uri_without_prefix(uri) {
  return clojure.string.replace.call(null, uri, cljs.core.re_pattern.call(null, [cljs.core.str("^"), cljs.core.str(secretary.core.prefix.call(null))].join("")), "");
};
secretary.core.uri_with_leading_slash = function uri_with_leading_slash(uri) {
  if (cljs.core._EQ_.call(null, "/", cljs.core.first.call(null, uri))) {
    return uri;
  } else {
    return[cljs.core.str("/"), cljs.core.str(uri)].join("");
  }
};
secretary.core.dispatch_BANG_ = function dispatch_BANG_(uri) {
  var vec__23414 = clojure.string.split.call(null, secretary.core.uri_without_prefix.call(null, uri), /\?/);
  var uri_path = cljs.core.nth.call(null, vec__23414, 0, null);
  var query_string = cljs.core.nth.call(null, vec__23414, 1, null);
  var uri_path__$1 = secretary.core.uri_with_leading_slash.call(null, uri_path);
  var query_params = cljs.core.truth_(query_string) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "query-params", "query-params", 900640534), secretary.core.decode_query_params.call(null, query_string)], null) : null;
  var map__23415 = secretary.core.locate_route.call(null, uri_path__$1);
  var map__23415__$1 = cljs.core.seq_QMARK_.call(null, map__23415) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23415) : map__23415;
  var params = cljs.core.get.call(null, map__23415__$1, new cljs.core.Keyword(null, "params", "params", 710516235));
  var action = cljs.core.get.call(null, map__23415__$1, new cljs.core.Keyword(null, "action", "action", -811238024));
  var action__$1 = function() {
    var or__3761__auto__ = action;
    if (cljs.core.truth_(or__3761__auto__)) {
      return or__3761__auto__;
    } else {
      return cljs.core.identity;
    }
  }();
  var params__$1 = cljs.core.merge.call(null, params, query_params);
  return action__$1.call(null, params__$1);
};
secretary.core.invalid_params = function invalid_params(params, validations) {
  return cljs.core.reduce.call(null, function(m, p__23418) {
    var vec__23419 = p__23418;
    var key = cljs.core.nth.call(null, vec__23419, 0, null);
    var validation = cljs.core.nth.call(null, vec__23419, 1, null);
    var value = cljs.core.get.call(null, params, key);
    if (cljs.core.truth_(cljs.core.re_matches.call(null, validation, value))) {
      return m;
    } else {
      return cljs.core.assoc.call(null, m, key, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [value, validation], null));
    }
  }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.partition.call(null, 2, validations));
};
secretary.core.params_valid_QMARK_ = function params_valid_QMARK_(params, validations) {
  return cljs.core.empty_QMARK_.call(null, secretary.core.invalid_params.call(null, params, validations));
};
cljs.core.PersistentVector.prototype.secretary$core$IRouteMatches$ = true;
cljs.core.PersistentVector.prototype.secretary$core$IRouteMatches$route_matches$arity$2 = function(p__23420, route) {
  var vec__23421 = p__23420;
  var route_string = cljs.core.nth.call(null, vec__23421, 0, null);
  var validations = cljs.core.nthnext.call(null, vec__23421, 1);
  var vec__23422 = this;
  var route_string__$1 = cljs.core.nth.call(null, vec__23422, 0, null);
  var validations__$1 = cljs.core.nthnext.call(null, vec__23422, 1);
  var params = secretary.core.route_matches.call(null, secretary.core.compile_route.call(null, route_string__$1), route);
  if (secretary.core.params_valid_QMARK_.call(null, params, validations__$1)) {
    return params;
  } else {
    return null;
  }
};
RegExp.prototype.secretary$core$IRouteMatches$ = true;
RegExp.prototype.secretary$core$IRouteMatches$route_matches$arity$2 = function(this$, route) {
  var this$__$1 = this;
  var temp__4126__auto__ = secretary.core.re_matches_STAR_.call(null, this$__$1, route);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var vec__23423 = temp__4126__auto__;
    var _ = cljs.core.nth.call(null, vec__23423, 0, null);
    var ms = cljs.core.nthnext.call(null, vec__23423, 1);
    return cljs.core.vec.call(null, ms);
  } else {
    return null;
  }
};
secretary.core.IRouteMatches["string"] = true;
secretary.core.route_matches["string"] = function(this$, route) {
  return secretary.core.route_matches.call(null, secretary.core.compile_route.call(null, this$), route);
};
cljs.core.PersistentVector.prototype.secretary$core$IRouteValue$ = true;
cljs.core.PersistentVector.prototype.secretary$core$IRouteValue$route_value$arity$1 = function(p__23424) {
  var vec__23425 = p__23424;
  var route_string = cljs.core.nth.call(null, vec__23425, 0, null);
  var validations = cljs.core.nthnext.call(null, vec__23425, 1);
  var vec__23426 = this;
  var route_string__$1 = cljs.core.nth.call(null, vec__23426, 0, null);
  var validations__$1 = cljs.core.nthnext.call(null, vec__23426, 1);
  return cljs.core.vec.call(null, cljs.core.cons.call(null, secretary.core.route_value.call(null, route_string__$1), validations__$1));
};
RegExp.prototype.secretary$core$IRouteValue$ = true;
RegExp.prototype.secretary$core$IRouteValue$route_value$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1;
};
secretary.core.IRouteValue["string"] = true;
secretary.core.route_value["string"] = function(this$) {
  return secretary.core.route_value.call(null, secretary.core.compile_route.call(null, this$));
};
cljs.core.PersistentVector.prototype.secretary$core$IRenderRoute$ = true;
cljs.core.PersistentVector.prototype.secretary$core$IRenderRoute$render_route$arity$1 = function(this$) {
  var this$__$1 = this;
  return secretary.core.render_route.call(null, this$__$1, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.PersistentVector.prototype.secretary$core$IRenderRoute$render_route$arity$2 = function(p__23427, params) {
  var vec__23428 = p__23427;
  var route_string = cljs.core.nth.call(null, vec__23428, 0, null);
  var validations = cljs.core.nthnext.call(null, vec__23428, 1);
  var vec__23429 = this;
  var route_string__$1 = cljs.core.nth.call(null, vec__23429, 0, null);
  var validations__$1 = cljs.core.nthnext.call(null, vec__23429, 1);
  var invalid = secretary.core.invalid_params.call(null, params, validations__$1);
  if (cljs.core.empty_QMARK_.call(null, invalid)) {
    return secretary.core.render_route.call(null, route_string__$1, params);
  } else {
    throw cljs.core.ex_info.call(null, "Could not build route: invalid params", invalid);
  }
};
secretary.core.IRenderRoute["string"] = true;
secretary.core.render_route["string"] = function() {
  var G__23431 = null;
  var G__23431__1 = function(this$) {
    return secretary.core.render_route.call(null, this$, cljs.core.PersistentArrayMap.EMPTY);
  };
  var G__23431__2 = function(this$, params) {
    var map__23430 = params;
    var map__23430__$1 = cljs.core.seq_QMARK_.call(null, map__23430) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23430) : map__23430;
    var m = map__23430__$1;
    var query_params = cljs.core.get.call(null, map__23430__$1, new cljs.core.Keyword(null, "query-params", "query-params", 900640534));
    var a = cljs.core.atom.call(null, m);
    var path = this$.replace(new RegExp(":[^\\s.:*/]+|\\*[^\\s.:*/]*", "g"), function(map__23430, map__23430__$1, m, query_params, a) {
      return function($1) {
        var lookup = cljs.core.keyword.call(null, cljs.core._EQ_.call(null, $1, "*") ? $1 : cljs.core.subs.call(null, $1, 1));
        var v = cljs.core.get.call(null, cljs.core.deref.call(null, a), lookup);
        var replacement = cljs.core.sequential_QMARK_.call(null, v) ? function() {
          cljs.core.swap_BANG_.call(null, a, cljs.core.assoc, lookup, cljs.core.next.call(null, v));
          return secretary.core.encode_uri.call(null, cljs.core.first.call(null, v));
        }() : cljs.core.truth_(v) ? secretary.core.encode_uri.call(null, v) : $1;
        return replacement;
      };
    }(map__23430, map__23430__$1, m, query_params, a));
    var path__$1 = [cljs.core.str(secretary.core.get_config.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465)], null))), cljs.core.str(path)].join("");
    var temp__4124__auto__ = function() {
      var and__3749__auto__ = query_params;
      if (cljs.core.truth_(and__3749__auto__)) {
        return secretary.core.encode_query_params.call(null, query_params);
      } else {
        return and__3749__auto__;
      }
    }();
    if (cljs.core.truth_(temp__4124__auto__)) {
      var query_string = temp__4124__auto__;
      return[cljs.core.str(path__$1), cljs.core.str("?"), cljs.core.str(query_string)].join("");
    } else {
      return path__$1;
    }
  };
  G__23431 = function(this$, params) {
    switch(arguments.length) {
      case 1:
        return G__23431__1.call(this, this$);
      case 2:
        return G__23431__2.call(this, this$, params);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__23431.cljs$core$IFn$_invoke$arity$1 = G__23431__1;
  G__23431.cljs$core$IFn$_invoke$arity$2 = G__23431__2;
  return G__23431;
}();
goog.provide("logging_dashboard.routes");
goog.require("cljs.core");
goog.require("logging_dashboard.components.header");
goog.require("logging_dashboard.components.errors");
goog.require("goog.History");
goog.require("logging_dashboard.components.errors");
goog.require("logging_dashboard.components.header");
goog.require("secretary.core");
goog.require("secretary.core");
goog.require("goog.history.EventType");
goog.require("goog.history.EventType");
goog.require("goog.events");
goog.require("goog.events");
logging_dashboard.components.header.render_header.call(null);
var action__6732__auto___17652 = function(params__6733__auto__) {
  if (cljs.core.map_QMARK_.call(null, params__6733__auto__)) {
    var map__17650 = params__6733__auto__;
    var map__17650__$1 = cljs.core.seq_QMARK_.call(null, map__17650) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17650) : map__17650;
    return logging_dashboard.components.errors.render_404.call(null);
  } else {
    if (cljs.core.vector_QMARK_.call(null, params__6733__auto__)) {
      var vec__17651 = params__6733__auto__;
      return logging_dashboard.components.errors.render_404.call(null);
    } else {
      return null;
    }
  }
};
secretary.core.add_route_BANG_.call(null, "/", action__6732__auto___17652);
logging_dashboard.routes.home_path = function(action__6732__auto___17652) {
  return function() {
    var home_path__delegate = function(args__6731__auto__) {
      return cljs.core.apply.call(null, secretary.core.render_route_STAR_, "/", args__6731__auto__);
    };
    var home_path = function(var_args) {
      var args__6731__auto__ = null;
      if (arguments.length > 0) {
        args__6731__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return home_path__delegate.call(this, args__6731__auto__);
    };
    home_path.cljs$lang$maxFixedArity = 0;
    home_path.cljs$lang$applyTo = function(arglist__17653) {
      var args__6731__auto__ = cljs.core.seq(arglist__17653);
      return home_path__delegate(args__6731__auto__);
    };
    home_path.cljs$core$IFn$_invoke$arity$variadic = home_path__delegate;
    return home_path;
  }();
}(action__6732__auto___17652);
var action__6732__auto___17656 = function(params__6733__auto__) {
  if (cljs.core.map_QMARK_.call(null, params__6733__auto__)) {
    var map__17654 = params__6733__auto__;
    var map__17654__$1 = cljs.core.seq_QMARK_.call(null, map__17654) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17654) : map__17654;
    var id = cljs.core.get.call(null, map__17654__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
    return logging_dashboard.components.errors.render_404.call(null);
  } else {
    if (cljs.core.vector_QMARK_.call(null, params__6733__auto__)) {
      var vec__17655 = params__6733__auto__;
      var id = cljs.core.nth.call(null, vec__17655, 0, null);
      return logging_dashboard.components.errors.render_404.call(null);
    } else {
      return null;
    }
  }
};
secretary.core.add_route_BANG_.call(null, "/logs/:id", action__6732__auto___17656);
logging_dashboard.routes.log_path = function(action__6732__auto___17656) {
  return function() {
    var log_path__delegate = function(args__6731__auto__) {
      return cljs.core.apply.call(null, secretary.core.render_route_STAR_, "/logs/:id", args__6731__auto__);
    };
    var log_path = function(var_args) {
      var args__6731__auto__ = null;
      if (arguments.length > 0) {
        args__6731__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return log_path__delegate.call(this, args__6731__auto__);
    };
    log_path.cljs$lang$maxFixedArity = 0;
    log_path.cljs$lang$applyTo = function(arglist__17657) {
      var args__6731__auto__ = cljs.core.seq(arglist__17657);
      return log_path__delegate(args__6731__auto__);
    };
    log_path.cljs$core$IFn$_invoke$arity$variadic = log_path__delegate;
    return log_path;
  }();
}(action__6732__auto___17656);
var action__6732__auto___17660 = function(params__6733__auto__) {
  if (cljs.core.map_QMARK_.call(null, params__6733__auto__)) {
    var map__17658 = params__6733__auto__;
    var map__17658__$1 = cljs.core.seq_QMARK_.call(null, map__17658) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17658) : map__17658;
    return logging_dashboard.components.errors.render_404.call(null);
  } else {
    if (cljs.core.vector_QMARK_.call(null, params__6733__auto__)) {
      var vec__17659 = params__6733__auto__;
      return logging_dashboard.components.errors.render_404.call(null);
    } else {
      return null;
    }
  }
};
secretary.core.add_route_BANG_.call(null, "*", action__6732__auto___17660);
logging_dashboard.routes.init = function init() {
  var h = new goog.History;
  secretary.core.set_config_BANG_.call(null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), "#");
  goog.events.listen(h, goog.history.EventType.NAVIGATE, function(h) {
    return function(p1__17661_SHARP_) {
      return secretary.core.dispatch_BANG_.call(null, p1__17661_SHARP_.token);
    };
  }(h));
  var G__17663 = h;
  G__17663.setEnabled(true);
  return G__17663;
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (typeof col.contains == "function") {
    return col.contains(val);
  }
  if (typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains((col), val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty((col));
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear((col));
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach((col), f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.iter");
goog.provide("goog.iter.Iterable");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.functions");
goog.require("goog.math");
goog.iter.Iterable;
if ("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"];
} else {
  goog.iter.StopIteration = Error("StopIteration");
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach((iterable), f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.filterFalse = function(iterable, f, opt_obj) {
  return goog.iter.filter(iterable, goog.functions.not(f), opt_obj);
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    var val = iterator.next();
    return f.call(opt_obj, val, undefined, iterator);
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  var iterator = goog.iter.toIterator(arguments);
  var iter = new goog.iter.Iterator;
  var current = null;
  iter.next = function() {
    while (true) {
      if (current == null) {
        var it = iterator.next();
        current = goog.iter.toIterator(it);
      }
      try {
        return current.next();
      } catch (ex) {
        if (ex !== goog.iter.StopIteration) {
          throw ex;
        }
        current = null;
      }
    }
  };
  return iter;
};
goog.iter.chainFromIterable = function(iterable) {
  return goog.iter.chain.apply(undefined, iterable);
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while (true) {
      if (taking) {
        var val = iterator.next();
        if (f.call(opt_obj, val, undefined, iterator)) {
          return val;
        } else {
          taking = false;
        }
      } else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray((iterable));
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2) {
  var fillValue = {};
  var pairs = goog.iter.zipLongest(fillValue, iterable1, iterable2);
  return goog.iter.every(pairs, function(pair) {
    return pair[0] == pair[1];
  });
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.iter.count = function(opt_start, opt_step) {
  var counter = opt_start || 0;
  var step = goog.isDef(opt_step) ? opt_step : 1;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var returnValue = counter;
    counter += step;
    return returnValue;
  };
  return iter;
};
goog.iter.repeat = function(value) {
  var iter = new goog.iter.Iterator;
  iter.next = goog.functions.constant(value);
  return iter;
};
goog.iter.accumulate = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var total = 0;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    total += iterator.next();
    return total;
  };
  return iter;
};
goog.iter.zip = function(var_args) {
  var args = arguments;
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var arr = goog.array.map(iterators, function(it) {
        return it.next();
      });
      return arr;
    };
  }
  return iter;
};
goog.iter.zipLongest = function(fillValue, var_args) {
  var args = goog.array.slice(arguments, 1);
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var iteratorsHaveValues = false;
      var arr = goog.array.map(iterators, function(it) {
        var returnValue;
        try {
          returnValue = it.next();
          iteratorsHaveValues = true;
        } catch (ex) {
          if (ex !== goog.iter.StopIteration) {
            throw ex;
          }
          returnValue = fillValue;
        }
        return returnValue;
      });
      if (!iteratorsHaveValues) {
        throw goog.iter.StopIteration;
      }
      return arr;
    };
  }
  return iter;
};
goog.iter.compress = function(iterable, selectors) {
  var selectorIterator = goog.iter.toIterator(selectors);
  return goog.iter.filter(iterable, function() {
    return!!selectorIterator.next();
  });
};
goog.iter.GroupByIterator_ = function(iterable, opt_keyFunc) {
  this.iterator = goog.iter.toIterator(iterable);
  this.keyFunc = opt_keyFunc || goog.functions.identity;
  this.targetKey;
  this.currentKey;
  this.currentValue;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  while (this.currentKey == this.targetKey) {
    this.currentValue = this.iterator.next();
    this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return[this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(targetKey) {
  var arr = [];
  while (this.currentKey == targetKey) {
    arr.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return arr;
};
goog.iter.groupBy = function(iterable, opt_keyFunc) {
  return new goog.iter.GroupByIterator_(iterable, opt_keyFunc);
};
goog.iter.starMap = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var args = goog.iter.toArray(iterator.next());
    return f.apply(opt_obj, goog.array.concat(args, undefined, iterator));
  };
  return iter;
};
goog.iter.tee = function(iterable, opt_num) {
  var iterator = goog.iter.toIterator(iterable);
  var num = goog.isNumber(opt_num) ? opt_num : 2;
  var buffers = goog.array.map(goog.array.range(num), function() {
    return[];
  });
  var addNextIteratorValueToBuffers = function() {
    var val = iterator.next();
    goog.array.forEach(buffers, function(buffer) {
      buffer.push(val);
    });
  };
  var createIterator = function(buffer) {
    var iter = new goog.iter.Iterator;
    iter.next = function() {
      if (goog.array.isEmpty(buffer)) {
        addNextIteratorValueToBuffers();
      }
      goog.asserts.assert(!goog.array.isEmpty(buffer));
      return buffer.shift();
    };
    return iter;
  };
  return goog.array.map(buffers, createIterator);
};
goog.iter.enumerate = function(iterable, opt_start) {
  return goog.iter.zip(goog.iter.count(opt_start), iterable);
};
goog.iter.limit = function(iterable, limitSize) {
  goog.asserts.assert(goog.math.isInt(limitSize) && limitSize >= 0);
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var remaining = limitSize;
  iter.next = function() {
    if (remaining-- > 0) {
      return iterator.next();
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.consume = function(iterable, count) {
  goog.asserts.assert(goog.math.isInt(count) && count >= 0);
  var iterator = goog.iter.toIterator(iterable);
  while (count-- > 0) {
    goog.iter.nextOrValue(iterator, null);
  }
  return iterator;
};
goog.iter.slice = function(iterable, start, opt_end) {
  goog.asserts.assert(goog.math.isInt(start) && start >= 0);
  var iterator = goog.iter.consume(iterable, start);
  if (goog.isNumber(opt_end)) {
    goog.asserts.assert(goog.math.isInt((opt_end)) && opt_end >= start);
    iterator = goog.iter.limit(iterator, opt_end - start);
  }
  return iterator;
};
goog.iter.hasDuplicates_ = function(arr) {
  var deduped = [];
  goog.array.removeDuplicates(arr, deduped);
  return arr.length != deduped.length;
};
goog.iter.permutations = function(iterable, opt_length) {
  var elements = goog.iter.toArray(iterable);
  var length = goog.isNumber(opt_length) ? opt_length : elements.length;
  var sets = goog.array.repeat(elements, length);
  var product = goog.iter.product.apply(undefined, sets);
  return goog.iter.filter(product, function(arr) {
    return!goog.iter.hasDuplicates_(arr);
  });
};
goog.iter.combinations = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.iter.range(elements.length);
  var indexIterator = goog.iter.permutations(indexes, length);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.iter.combinationsWithReplacement = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.array.range(elements.length);
  var sets = goog.array.repeat(indexes, length);
  var indexIterator = goog.iter.product.apply(undefined, sets);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  this.count_ = 0;
  this.version_ = 0;
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll((opt_map));
    }
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return(this.keys_.concat());
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0;key = this.keys_[i];i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.forEach = function(f, opt_obj) {
  var keys = this.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = this.get(key);
    f.call(opt_obj, value, key, this);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      if (version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if (i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key];
    }
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if (opt_values) {
    this.addAll(opt_values);
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if (type == "object" && val || type == "function") {
    return "o" + goog.getUid((val));
  } else {
    return type.substr(0, 1) + val;
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount();
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element);
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.add(values[i]);
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.remove(values[i]);
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear();
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty();
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this);
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for (var i = 0;i < values.length;i++) {
    var value = values[i];
    if (this.contains(value)) {
      result.add(value);
    }
  }
  return result;
};
goog.structs.Set.prototype.difference = function(col) {
  var result = this.clone();
  result.removeAll(col);
  return result;
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues();
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this);
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col);
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if (this.getCount() > colCount) {
    return false;
  }
  if (!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col);
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value);
  });
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false);
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.define("goog.debug.LOGGING_ENABLED", goog.DEBUG);
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = !!opt_cancel;
  if (goog.userAgent.WEBKIT && !goog.userAgent.isVersionOrHigher("535.3")) {
    retVal = !retVal;
  }
  target.onerror = function(message, url, line, opt_col, opt_error) {
    if (oldErrorHandler) {
      oldErrorHandler(message, url, line, opt_col, opt_error);
    }
    logFunc({message:message, fileName:url, line:line, col:opt_col, error:opt_error});
    return retVal;
  };
};
goog.debug.expose = function(obj, opt_showFn) {
  if (typeof obj == "undefined") {
    return "undefined";
  }
  if (obj == null) {
    return "NULL";
  }
  var str = [];
  for (var x in obj) {
    if (!opt_showFn && goog.isFunction(obj[x])) {
      continue;
    }
    var s = x + " \x3d ";
    try {
      s += obj[x];
    } catch (e) {
      s += "*** " + e + " ***";
    }
    str.push(s);
  }
  return str.join("\n");
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var str = [];
  var helper = function(obj, space, parentSeen) {
    var nestspace = space + "  ";
    var seen = new goog.structs.Set(parentSeen);
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space);
    };
    try {
      if (!goog.isDef(obj)) {
        str.push("undefined");
      } else {
        if (goog.isNull(obj)) {
          str.push("NULL");
        } else {
          if (goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"');
          } else {
            if (goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)));
            } else {
              if (goog.isObject(obj)) {
                if (seen.contains(obj)) {
                  str.push("*** reference loop detected ***");
                } else {
                  seen.add(obj);
                  str.push("{");
                  for (var x in obj) {
                    if (!opt_showFn && goog.isFunction(obj[x])) {
                      continue;
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " \x3d ");
                    helper(obj[x], nestspace, seen);
                  }
                  str.push("\n" + space + "}");
                }
              } else {
                str.push(obj);
              }
            }
          }
        }
      }
    } catch (e) {
      str.push("*** " + e + " ***");
    }
  };
  helper(obj, "", new goog.structs.Set);
  return str.join("");
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for (var i = 0;i < arr.length;i++) {
    if (goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]));
    } else {
      str.push(arr[i]);
    }
  }
  return "[ " + str.join(", ") + " ]";
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: \x3ca href\x3d"view-source:' + e.fileName + '" target\x3d"_new"\x3e' + e.fileName + "\x3c/a\x3e\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-\x3e ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-\x3e ");
    return error;
  } catch (e2) {
    return "Exception trying to expose exception! You win, we lose. " + e2;
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if (goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"};
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available";
  } catch (e) {
    lineNumber = "Not available";
    threwError = true;
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || goog.global["$googDebugFname"] || href;
  } catch (e) {
    fileName = "Not available";
    threwError = true;
  }
  if (threwError || !err.lineNumber || !err.fileName || !err.stack || !err.message || !err.name) {
    return{"message":err.message || "Not available", "name":err.name || "UnknownError", "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"};
  }
  return err;
};
goog.debug.enhanceError = function(err, opt_message) {
  var error;
  if (typeof err == "string") {
    error = Error(err);
    if (Error.captureStackTrace) {
      Error.captureStackTrace(error, goog.debug.enhanceError);
    }
  } else {
    error = err;
  }
  if (!error.stack) {
    error.stack = goog.debug.getStacktrace(goog.debug.enhanceError);
  }
  if (opt_message) {
    var x = 0;
    while (error["message" + x]) {
      ++x;
    }
    error["message" + x] = String(opt_message);
  }
  return error;
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  if (goog.STRICT_MODE_COMPATIBLE) {
    var stack = goog.debug.getNativeStackTrace_(goog.debug.getStacktraceSimple);
    if (stack) {
      return stack;
    }
  }
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while (fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller;
    } catch (e) {
      sb.push("[exception trying to get caller]\n");
      break;
    }
    depth++;
    if (depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break;
    }
  }
  if (opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]");
  } else {
    sb.push("[end]");
  }
  return sb.join("");
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getNativeStackTrace_ = function(fn) {
  var tempErr = new Error;
  if (Error.captureStackTrace) {
    Error.captureStackTrace(tempErr, fn);
    return String(tempErr.stack);
  } else {
    try {
      throw tempErr;
    } catch (e) {
      tempErr = e;
    }
    var stack = tempErr.stack;
    if (stack) {
      return String(stack);
    }
  }
  return null;
};
goog.debug.getStacktrace = function(opt_fn) {
  var stack;
  if (goog.STRICT_MODE_COMPATIBLE) {
    var contextFn = opt_fn || goog.debug.getStacktrace;
    stack = goog.debug.getNativeStackTrace_(contextFn);
  }
  if (!stack) {
    stack = goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, []);
  }
  return stack;
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if (goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]");
  } else {
    if (fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for (var i = 0;args && i < args.length;i++) {
        if (i > 0) {
          sb.push(", ");
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break;
        }
        if (argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "...";
        }
        sb.push(argDesc);
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited));
      } catch (e) {
        sb.push("[exception trying to get caller]\n");
      }
    } else {
      if (fn) {
        sb.push("[...long stack...]");
      } else {
        sb.push("[end]");
      }
    }
  }
  return sb.join("");
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver;
};
goog.debug.getFunctionName = function(fn) {
  if (goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn];
  }
  if (goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if (name) {
      goog.debug.fnNameCache_[fn] = name;
      return name;
    }
  }
  var functionSource = String(fn);
  if (!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if (matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method;
    } else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]";
    }
  }
  return goog.debug.fnNameCache_[functionSource];
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]");
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber);
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.define("goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS", true);
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if (goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++;
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_;
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_;
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_;
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception;
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_;
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text;
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName;
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_;
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level;
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_;
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg;
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_;
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time;
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_;
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear();
};
goog.debug.LogBuffer.getInstance = function() {
  if (!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer;
  }
  return goog.debug.LogBuffer.instance_;
};
goog.define("goog.debug.LogBuffer.CAPACITY", 0);
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if (this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret;
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName);
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0;
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false;
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if (!buffer[0]) {
    return;
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func((buffer[i]));
  } while (i != curIndex);
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Loggable");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Loggable;
goog.debug.Logger = function(name) {
  this.name_ = name;
  this.parent_ = null;
  this.level_ = null;
  this.children_ = null;
  this.handlers_ = null;
};
goog.debug.Logger.ROOT_LOGGER_NAME = "";
goog.define("goog.debug.Logger.ENABLE_HIERARCHY", true);
if (!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_;
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value;
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name;
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for (var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level;
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null;
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  if (value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value];
  }
  for (var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if (level.value <= value) {
      return level;
    }
  }
  return null;
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name);
};
goog.debug.Logger.logToProfilers = function(msg) {
  if (goog.global["console"]) {
    if (goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg);
    } else {
      if (goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg);
      }
    }
  }
  if (goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg);
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_;
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if (goog.debug.LOGGING_ENABLED) {
    if (goog.debug.Logger.ENABLE_HIERARCHY) {
      if (!this.handlers_) {
        this.handlers_ = [];
      }
      this.handlers_.push(handler);
    } else {
      goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
      goog.debug.Logger.rootHandlers_.push(handler);
    }
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  if (goog.debug.LOGGING_ENABLED) {
    var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
    return!!handlers && goog.array.remove(handlers, handler);
  } else {
    return false;
  }
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_;
};
goog.debug.Logger.prototype.getChildren = function() {
  if (!this.children_) {
    this.children_ = {};
  }
  return this.children_;
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if (goog.debug.LOGGING_ENABLED) {
    if (goog.debug.Logger.ENABLE_HIERARCHY) {
      this.level_ = level;
    } else {
      goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
      goog.debug.Logger.rootLevel_ = level;
    }
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return goog.debug.LOGGING_ENABLED ? this.level_ : goog.debug.Logger.Level.OFF;
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if (!goog.debug.LOGGING_ENABLED) {
    return goog.debug.Logger.Level.OFF;
  }
  if (!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_;
  }
  if (this.level_) {
    return this.level_;
  }
  if (this.parent_) {
    return this.parent_.getEffectiveLevel();
  }
  goog.asserts.fail("Root logger has no level set.");
  return null;
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return goog.debug.LOGGING_ENABLED && level.value >= this.getEffectiveLevel().value;
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED && this.isLoggable(level)) {
    if (goog.isFunction(msg)) {
      msg = msg();
    }
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception, goog.debug.Logger.prototype.log));
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception, opt_fnStackContext) {
  if (goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  } else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_);
  }
  if (opt_exception) {
    var context;
    if (goog.STRICT_MODE_COMPATIBLE) {
      context = opt_fnStackContext || goog.debug.Logger.prototype.getLogRecord;
    } else {
      context = opt_fnStackContext || arguments.callee.caller;
    }
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, opt_fnStackContext || goog.debug.Logger.prototype.getLogRecord));
  }
  return logRecord;
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.INFO, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINE, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINER, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if (goog.debug.LOGGING_ENABLED && this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord);
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while (target) {
      target.callPublish_(logRecord);
      target = target.getParent();
    }
  } else {
    for (var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if (this.handlers_) {
    for (var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent;
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger;
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if (!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger(goog.debug.Logger.ROOT_LOGGER_NAME);
    goog.debug.LogManager.loggers_[goog.debug.Logger.ROOT_LOGGER_NAME] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG);
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_;
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return(goog.debug.LogManager.rootLogger_);
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name);
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")");
  };
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger);
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger;
};
goog.provide("goog.log");
goog.provide("goog.log.Level");
goog.provide("goog.log.LogRecord");
goog.provide("goog.log.Logger");
goog.require("goog.debug");
goog.require("goog.debug.LogManager");
goog.require("goog.debug.LogRecord");
goog.require("goog.debug.Logger");
goog.define("goog.log.ENABLED", goog.debug.LOGGING_ENABLED);
goog.log.ROOT_LOGGER_NAME = goog.debug.Logger.ROOT_LOGGER_NAME;
goog.log.Logger = goog.debug.Logger;
goog.log.Level = goog.debug.Logger.Level;
goog.log.LogRecord = goog.debug.LogRecord;
goog.log.getLogger = function(name, opt_level) {
  if (goog.log.ENABLED) {
    var logger = goog.debug.LogManager.getLogger(name);
    if (opt_level && logger) {
      logger.setLevel(opt_level);
    }
    return logger;
  } else {
    return null;
  }
};
goog.log.addHandler = function(logger, handler) {
  if (goog.log.ENABLED && logger) {
    logger.addHandler(handler);
  }
};
goog.log.removeHandler = function(logger, handler) {
  if (goog.log.ENABLED && logger) {
    return logger.removeHandler(handler);
  } else {
    return false;
  }
};
goog.log.log = function(logger, level, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.log(level, msg, opt_exception);
  }
};
goog.log.error = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.severe(msg, opt_exception);
  }
};
goog.log.warning = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.warning(msg, opt_exception);
  }
};
goog.log.info = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.info(msg, opt_exception);
  }
};
goog.log.fine = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.fine(msg, opt_exception);
  }
};
goog.provide("goog.net.xpc");
goog.provide("goog.net.xpc.CfgFields");
goog.provide("goog.net.xpc.ChannelStates");
goog.provide("goog.net.xpc.TransportNames");
goog.provide("goog.net.xpc.TransportTypes");
goog.provide("goog.net.xpc.UriCfgFields");
goog.require("goog.log");
goog.net.xpc.TransportTypes = {NATIVE_MESSAGING:1, FRAME_ELEMENT_METHOD:2, IFRAME_RELAY:3, IFRAME_POLLING:4, FLASH:5, NIX:6, DIRECT:7};
goog.net.xpc.TransportNames = {1:"NativeMessagingTransport", 2:"FrameElementMethodTransport", 3:"IframeRelayTransport", 4:"IframePollingTransport", 5:"FlashTransport", 6:"NixTransport", 7:"DirectTransport"};
goog.net.xpc.CfgFields = {CHANNEL_NAME:"cn", AUTH_TOKEN:"at", REMOTE_AUTH_TOKEN:"rat", PEER_URI:"pu", IFRAME_ID:"ifrid", TRANSPORT:"tp", LOCAL_RELAY_URI:"lru", PEER_RELAY_URI:"pru", LOCAL_POLL_URI:"lpu", PEER_POLL_URI:"ppu", PEER_HOSTNAME:"ph", ONE_SIDED_HANDSHAKE:"osh", ROLE:"role", NATIVE_TRANSPORT_PROTOCOL_VERSION:"nativeProtocolVersion", DIRECT_TRANSPORT_SYNC_MODE:"directSyncMode"};
goog.net.xpc.UriCfgFields = [goog.net.xpc.CfgFields.PEER_URI, goog.net.xpc.CfgFields.LOCAL_RELAY_URI, goog.net.xpc.CfgFields.PEER_RELAY_URI, goog.net.xpc.CfgFields.LOCAL_POLL_URI, goog.net.xpc.CfgFields.PEER_POLL_URI];
goog.net.xpc.ChannelStates = {NOT_CONNECTED:1, CONNECTED:2, CLOSED:3};
goog.net.xpc.TRANSPORT_SERVICE_ = "tp";
goog.net.xpc.SETUP = "SETUP";
goog.net.xpc.SETUP_NTPV2 = "SETUP_NTPV2";
goog.net.xpc.SETUP_ACK_ = "SETUP_ACK";
goog.net.xpc.SETUP_ACK_NTPV2 = "SETUP_ACK_NTPV2";
goog.net.xpc.channels = {};
goog.net.xpc.getRandomString = function(length, opt_characters) {
  var chars = opt_characters || goog.net.xpc.randomStringCharacters_;
  var charsLength = chars.length;
  var s = "";
  while (length-- > 0) {
    s += chars.charAt(Math.floor(Math.random() * charsLength));
  }
  return s;
};
goog.net.xpc.randomStringCharacters_ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
goog.net.xpc.logger = goog.log.getLogger("goog.net.xpc");
goog.provide("goog.net.xpc.CrossPageChannelRole");
goog.net.xpc.CrossPageChannelRole = {OUTER:0, INNER:1};
goog.provide("goog.net.xpc.Transport");
goog.require("goog.Disposable");
goog.require("goog.dom");
goog.require("goog.net.xpc.TransportNames");
goog.net.xpc.Transport = function(opt_domHelper) {
  goog.Disposable.call(this);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
};
goog.inherits(goog.net.xpc.Transport, goog.Disposable);
goog.net.xpc.Transport.prototype.transportType = 0;
goog.net.xpc.Transport.prototype.getType = function() {
  return this.transportType;
};
goog.net.xpc.Transport.prototype.getWindow = function() {
  return this.domHelper_.getWindow();
};
goog.net.xpc.Transport.prototype.getName = function() {
  return goog.net.xpc.TransportNames[this.transportType] || "";
};
goog.net.xpc.Transport.prototype.transportServiceHandler = goog.abstractMethod;
goog.net.xpc.Transport.prototype.connect = goog.abstractMethod;
goog.net.xpc.Transport.prototype.send = goog.abstractMethod;
goog.provide("goog.net.xpc.IframePollingTransport");
goog.provide("goog.net.xpc.IframePollingTransport.Receiver");
goog.provide("goog.net.xpc.IframePollingTransport.Sender");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.log");
goog.require("goog.log.Level");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.userAgent");
goog.net.xpc.IframePollingTransport = function(channel, opt_domHelper) {
  goog.net.xpc.IframePollingTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.sendUri_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.PEER_POLL_URI];
  this.rcvUri_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  this.sendQueue_ = [];
};
goog.inherits(goog.net.xpc.IframePollingTransport, goog.net.xpc.Transport);
goog.net.xpc.IframePollingTransport.prototype.pollsBeforeReconnect_ = 5;
goog.net.xpc.IframePollingTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
goog.net.xpc.IframePollingTransport.prototype.sequence_ = 0;
goog.net.xpc.IframePollingTransport.prototype.waitForAck_ = false;
goog.net.xpc.IframePollingTransport.prototype.initialized_ = false;
goog.net.xpc.IframePollingTransport.prototype.reconnectFrame_ = null;
goog.net.xpc.IframePollingTransport.IFRAME_PREFIX = "googlexpc";
goog.net.xpc.IframePollingTransport.prototype.getMsgFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_msg";
};
goog.net.xpc.IframePollingTransport.prototype.getAckFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_ack";
};
goog.net.xpc.IframePollingTransport.prototype.isChannelAvailable = function() {
  return!this.isDisposed() && this.channel_.isPeerAvailable();
};
goog.net.xpc.IframePollingTransport.prototype.getPeerFrames_ = function() {
  try {
    if (this.isChannelAvailable()) {
      return this.channel_.getPeerWindowObject().frames || {};
    }
  } catch (e) {
    goog.log.fine(goog.net.xpc.logger, "error retrieving peer frames");
  }
  return{};
};
goog.net.xpc.IframePollingTransport.prototype.getPeerFrame_ = function(frameName) {
  return this.getPeerFrames_()[frameName];
};
goog.net.xpc.IframePollingTransport.prototype.connect = function() {
  if (!this.isChannelAvailable()) {
    return;
  }
  goog.log.fine(goog.net.xpc.logger, "transport connect called");
  if (!this.initialized_) {
    goog.log.fine(goog.net.xpc.logger, "initializing...");
    this.constructSenderFrames_();
    this.initialized_ = true;
  }
  this.checkForeignFramesReady_();
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrames_ = function() {
  var name = this.getMsgFrameName_();
  this.msgIframeElm_ = this.constructSenderFrame_(name);
  this.msgWinObj_ = this.getWindow().frames[name];
  name = this.getAckFrameName_();
  this.ackIframeElm_ = this.constructSenderFrame_(name);
  this.ackWinObj_ = this.getWindow().frames[name];
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrame_ = function(id) {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "constructing sender frame: " + id);
  var ifr = goog.dom.createElement("iframe");
  var s = ifr.style;
  s.position = "absolute";
  s.top = "-10px";
  s.left = "10px";
  s.width = "1px";
  s.height = "1px";
  ifr.id = ifr.name = id;
  ifr.src = this.sendUri_ + "#INITIAL";
  this.getWindow().document.body.appendChild(ifr);
  return ifr;
};
goog.net.xpc.IframePollingTransport.prototype.maybeInnerPeerReconnect_ = function() {
  if (this.reconnectFrame_ || this.pollsBeforeReconnect_-- > 0) {
    return;
  }
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "Inner peer reconnect triggered.");
  this.channel_.updateChannelNameAndCatalog(goog.net.xpc.getRandomString(10));
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "switching channels: " + this.channel_.name);
  this.deconstructSenderFrames_();
  this.initialized_ = false;
  this.reconnectFrame_ = this.constructSenderFrame_(goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_reconnect_" + this.channel_.name);
};
goog.net.xpc.IframePollingTransport.prototype.outerPeerReconnect_ = function() {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "outerPeerReconnect called");
  var frames = this.getPeerFrames_();
  var length = frames.length;
  for (var i = 0;i < length;i++) {
    var frameName;
    try {
      if (frames[i] && frames[i].name) {
        frameName = frames[i].name;
      }
    } catch (e) {
    }
    if (!frameName) {
      continue;
    }
    var message = frameName.split("_");
    if (message.length == 3 && message[0] == goog.net.xpc.IframePollingTransport.IFRAME_PREFIX && message[1] == "reconnect") {
      this.channel_.name = message[2];
      this.deconstructSenderFrames_();
      this.initialized_ = false;
      break;
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.deconstructSenderFrames_ = function() {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "deconstructSenderFrames called");
  if (this.msgIframeElm_) {
    this.msgIframeElm_.parentNode.removeChild(this.msgIframeElm_);
    this.msgIframeElm_ = null;
    this.msgWinObj_ = null;
  }
  if (this.ackIframeElm_) {
    this.ackIframeElm_.parentNode.removeChild(this.ackIframeElm_);
    this.ackIframeElm_ = null;
    this.ackWinObj_ = null;
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkForeignFramesReady_ = function() {
  if (!(this.isRcvFrameReady_(this.getMsgFrameName_()) && this.isRcvFrameReady_(this.getAckFrameName_()))) {
    goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "foreign frames not (yet) present");
    if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER) {
      this.maybeInnerPeerReconnect_();
    } else {
      if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
        this.outerPeerReconnect_();
      }
    }
    this.getWindow().setTimeout(goog.bind(this.connect, this), 100);
  } else {
    goog.log.fine(goog.net.xpc.logger, "foreign frames present");
    this.msgReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.getPeerFrame_(this.getMsgFrameName_()), goog.bind(this.processIncomingMsg, this));
    this.ackReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.getPeerFrame_(this.getAckFrameName_()), goog.bind(this.processIncomingAck, this));
    this.checkLocalFramesPresent_();
  }
};
goog.net.xpc.IframePollingTransport.prototype.isRcvFrameReady_ = function(frameName) {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "checking for receive frame: " + frameName);
  try {
    var winObj = this.getPeerFrame_(frameName);
    if (!winObj || winObj.location.href.indexOf(this.rcvUri_) != 0) {
      return false;
    }
  } catch (e) {
    return false;
  }
  return true;
};
goog.net.xpc.IframePollingTransport.prototype.checkLocalFramesPresent_ = function() {
  var frames = this.getPeerFrames_();
  if (!(frames[this.getAckFrameName_()] && frames[this.getMsgFrameName_()])) {
    if (!this.checkLocalFramesPresentCb_) {
      this.checkLocalFramesPresentCb_ = goog.bind(this.checkLocalFramesPresent_, this);
    }
    this.getWindow().setTimeout(this.checkLocalFramesPresentCb_, 100);
    goog.log.fine(goog.net.xpc.logger, "local frames not (yet) present");
  } else {
    this.msgSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.msgWinObj_);
    this.ackSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.ackWinObj_);
    goog.log.fine(goog.net.xpc.logger, "local frames ready");
    this.getWindow().setTimeout(goog.bind(function() {
      this.msgSender_.send(goog.net.xpc.SETUP);
      this.sentConnectionSetup_ = true;
      this.waitForAck_ = true;
      goog.log.fine(goog.net.xpc.logger, "SETUP sent");
    }, this), 100);
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkIfConnected_ = function() {
  if (this.sentConnectionSetupAck_ && this.rcvdConnectionSetupAck_) {
    this.channel_.notifyConnected();
    if (this.deliveryQueue_) {
      goog.log.fine(goog.net.xpc.logger, "delivering queued messages " + "(" + this.deliveryQueue_.length + ")");
      for (var i = 0, m;i < this.deliveryQueue_.length;i++) {
        m = this.deliveryQueue_[i];
        this.channel_.xpcDeliver(m.service, m.payload);
      }
      delete this.deliveryQueue_;
    }
  } else {
    goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "checking if connected: " + "ack sent:" + this.sentConnectionSetupAck_ + ", ack rcvd: " + this.rcvdConnectionSetupAck_);
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingMsg = function(raw) {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "msg received: " + raw);
  if (raw == goog.net.xpc.SETUP) {
    if (!this.ackSender_) {
      return;
    }
    this.ackSender_.send(goog.net.xpc.SETUP_ACK_);
    goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "SETUP_ACK sent");
    this.sentConnectionSetupAck_ = true;
    this.checkIfConnected_();
  } else {
    if (this.channel_.isConnected() || this.sentConnectionSetupAck_) {
      var pos = raw.indexOf("|");
      var head = raw.substring(0, pos);
      var frame = raw.substring(pos + 1);
      pos = head.indexOf(",");
      if (pos == -1) {
        var seq = head;
        this.ackSender_.send("ACK:" + seq);
        this.deliverPayload_(frame);
      } else {
        var seq = head.substring(0, pos);
        this.ackSender_.send("ACK:" + seq);
        var partInfo = head.substring(pos + 1).split("/");
        var part0 = parseInt(partInfo[0], 10);
        var part1 = parseInt(partInfo[1], 10);
        if (part0 == 1) {
          this.parts_ = [];
        }
        this.parts_.push(frame);
        if (part0 == part1) {
          this.deliverPayload_(this.parts_.join(""));
          delete this.parts_;
        }
      }
    } else {
      goog.log.warning(goog.net.xpc.logger, "received msg, but channel is not connected");
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingAck = function(msgStr) {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "ack received: " + msgStr);
  if (msgStr == goog.net.xpc.SETUP_ACK_) {
    this.waitForAck_ = false;
    this.rcvdConnectionSetupAck_ = true;
    this.checkIfConnected_();
  } else {
    if (this.channel_.isConnected()) {
      if (!this.waitForAck_) {
        goog.log.warning(goog.net.xpc.logger, "got unexpected ack");
        return;
      }
      var seq = parseInt(msgStr.split(":")[1], 10);
      if (seq == this.sequence_) {
        this.waitForAck_ = false;
        this.sendNextFrame_();
      } else {
        goog.log.warning(goog.net.xpc.logger, "got ack with wrong sequence");
      }
    } else {
      goog.log.warning(goog.net.xpc.logger, "received ack, but channel not connected");
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.sendNextFrame_ = function() {
  if (this.waitForAck_ || !this.sendQueue_.length) {
    return;
  }
  var s = this.sendQueue_.shift();
  ++this.sequence_;
  this.msgSender_.send(this.sequence_ + s);
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "msg sent: " + this.sequence_ + s);
  this.waitForAck_ = true;
};
goog.net.xpc.IframePollingTransport.prototype.deliverPayload_ = function(s) {
  var pos = s.indexOf(":");
  var service = s.substr(0, pos);
  var payload = s.substring(pos + 1);
  if (!this.channel_.isConnected()) {
    (this.deliveryQueue_ || (this.deliveryQueue_ = [])).push({service:service, payload:payload});
    goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "queued delivery");
  } else {
    this.channel_.xpcDeliver(service, payload);
  }
};
goog.net.xpc.IframePollingTransport.prototype.MAX_FRAME_LENGTH_ = 3800;
goog.net.xpc.IframePollingTransport.prototype.send = function(service, payload) {
  var frame = service + ":" + payload;
  if (!goog.userAgent.IE || payload.length <= this.MAX_FRAME_LENGTH_) {
    this.sendQueue_.push("|" + frame);
  } else {
    var l = payload.length;
    var num = Math.ceil(l / this.MAX_FRAME_LENGTH_);
    var pos = 0;
    var i = 1;
    while (pos < l) {
      this.sendQueue_.push("," + i + "/" + num + "|" + frame.substr(pos, this.MAX_FRAME_LENGTH_));
      i++;
      pos += this.MAX_FRAME_LENGTH_;
    }
  }
  this.sendNextFrame_();
};
goog.net.xpc.IframePollingTransport.prototype.disposeInternal = function() {
  goog.net.xpc.IframePollingTransport.base(this, "disposeInternal");
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  goog.array.remove(receivers, this.msgReceiver_);
  goog.array.remove(receivers, this.ackReceiver_);
  this.msgReceiver_ = this.ackReceiver_ = null;
  goog.dom.removeNode(this.msgIframeElm_);
  goog.dom.removeNode(this.ackIframeElm_);
  this.msgIframeElm_ = this.ackIframeElm_ = null;
  this.msgWinObj_ = this.ackWinObj_ = null;
};
goog.net.xpc.IframePollingTransport.receivers_ = [];
goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ = 10;
goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_ = 100;
goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ = 1E3;
goog.net.xpc.IframePollingTransport.receive_ = function() {
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  var receiver;
  var rcvd = false;
  try {
    for (var i = 0;receiver = receivers[i];i++) {
      rcvd = rcvd || receiver.receive();
    }
  } catch (e) {
    goog.log.info(goog.net.xpc.logger, "receive_() failed: " + e);
    receiver.transport_.channel_.notifyTransportError();
    if (!receivers.length) {
      return;
    }
  }
  var now = goog.now();
  if (rcvd) {
    goog.net.xpc.IframePollingTransport.lastActivity_ = now;
  }
  var t = now - goog.net.xpc.IframePollingTransport.lastActivity_ < goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ ? goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ : goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_;
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, t);
};
goog.net.xpc.IframePollingTransport.receiveCb_ = goog.bind(goog.net.xpc.IframePollingTransport.receive_, goog.net.xpc.IframePollingTransport);
goog.net.xpc.IframePollingTransport.startRcvTimer_ = function() {
  goog.log.fine(goog.net.xpc.logger, "starting receive-timer");
  goog.net.xpc.IframePollingTransport.lastActivity_ = goog.now();
  if (goog.net.xpc.IframePollingTransport.rcvTimer_) {
    window.clearTimeout(goog.net.xpc.IframePollingTransport.rcvTimer_);
  }
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_);
};
goog.net.xpc.IframePollingTransport.Sender = function(url, windowObj) {
  this.sendUri_ = url;
  this.sendFrame_ = windowObj;
  this.cycle_ = 0;
};
goog.net.xpc.IframePollingTransport.Sender.prototype.send = function(payload) {
  this.cycle_ = ++this.cycle_ % 2;
  var url = this.sendUri_ + "#" + this.cycle_ + encodeURIComponent(payload);
  try {
    if (goog.userAgent.WEBKIT) {
      this.sendFrame_.location.href = url;
    } else {
      this.sendFrame_.location.replace(url);
    }
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "sending failed", e);
  }
  goog.net.xpc.IframePollingTransport.startRcvTimer_();
};
goog.net.xpc.IframePollingTransport.Receiver = function(transport, windowObj, callback) {
  this.transport_ = transport;
  this.rcvFrame_ = windowObj;
  this.cb_ = callback;
  this.currentLoc_ = this.rcvFrame_.location.href.split("#")[0] + "#INITIAL";
  goog.net.xpc.IframePollingTransport.receivers_.push(this);
  goog.net.xpc.IframePollingTransport.startRcvTimer_();
};
goog.net.xpc.IframePollingTransport.Receiver.prototype.receive = function() {
  var loc = this.rcvFrame_.location.href;
  if (loc != this.currentLoc_) {
    this.currentLoc_ = loc;
    var payload = loc.split("#")[1];
    if (payload) {
      payload = payload.substr(1);
      this.cb_(decodeURIComponent(payload));
    }
    return true;
  } else {
    return false;
  }
};
goog.provide("goog.Thenable");
goog.Thenable = function() {
};
goog.Thenable.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
};
goog.Thenable.IMPLEMENTED_BY_PROP = "$goog_Thenable";
goog.Thenable.addImplementation = function(ctor) {
  goog.exportProperty(ctor.prototype, "then", ctor.prototype.then);
  if (COMPILED) {
    ctor.prototype[goog.Thenable.IMPLEMENTED_BY_PROP] = true;
  } else {
    ctor.prototype.$goog_Thenable = true;
  }
};
goog.Thenable.isImplementedBy = function(object) {
  if (!object) {
    return false;
  }
  try {
    if (COMPILED) {
      return!!object[goog.Thenable.IMPLEMENTED_BY_PROP];
    }
    return!!object.$goog_Thenable;
  } catch (e) {
    return false;
  }
};
goog.provide("goog.async.nextTick");
goog.provide("goog.async.throwException");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.functions");
goog.async.throwException = function(exception) {
  goog.global.setTimeout(function() {
    throw exception;
  }, 0);
};
goog.async.nextTick = function(callback, opt_context) {
  var cb = callback;
  if (opt_context) {
    cb = goog.bind(callback, opt_context);
  }
  cb = goog.async.nextTick.wrapCallback_(cb);
  if (goog.isFunction(goog.global.setImmediate)) {
    goog.global.setImmediate(cb);
    return;
  }
  if (!goog.async.nextTick.setImmediate_) {
    goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_();
  }
  goog.async.nextTick.setImmediate_(cb);
};
goog.async.nextTick.setImmediate_;
goog.async.nextTick.getSetImmediateEmulator_ = function() {
  var Channel = goog.global["MessageChannel"];
  if (typeof Channel === "undefined" && typeof window !== "undefined" && window.postMessage && window.addEventListener) {
    Channel = function() {
      var iframe = document.createElement("iframe");
      iframe.style.display = "none";
      iframe.src = "";
      document.documentElement.appendChild(iframe);
      var win = iframe.contentWindow;
      var doc = win.document;
      doc.open();
      doc.write("");
      doc.close();
      var message = "callImmediate" + Math.random();
      var origin = win.location.protocol == "file:" ? "*" : win.location.protocol + "//" + win.location.host;
      var onmessage = goog.bind(function(e) {
        if (e.origin != origin && e.data != message) {
          return;
        }
        this["port1"].onmessage();
      }, this);
      win.addEventListener("message", onmessage, false);
      this["port1"] = {};
      this["port2"] = {postMessage:function() {
        win.postMessage(message, origin);
      }};
    };
  }
  if (typeof Channel !== "undefined") {
    var channel = new Channel;
    var head = {};
    var tail = head;
    channel["port1"].onmessage = function() {
      head = head.next;
      var cb = head.cb;
      head.cb = null;
      cb();
    };
    return function(cb) {
      tail.next = {cb:cb};
      tail = tail.next;
      channel["port2"].postMessage(0);
    };
  }
  if (typeof document !== "undefined" && "onreadystatechange" in document.createElement("script")) {
    return function(cb) {
      var script = document.createElement("script");
      script.onreadystatechange = function() {
        script.onreadystatechange = null;
        script.parentNode.removeChild(script);
        script = null;
        cb();
        cb = null;
      };
      document.documentElement.appendChild(script);
    };
  }
  return function(cb) {
    goog.global.setTimeout(cb, 0);
  };
};
goog.async.nextTick.wrapCallback_ = goog.functions.identity;
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.async.nextTick.wrapCallback_ = transformer;
});
goog.provide("goog.testing.watchers");
goog.testing.watchers.resetWatchers_ = [];
goog.testing.watchers.signalClockReset = function() {
  var watchers = goog.testing.watchers.resetWatchers_;
  for (var i = 0;i < watchers.length;i++) {
    goog.testing.watchers.resetWatchers_[i]();
  }
};
goog.testing.watchers.watchClockReset = function(fn) {
  goog.testing.watchers.resetWatchers_.push(fn);
};
goog.provide("goog.async.run");
goog.require("goog.async.nextTick");
goog.require("goog.async.throwException");
goog.require("goog.testing.watchers");
goog.async.run = function(callback, opt_context) {
  if (!goog.async.run.schedule_) {
    goog.async.run.initializeRunner_();
  }
  if (!goog.async.run.workQueueScheduled_) {
    goog.async.run.schedule_();
    goog.async.run.workQueueScheduled_ = true;
  }
  goog.async.run.workQueue_.push(new goog.async.run.WorkItem_(callback, opt_context));
};
goog.async.run.initializeRunner_ = function() {
  if (goog.global.Promise && goog.global.Promise.resolve) {
    var promise = goog.global.Promise.resolve();
    goog.async.run.schedule_ = function() {
      promise.then(goog.async.run.processWorkQueue);
    };
  } else {
    goog.async.run.schedule_ = function() {
      goog.async.nextTick(goog.async.run.processWorkQueue);
    };
  }
};
goog.async.run.forceNextTick = function() {
  goog.async.run.schedule_ = function() {
    goog.async.nextTick(goog.async.run.processWorkQueue);
  };
};
goog.async.run.schedule_;
goog.async.run.workQueueScheduled_ = false;
goog.async.run.workQueue_ = [];
if (goog.DEBUG) {
  goog.async.run.resetQueue_ = function() {
    goog.async.run.workQueueScheduled_ = false;
    goog.async.run.workQueue_ = [];
  };
  goog.testing.watchers.watchClockReset(goog.async.run.resetQueue_);
}
goog.async.run.processWorkQueue = function() {
  while (goog.async.run.workQueue_.length) {
    var workItems = goog.async.run.workQueue_;
    goog.async.run.workQueue_ = [];
    for (var i = 0;i < workItems.length;i++) {
      var workItem = workItems[i];
      try {
        workItem.fn.call(workItem.scope);
      } catch (e) {
        goog.async.throwException(e);
      }
    }
  }
  goog.async.run.workQueueScheduled_ = false;
};
goog.async.run.WorkItem_ = function(fn, scope) {
  this.fn = fn;
  this.scope = scope;
};
goog.provide("goog.promise.Resolver");
goog.promise.Resolver = function() {
};
goog.promise.Resolver.prototype.promise;
goog.promise.Resolver.prototype.resolve;
goog.promise.Resolver.prototype.reject;
goog.provide("goog.Promise");
goog.require("goog.Thenable");
goog.require("goog.asserts");
goog.require("goog.async.run");
goog.require("goog.async.throwException");
goog.require("goog.debug.Error");
goog.require("goog.promise.Resolver");
goog.Promise = function(resolver, opt_context) {
  this.state_ = goog.Promise.State_.PENDING;
  this.result_ = undefined;
  this.parent_ = null;
  this.callbackEntries_ = null;
  this.executing_ = false;
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    this.unhandledRejectionId_ = 0;
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      this.hadUnhandledRejection_ = false;
    }
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.stack_ = [];
    this.addStackTrace_(new Error("created"));
    this.currentStep_ = 0;
  }
  try {
    var self = this;
    resolver.call(opt_context, function(value) {
      self.resolve_(goog.Promise.State_.FULFILLED, value);
    }, function(reason) {
      self.resolve_(goog.Promise.State_.REJECTED, reason);
    });
  } catch (e) {
    this.resolve_(goog.Promise.State_.REJECTED, e);
  }
};
goog.define("goog.Promise.LONG_STACK_TRACES", false);
goog.define("goog.Promise.UNHANDLED_REJECTION_DELAY", 0);
goog.Promise.State_ = {PENDING:0, BLOCKED:1, FULFILLED:2, REJECTED:3};
goog.Promise.CallbackEntry_;
goog.Promise.resolve = function(opt_value) {
  return new goog.Promise(function(resolve, reject) {
    resolve(opt_value);
  });
};
goog.Promise.reject = function(opt_reason) {
  return new goog.Promise(function(resolve, reject) {
    reject(opt_reason);
  });
};
goog.Promise.race = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    if (!promises.length) {
      resolve(undefined);
    }
    for (var i = 0, promise;promise = promises[i];i++) {
      promise.then(resolve, reject);
    }
  });
};
goog.Promise.all = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toFulfill = promises.length;
    var values = [];
    if (!toFulfill) {
      resolve(values);
      return;
    }
    var onFulfill = function(index, value) {
      toFulfill--;
      values[index] = value;
      if (toFulfill == 0) {
        resolve(values);
      }
    };
    var onReject = function(reason) {
      reject(reason);
    };
    for (var i = 0, promise;promise = promises[i];i++) {
      promise.then(goog.partial(onFulfill, i), onReject);
    }
  });
};
goog.Promise.firstFulfilled = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toReject = promises.length;
    var reasons = [];
    if (!toReject) {
      resolve(undefined);
      return;
    }
    var onFulfill = function(value) {
      resolve(value);
    };
    var onReject = function(index, reason) {
      toReject--;
      reasons[index] = reason;
      if (toReject == 0) {
        reject(reasons);
      }
    };
    for (var i = 0, promise;promise = promises[i];i++) {
      promise.then(onFulfill, goog.partial(onReject, i));
    }
  });
};
goog.Promise.withResolver = function() {
  var resolve, reject;
  var promise = new goog.Promise(function(rs, rj) {
    resolve = rs;
    reject = rj;
  });
  return new goog.Promise.Resolver_(promise, resolve, reject);
};
goog.Promise.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
  if (opt_onFulfilled != null) {
    goog.asserts.assertFunction(opt_onFulfilled, "opt_onFulfilled should be a function.");
  }
  if (opt_onRejected != null) {
    goog.asserts.assertFunction(opt_onRejected, "opt_onRejected should be a function. Did you pass opt_context " + "as the second argument instead of the third?");
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("then"));
  }
  return this.addChildPromise_(goog.isFunction(opt_onFulfilled) ? opt_onFulfilled : null, goog.isFunction(opt_onRejected) ? opt_onRejected : null, opt_context);
};
goog.Thenable.addImplementation(goog.Promise);
goog.Promise.prototype.thenAlways = function(onResolved, opt_context) {
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("thenAlways"));
  }
  var callback = function() {
    try {
      onResolved.call(opt_context);
    } catch (err) {
      goog.Promise.handleRejection_.call(null, err);
    }
  };
  this.addCallbackEntry_({child:null, onRejected:callback, onFulfilled:callback});
  return this;
};
goog.Promise.prototype.thenCatch = function(onRejected, opt_context) {
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("thenCatch"));
  }
  return this.addChildPromise_(null, onRejected, opt_context);
};
goog.Promise.prototype.cancel = function(opt_message) {
  if (this.state_ == goog.Promise.State_.PENDING) {
    goog.async.run(function() {
      var err = new goog.Promise.CancellationError(opt_message);
      this.cancelInternal_(err);
    }, this);
  }
};
goog.Promise.prototype.cancelInternal_ = function(err) {
  if (this.state_ == goog.Promise.State_.PENDING) {
    if (this.parent_) {
      this.parent_.cancelChild_(this, err);
    } else {
      this.resolve_(goog.Promise.State_.REJECTED, err);
    }
  }
};
goog.Promise.prototype.cancelChild_ = function(childPromise, err) {
  if (!this.callbackEntries_) {
    return;
  }
  var childCount = 0;
  var childIndex = -1;
  for (var i = 0, entry;entry = this.callbackEntries_[i];i++) {
    var child = entry.child;
    if (child) {
      childCount++;
      if (child == childPromise) {
        childIndex = i;
      }
      if (childIndex >= 0 && childCount > 1) {
        break;
      }
    }
  }
  if (childIndex >= 0) {
    if (this.state_ == goog.Promise.State_.PENDING && childCount == 1) {
      this.cancelInternal_(err);
    } else {
      var callbackEntry = this.callbackEntries_.splice(childIndex, 1)[0];
      this.executeCallback_(callbackEntry, goog.Promise.State_.REJECTED, err);
    }
  }
};
goog.Promise.prototype.addCallbackEntry_ = function(callbackEntry) {
  if ((!this.callbackEntries_ || !this.callbackEntries_.length) && (this.state_ == goog.Promise.State_.FULFILLED || this.state_ == goog.Promise.State_.REJECTED)) {
    this.scheduleCallbacks_();
  }
  if (!this.callbackEntries_) {
    this.callbackEntries_ = [];
  }
  this.callbackEntries_.push(callbackEntry);
};
goog.Promise.prototype.addChildPromise_ = function(onFulfilled, onRejected, opt_context) {
  var callbackEntry = {child:null, onFulfilled:null, onRejected:null};
  callbackEntry.child = new goog.Promise(function(resolve, reject) {
    callbackEntry.onFulfilled = onFulfilled ? function(value) {
      try {
        var result = onFulfilled.call(opt_context, value);
        resolve(result);
      } catch (err) {
        reject(err);
      }
    } : resolve;
    callbackEntry.onRejected = onRejected ? function(reason) {
      try {
        var result = onRejected.call(opt_context, reason);
        if (!goog.isDef(result) && reason instanceof goog.Promise.CancellationError) {
          reject(reason);
        } else {
          resolve(result);
        }
      } catch (err) {
        reject(err);
      }
    } : reject;
  });
  callbackEntry.child.parent_ = this;
  this.addCallbackEntry_((callbackEntry));
  return callbackEntry.child;
};
goog.Promise.prototype.unblockAndFulfill_ = function(value) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.FULFILLED, value);
};
goog.Promise.prototype.unblockAndReject_ = function(reason) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.REJECTED, reason);
};
goog.Promise.prototype.resolve_ = function(state, x) {
  if (this.state_ != goog.Promise.State_.PENDING) {
    return;
  }
  if (this == x) {
    state = goog.Promise.State_.REJECTED;
    x = new TypeError("Promise cannot resolve to itself");
  } else {
    if (goog.Thenable.isImplementedBy(x)) {
      x = (x);
      this.state_ = goog.Promise.State_.BLOCKED;
      x.then(this.unblockAndFulfill_, this.unblockAndReject_, this);
      return;
    } else {
      if (goog.isObject(x)) {
        try {
          var then = x["then"];
          if (goog.isFunction(then)) {
            this.tryThen_(x, then);
            return;
          }
        } catch (e) {
          state = goog.Promise.State_.REJECTED;
          x = e;
        }
      }
    }
  }
  this.result_ = x;
  this.state_ = state;
  this.scheduleCallbacks_();
  if (state == goog.Promise.State_.REJECTED && !(x instanceof goog.Promise.CancellationError)) {
    goog.Promise.addUnhandledRejection_(this, x);
  }
};
goog.Promise.prototype.tryThen_ = function(thenable, then) {
  this.state_ = goog.Promise.State_.BLOCKED;
  var promise = this;
  var called = false;
  var resolve = function(value) {
    if (!called) {
      called = true;
      promise.unblockAndFulfill_(value);
    }
  };
  var reject = function(reason) {
    if (!called) {
      called = true;
      promise.unblockAndReject_(reason);
    }
  };
  try {
    then.call(thenable, resolve, reject);
  } catch (e) {
    reject(e);
  }
};
goog.Promise.prototype.scheduleCallbacks_ = function() {
  if (!this.executing_) {
    this.executing_ = true;
    goog.async.run(this.executeCallbacks_, this);
  }
};
goog.Promise.prototype.executeCallbacks_ = function() {
  while (this.callbackEntries_ && this.callbackEntries_.length) {
    var entries = this.callbackEntries_;
    this.callbackEntries_ = [];
    for (var i = 0;i < entries.length;i++) {
      if (goog.Promise.LONG_STACK_TRACES) {
        this.currentStep_++;
      }
      this.executeCallback_(entries[i], this.state_, this.result_);
    }
  }
  this.executing_ = false;
};
goog.Promise.prototype.executeCallback_ = function(callbackEntry, state, result) {
  if (state == goog.Promise.State_.FULFILLED) {
    callbackEntry.onFulfilled(result);
  } else {
    this.removeUnhandledRejection_();
    callbackEntry.onRejected(result);
  }
};
goog.Promise.prototype.addStackTrace_ = function(err) {
  if (goog.Promise.LONG_STACK_TRACES && goog.isString(err.stack)) {
    var trace = err.stack.split("\n", 4)[3];
    var message = err.message;
    message += Array(11 - message.length).join(" ");
    this.stack_.push(message + trace);
  }
};
goog.Promise.prototype.appendLongStack_ = function(err) {
  if (goog.Promise.LONG_STACK_TRACES && err && goog.isString(err.stack) && this.stack_.length) {
    var longTrace = ["Promise trace:"];
    for (var promise = this;promise;promise = promise.parent_) {
      for (var i = this.currentStep_;i >= 0;i--) {
        longTrace.push(promise.stack_[i]);
      }
      longTrace.push("Value: " + "[" + (promise.state_ == goog.Promise.State_.REJECTED ? "REJECTED" : "FULFILLED") + "] " + "\x3c" + String(promise.result_) + "\x3e");
    }
    err.stack += "\n\n" + longTrace.join("\n");
  }
};
goog.Promise.prototype.removeUnhandledRejection_ = function() {
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    for (var p = this;p && p.unhandledRejectionId_;p = p.parent_) {
      goog.global.clearTimeout(p.unhandledRejectionId_);
      p.unhandledRejectionId_ = 0;
    }
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      for (var p = this;p && p.hadUnhandledRejection_;p = p.parent_) {
        p.hadUnhandledRejection_ = false;
      }
    }
  }
};
goog.Promise.addUnhandledRejection_ = function(promise, reason) {
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    promise.unhandledRejectionId_ = goog.global.setTimeout(function() {
      promise.appendLongStack_(reason);
      goog.Promise.handleRejection_.call(null, reason);
    }, goog.Promise.UNHANDLED_REJECTION_DELAY);
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      promise.hadUnhandledRejection_ = true;
      goog.async.run(function() {
        if (promise.hadUnhandledRejection_) {
          promise.appendLongStack_(reason);
          goog.Promise.handleRejection_.call(null, reason);
        }
      });
    }
  }
};
goog.Promise.handleRejection_ = goog.async.throwException;
goog.Promise.setUnhandledRejectionHandler = function(handler) {
  goog.Promise.handleRejection_ = handler;
};
goog.Promise.CancellationError = function(opt_message) {
  goog.Promise.CancellationError.base(this, "constructor", opt_message);
};
goog.inherits(goog.Promise.CancellationError, goog.debug.Error);
goog.Promise.CancellationError.prototype.name = "cancel";
goog.Promise.Resolver_ = function(promise, resolve, reject) {
  this.promise = promise;
  this.resolve = resolve;
  this.reject = reject;
};
/*
 Portions of this code are from MochiKit, received by
 The Closure Authors under the MIT license. All other code is Copyright
 2005-2009 The Closure Authors. All Rights Reserved.
*/
goog.provide("goog.async.Deferred");
goog.provide("goog.async.Deferred.AlreadyCalledError");
goog.provide("goog.async.Deferred.CanceledError");
goog.require("goog.Promise");
goog.require("goog.Thenable");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug.Error");
goog.async.Deferred = function(opt_onCancelFunction, opt_defaultScope) {
  this.sequence_ = [];
  this.onCancelFunction_ = opt_onCancelFunction;
  this.defaultScope_ = opt_defaultScope || null;
  this.fired_ = false;
  this.hadError_ = false;
  this.result_ = undefined;
  this.blocked_ = false;
  this.blocking_ = false;
  this.silentlyCanceled_ = false;
  this.unhandledErrorId_ = 0;
  this.parent_ = null;
  this.branches_ = 0;
  if (goog.async.Deferred.LONG_STACK_TRACES) {
    this.constructorStack_ = null;
    if (Error.captureStackTrace) {
      var target = {stack:""};
      Error.captureStackTrace(target, goog.async.Deferred);
      if (typeof target.stack == "string") {
        this.constructorStack_ = target.stack.replace(/^[^\n]*\n/, "");
      }
    }
  }
};
goog.define("goog.async.Deferred.STRICT_ERRORS", false);
goog.define("goog.async.Deferred.LONG_STACK_TRACES", false);
goog.async.Deferred.prototype.cancel = function(opt_deepCancel) {
  if (!this.hasFired()) {
    if (this.parent_) {
      var parent = this.parent_;
      delete this.parent_;
      if (opt_deepCancel) {
        parent.cancel(opt_deepCancel);
      } else {
        parent.branchCancel_();
      }
    }
    if (this.onCancelFunction_) {
      this.onCancelFunction_.call(this.defaultScope_, this);
    } else {
      this.silentlyCanceled_ = true;
    }
    if (!this.hasFired()) {
      this.errback(new goog.async.Deferred.CanceledError(this));
    }
  } else {
    if (this.result_ instanceof goog.async.Deferred) {
      this.result_.cancel();
    }
  }
};
goog.async.Deferred.prototype.branchCancel_ = function() {
  this.branches_--;
  if (this.branches_ <= 0) {
    this.cancel();
  }
};
goog.async.Deferred.prototype.continue_ = function(isSuccess, res) {
  this.blocked_ = false;
  this.updateResult_(isSuccess, res);
};
goog.async.Deferred.prototype.updateResult_ = function(isSuccess, res) {
  this.fired_ = true;
  this.result_ = res;
  this.hadError_ = !isSuccess;
  this.fire_();
};
goog.async.Deferred.prototype.check_ = function() {
  if (this.hasFired()) {
    if (!this.silentlyCanceled_) {
      throw new goog.async.Deferred.AlreadyCalledError(this);
    }
    this.silentlyCanceled_ = false;
  }
};
goog.async.Deferred.prototype.callback = function(opt_result) {
  this.check_();
  this.assertNotDeferred_(opt_result);
  this.updateResult_(true, opt_result);
};
goog.async.Deferred.prototype.errback = function(opt_result) {
  this.check_();
  this.assertNotDeferred_(opt_result);
  this.makeStackTraceLong_(opt_result);
  this.updateResult_(false, opt_result);
};
goog.async.Deferred.prototype.makeStackTraceLong_ = function(error) {
  if (!goog.async.Deferred.LONG_STACK_TRACES) {
    return;
  }
  if (this.constructorStack_ && goog.isObject(error) && error.stack && /^[^\n]+(\n   [^\n]+)+/.test(error.stack)) {
    error.stack = error.stack + "\nDEFERRED OPERATION:\n" + this.constructorStack_;
  }
};
goog.async.Deferred.prototype.assertNotDeferred_ = function(obj) {
  goog.asserts.assert(!(obj instanceof goog.async.Deferred), "An execution sequence may not be initiated with a blocking Deferred.");
};
goog.async.Deferred.prototype.addCallback = function(cb, opt_scope) {
  return this.addCallbacks(cb, null, opt_scope);
};
goog.async.Deferred.prototype.addErrback = function(eb, opt_scope) {
  return this.addCallbacks(null, eb, opt_scope);
};
goog.async.Deferred.prototype.addBoth = function(f, opt_scope) {
  return this.addCallbacks(f, f, opt_scope);
};
goog.async.Deferred.prototype.addCallbacks = function(cb, eb, opt_scope) {
  goog.asserts.assert(!this.blocking_, "Blocking Deferreds can not be re-used");
  this.sequence_.push([cb, eb, opt_scope]);
  if (this.hasFired()) {
    this.fire_();
  }
  return this;
};
goog.async.Deferred.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
  var resolve, reject;
  var promise = new goog.Promise(function(res, rej) {
    resolve = res;
    reject = rej;
  });
  this.addCallbacks(resolve, function(reason) {
    if (reason instanceof goog.async.Deferred.CanceledError) {
      promise.cancel();
    } else {
      reject(reason);
    }
  });
  return promise.then(opt_onFulfilled, opt_onRejected, opt_context);
};
goog.Thenable.addImplementation(goog.async.Deferred);
goog.async.Deferred.prototype.chainDeferred = function(otherDeferred) {
  this.addCallbacks(otherDeferred.callback, otherDeferred.errback, otherDeferred);
  return this;
};
goog.async.Deferred.prototype.awaitDeferred = function(otherDeferred) {
  if (!(otherDeferred instanceof goog.async.Deferred)) {
    return this.addCallback(function() {
      return otherDeferred;
    });
  }
  return this.addCallback(goog.bind(otherDeferred.branch, otherDeferred));
};
goog.async.Deferred.prototype.branch = function(opt_propagateCancel) {
  var d = new goog.async.Deferred;
  this.chainDeferred(d);
  if (opt_propagateCancel) {
    d.parent_ = this;
    this.branches_++;
  }
  return d;
};
goog.async.Deferred.prototype.hasFired = function() {
  return this.fired_;
};
goog.async.Deferred.prototype.isError = function(res) {
  return res instanceof Error;
};
goog.async.Deferred.prototype.hasErrback_ = function() {
  return goog.array.some(this.sequence_, function(sequenceRow) {
    return goog.isFunction(sequenceRow[1]);
  });
};
goog.async.Deferred.prototype.fire_ = function() {
  if (this.unhandledErrorId_ && this.hasFired() && this.hasErrback_()) {
    goog.async.Deferred.unscheduleError_(this.unhandledErrorId_);
    this.unhandledErrorId_ = 0;
  }
  if (this.parent_) {
    this.parent_.branches_--;
    delete this.parent_;
  }
  var res = this.result_;
  var unhandledException = false;
  var isNewlyBlocked = false;
  while (this.sequence_.length && !this.blocked_) {
    var sequenceEntry = this.sequence_.shift();
    var callback = sequenceEntry[0];
    var errback = sequenceEntry[1];
    var scope = sequenceEntry[2];
    var f = this.hadError_ ? errback : callback;
    if (f) {
      try {
        var ret = f.call(scope || this.defaultScope_, res);
        if (goog.isDef(ret)) {
          this.hadError_ = this.hadError_ && (ret == res || this.isError(ret));
          this.result_ = res = ret;
        }
        if (goog.Thenable.isImplementedBy(res)) {
          isNewlyBlocked = true;
          this.blocked_ = true;
        }
      } catch (ex) {
        res = ex;
        this.hadError_ = true;
        this.makeStackTraceLong_(res);
        if (!this.hasErrback_()) {
          unhandledException = true;
        }
      }
    }
  }
  this.result_ = res;
  if (isNewlyBlocked) {
    var onCallback = goog.bind(this.continue_, this, true);
    var onErrback = goog.bind(this.continue_, this, false);
    if (res instanceof goog.async.Deferred) {
      res.addCallbacks(onCallback, onErrback);
      res.blocking_ = true;
    } else {
      res.then(onCallback, onErrback);
    }
  } else {
    if (goog.async.Deferred.STRICT_ERRORS && this.isError(res) && !(res instanceof goog.async.Deferred.CanceledError)) {
      this.hadError_ = true;
      unhandledException = true;
    }
  }
  if (unhandledException) {
    this.unhandledErrorId_ = goog.async.Deferred.scheduleError_(res);
  }
};
goog.async.Deferred.succeed = function(opt_result) {
  var d = new goog.async.Deferred;
  d.callback(opt_result);
  return d;
};
goog.async.Deferred.fromPromise = function(promise) {
  var d = new goog.async.Deferred;
  d.callback();
  d.addCallback(function() {
    return promise;
  });
  return d;
};
goog.async.Deferred.fail = function(res) {
  var d = new goog.async.Deferred;
  d.errback(res);
  return d;
};
goog.async.Deferred.canceled = function() {
  var d = new goog.async.Deferred;
  d.cancel();
  return d;
};
goog.async.Deferred.when = function(value, callback, opt_scope) {
  if (value instanceof goog.async.Deferred) {
    return value.branch(true).addCallback(callback, opt_scope);
  } else {
    return goog.async.Deferred.succeed(value).addCallback(callback, opt_scope);
  }
};
goog.async.Deferred.AlreadyCalledError = function(deferred) {
  goog.debug.Error.call(this);
  this.deferred = deferred;
};
goog.inherits(goog.async.Deferred.AlreadyCalledError, goog.debug.Error);
goog.async.Deferred.AlreadyCalledError.prototype.message = "Deferred has already fired";
goog.async.Deferred.AlreadyCalledError.prototype.name = "AlreadyCalledError";
goog.async.Deferred.CanceledError = function(deferred) {
  goog.debug.Error.call(this);
  this.deferred = deferred;
};
goog.inherits(goog.async.Deferred.CanceledError, goog.debug.Error);
goog.async.Deferred.CanceledError.prototype.message = "Deferred was canceled";
goog.async.Deferred.CanceledError.prototype.name = "CanceledError";
goog.async.Deferred.Error_ = function(error) {
  this.id_ = goog.global.setTimeout(goog.bind(this.throwError, this), 0);
  this.error_ = error;
};
goog.async.Deferred.Error_.prototype.throwError = function() {
  goog.asserts.assert(goog.async.Deferred.errorMap_[this.id_], "Cannot throw an error that is not scheduled.");
  delete goog.async.Deferred.errorMap_[this.id_];
  throw this.error_;
};
goog.async.Deferred.Error_.prototype.resetTimer = function() {
  goog.global.clearTimeout(this.id_);
};
goog.async.Deferred.errorMap_ = {};
goog.async.Deferred.scheduleError_ = function(error) {
  var deferredError = new goog.async.Deferred.Error_(error);
  goog.async.Deferred.errorMap_[deferredError.id_] = deferredError;
  return deferredError.id_;
};
goog.async.Deferred.unscheduleError_ = function(id) {
  var error = goog.async.Deferred.errorMap_[id];
  if (error) {
    error.resetTimer();
    delete goog.async.Deferred.errorMap_[id];
  }
};
goog.async.Deferred.assertNoErrors = function() {
  var map = goog.async.Deferred.errorMap_;
  for (var key in map) {
    var error = map[key];
    error.resetTimer();
    error.throwError();
  }
};
goog.provide("goog.net.xpc.DirectTransport");
goog.require("goog.Timer");
goog.require("goog.async.Deferred");
goog.require("goog.events.EventHandler");
goog.require("goog.log");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.object");
goog.scope(function() {
  var CfgFields = goog.net.xpc.CfgFields;
  var CrossPageChannelRole = goog.net.xpc.CrossPageChannelRole;
  var Deferred = goog.async.Deferred;
  var EventHandler = goog.events.EventHandler;
  var Timer = goog.Timer;
  var Transport = goog.net.xpc.Transport;
  goog.net.xpc.DirectTransport = function(channel, opt_domHelper) {
    goog.net.xpc.DirectTransport.base(this, "constructor", opt_domHelper);
    this.channel_ = channel;
    this.eventHandler_ = new EventHandler(this);
    this.registerDisposable(this.eventHandler_);
    this.maybeAttemptToConnectTimer_ = new Timer(DirectTransport.CONNECTION_ATTEMPT_INTERVAL_MS_, this.getWindow());
    this.registerDisposable(this.maybeAttemptToConnectTimer_);
    this.setupAckReceived_ = new Deferred;
    this.setupAckSent_ = new Deferred;
    this.connected_ = new Deferred;
    this.endpointId_ = goog.net.xpc.getRandomString(10);
    this.peerEndpointId_ = null;
    this.asyncSendsMap_ = {};
    this.originalChannelName_ = this.channel_.name;
    this.channel_.updateChannelNameAndCatalog(DirectTransport.getRoledChannelName_(this.channel_.name, this.channel_.getRole()));
    this.initialized_ = false;
    this.connected_.awaitDeferred(this.setupAckReceived_);
    this.connected_.awaitDeferred(this.setupAckSent_);
    this.connected_.addCallback(this.notifyConnected_, this);
    this.connected_.callback(true);
    this.eventHandler_.listen(this.maybeAttemptToConnectTimer_, Timer.TICK, this.maybeAttemptToConnect_);
    goog.log.info(goog.net.xpc.logger, "DirectTransport created. role\x3d" + this.channel_.getRole());
  };
  goog.inherits(goog.net.xpc.DirectTransport, Transport);
  var DirectTransport = goog.net.xpc.DirectTransport;
  DirectTransport.CONNECTION_ATTEMPT_INTERVAL_MS_ = 100;
  DirectTransport.CONNECTION_DELAY_INTERVAL_MS_ = 0;
  DirectTransport.isSupported = function(peerWindow) {
    try {
      return window.document.domain == peerWindow.document.domain;
    } catch (e) {
      return false;
    }
  };
  DirectTransport.activeCount_ = {};
  DirectTransport.GLOBAL_TRANPORT_PATH_ = "crosswindowmessaging.channel";
  DirectTransport.MESSAGE_DELIMITER_ = ",";
  DirectTransport.initialize_ = function(listenWindow) {
    var uid = goog.getUid(listenWindow);
    var value = DirectTransport.activeCount_[uid] || 0;
    if (value == 0) {
      var globalProxy = goog.getObjectByName(DirectTransport.GLOBAL_TRANPORT_PATH_, listenWindow);
      if (globalProxy == null) {
        goog.exportSymbol(DirectTransport.GLOBAL_TRANPORT_PATH_, DirectTransport.messageReceivedHandler_, listenWindow);
      }
    }
    DirectTransport.activeCount_[uid]++;
  };
  DirectTransport.getRoledChannelName_ = function(channelName, role) {
    return channelName + "_" + role;
  };
  DirectTransport.messageReceivedHandler_ = function(literal) {
    var msg = DirectTransport.Message_.fromLiteral(literal);
    var channelName = msg.channelName;
    var service = msg.service;
    var payload = msg.payload;
    goog.log.fine(goog.net.xpc.logger, "messageReceived: channel\x3d" + channelName + ", service\x3d" + service + ", payload\x3d" + payload);
    var channel = goog.net.xpc.channels[channelName];
    if (channel) {
      channel.xpcDeliver(service, payload);
      return true;
    }
    var transportMessageType = DirectTransport.parseTransportPayload_(payload)[0];
    for (var staleChannelName in goog.net.xpc.channels) {
      var staleChannel = goog.net.xpc.channels[staleChannelName];
      if (staleChannel.getRole() == CrossPageChannelRole.INNER && !staleChannel.isConnected() && service == goog.net.xpc.TRANSPORT_SERVICE_ && transportMessageType == goog.net.xpc.SETUP) {
        staleChannel.updateChannelNameAndCatalog(channelName);
        staleChannel.xpcDeliver(service, payload);
        return true;
      }
    }
    goog.log.info(goog.net.xpc.logger, "channel name mismatch; message ignored.");
    return false;
  };
  DirectTransport.prototype.transportType = goog.net.xpc.TransportTypes.DIRECT;
  DirectTransport.prototype.transportServiceHandler = function(payload) {
    var transportParts = DirectTransport.parseTransportPayload_(payload);
    var transportMessageType = transportParts[0];
    var peerEndpointId = transportParts[1];
    switch(transportMessageType) {
      case goog.net.xpc.SETUP_ACK_:
        if (!this.setupAckReceived_.hasFired()) {
          this.setupAckReceived_.callback(true);
        }
        break;
      case goog.net.xpc.SETUP:
        this.sendSetupAckMessage_();
        if (this.peerEndpointId_ != null && this.peerEndpointId_ != peerEndpointId) {
          goog.log.info(goog.net.xpc.logger, "Sending SETUP and changing peer ID to: " + peerEndpointId);
          this.sendSetupMessage_();
        }
        this.peerEndpointId_ = peerEndpointId;
        break;
    }
  };
  DirectTransport.prototype.sendSetupMessage_ = function() {
    var payload = goog.net.xpc.SETUP;
    payload += DirectTransport.MESSAGE_DELIMITER_;
    payload += this.endpointId_;
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, payload);
  };
  DirectTransport.prototype.sendSetupAckMessage_ = function() {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    if (!this.setupAckSent_.hasFired()) {
      this.setupAckSent_.callback(true);
    }
  };
  DirectTransport.prototype.connect = function() {
    var win = this.getWindow();
    if (win) {
      DirectTransport.initialize_(win);
      this.initialized_ = true;
      this.maybeAttemptToConnect_();
    } else {
      goog.log.fine(goog.net.xpc.logger, "connect(): no window to initialize.");
    }
  };
  DirectTransport.prototype.maybeAttemptToConnect_ = function() {
    var outerRole = this.channel_.getRole() == CrossPageChannelRole.OUTER;
    if (this.channel_.isConnected()) {
      this.maybeAttemptToConnectTimer_.stop();
      return;
    }
    this.maybeAttemptToConnectTimer_.start();
    this.sendSetupMessage_();
  };
  DirectTransport.prototype.send = function(service, payload) {
    if (!this.channel_.getPeerWindowObject()) {
      goog.log.fine(goog.net.xpc.logger, "send(): window not ready");
      return;
    }
    var channelName = DirectTransport.getRoledChannelName_(this.originalChannelName_, this.getPeerRole_());
    var message = new DirectTransport.Message_(channelName, service, payload);
    if (this.channel_.getConfig()[CfgFields.DIRECT_TRANSPORT_SYNC_MODE]) {
      this.executeScheduledSend_(message);
    } else {
      this.asyncSendsMap_[goog.getUid(message)] = Timer.callOnce(goog.bind(this.executeScheduledSend_, this, message), 0);
    }
  };
  DirectTransport.prototype.executeScheduledSend_ = function(message) {
    var messageId = goog.getUid(message);
    if (this.asyncSendsMap_[messageId]) {
      delete this.asyncSendsMap_[messageId];
    }
    try {
      var peerProxy = goog.getObjectByName(DirectTransport.GLOBAL_TRANPORT_PATH_, this.channel_.getPeerWindowObject());
    } catch (error) {
      goog.log.warning(goog.net.xpc.logger, "Can't access other window, ignoring.", error);
      return;
    }
    if (goog.isNull(peerProxy)) {
      goog.log.warning(goog.net.xpc.logger, "Peer window had no global function.");
      return;
    }
    try {
      peerProxy(message.toLiteral());
      goog.log.info(goog.net.xpc.logger, "send(): channelName\x3d" + message.channelName + " service\x3d" + message.service + " payload\x3d" + message.payload);
    } catch (error) {
      goog.log.warning(goog.net.xpc.logger, "Error performing call, ignoring.", error);
    }
  };
  DirectTransport.prototype.getPeerRole_ = function() {
    var role = this.channel_.getRole();
    return role == goog.net.xpc.CrossPageChannelRole.OUTER ? goog.net.xpc.CrossPageChannelRole.INNER : goog.net.xpc.CrossPageChannelRole.OUTER;
  };
  DirectTransport.prototype.notifyConnected_ = function() {
    this.channel_.notifyConnected(this.channel_.getConfig()[CfgFields.DIRECT_TRANSPORT_SYNC_MODE] ? DirectTransport.CONNECTION_DELAY_INTERVAL_MS_ : 0);
  };
  DirectTransport.prototype.disposeInternal = function() {
    if (this.initialized_) {
      var listenWindow = this.getWindow();
      var uid = goog.getUid(listenWindow);
      var value = --DirectTransport.activeCount_[uid];
      if (value == 1) {
        goog.exportSymbol(DirectTransport.GLOBAL_TRANPORT_PATH_, null, listenWindow);
      }
    }
    if (this.asyncSendsMap_) {
      goog.object.forEach(this.asyncSendsMap_, function(timerId) {
        Timer.clear(timerId);
      });
      this.asyncSendsMap_ = null;
    }
    if (this.setupAckReceived_) {
      this.setupAckReceived_.cancel();
      delete this.setupAckReceived_;
    }
    if (this.setupAckSent_) {
      this.setupAckSent_.cancel();
      delete this.setupAckSent_;
    }
    if (this.connected_) {
      this.connected_.cancel();
      delete this.connected_;
    }
    DirectTransport.base(this, "disposeInternal");
  };
  DirectTransport.parseTransportPayload_ = function(payload) {
    var transportParts = (payload.split(DirectTransport.MESSAGE_DELIMITER_));
    transportParts[1] = transportParts[1] || null;
    return transportParts;
  };
  DirectTransport.Message_ = function(channelName, service, payload) {
    this.channelName = channelName;
    this.service = service;
    this.payload = payload;
  };
  DirectTransport.Message_.prototype.toLiteral = function() {
    return{"channelName":this.channelName, "service":this.service, "payload":this.payload};
  };
  DirectTransport.Message_.fromLiteral = function(literal) {
    return new DirectTransport.Message_(literal["channelName"], literal["service"], literal["payload"]);
  };
});
goog.provide("goog.structs.Node");
goog.structs.Node = function(key, value) {
  this.key_ = key;
  this.value_ = value;
};
goog.structs.Node.prototype.getKey = function() {
  return this.key_;
};
goog.structs.Node.prototype.getValue = function() {
  return this.value_;
};
goog.structs.Node.prototype.clone = function() {
  return new goog.structs.Node(this.key_, this.value_);
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
cljs.reader.PushbackReader = function() {
  var obj22761 = {};
  return obj22761;
}();
cljs.reader.read_char = function read_char(reader) {
  if (function() {
    var and__3749__auto__ = reader;
    if (and__3749__auto__) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader);
  } else {
    var x__4400__auto__ = reader == null ? null : reader;
    return function() {
      var or__3761__auto__ = cljs.reader.read_char[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.reader.read_char["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader);
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if (function() {
    var and__3749__auto__ = reader;
    if (and__3749__auto__) {
      return reader.cljs$reader$PushbackReader$unread$arity$2;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__4400__auto__ = reader == null ? null : reader;
    return function() {
      var or__3761__auto__ = cljs.reader.unread[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.reader.unread["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch);
  }
};
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx;
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx];
  } else {
    return self__.buffer.pop();
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  return self__.buffer.push(ch);
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.reader/StringPushbackReader");
};
cljs.reader.__GT_StringPushbackReader = function __GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx);
};
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1);
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3761__auto__ = goog.string.isBreakingWhitespace(ch);
  if (cljs.core.truth_(or__3761__auto__)) {
    return or__3761__auto__;
  } else {
    return "," === ch;
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch);
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return ";" === ch;
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  return cljs.reader.numeric_QMARK_.call(null, initch) || ("+" === initch || "-" === initch) && cljs.reader.numeric_QMARK_.call(null, function() {
    var next_ch = cljs.reader.read_char.call(null, reader);
    cljs.reader.unread.call(null, reader, next_ch);
    return next_ch;
  }());
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if (arguments.length > 1) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return reader_error__delegate.call(this, rdr, msg);
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__22762) {
    var rdr = cljs.core.first(arglist__22762);
    var msg = cljs.core.rest(arglist__22762);
    return reader_error__delegate(rdr, msg);
  };
  reader_error.cljs$core$IFn$_invoke$arity$variadic = reader_error__delegate;
  return reader_error;
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3749__auto__ = !(ch === "#");
  if (and__3749__auto__) {
    var and__3749__auto____$1 = !(ch === "'");
    if (and__3749__auto____$1) {
      var and__3749__auto____$2 = !(ch === ":");
      if (and__3749__auto____$2) {
        return cljs.reader.macros.call(null, ch);
      } else {
        return and__3749__auto____$2;
      }
    } else {
      return and__3749__auto____$1;
    }
  } else {
    return and__3749__auto__;
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (ch == null || cljs.reader.whitespace_QMARK_.call(null, ch) || cljs.reader.macro_terminating_QMARK_.call(null, ch)) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString();
    } else {
      var G__22763 = function() {
        sb.append(ch);
        return sb;
      }();
      var G__22764 = cljs.reader.read_char.call(null, rdr);
      sb = G__22763;
      ch = G__22764;
      continue;
    }
    break;
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch === "\n" || ch === "\r" || ch == null) {
      return reader;
    } else {
      continue;
    }
    break;
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+))(N)?$");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+)/([0-9]+)$");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?$");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "^[:]?([^0-9/].*/)?([^0-9/][^/]*)$");
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if (!(matches == null) && matches[0] === s) {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  } else {
    return null;
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s);
  var ie8_fix = groups[2];
  var zero = cljs.core._EQ_.call(null, ie8_fix, "") ? null : ie8_fix;
  if (!(zero == null)) {
    return 0;
  } else {
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[6]) ? [groups[7], parseInt(groups[6], 10)] : [null, null];
    var n = a[0];
    var radix = a[1];
    if (n == null) {
      return null;
    } else {
      var parsed = parseInt(n, radix);
      if ("-" === groups[1]) {
        return-parsed;
      } else {
        return parsed;
      }
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator, 10) / parseInt(denominator, 10);
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s);
};
cljs.reader.match_number = function match_number(s) {
  if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s);
  } else {
    if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s);
    } else {
      if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s);
      } else {
        return null;
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if (c === "t") {
    return "\t";
  } else {
    if (c === "r") {
      return "\r";
    } else {
      if (c === "n") {
        return "\n";
      } else {
        if (c === "\\") {
          return "\\";
        } else {
          if (c === '"') {
            return'"';
          } else {
            if (c === "b") {
              return "\b";
            } else {
              if (c === "f") {
                return "\f";
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{2}$");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{4}$");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if (cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str;
  } else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str);
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code);
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if (cljs.core.truth_(mapresult)) {
    return mapresult;
  } else {
    if (ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)));
    } else {
      if (ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)));
      } else {
        if (cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch);
        } else {
          return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch);
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (cljs.core.truth_(pred.call(null, ch))) {
      var G__22765 = cljs.reader.read_char.call(null, rdr);
      ch = G__22765;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if (cljs.core.truth_(ch)) {
    } else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading");
    }
    if (delim === ch) {
      return cljs.core.persistent_BANG_.call(null, a);
    } else {
      var temp__4124__auto__ = cljs.reader.macros.call(null, ch);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var macrofn = temp__4124__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__22766 = mret === rdr ? a : cljs.core.conj_BANG_.call(null, a, mret);
        a = G__22766;
        continue;
      } else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__22767 = o === rdr ? a : cljs.core.conj_BANG_.call(null, a, o);
        a = G__22767;
        continue;
      }
    }
    break;
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet");
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if (cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _);
  } else {
    var temp__4124__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var obj = temp__4124__auto__;
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch);
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch);
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true));
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true);
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms");
  } else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l);
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__3761__auto__ = ch == null;
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          return cljs.reader.macros.call(null, ch);
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__3761__auto__ = cljs.reader.match_number.call(null, s);
      if (cljs.core.truth_(or__3761__auto__)) {
        return or__3761__auto__;
      } else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]");
      }
    } else {
      var G__22768 = function() {
        buffer.append(ch);
        return buffer;
      }();
      var G__22769 = cljs.reader.read_char.call(null, reader);
      buffer = G__22768;
      ch = G__22769;
      continue;
    }
    break;
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        var G__22770 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer;
        }();
        var G__22771 = cljs.reader.read_char.call(null, reader);
        buffer = G__22770;
        ch = G__22771;
        continue;
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__22772 = function() {
            buffer.append(ch);
            return buffer;
          }();
          var G__22773 = cljs.reader.read_char.call(null, reader);
          buffer = G__22772;
          ch = G__22773;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.read_raw_string_STAR_ = function read_raw_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        buffer.append(ch);
        var nch = cljs.reader.read_char.call(null, reader);
        if (nch == null) {
          return cljs.reader.reader_error.call(null, reader, "EOF while reading");
        } else {
          var G__22778 = function() {
            var G__22776 = buffer;
            G__22776.append(nch);
            return G__22776;
          }();
          var G__22779 = cljs.reader.read_char.call(null, reader);
          buffer = G__22778;
          ch = G__22779;
          continue;
        }
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__22780 = function() {
            var G__22777 = buffer;
            G__22777.append(ch);
            return G__22777;
          }();
          var G__22781 = cljs.reader.read_char.call(null, reader);
          buffer = G__22780;
          ch = G__22781;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if (t === "nil") {
    return null;
  } else {
    if (t === "true") {
      return true;
    } else {
      if (t === "false") {
        return false;
      } else {
        return not_found;
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if (cljs.core.truth_(goog.string.contains(token, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length));
  } else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token));
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if (!(void 0 === ns) && ns.substring(ns.length - 2, ns.length) === ":/" || name[name.length - 1] === ":" || !(token__$1.indexOf("::", 1) === -1)) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1);
  } else {
    if (!(ns == null) && ns.length > 0) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name);
    } else {
      return cljs.core.keyword.call(null, token__$1);
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if (f instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
  } else {
    if (typeof f === "string") {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
    } else {
      if (f instanceof cljs.core.Keyword) {
        return new cljs.core.PersistentArrayMap.fromArray([f, true], true, false);
      } else {
        return f;
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.reader.read.call(null, rdr, true, null, true)), sym);
  };
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg);
  };
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map");
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if (function() {
    var G__22783 = o;
    if (G__22783) {
      var bit__4437__auto__ = G__22783.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4437__auto__ || G__22783.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__22783.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__22783);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__22783);
    }
  }()) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m));
  } else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas");
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true));
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_raw_string_STAR_.call(null, rdr, ch));
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr;
};
cljs.reader.macros = function macros(c) {
  if (c === '"') {
    return cljs.reader.read_string_STAR_;
  } else {
    if (c === ":") {
      return cljs.reader.read_keyword;
    } else {
      if (c === ";") {
        return cljs.reader.read_comment;
      } else {
        if (c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null));
        } else {
          if (c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", 1494944732, null));
          } else {
            if (c === "^") {
              return cljs.reader.read_meta;
            } else {
              if (c === "`") {
                return cljs.reader.not_implemented;
              } else {
                if (c === "~") {
                  return cljs.reader.not_implemented;
                } else {
                  if (c === "(") {
                    return cljs.reader.read_list;
                  } else {
                    if (c === ")") {
                      return cljs.reader.read_unmatched_delimiter;
                    } else {
                      if (c === "[") {
                        return cljs.reader.read_vector;
                      } else {
                        if (c === "]") {
                          return cljs.reader.read_unmatched_delimiter;
                        } else {
                          if (c === "{") {
                            return cljs.reader.read_map;
                          } else {
                            if (c === "}") {
                              return cljs.reader.read_unmatched_delimiter;
                            } else {
                              if (c === "\\") {
                                return cljs.reader.read_char;
                              } else {
                                if (c === "#") {
                                  return cljs.reader.read_dispatch;
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if (s === "{") {
    return cljs.reader.read_set;
  } else {
    if (s === "\x3c") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form");
    } else {
      if (s === '"') {
        return cljs.reader.read_regex;
      } else {
        if (s === "!") {
          return cljs.reader.read_comment;
        } else {
          if (s === "_") {
            return cljs.reader.read_discard;
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch == null) {
      if (cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading");
      } else {
        return sentinel;
      }
    } else {
      if (cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__22784 = reader;
        var G__22785 = eof_is_error;
        var G__22786 = sentinel;
        var G__22787 = is_recursive;
        reader = G__22784;
        eof_is_error = G__22785;
        sentinel = G__22786;
        is_recursive = G__22787;
        continue;
      } else {
        if (cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__22788 = cljs.reader.read_comment.call(null, reader, ch);
          var G__22789 = eof_is_error;
          var G__22790 = sentinel;
          var G__22791 = is_recursive;
          reader = G__22788;
          eof_is_error = G__22789;
          sentinel = G__22790;
          is_recursive = G__22791;
          continue;
        } else {
          var f = cljs.reader.macros.call(null, ch);
          var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : cljs.reader.read_symbol.call(null, reader, ch);
          if (res === reader) {
            var G__22792 = reader;
            var G__22793 = eof_is_error;
            var G__22794 = sentinel;
            var G__22795 = is_recursive;
            reader = G__22792;
            eof_is_error = G__22793;
            sentinel = G__22794;
            is_recursive = G__22795;
            continue;
          } else {
            return res;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.read_string = function read_string(s) {
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, false, null, false);
};
cljs.reader.zero_fill_right_and_truncate = function zero_fill_right_and_truncate(s, width) {
  if (cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s;
  } else {
    if (width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width);
    } else {
      var b = new goog.string.StringBuffer(s);
      while (true) {
        if (b.getLength() < width) {
          var G__22796 = b.append("0");
          b = G__22796;
          continue;
        } else {
          return b.toString();
        }
        break;
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0;
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return!cljs.reader.divisible_QMARK_.call(null, num, div);
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  return cljs.reader.divisible_QMARK_.call(null, year, 4) && (cljs.reader.indivisible_QMARK_.call(null, year, 100) || cljs.reader.divisible_QMARK_.call(null, year, 400));
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(dim_norm, dim_leap) {
    return function(month, leap_year_QMARK_) {
      return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month);
    };
  }(dim_norm, dim_leap);
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function parse_int(s) {
  var n = parseInt(s, 10);
  if (cljs.core.not.call(null, isNaN(n))) {
    return n;
  } else {
    return null;
  }
};
cljs.reader.check = function check(low, n, high, msg) {
  if (low <= n && n <= high) {
  } else {
    cljs.reader.reader_error.call(null, null, [cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("\x3c\x3d"), cljs.core.str(n), cljs.core.str("\x3c\x3d"), cljs.core.str(high)].join(""));
  }
  return n;
};
cljs.reader.parse_and_validate_timestamp = function parse_and_validate_timestamp(s) {
  var vec__22798 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__22798, 0, null);
  var years = cljs.core.nth.call(null, vec__22798, 1, null);
  var months = cljs.core.nth.call(null, vec__22798, 2, null);
  var days = cljs.core.nth.call(null, vec__22798, 3, null);
  var hours = cljs.core.nth.call(null, vec__22798, 4, null);
  var minutes = cljs.core.nth.call(null, vec__22798, 5, null);
  var seconds = cljs.core.nth.call(null, vec__22798, 6, null);
  var fraction = cljs.core.nth.call(null, vec__22798, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__22798, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__22798, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__22798, 10, null);
  var v = vec__22798;
  if (cljs.core.not.call(null, v)) {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(s)].join(""));
  } else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__3761__auto__ = cljs.reader.parse_int.call(null, months);
      if (cljs.core.truth_(or__3761__auto__)) {
        return or__3761__auto__;
      } else {
        return 1;
      }
    }();
    var days__$1 = function() {
      var or__3761__auto__ = cljs.reader.parse_int.call(null, days);
      if (cljs.core.truth_(or__3761__auto__)) {
        return or__3761__auto__;
      } else {
        return 1;
      }
    }();
    var hours__$1 = function() {
      var or__3761__auto__ = cljs.reader.parse_int.call(null, hours);
      if (cljs.core.truth_(or__3761__auto__)) {
        return or__3761__auto__;
      } else {
        return 0;
      }
    }();
    var minutes__$1 = function() {
      var or__3761__auto__ = cljs.reader.parse_int.call(null, minutes);
      if (cljs.core.truth_(or__3761__auto__)) {
        return or__3761__auto__;
      } else {
        return 0;
      }
    }();
    var seconds__$1 = function() {
      var or__3761__auto__ = cljs.reader.parse_int.call(null, seconds);
      if (cljs.core.truth_(or__3761__auto__)) {
        return or__3761__auto__;
      } else {
        return 0;
      }
    }();
    var fraction__$1 = function() {
      var or__3761__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if (cljs.core.truth_(or__3761__auto__)) {
        return or__3761__auto__;
      } else {
        return 0;
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__3761__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if (cljs.core.truth_(or__3761__auto__)) {
        return or__3761__auto__;
      } else {
        return 0;
      }
    }();
    var offset_minutes__$1 = function() {
      var or__3761__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if (cljs.core.truth_(or__3761__auto__)) {
        return or__3761__auto__;
      } else {
        return 0;
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), 
    cljs.reader.check.call(null, 0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], null);
  }
};
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__4124__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var vec__22800 = temp__4124__auto__;
    var years = cljs.core.nth.call(null, vec__22800, 0, null);
    var months = cljs.core.nth.call(null, vec__22800, 1, null);
    var days = cljs.core.nth.call(null, vec__22800, 2, null);
    var hours = cljs.core.nth.call(null, vec__22800, 3, null);
    var minutes = cljs.core.nth.call(null, vec__22800, 4, null);
    var seconds = cljs.core.nth.call(null, vec__22800, 5, null);
    var ms = cljs.core.nth.call(null, vec__22800, 6, null);
    var offset = cljs.core.nth.call(null, vec__22800, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3);
  } else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""));
  }
};
cljs.reader.read_date = function read_date(s) {
  if (typeof s === "string") {
    return cljs.reader.parse_timestamp.call(null, s);
  } else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.");
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if (cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems);
  } else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.");
  }
};
cljs.reader.read_js = function read_js(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    var arr = [];
    var seq__22813_22825 = cljs.core.seq.call(null, form);
    var chunk__22814_22826 = null;
    var count__22815_22827 = 0;
    var i__22816_22828 = 0;
    while (true) {
      if (i__22816_22828 < count__22815_22827) {
        var x_22829 = cljs.core._nth.call(null, chunk__22814_22826, i__22816_22828);
        arr.push(x_22829);
        var G__22830 = seq__22813_22825;
        var G__22831 = chunk__22814_22826;
        var G__22832 = count__22815_22827;
        var G__22833 = i__22816_22828 + 1;
        seq__22813_22825 = G__22830;
        chunk__22814_22826 = G__22831;
        count__22815_22827 = G__22832;
        i__22816_22828 = G__22833;
        continue;
      } else {
        var temp__4126__auto___22834 = cljs.core.seq.call(null, seq__22813_22825);
        if (temp__4126__auto___22834) {
          var seq__22813_22835__$1 = temp__4126__auto___22834;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22813_22835__$1)) {
            var c__4543__auto___22836 = cljs.core.chunk_first.call(null, seq__22813_22835__$1);
            var G__22837 = cljs.core.chunk_rest.call(null, seq__22813_22835__$1);
            var G__22838 = c__4543__auto___22836;
            var G__22839 = cljs.core.count.call(null, c__4543__auto___22836);
            var G__22840 = 0;
            seq__22813_22825 = G__22837;
            chunk__22814_22826 = G__22838;
            count__22815_22827 = G__22839;
            i__22816_22828 = G__22840;
            continue;
          } else {
            var x_22841 = cljs.core.first.call(null, seq__22813_22835__$1);
            arr.push(x_22841);
            var G__22842 = cljs.core.next.call(null, seq__22813_22835__$1);
            var G__22843 = null;
            var G__22844 = 0;
            var G__22845 = 0;
            seq__22813_22825 = G__22842;
            chunk__22814_22826 = G__22843;
            count__22815_22827 = G__22844;
            i__22816_22828 = G__22845;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return arr;
  } else {
    if (cljs.core.map_QMARK_.call(null, form)) {
      var obj = function() {
        var obj22818 = {};
        return obj22818;
      }();
      var seq__22819_22846 = cljs.core.seq.call(null, form);
      var chunk__22820_22847 = null;
      var count__22821_22848 = 0;
      var i__22822_22849 = 0;
      while (true) {
        if (i__22822_22849 < count__22821_22848) {
          var vec__22823_22850 = cljs.core._nth.call(null, chunk__22820_22847, i__22822_22849);
          var k_22851 = cljs.core.nth.call(null, vec__22823_22850, 0, null);
          var v_22852 = cljs.core.nth.call(null, vec__22823_22850, 1, null);
          obj[cljs.core.name.call(null, k_22851)] = v_22852;
          var G__22853 = seq__22819_22846;
          var G__22854 = chunk__22820_22847;
          var G__22855 = count__22821_22848;
          var G__22856 = i__22822_22849 + 1;
          seq__22819_22846 = G__22853;
          chunk__22820_22847 = G__22854;
          count__22821_22848 = G__22855;
          i__22822_22849 = G__22856;
          continue;
        } else {
          var temp__4126__auto___22857 = cljs.core.seq.call(null, seq__22819_22846);
          if (temp__4126__auto___22857) {
            var seq__22819_22858__$1 = temp__4126__auto___22857;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__22819_22858__$1)) {
              var c__4543__auto___22859 = cljs.core.chunk_first.call(null, seq__22819_22858__$1);
              var G__22860 = cljs.core.chunk_rest.call(null, seq__22819_22858__$1);
              var G__22861 = c__4543__auto___22859;
              var G__22862 = cljs.core.count.call(null, c__4543__auto___22859);
              var G__22863 = 0;
              seq__22819_22846 = G__22860;
              chunk__22820_22847 = G__22861;
              count__22821_22848 = G__22862;
              i__22822_22849 = G__22863;
              continue;
            } else {
              var vec__22824_22864 = cljs.core.first.call(null, seq__22819_22858__$1);
              var k_22865 = cljs.core.nth.call(null, vec__22824_22864, 0, null);
              var v_22866 = cljs.core.nth.call(null, vec__22824_22864, 1, null);
              obj[cljs.core.name.call(null, k_22865)] = v_22866;
              var G__22867 = cljs.core.next.call(null, seq__22819_22858__$1);
              var G__22868 = null;
              var G__22869 = 0;
              var G__22870 = 0;
              seq__22819_22846 = G__22867;
              chunk__22820_22847 = G__22868;
              count__22821_22848 = G__22869;
              i__22822_22849 = G__22870;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, null, [cljs.core.str("JS literal expects a vector or map containing "), cljs.core.str("only string or unqualified keyword keys")].join(""));
    }
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if (typeof uuid === "string") {
    return new cljs.core.UUID(uuid);
  } else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.");
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, ["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue, "js", cljs.reader.read_js], null));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), [cljs.core.str(tag)].join(""));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if (cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false));
  } else {
    if (cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false));
    } else {
      return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", [cljs.core.str(tag)].join(""), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))));
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser;
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser;
};
cljs.reader.register_default_tag_parser_BANG_ = function register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return f;
    };
  }(old_parser));
  return old_parser;
};
cljs.reader.deregister_default_tag_parser_BANG_ = function deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return null;
    };
  }(old_parser));
  return old_parser;
};
goog.provide("taoensso.sente.interfaces");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("cljs.reader");
taoensso.sente.interfaces.IPacker = function() {
  var obj22757 = {};
  return obj22757;
}();
taoensso.sente.interfaces.pack = function pack(_, x) {
  if (function() {
    var and__3749__auto__ = _;
    if (and__3749__auto__) {
      return _.taoensso$sente$interfaces$IPacker$pack$arity$2;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return _.taoensso$sente$interfaces$IPacker$pack$arity$2(_, x);
  } else {
    var x__4400__auto__ = _ == null ? null : _;
    return function() {
      var or__3761__auto__ = taoensso.sente.interfaces.pack[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = taoensso.sente.interfaces.pack["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPacker.pack", _);
        }
      }
    }().call(null, _, x);
  }
};
taoensso.sente.interfaces.unpack = function unpack(_, x) {
  if (function() {
    var and__3749__auto__ = _;
    if (and__3749__auto__) {
      return _.taoensso$sente$interfaces$IPacker$unpack$arity$2;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return _.taoensso$sente$interfaces$IPacker$unpack$arity$2(_, x);
  } else {
    var x__4400__auto__ = _ == null ? null : _;
    return function() {
      var or__3761__auto__ = taoensso.sente.interfaces.unpack[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = taoensso.sente.interfaces.unpack["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPacker.unpack", _);
        }
      }
    }().call(null, _, x);
  }
};
taoensso.sente.interfaces.EdnPacker = function() {
};
taoensso.sente.interfaces.EdnPacker.prototype.taoensso$sente$interfaces$IPacker$ = true;
taoensso.sente.interfaces.EdnPacker.prototype.taoensso$sente$interfaces$IPacker$pack$arity$2 = function(_, x) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.pr_str.call(null, x);
};
taoensso.sente.interfaces.EdnPacker.prototype.taoensso$sente$interfaces$IPacker$unpack$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return cljs.reader.read_string.call(null, s);
};
taoensso.sente.interfaces.EdnPacker.cljs$lang$type = true;
taoensso.sente.interfaces.EdnPacker.cljs$lang$ctorStr = "taoensso.sente.interfaces/EdnPacker";
taoensso.sente.interfaces.EdnPacker.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "taoensso.sente.interfaces/EdnPacker");
};
taoensso.sente.interfaces.__GT_EdnPacker = function __GT_EdnPacker() {
  return new taoensso.sente.interfaces.EdnPacker;
};
taoensso.sente.interfaces.edn_packer = taoensso.sente.interfaces.__GT_EdnPacker.call(null);
taoensso.sente.interfaces.coerce_packer = function coerce_packer(x) {
  if (cljs.core._EQ_.call(null, x, new cljs.core.Keyword(null, "edn", "edn", 1317840885))) {
    return taoensso.sente.interfaces.edn_packer;
  } else {
    if (function() {
      var G__22759 = x;
      if (G__22759) {
        var bit__4437__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3761__auto__ = bit__4437__auto__;
          if (cljs.core.truth_(or__3761__auto__)) {
            return or__3761__auto__;
          } else {
            return G__22759.taoensso$sente$interfaces$IPacker$;
          }
        }())) {
          return true;
        } else {
          if (!G__22759.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, taoensso.sente.interfaces.IPacker, G__22759);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, taoensso.sente.interfaces.IPacker, G__22759);
      }
    }()) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IPacker", "IPacker", 266151414, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))))].join(""));
    }
    return x;
  }
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj22326 = {};
  return obj22326;
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if (function() {
    var and__3749__auto__ = port;
    if (and__3749__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4400__auto__ = port == null ? null : port;
    return function() {
      var or__3761__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj22328 = {};
  return obj22328;
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn1_handler) {
  if (function() {
    var and__3749__auto__ = port;
    if (and__3749__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn1_handler);
  } else {
    var x__4400__auto__ = port == null ? null : port;
    return function() {
      var or__3761__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn1_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj22330 = {};
  return obj22330;
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if (function() {
    var and__3749__auto__ = chan;
    if (and__3749__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4400__auto__ = chan == null ? null : chan;
    return function() {
      var or__3761__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.closed_QMARK_ = function closed_QMARK_(chan) {
  if (function() {
    var and__3749__auto__ = chan;
    if (and__3749__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1(chan);
  } else {
    var x__4400__auto__ = chan == null ? null : chan;
    return function() {
      var or__3761__auto__ = cljs.core.async.impl.protocols.closed_QMARK_[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core.async.impl.protocols.closed_QMARK_["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.closed?", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj22332 = {};
  return obj22332;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if (function() {
    var and__3749__auto__ = h;
    if (and__3749__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4400__auto__ = h == null ? null : h;
    return function() {
      var or__3761__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if (function() {
    var and__3749__auto__ = h;
    if (and__3749__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4400__auto__ = h == null ? null : h;
    return function() {
      var or__3761__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj22334 = {};
  return obj22334;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if (function() {
    var and__3749__auto__ = b;
    if (and__3749__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4400__auto__ = b == null ? null : b;
    return function() {
      var or__3761__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if (function() {
    var and__3749__auto__ = b;
    if (and__3749__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4400__auto__ = b == null ? null : b;
    return function() {
      var or__3761__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG__STAR_ = function add_BANG__STAR_(b, itm) {
  if (function() {
    var and__3749__auto__ = b;
    if (and__3749__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2(b, itm);
  } else {
    var x__4400__auto__ = b == null ? null : b;
    return function() {
      var or__3761__auto__ = cljs.core.async.impl.protocols.add_BANG__STAR_[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core.async.impl.protocols.add_BANG__STAR_["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!*", b);
        }
      }
    }().call(null, b, itm);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function() {
  var add_BANG_ = null;
  var add_BANG___1 = function(b) {
    return b;
  };
  var add_BANG___2 = function(b, itm) {
    if (!(itm == null)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "itm", "itm", -713282527, null)))))].join(""));
    }
    return cljs.core.async.impl.protocols.add_BANG__STAR_.call(null, b, itm);
  };
  add_BANG_ = function(b, itm) {
    switch(arguments.length) {
      case 1:
        return add_BANG___1.call(this, b);
      case 2:
        return add_BANG___2.call(this, b, itm);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  add_BANG_.cljs$core$IFn$_invoke$arity$1 = add_BANG___1;
  add_BANG_.cljs$core$IFn$_invoke$arity$2 = add_BANG___2;
  return add_BANG_;
}();
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
  var obj22336 = {};
  return obj22336;
}();
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__22337 = cnt + 1;
      cnt = G__22337;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4643__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4643__auto__) {
      var v_22338 = this$.pop();
      if (keep_QMARK_.call(null, v_22338)) {
        this$.unshift(v_22338);
      } else {
      }
      var G__22339 = x + 1;
      x = G__22339;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  self__.buf.unbounded_unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
  } else {
    self__.buf.unshift(itm);
  }
  return this$__$1;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  self__.buf.unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("goog.async.nextTick");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_22340 = 0;
  while (true) {
    var m_22341 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_22341 == null) {
    } else {
      m_22341.call(null);
      if (count_22340 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__22342 = count_22340 + 1;
        count_22340 = G__22342;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__3749__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (cljs.core.truth_(and__3749__auto__)) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__3749__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    return goog.async.nextTick(cljs.core.async.impl.dispatch.process_messages);
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if (typeof cljs.core.async.impl.channels.t22346 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t22346 = function(val, box, meta22347) {
      this.val = val;
      this.box = box;
      this.meta22347 = meta22347;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t22346.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t22346.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22348) {
      var self__ = this;
      var _22348__$1 = this;
      return self__.meta22347;
    };
    cljs.core.async.impl.channels.t22346.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22348, meta22347__$1) {
      var self__ = this;
      var _22348__$1 = this;
      return new cljs.core.async.impl.channels.t22346(self__.val, self__.box, meta22347__$1);
    };
    cljs.core.async.impl.channels.t22346.cljs$lang$type = true;
    cljs.core.async.impl.channels.t22346.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t22346";
    cljs.core.async.impl.channels.t22346.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
      return cljs.core._write.call(null, writer__4344__auto__, "cljs.core.async.impl.channels/t22346");
    };
    cljs.core.async.impl.channels.__GT_t22346 = function __GT_t22346(val__$1, box__$1, meta22347) {
      return new cljs.core.async.impl.channels.t22346(val__$1, box__$1, meta22347);
    };
  }
  return new cljs.core.async.impl.channels.t22346(val, box, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 22, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 18, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 17, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/tim/clojure/logging-dashboard/resources/public/js/cljs/core/async/impl/channels.cljs"], 
  null));
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.MMC = function() {
  var obj22350 = {};
  return obj22350;
}();
cljs.core.async.impl.channels.abort = function abort(this$) {
  if (function() {
    var and__3749__auto__ = this$;
    if (and__3749__auto__) {
      return this$.cljs$core$async$impl$channels$MMC$abort$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return this$.cljs$core$async$impl$channels$MMC$abort$arity$1(this$);
  } else {
    var x__4400__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3761__auto__ = cljs.core.async.impl.channels.abort[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core.async.impl.channels.abort["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "MMC.abort", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
  this.add_BANG_ = add_BANG_;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    if (cljs.core.truth_(function() {
      var and__3749__auto__ = self__.buf;
      if (cljs.core.truth_(and__3749__auto__)) {
        return self__.puts.length === 0;
      } else {
        return and__3749__auto__;
      }
    }())) {
      self__.add_BANG_.call(null, self__.buf);
    } else {
    }
    while (true) {
      var taker_22351 = self__.takes.pop();
      if (taker_22351 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_22351)) {
          var take_cb_22352 = cljs.core.async.impl.protocols.commit.call(null, taker_22351);
          var val_22353 = cljs.core.truth_(function() {
            var and__3749__auto__ = self__.buf;
            if (cljs.core.truth_(and__3749__auto__)) {
              return cljs.core.count.call(null, self__.buf) > 0;
            } else {
              return and__3749__auto__;
            }
          }()) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_22352, val_22353, taker_22351, this$__$1) {
            return function() {
              return take_cb_22352.call(null, val_22353);
            };
          }(take_cb_22352, val_22353, taker_22351, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      var retval = cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
      while (true) {
        if (cljs.core.truth_(cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
        } else {
          var putter_22354 = self__.puts.pop();
          if (putter_22354 == null) {
          } else {
            var put_handler_22355 = putter_22354.handler;
            var val_22356 = putter_22354.val;
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_22355)) {
              var put_cb_22357 = cljs.core.async.impl.protocols.commit.call(null, put_handler_22355);
              cljs.core.async.impl.protocols.commit.call(null, handler);
              cljs.core.async.impl.dispatch.run.call(null, function(put_cb_22357, put_handler_22355, val_22356, putter_22354, _, retval, this$__$1) {
                return function() {
                  return put_cb_22357.call(null, true);
                };
              }(put_cb_22357, put_handler_22355, val_22356, putter_22354, _, retval, this$__$1));
              if (cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val_22356))) {
                cljs.core.async.impl.channels.abort.call(null, this$__$1);
              } else {
              }
            } else {
            }
            continue;
          }
        }
        break;
      }
      return retval;
    } else {
      var putter = function() {
        while (true) {
          var putter = self__.puts.pop();
          if (cljs.core.truth_(putter)) {
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, putter.handler)) {
              return putter;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(putter)) {
        var put_cb = cljs.core.async.impl.protocols.commit.call(null, putter.handler);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb, putter, this$__$1) {
          return function() {
            return put_cb.call(null, true);
          };
        }(put_cb, putter, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, putter.val);
      } else {
        if (cljs.core.truth_(self__.closed)) {
          if (cljs.core.truth_(self__.buf)) {
            self__.add_BANG_.call(null, self__.buf);
          } else {
          }
          if (cljs.core.truth_(function() {
            var and__3749__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, handler);
            if (cljs.core.truth_(and__3749__auto__)) {
              return cljs.core.async.impl.protocols.commit.call(null, handler);
            } else {
              return and__3749__auto__;
            }
          }())) {
            var has_val = function() {
              var and__3749__auto__ = self__.buf;
              if (cljs.core.truth_(and__3749__auto__)) {
                return cljs.core.count.call(null, self__.buf) > 0;
              } else {
                return and__3749__auto__;
              }
            }();
            var val = cljs.core.truth_(has_val) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            return null;
          }
        } else {
          if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_takes = 0;
            self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
          } else {
            self__.dirty_takes = self__.dirty_takes + 1;
          }
          if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", -280799999, null), new cljs.core.Symbol(null, "takes", 
            "takes", 298247964, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
          }
          self__.takes.unbounded_unshift(handler);
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, !closed__$1);
  } else {
    if (cljs.core.truth_(function() {
      var and__3749__auto__ = self__.buf;
      if (cljs.core.truth_(and__3749__auto__)) {
        return cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf));
      } else {
        return and__3749__auto__;
      }
    }())) {
      cljs.core.async.impl.protocols.commit.call(null, handler);
      var done_QMARK_ = cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val));
      while (true) {
        if (self__.takes.length > 0 && cljs.core.count.call(null, self__.buf) > 0) {
          var taker_22358 = self__.takes.pop();
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_22358)) {
            var take_cb_22359 = cljs.core.async.impl.protocols.commit.call(null, taker_22358);
            var val_22360__$1 = cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf);
            cljs.core.async.impl.dispatch.run.call(null, function(take_cb_22359, val_22360__$1, taker_22358, done_QMARK_, closed__$1, this$__$1) {
              return function() {
                return take_cb_22359.call(null, val_22360__$1);
              };
            }(take_cb_22359, val_22360__$1, taker_22358, done_QMARK_, closed__$1, this$__$1));
          } else {
            continue;
          }
        } else {
        }
        break;
      }
      if (done_QMARK_) {
        cljs.core.async.impl.channels.abort.call(null, this$__$1);
      } else {
      }
      return cljs.core.async.impl.channels.box.call(null, true);
    } else {
      var taker = function() {
        while (true) {
          var taker = self__.takes.pop();
          if (cljs.core.truth_(taker)) {
            if (cljs.core.truth_(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker))) {
              return taker;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(taker)) {
        var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(take_cb, taker, closed__$1, this$__$1) {
          return function() {
            return take_cb.call(null, val);
          };
        }(take_cb, taker, closed__$1, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, true);
      } else {
        if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
          self__.dirty_puts = 0;
          self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
        } else {
          self__.dirty_puts = self__.dirty_puts + 1;
        }
        if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
        } else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
          -280799999, null), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
        }
        self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
        return null;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$abort$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  while (true) {
    var putter_22361 = self__.puts.pop();
    if (putter_22361 == null) {
    } else {
      var put_handler_22362 = putter_22361.handler;
      var val_22363 = putter_22361.val;
      if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_22362)) {
        var put_cb_22364 = cljs.core.async.impl.protocols.commit.call(null, put_handler_22362);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb_22364, put_handler_22362, val_22363, putter_22361, this$__$1) {
          return function() {
            return put_cb_22364.call(null, true);
          };
        }(put_cb_22364, put_handler_22362, val_22363, putter_22361, this$__$1));
      } else {
        continue;
      }
    }
    break;
  }
  self__.puts.cleanup(cljs.core.constantly.call(null, false));
  return cljs.core.async.impl.protocols.close_BANG_.call(null, this$__$1);
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_);
};
cljs.core.async.impl.channels.ex_handler = function ex_handler(ex) {
  console.log(ex);
  return null;
};
cljs.core.async.impl.channels.handle = function handle(buf, exh, t) {
  var else$ = function() {
    var or__3761__auto__ = exh;
    if (cljs.core.truth_(or__3761__auto__)) {
      return or__3761__auto__;
    } else {
      return cljs.core.async.impl.channels.ex_handler;
    }
  }().call(null, t);
  if (else$ == null) {
    return buf;
  } else {
    return cljs.core.async.impl.protocols.add_BANG_.call(null, buf, else$);
  }
};
cljs.core.async.impl.channels.chan = function() {
  var chan = null;
  var chan__1 = function(buf) {
    return chan.call(null, buf, null);
  };
  var chan__2 = function(buf, xform) {
    return chan.call(null, buf, xform, null);
  };
  var chan__3 = function(buf, xform, exh) {
    return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, false, function() {
      var add_BANG_ = cljs.core.truth_(xform) ? xform.call(null, cljs.core.async.impl.protocols.add_BANG_) : cljs.core.async.impl.protocols.add_BANG_;
      return function(add_BANG_) {
        return function() {
          var G__22369 = null;
          var G__22369__1 = function(buf__$1) {
            try {
              return add_BANG_.call(null, buf__$1);
            } catch (e22367) {
              var t = e22367;
              return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
            }
          };
          var G__22369__2 = function(buf__$1, val) {
            try {
              return add_BANG_.call(null, buf__$1, val);
            } catch (e22368) {
              var t = e22368;
              return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
            }
          };
          G__22369 = function(buf__$1, val) {
            switch(arguments.length) {
              case 1:
                return G__22369__1.call(this, buf__$1);
              case 2:
                return G__22369__2.call(this, buf__$1, val);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__22369.cljs$core$IFn$_invoke$arity$1 = G__22369__1;
          G__22369.cljs$core$IFn$_invoke$arity$2 = G__22369__2;
          return G__22369;
        }();
      }(add_BANG_);
    }());
  };
  chan = function(buf, xform, exh) {
    switch(arguments.length) {
      case 1:
        return chan__1.call(this, buf);
      case 2:
        return chan__2.call(this, buf, xform);
      case 3:
        return chan__3.call(this, buf, xform, exh);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  chan.cljs$core$IFn$_invoke$arity$2 = chan__2;
  chan.cljs$core$IFn$_invoke$arity$3 = chan__3;
  return chan;
}();
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t22286 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t22286 = function(f, fn_handler, meta22287) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta22287 = meta22287;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t22286.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t22286.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t22286.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t22286.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22288) {
      var self__ = this;
      var _22288__$1 = this;
      return self__.meta22287;
    };
    cljs.core.async.impl.ioc_helpers.t22286.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22288, meta22287__$1) {
      var self__ = this;
      var _22288__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t22286(self__.f, self__.fn_handler, meta22287__$1);
    };
    cljs.core.async.impl.ioc_helpers.t22286.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t22286.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t22286";
    cljs.core.async.impl.ioc_helpers.t22286.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
      return cljs.core._write.call(null, writer__4344__auto__, "cljs.core.async.impl.ioc-helpers/t22286");
    };
    cljs.core.async.impl.ioc_helpers.__GT_t22286 = function __GT_t22286(f__$1, fn_handler__$1, meta22287) {
      return new cljs.core.async.impl.ioc_helpers.t22286(f__$1, fn_handler__$1, meta22287);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t22286(f, fn_handler, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 19, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 30, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 27, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/tim/clojure/logging-dashboard/resources/public/js/cljs/core/async/impl/ioc_helpers.cljs"], 
  null));
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e22290) {
    if (e22290 instanceof Object) {
      var ex = e22290;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      throw e22290;
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_22293_22295 = state;
    statearr_22293_22295[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_22293_22295[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_22294_22296 = state;
    statearr_22294_22296[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_22294_22296[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(ret_val) {
    var statearr_22299_22301 = state;
    statearr_22299_22301[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = ret_val;
    statearr_22299_22301[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_22300_22302 = state;
    statearr_22300_22302[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_22300_22302[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 5) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4359__auto__, k__4360__auto__) {
  var self__ = this;
  var this__4359__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4359__auto____$1, k__4360__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4361__auto__, k22304, else__4362__auto__) {
  var self__ = this;
  var this__4361__auto____$1 = this;
  var G__22306 = k22304 instanceof cljs.core.Keyword ? k22304.fqn : null;
  switch(G__22306) {
    case "prev":
      return self__.prev;
      break;
    case "continue-block":
      return self__.continue_block;
      break;
    case "finally-block":
      return self__.finally_block;
      break;
    case "catch-exception":
      return self__.catch_exception;
      break;
    case "catch-block":
      return self__.catch_block;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k22304, else__4362__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4373__auto__, writer__4374__auto__, opts__4375__auto__) {
  var self__ = this;
  var this__4373__auto____$1 = this;
  var pr_pair__4376__auto__ = function(this__4373__auto____$1) {
    return function(keyval__4377__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4374__auto__, cljs.core.pr_writer, "", " ", "", opts__4375__auto__, keyval__4377__auto__);
    };
  }(this__4373__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4374__auto__, pr_pair__4376__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4375__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4357__auto__) {
  var self__ = this;
  var this__4357__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4353__auto__) {
  var self__ = this;
  var this__4353__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4363__auto__) {
  var self__ = this;
  var this__4363__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4354__auto__) {
  var self__ = this;
  var this__4354__auto____$1 = this;
  var h__4177__auto__ = self__.__hash;
  if (!(h__4177__auto__ == null)) {
    return h__4177__auto__;
  } else {
    var h__4177__auto____$1 = cljs.core.hash_imap.call(null, this__4354__auto____$1);
    self__.__hash = h__4177__auto____$1;
    return h__4177__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4355__auto__, other__4356__auto__) {
  var self__ = this;
  var this__4355__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3749__auto__ = other__4356__auto__;
    if (cljs.core.truth_(and__3749__auto__)) {
      return this__4355__auto____$1.constructor === other__4356__auto__.constructor && cljs.core.equiv_map.call(null, this__4355__auto____$1, other__4356__auto__);
    } else {
      return and__3749__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4368__auto__, k__4369__auto__) {
  var self__ = this;
  var this__4368__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), k__4369__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4368__auto____$1), self__.__meta), k__4369__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4369__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4366__auto__, k__4367__auto__, G__22303) {
  var self__ = this;
  var this__4366__auto____$1 = this;
  var pred__22307 = cljs.core.keyword_identical_QMARK_;
  var expr__22308 = k__4367__auto__;
  if (cljs.core.truth_(pred__22307.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), expr__22308))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__22303, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__22307.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), expr__22308))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__22303, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__22307.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), expr__22308))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__22303, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__22307.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), expr__22308))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__22303, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__22307.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), expr__22308))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__22303, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4367__auto__, G__22303), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4371__auto__) {
  var self__ = this;
  var this__4371__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4358__auto__, G__22303) {
  var self__ = this;
  var this__4358__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__22303, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4364__auto__, entry__4365__auto__) {
  var self__ = this;
  var this__4364__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4365__auto__)) {
    return cljs.core._assoc.call(null, this__4364__auto____$1, cljs.core._nth.call(null, entry__4365__auto__, 0), cljs.core._nth.call(null, entry__4365__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4364__auto____$1, entry__4365__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4393__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4393__auto__, writer__4394__auto__) {
  return cljs.core._write.call(null, writer__4394__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function __GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function map__GT_ExceptionFrame(G__22305) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(G__22305), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(G__22305), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(G__22305), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(G__22305), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(G__22305), null, cljs.core.dissoc.call(null, G__22305, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)));
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_22312 = state;
  statearr_22312[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_22312;
};
cljs.core.async.impl.ioc_helpers.process_exception = function process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__3749__auto__ = exception;
      if (cljs.core.truth_(and__3749__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__3749__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__3749__auto__ = exception;
        if (cljs.core.truth_(and__3749__auto__)) {
          var and__3749__auto____$1 = catch_block;
          if (cljs.core.truth_(and__3749__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__3749__auto____$1;
          }
        } else {
          return and__3749__auto__;
        }
      }())) {
        var statearr_22318 = state;
        statearr_22318[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_22318[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_22318[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_22318[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null);
        return statearr_22318;
      } else {
        if (cljs.core.truth_(function() {
          var and__3749__auto__ = exception;
          if (cljs.core.truth_(and__3749__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__3749__auto__;
          }
        }())) {
          var statearr_22319_22323 = state;
          statearr_22319_22323[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__22324 = state;
          state = G__22324;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__3749__auto__ = exception;
            if (cljs.core.truth_(and__3749__auto__)) {
              var and__3749__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__3749__auto____$1) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3749__auto____$1;
              }
            } else {
              return and__3749__auto__;
            }
          }())) {
            var statearr_22320 = state;
            statearr_22320[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_22320[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
            return statearr_22320;
          } else {
            if (cljs.core.truth_(function() {
              var and__3749__auto__ = cljs.core.not.call(null, exception);
              if (and__3749__auto__) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3749__auto__;
              }
            }())) {
              var statearr_22321 = state;
              statearr_22321[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_22321[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
              return statearr_22321;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_22322 = state;
                statearr_22322[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_22322[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_22322;
              } else {
                throw new Error("No matching clause");
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0);
  };
  var random_level__1 = function(level) {
    while (true) {
      if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__22259 = level + 1;
        level = G__22259;
        continue;
      } else {
        return level;
      }
      break;
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level;
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level);
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_22260 = 0;
    while (true) {
      if (i_22260 < arr.length) {
        arr[i_22260] = null;
        var G__22261 = i_22260 + 1;
        i_22260 = G__22261;
        continue;
      } else {
      }
      break;
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node;
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null);
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while (true) {
      if (!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while (true) {
            var temp__4124__auto__ = x__$1.forward[level];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var x_SINGLEQUOTE_ = temp__4124__auto__;
              if (x_SINGLEQUOTE_.key < k) {
                var G__22262 = x_SINGLEQUOTE_;
                x__$1 = G__22262;
                continue;
              } else {
                return x__$1;
              }
            } else {
              return x__$1;
            }
            break;
          }
        }();
        if (update == null) {
        } else {
          update[level] = x__$1;
        }
        var G__22263 = x__$1;
        var G__22264 = k;
        var G__22265 = level - 1;
        var G__22266 = update;
        x = G__22263;
        k = G__22264;
        level = G__22265;
        update = G__22266;
        continue;
      } else {
        return x;
      }
      break;
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node;
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_22267 = self__.level + 1;
      while (true) {
        if (i_22267 <= new_level + 1) {
          update[i_22267] = self__.header;
          var G__22268 = i_22267 + 1;
          i_22267 = G__22268;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_22269 = 0;
    while (true) {
      if (i_22269 <= self__.level) {
        var links_22270 = update[i_22269].forward;
        if (links_22270[i_22269] === x__$1) {
          links_22270[i_22269] = x__$1.forward[i_22269];
          var G__22271 = i_22269 + 1;
          i_22269 = G__22271;
          continue;
        } else {
          var G__22272 = i_22269 + 1;
          i_22269 = G__22272;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__22273 = x_SINGLEQUOTE_;
              x__$1 = G__22273;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__22274 = nx;
        var G__22275 = level__$1 - 1;
        x = G__22274;
        level__$1 = G__22275;
        continue;
      } else {
        var G__22276 = x;
        var G__22277 = level__$1 - 1;
        x = G__22276;
        level__$1 = G__22277;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__22278 = x_SINGLEQUOTE_;
              x__$1 = G__22278;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__22279 = nx;
        var G__22280 = level__$1 - 1;
        x = G__22279;
        level__$1 = G__22280;
        continue;
      } else {
        var G__22281 = x;
        var G__22282 = level__$1 - 1;
        x = G__22281;
        level__$1 = G__22282;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
  return cljs.core._write.call(null, writer__4344__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3761__auto__ = cljs.core.truth_(function() {
    var and__3749__auto__ = me;
    if (cljs.core.truth_(and__3749__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__3749__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__3761__auto__)) {
    return or__3761__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__3761__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__3761__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.t19174 !== "undefined") {
  } else {
    cljs.core.async.t19174 = function(f, fn_handler, meta19175) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta19175 = meta19175;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t19174.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t19174.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t19174.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t19174.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19176) {
      var self__ = this;
      var _19176__$1 = this;
      return self__.meta19175;
    };
    cljs.core.async.t19174.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19176, meta19175__$1) {
      var self__ = this;
      var _19176__$1 = this;
      return new cljs.core.async.t19174(self__.f, self__.fn_handler, meta19175__$1);
    };
    cljs.core.async.t19174.cljs$lang$type = true;
    cljs.core.async.t19174.cljs$lang$ctorStr = "cljs.core.async/t19174";
    cljs.core.async.t19174.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
      return cljs.core._write.call(null, writer__4344__auto__, "cljs.core.async/t19174");
    };
    cljs.core.async.__GT_t19174 = function __GT_t19174(f__$1, fn_handler__$1, meta19175) {
      return new cljs.core.async.t19174(f__$1, fn_handler__$1, meta19175);
    };
  }
  return new cljs.core.async.t19174(f, fn_handler, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 20, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 16, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 13, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/tim/clojure/logging-dashboard/resources/public/js/cljs/core/async.cljs"], null));
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function unblocking_buffer_QMARK_(buff) {
  var G__19178 = buff;
  if (G__19178) {
    var bit__4437__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3761__auto__ = bit__4437__auto__;
      if (cljs.core.truth_(or__3761__auto__)) {
        return or__3761__auto__;
      } else {
        return G__19178.cljs$core$async$impl$protocols$UnblockingBuffer$;
      }
    }())) {
      return true;
    } else {
      if (!G__19178.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__19178);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__19178);
  }
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null);
  };
  var chan__1 = function(buf_or_n) {
    return chan.call(null, buf_or_n, null, null);
  };
  var chan__2 = function(buf_or_n, xform) {
    return chan.call(null, buf_or_n, xform, null);
  };
  var chan__3 = function(buf_or_n, xform, ex_handler) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    if (cljs.core.truth_(xform)) {
      if (cljs.core.truth_(buf_or_n__$1)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("buffer must be supplied when transducer is"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "buf-or-n", "buf-or-n", -1646815050, null)))].join(""));
      }
    } else {
    }
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1, xform, ex_handler);
  };
  chan = function(buf_or_n, xform, ex_handler) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n);
      case 2:
        return chan__2.call(this, buf_or_n, xform);
      case 3:
        return chan__3.call(this, buf_or_n, xform, ex_handler);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  chan.cljs$core$IFn$_invoke$arity$2 = chan__2;
  chan.cljs$core$IFn$_invoke$arity$3 = chan__3;
  return chan;
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  throw new Error("\x3c! used not in (go ...) block");
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true);
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(ret)) {
      var val_19179 = cljs.core.deref.call(null, ret);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_19179);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(val_19179, ret) {
          return function() {
            return fn1.call(null, val_19179);
          };
        }(val_19179, ret));
      }
    } else {
    }
    return null;
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_;
}();
cljs.core.async.nop = function nop(_) {
  return null;
};
cljs.core.async.fhnop = cljs.core.async.fn_handler.call(null, cljs.core.async.nop);
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  throw new Error("\x3e! used not in (go ...) block");
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fhnop);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var ret = temp__4124__auto__;
      return cljs.core.deref.call(null, ret);
    } else {
      return true;
    }
  };
  var put_BANG___3 = function(port, val, fn1) {
    return put_BANG_.call(null, port, val, fn1, true);
  };
  var put_BANG___4 = function(port, val, fn1, on_caller_QMARK_) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(temp__4124__auto__)) {
      var retb = temp__4124__auto__;
      var ret = cljs.core.deref.call(null, retb);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, ret);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(ret, retb, temp__4124__auto__) {
          return function() {
            return fn1.call(null, ret);
          };
        }(ret, retb, temp__4124__auto__));
      }
      return ret;
    } else {
      return true;
    }
  };
  put_BANG_ = function(port, val, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn1);
      case 4:
        return put_BANG___4.call(this, port, val, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_;
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__4643__auto___19180 = n;
  var x_19181 = 0;
  while (true) {
    if (x_19181 < n__4643__auto___19180) {
      a[x_19181] = 0;
      var G__19182 = x_19181 + 1;
      x_19181 = G__19182;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__19183 = i + 1;
      i = G__19183;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t19187 !== "undefined") {
  } else {
    cljs.core.async.t19187 = function(flag, alt_flag, meta19188) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta19188 = meta19188;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t19187.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t19187.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t19187.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t19187.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_19189) {
        var self__ = this;
        var _19189__$1 = this;
        return self__.meta19188;
      };
    }(flag);
    cljs.core.async.t19187.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_19189, meta19188__$1) {
        var self__ = this;
        var _19189__$1 = this;
        return new cljs.core.async.t19187(self__.flag, self__.alt_flag, meta19188__$1);
      };
    }(flag);
    cljs.core.async.t19187.cljs$lang$type = true;
    cljs.core.async.t19187.cljs$lang$ctorStr = "cljs.core.async/t19187";
    cljs.core.async.t19187.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
        return cljs.core._write.call(null, writer__4344__auto__, "cljs.core.async/t19187");
      };
    }(flag);
    cljs.core.async.__GT_t19187 = function(flag) {
      return function __GT_t19187(flag__$1, alt_flag__$1, meta19188) {
        return new cljs.core.async.t19187(flag__$1, alt_flag__$1, meta19188);
      };
    }(flag);
  }
  return new cljs.core.async.t19187(flag, alt_flag, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 15, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 146, new cljs.core.Keyword(null, "column", "column", 2078222095), 5, new cljs.core.Keyword(null, "line", "line", 212345235), 141, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/tim/clojure/logging-dashboard/resources/public/js/cljs/core/async.cljs"], 
  null));
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if (typeof cljs.core.async.t19193 !== "undefined") {
  } else {
    cljs.core.async.t19193 = function(cb, flag, alt_handler, meta19194) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta19194 = meta19194;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t19193.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t19193.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t19193.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t19193.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19195) {
      var self__ = this;
      var _19195__$1 = this;
      return self__.meta19194;
    };
    cljs.core.async.t19193.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19195, meta19194__$1) {
      var self__ = this;
      var _19195__$1 = this;
      return new cljs.core.async.t19193(self__.cb, self__.flag, self__.alt_handler, meta19194__$1);
    };
    cljs.core.async.t19193.cljs$lang$type = true;
    cljs.core.async.t19193.cljs$lang$ctorStr = "cljs.core.async/t19193";
    cljs.core.async.t19193.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
      return cljs.core._write.call(null, writer__4344__auto__, "cljs.core.async/t19193");
    };
    cljs.core.async.__GT_t19193 = function __GT_t19193(cb__$1, flag__$1, alt_handler__$1, meta19194) {
      return new cljs.core.async.t19193(cb__$1, flag__$1, alt_handler__$1, meta19194);
    };
  }
  return new cljs.core.async.t19193(cb, flag, alt_handler, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 11, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 154, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 149, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/tim/clojure/logging-dashboard/resources/public/js/cljs/core/async.cljs"], 
  null));
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function(p1__19196_SHARP_) {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__19196_SHARP_, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__19197_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__19197_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__3761__auto__ = wport;
            if (cljs.core.truth_(or__3761__auto__)) {
              return or__3761__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__19198 = i + 1;
          i = G__19198;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__3761__auto__ = ret;
  if (cljs.core.truth_(or__3761__auto__)) {
    return or__3761__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
      var temp__4126__auto__ = function() {
        var and__3749__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__3749__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__3749__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4126__auto__)) {
        var got = temp__4126__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", -1987822328)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__19199) {
    var map__19201 = p__19199;
    var map__19201__$1 = cljs.core.seq_QMARK_.call(null, map__19201) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19201) : map__19201;
    var opts = map__19201__$1;
    throw new Error("alts! used not in (go ...) block");
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__19199 = null;
    if (arguments.length > 1) {
      p__19199 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return alts_BANG___delegate.call(this, ports, p__19199);
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__19202) {
    var ports = cljs.core.first(arglist__19202);
    var p__19199 = cljs.core.rest(arglist__19202);
    return alts_BANG___delegate(ports, p__19199);
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_;
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true);
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__6670__auto___19297 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6670__auto___19297) {
      return function() {
        var f__6671__auto__ = function() {
          var switch__6655__auto__ = function(c__6670__auto___19297) {
            return function(state_19273) {
              var state_val_19274 = state_19273[1];
              if (state_val_19274 === 7) {
                var inst_19269 = state_19273[2];
                var state_19273__$1 = state_19273;
                var statearr_19275_19298 = state_19273__$1;
                statearr_19275_19298[2] = inst_19269;
                statearr_19275_19298[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_19274 === 1) {
                  var state_19273__$1 = state_19273;
                  var statearr_19276_19299 = state_19273__$1;
                  statearr_19276_19299[2] = null;
                  statearr_19276_19299[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_19274 === 4) {
                    var inst_19252 = state_19273[7];
                    var inst_19252__$1 = state_19273[2];
                    var inst_19253 = inst_19252__$1 == null;
                    var state_19273__$1 = function() {
                      var statearr_19277 = state_19273;
                      statearr_19277[7] = inst_19252__$1;
                      return statearr_19277;
                    }();
                    if (cljs.core.truth_(inst_19253)) {
                      var statearr_19278_19300 = state_19273__$1;
                      statearr_19278_19300[1] = 5;
                    } else {
                      var statearr_19279_19301 = state_19273__$1;
                      statearr_19279_19301[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_19274 === 13) {
                      var state_19273__$1 = state_19273;
                      var statearr_19280_19302 = state_19273__$1;
                      statearr_19280_19302[2] = null;
                      statearr_19280_19302[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_19274 === 6) {
                        var inst_19252 = state_19273[7];
                        var state_19273__$1 = state_19273;
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19273__$1, 11, to, inst_19252);
                      } else {
                        if (state_val_19274 === 3) {
                          var inst_19271 = state_19273[2];
                          var state_19273__$1 = state_19273;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19273__$1, inst_19271);
                        } else {
                          if (state_val_19274 === 12) {
                            var state_19273__$1 = state_19273;
                            var statearr_19281_19303 = state_19273__$1;
                            statearr_19281_19303[2] = null;
                            statearr_19281_19303[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_19274 === 2) {
                              var state_19273__$1 = state_19273;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19273__$1, 4, from);
                            } else {
                              if (state_val_19274 === 11) {
                                var inst_19262 = state_19273[2];
                                var state_19273__$1 = state_19273;
                                if (cljs.core.truth_(inst_19262)) {
                                  var statearr_19282_19304 = state_19273__$1;
                                  statearr_19282_19304[1] = 12;
                                } else {
                                  var statearr_19283_19305 = state_19273__$1;
                                  statearr_19283_19305[1] = 13;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_19274 === 9) {
                                  var state_19273__$1 = state_19273;
                                  var statearr_19284_19306 = state_19273__$1;
                                  statearr_19284_19306[2] = null;
                                  statearr_19284_19306[1] = 10;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_19274 === 5) {
                                    var state_19273__$1 = state_19273;
                                    if (cljs.core.truth_(close_QMARK_)) {
                                      var statearr_19285_19307 = state_19273__$1;
                                      statearr_19285_19307[1] = 8;
                                    } else {
                                      var statearr_19286_19308 = state_19273__$1;
                                      statearr_19286_19308[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_19274 === 14) {
                                      var inst_19267 = state_19273[2];
                                      var state_19273__$1 = state_19273;
                                      var statearr_19287_19309 = state_19273__$1;
                                      statearr_19287_19309[2] = inst_19267;
                                      statearr_19287_19309[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_19274 === 10) {
                                        var inst_19259 = state_19273[2];
                                        var state_19273__$1 = state_19273;
                                        var statearr_19288_19310 = state_19273__$1;
                                        statearr_19288_19310[2] = inst_19259;
                                        statearr_19288_19310[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_19274 === 8) {
                                          var inst_19256 = cljs.core.async.close_BANG_.call(null, to);
                                          var state_19273__$1 = state_19273;
                                          var statearr_19289_19311 = state_19273__$1;
                                          statearr_19289_19311[2] = inst_19256;
                                          statearr_19289_19311[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6670__auto___19297);
          return function(switch__6655__auto__, c__6670__auto___19297) {
            return function() {
              var state_machine__6656__auto__ = null;
              var state_machine__6656__auto____0 = function() {
                var statearr_19293 = [null, null, null, null, null, null, null, null];
                statearr_19293[0] = state_machine__6656__auto__;
                statearr_19293[1] = 1;
                return statearr_19293;
              };
              var state_machine__6656__auto____1 = function(state_19273) {
                while (true) {
                  var ret_value__6657__auto__ = function() {
                    try {
                      while (true) {
                        var result__6658__auto__ = switch__6655__auto__.call(null, state_19273);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6658__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6658__auto__;
                        }
                        break;
                      }
                    } catch (e19294) {
                      if (e19294 instanceof Object) {
                        var ex__6659__auto__ = e19294;
                        var statearr_19295_19312 = state_19273;
                        statearr_19295_19312[5] = ex__6659__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19273);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e19294;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6657__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__19313 = state_19273;
                    state_19273 = G__19313;
                    continue;
                  } else {
                    return ret_value__6657__auto__;
                  }
                  break;
                }
              };
              state_machine__6656__auto__ = function(state_19273) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6656__auto____0.call(this);
                  case 1:
                    return state_machine__6656__auto____1.call(this, state_19273);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6656__auto____0;
              state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6656__auto____1;
              return state_machine__6656__auto__;
            }();
          }(switch__6655__auto__, c__6670__auto___19297);
        }();
        var state__6672__auto__ = function() {
          var statearr_19296 = f__6671__auto__.call(null);
          statearr_19296[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6670__auto___19297;
          return statearr_19296;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6672__auto__);
      };
    }(c__6670__auto___19297));
    return to;
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe;
}();
cljs.core.async.pipeline_STAR_ = function pipeline_STAR_(n, to, xf, from, close_QMARK_, ex_handler, type) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "pos?", "pos?", -244377722, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null))))].join(""));
  }
  var jobs = cljs.core.async.chan.call(null, n);
  var results = cljs.core.async.chan.call(null, n);
  var process = function(jobs, results) {
    return function(p__19497) {
      var vec__19498 = p__19497;
      var v = cljs.core.nth.call(null, vec__19498, 0, null);
      var p = cljs.core.nth.call(null, vec__19498, 1, null);
      var job = vec__19498;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1, xf, ex_handler);
        var c__6670__auto___19680 = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function(c__6670__auto___19680, res, vec__19498, v, p, job, jobs, results) {
          return function() {
            var f__6671__auto__ = function() {
              var switch__6655__auto__ = function(c__6670__auto___19680, res, vec__19498, v, p, job, jobs, results) {
                return function(state_19503) {
                  var state_val_19504 = state_19503[1];
                  if (state_val_19504 === 2) {
                    var inst_19500 = state_19503[2];
                    var inst_19501 = cljs.core.async.close_BANG_.call(null, res);
                    var state_19503__$1 = function() {
                      var statearr_19505 = state_19503;
                      statearr_19505[7] = inst_19500;
                      return statearr_19505;
                    }();
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19503__$1, inst_19501);
                  } else {
                    if (state_val_19504 === 1) {
                      var state_19503__$1 = state_19503;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19503__$1, 2, res, v);
                    } else {
                      return null;
                    }
                  }
                };
              }(c__6670__auto___19680, res, vec__19498, v, p, job, jobs, results);
              return function(switch__6655__auto__, c__6670__auto___19680, res, vec__19498, v, p, job, jobs, results) {
                return function() {
                  var state_machine__6656__auto__ = null;
                  var state_machine__6656__auto____0 = function() {
                    var statearr_19509 = [null, null, null, null, null, null, null, null];
                    statearr_19509[0] = state_machine__6656__auto__;
                    statearr_19509[1] = 1;
                    return statearr_19509;
                  };
                  var state_machine__6656__auto____1 = function(state_19503) {
                    while (true) {
                      var ret_value__6657__auto__ = function() {
                        try {
                          while (true) {
                            var result__6658__auto__ = switch__6655__auto__.call(null, state_19503);
                            if (cljs.core.keyword_identical_QMARK_.call(null, result__6658__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              continue;
                            } else {
                              return result__6658__auto__;
                            }
                            break;
                          }
                        } catch (e19510) {
                          if (e19510 instanceof Object) {
                            var ex__6659__auto__ = e19510;
                            var statearr_19511_19681 = state_19503;
                            statearr_19511_19681[5] = ex__6659__auto__;
                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19503);
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            throw e19510;
                          }
                        }
                      }();
                      if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6657__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var G__19682 = state_19503;
                        state_19503 = G__19682;
                        continue;
                      } else {
                        return ret_value__6657__auto__;
                      }
                      break;
                    }
                  };
                  state_machine__6656__auto__ = function(state_19503) {
                    switch(arguments.length) {
                      case 0:
                        return state_machine__6656__auto____0.call(this);
                      case 1:
                        return state_machine__6656__auto____1.call(this, state_19503);
                    }
                    throw new Error("Invalid arity: " + arguments.length);
                  };
                  state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6656__auto____0;
                  state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6656__auto____1;
                  return state_machine__6656__auto__;
                }();
              }(switch__6655__auto__, c__6670__auto___19680, res, vec__19498, v, p, job, jobs, results);
            }();
            var state__6672__auto__ = function() {
              var statearr_19512 = f__6671__auto__.call(null);
              statearr_19512[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6670__auto___19680;
              return statearr_19512;
            }();
            return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6672__auto__);
          };
        }(c__6670__auto___19680, res, vec__19498, v, p, job, jobs, results));
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results);
  var async = function(jobs, results, process) {
    return function(p__19513) {
      var vec__19514 = p__19513;
      var v = cljs.core.nth.call(null, vec__19514, 0, null);
      var p = cljs.core.nth.call(null, vec__19514, 1, null);
      var job = vec__19514;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1);
        xf.call(null, v, res);
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results, process);
  var n__4643__auto___19683 = n;
  var __19684 = 0;
  while (true) {
    if (__19684 < n__4643__auto___19683) {
      var G__19515_19685 = type instanceof cljs.core.Keyword ? type.fqn : null;
      switch(G__19515_19685) {
        case "async":
          var c__6670__auto___19687 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__19684, c__6670__auto___19687, G__19515_19685, n__4643__auto___19683, jobs, results, process, async) {
            return function() {
              var f__6671__auto__ = function() {
                var switch__6655__auto__ = function(__19684, c__6670__auto___19687, G__19515_19685, n__4643__auto___19683, jobs, results, process, async) {
                  return function(state_19528) {
                    var state_val_19529 = state_19528[1];
                    if (state_val_19529 === 7) {
                      var inst_19524 = state_19528[2];
                      var state_19528__$1 = state_19528;
                      var statearr_19530_19688 = state_19528__$1;
                      statearr_19530_19688[2] = inst_19524;
                      statearr_19530_19688[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_19529 === 6) {
                        var state_19528__$1 = state_19528;
                        var statearr_19531_19689 = state_19528__$1;
                        statearr_19531_19689[2] = null;
                        statearr_19531_19689[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_19529 === 5) {
                          var state_19528__$1 = state_19528;
                          var statearr_19532_19690 = state_19528__$1;
                          statearr_19532_19690[2] = null;
                          statearr_19532_19690[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_19529 === 4) {
                            var inst_19518 = state_19528[2];
                            var inst_19519 = async.call(null, inst_19518);
                            var state_19528__$1 = state_19528;
                            if (cljs.core.truth_(inst_19519)) {
                              var statearr_19533_19691 = state_19528__$1;
                              statearr_19533_19691[1] = 5;
                            } else {
                              var statearr_19534_19692 = state_19528__$1;
                              statearr_19534_19692[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_19529 === 3) {
                              var inst_19526 = state_19528[2];
                              var state_19528__$1 = state_19528;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19528__$1, inst_19526);
                            } else {
                              if (state_val_19529 === 2) {
                                var state_19528__$1 = state_19528;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19528__$1, 4, jobs);
                              } else {
                                if (state_val_19529 === 1) {
                                  var state_19528__$1 = state_19528;
                                  var statearr_19535_19693 = state_19528__$1;
                                  statearr_19535_19693[2] = null;
                                  statearr_19535_19693[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__19684, c__6670__auto___19687, G__19515_19685, n__4643__auto___19683, jobs, results, process, async);
                return function(__19684, switch__6655__auto__, c__6670__auto___19687, G__19515_19685, n__4643__auto___19683, jobs, results, process, async) {
                  return function() {
                    var state_machine__6656__auto__ = null;
                    var state_machine__6656__auto____0 = function() {
                      var statearr_19539 = [null, null, null, null, null, null, null];
                      statearr_19539[0] = state_machine__6656__auto__;
                      statearr_19539[1] = 1;
                      return statearr_19539;
                    };
                    var state_machine__6656__auto____1 = function(state_19528) {
                      while (true) {
                        var ret_value__6657__auto__ = function() {
                          try {
                            while (true) {
                              var result__6658__auto__ = switch__6655__auto__.call(null, state_19528);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__6658__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__6658__auto__;
                              }
                              break;
                            }
                          } catch (e19540) {
                            if (e19540 instanceof Object) {
                              var ex__6659__auto__ = e19540;
                              var statearr_19541_19694 = state_19528;
                              statearr_19541_19694[5] = ex__6659__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19528);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e19540;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6657__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__19695 = state_19528;
                          state_19528 = G__19695;
                          continue;
                        } else {
                          return ret_value__6657__auto__;
                        }
                        break;
                      }
                    };
                    state_machine__6656__auto__ = function(state_19528) {
                      switch(arguments.length) {
                        case 0:
                          return state_machine__6656__auto____0.call(this);
                        case 1:
                          return state_machine__6656__auto____1.call(this, state_19528);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6656__auto____0;
                    state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6656__auto____1;
                    return state_machine__6656__auto__;
                  }();
                }(__19684, switch__6655__auto__, c__6670__auto___19687, G__19515_19685, n__4643__auto___19683, jobs, results, process, async);
              }();
              var state__6672__auto__ = function() {
                var statearr_19542 = f__6671__auto__.call(null);
                statearr_19542[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6670__auto___19687;
                return statearr_19542;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6672__auto__);
            };
          }(__19684, c__6670__auto___19687, G__19515_19685, n__4643__auto___19683, jobs, results, process, async));
          break;
        case "compute":
          var c__6670__auto___19696 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__19684, c__6670__auto___19696, G__19515_19685, n__4643__auto___19683, jobs, results, process, async) {
            return function() {
              var f__6671__auto__ = function() {
                var switch__6655__auto__ = function(__19684, c__6670__auto___19696, G__19515_19685, n__4643__auto___19683, jobs, results, process, async) {
                  return function(state_19555) {
                    var state_val_19556 = state_19555[1];
                    if (state_val_19556 === 7) {
                      var inst_19551 = state_19555[2];
                      var state_19555__$1 = state_19555;
                      var statearr_19557_19697 = state_19555__$1;
                      statearr_19557_19697[2] = inst_19551;
                      statearr_19557_19697[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_19556 === 6) {
                        var state_19555__$1 = state_19555;
                        var statearr_19558_19698 = state_19555__$1;
                        statearr_19558_19698[2] = null;
                        statearr_19558_19698[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_19556 === 5) {
                          var state_19555__$1 = state_19555;
                          var statearr_19559_19699 = state_19555__$1;
                          statearr_19559_19699[2] = null;
                          statearr_19559_19699[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_19556 === 4) {
                            var inst_19545 = state_19555[2];
                            var inst_19546 = process.call(null, inst_19545);
                            var state_19555__$1 = state_19555;
                            if (cljs.core.truth_(inst_19546)) {
                              var statearr_19560_19700 = state_19555__$1;
                              statearr_19560_19700[1] = 5;
                            } else {
                              var statearr_19561_19701 = state_19555__$1;
                              statearr_19561_19701[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_19556 === 3) {
                              var inst_19553 = state_19555[2];
                              var state_19555__$1 = state_19555;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19555__$1, inst_19553);
                            } else {
                              if (state_val_19556 === 2) {
                                var state_19555__$1 = state_19555;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19555__$1, 4, jobs);
                              } else {
                                if (state_val_19556 === 1) {
                                  var state_19555__$1 = state_19555;
                                  var statearr_19562_19702 = state_19555__$1;
                                  statearr_19562_19702[2] = null;
                                  statearr_19562_19702[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__19684, c__6670__auto___19696, G__19515_19685, n__4643__auto___19683, jobs, results, process, async);
                return function(__19684, switch__6655__auto__, c__6670__auto___19696, G__19515_19685, n__4643__auto___19683, jobs, results, process, async) {
                  return function() {
                    var state_machine__6656__auto__ = null;
                    var state_machine__6656__auto____0 = function() {
                      var statearr_19566 = [null, null, null, null, null, null, null];
                      statearr_19566[0] = state_machine__6656__auto__;
                      statearr_19566[1] = 1;
                      return statearr_19566;
                    };
                    var state_machine__6656__auto____1 = function(state_19555) {
                      while (true) {
                        var ret_value__6657__auto__ = function() {
                          try {
                            while (true) {
                              var result__6658__auto__ = switch__6655__auto__.call(null, state_19555);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__6658__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__6658__auto__;
                              }
                              break;
                            }
                          } catch (e19567) {
                            if (e19567 instanceof Object) {
                              var ex__6659__auto__ = e19567;
                              var statearr_19568_19703 = state_19555;
                              statearr_19568_19703[5] = ex__6659__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19555);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e19567;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6657__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__19704 = state_19555;
                          state_19555 = G__19704;
                          continue;
                        } else {
                          return ret_value__6657__auto__;
                        }
                        break;
                      }
                    };
                    state_machine__6656__auto__ = function(state_19555) {
                      switch(arguments.length) {
                        case 0:
                          return state_machine__6656__auto____0.call(this);
                        case 1:
                          return state_machine__6656__auto____1.call(this, state_19555);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6656__auto____0;
                    state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6656__auto____1;
                    return state_machine__6656__auto__;
                  }();
                }(__19684, switch__6655__auto__, c__6670__auto___19696, G__19515_19685, n__4643__auto___19683, jobs, results, process, async);
              }();
              var state__6672__auto__ = function() {
                var statearr_19569 = f__6671__auto__.call(null);
                statearr_19569[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6670__auto___19696;
                return statearr_19569;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6672__auto__);
            };
          }(__19684, c__6670__auto___19696, G__19515_19685, n__4643__auto___19683, jobs, results, process, async));
          break;
        default:
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(type)].join(""));;
      }
      var G__19705 = __19684 + 1;
      __19684 = G__19705;
      continue;
    } else {
    }
    break;
  }
  var c__6670__auto___19706 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6670__auto___19706, jobs, results, process, async) {
    return function() {
      var f__6671__auto__ = function() {
        var switch__6655__auto__ = function(c__6670__auto___19706, jobs, results, process, async) {
          return function(state_19591) {
            var state_val_19592 = state_19591[1];
            if (state_val_19592 === 9) {
              var inst_19584 = state_19591[2];
              var state_19591__$1 = function() {
                var statearr_19593 = state_19591;
                statearr_19593[7] = inst_19584;
                return statearr_19593;
              }();
              var statearr_19594_19707 = state_19591__$1;
              statearr_19594_19707[2] = null;
              statearr_19594_19707[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_19592 === 8) {
                var inst_19577 = state_19591[8];
                var inst_19582 = state_19591[2];
                var state_19591__$1 = function() {
                  var statearr_19595 = state_19591;
                  statearr_19595[9] = inst_19582;
                  return statearr_19595;
                }();
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19591__$1, 9, results, inst_19577);
              } else {
                if (state_val_19592 === 7) {
                  var inst_19587 = state_19591[2];
                  var state_19591__$1 = state_19591;
                  var statearr_19596_19708 = state_19591__$1;
                  statearr_19596_19708[2] = inst_19587;
                  statearr_19596_19708[1] = 3;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_19592 === 6) {
                    var inst_19572 = state_19591[10];
                    var inst_19577 = state_19591[8];
                    var inst_19577__$1 = cljs.core.async.chan.call(null, 1);
                    var inst_19578 = cljs.core.PersistentVector.EMPTY_NODE;
                    var inst_19579 = [inst_19572, inst_19577__$1];
                    var inst_19580 = new cljs.core.PersistentVector(null, 2, 5, inst_19578, inst_19579, null);
                    var state_19591__$1 = function() {
                      var statearr_19597 = state_19591;
                      statearr_19597[8] = inst_19577__$1;
                      return statearr_19597;
                    }();
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19591__$1, 8, jobs, inst_19580);
                  } else {
                    if (state_val_19592 === 5) {
                      var inst_19575 = cljs.core.async.close_BANG_.call(null, jobs);
                      var state_19591__$1 = state_19591;
                      var statearr_19598_19709 = state_19591__$1;
                      statearr_19598_19709[2] = inst_19575;
                      statearr_19598_19709[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_19592 === 4) {
                        var inst_19572 = state_19591[10];
                        var inst_19572__$1 = state_19591[2];
                        var inst_19573 = inst_19572__$1 == null;
                        var state_19591__$1 = function() {
                          var statearr_19599 = state_19591;
                          statearr_19599[10] = inst_19572__$1;
                          return statearr_19599;
                        }();
                        if (cljs.core.truth_(inst_19573)) {
                          var statearr_19600_19710 = state_19591__$1;
                          statearr_19600_19710[1] = 5;
                        } else {
                          var statearr_19601_19711 = state_19591__$1;
                          statearr_19601_19711[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_19592 === 3) {
                          var inst_19589 = state_19591[2];
                          var state_19591__$1 = state_19591;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19591__$1, inst_19589);
                        } else {
                          if (state_val_19592 === 2) {
                            var state_19591__$1 = state_19591;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19591__$1, 4, from);
                          } else {
                            if (state_val_19592 === 1) {
                              var state_19591__$1 = state_19591;
                              var statearr_19602_19712 = state_19591__$1;
                              statearr_19602_19712[2] = null;
                              statearr_19602_19712[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6670__auto___19706, jobs, results, process, async);
        return function(switch__6655__auto__, c__6670__auto___19706, jobs, results, process, async) {
          return function() {
            var state_machine__6656__auto__ = null;
            var state_machine__6656__auto____0 = function() {
              var statearr_19606 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_19606[0] = state_machine__6656__auto__;
              statearr_19606[1] = 1;
              return statearr_19606;
            };
            var state_machine__6656__auto____1 = function(state_19591) {
              while (true) {
                var ret_value__6657__auto__ = function() {
                  try {
                    while (true) {
                      var result__6658__auto__ = switch__6655__auto__.call(null, state_19591);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6658__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6658__auto__;
                      }
                      break;
                    }
                  } catch (e19607) {
                    if (e19607 instanceof Object) {
                      var ex__6659__auto__ = e19607;
                      var statearr_19608_19713 = state_19591;
                      statearr_19608_19713[5] = ex__6659__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19591);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e19607;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6657__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__19714 = state_19591;
                  state_19591 = G__19714;
                  continue;
                } else {
                  return ret_value__6657__auto__;
                }
                break;
              }
            };
            state_machine__6656__auto__ = function(state_19591) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6656__auto____0.call(this);
                case 1:
                  return state_machine__6656__auto____1.call(this, state_19591);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6656__auto____0;
            state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6656__auto____1;
            return state_machine__6656__auto__;
          }();
        }(switch__6655__auto__, c__6670__auto___19706, jobs, results, process, async);
      }();
      var state__6672__auto__ = function() {
        var statearr_19609 = f__6671__auto__.call(null);
        statearr_19609[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6670__auto___19706;
        return statearr_19609;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6672__auto__);
    };
  }(c__6670__auto___19706, jobs, results, process, async));
  var c__6670__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6670__auto__, jobs, results, process, async) {
    return function() {
      var f__6671__auto__ = function() {
        var switch__6655__auto__ = function(c__6670__auto__, jobs, results, process, async) {
          return function(state_19647) {
            var state_val_19648 = state_19647[1];
            if (state_val_19648 === 7) {
              var inst_19643 = state_19647[2];
              var state_19647__$1 = state_19647;
              var statearr_19649_19715 = state_19647__$1;
              statearr_19649_19715[2] = inst_19643;
              statearr_19649_19715[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_19648 === 20) {
                var state_19647__$1 = state_19647;
                var statearr_19650_19716 = state_19647__$1;
                statearr_19650_19716[2] = null;
                statearr_19650_19716[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_19648 === 1) {
                  var state_19647__$1 = state_19647;
                  var statearr_19651_19717 = state_19647__$1;
                  statearr_19651_19717[2] = null;
                  statearr_19651_19717[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_19648 === 4) {
                    var inst_19612 = state_19647[7];
                    var inst_19612__$1 = state_19647[2];
                    var inst_19613 = inst_19612__$1 == null;
                    var state_19647__$1 = function() {
                      var statearr_19652 = state_19647;
                      statearr_19652[7] = inst_19612__$1;
                      return statearr_19652;
                    }();
                    if (cljs.core.truth_(inst_19613)) {
                      var statearr_19653_19718 = state_19647__$1;
                      statearr_19653_19718[1] = 5;
                    } else {
                      var statearr_19654_19719 = state_19647__$1;
                      statearr_19654_19719[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_19648 === 15) {
                      var inst_19625 = state_19647[8];
                      var state_19647__$1 = state_19647;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19647__$1, 18, to, inst_19625);
                    } else {
                      if (state_val_19648 === 21) {
                        var inst_19638 = state_19647[2];
                        var state_19647__$1 = state_19647;
                        var statearr_19655_19720 = state_19647__$1;
                        statearr_19655_19720[2] = inst_19638;
                        statearr_19655_19720[1] = 13;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_19648 === 13) {
                          var inst_19640 = state_19647[2];
                          var state_19647__$1 = function() {
                            var statearr_19656 = state_19647;
                            statearr_19656[9] = inst_19640;
                            return statearr_19656;
                          }();
                          var statearr_19657_19721 = state_19647__$1;
                          statearr_19657_19721[2] = null;
                          statearr_19657_19721[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_19648 === 6) {
                            var inst_19612 = state_19647[7];
                            var state_19647__$1 = state_19647;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19647__$1, 11, inst_19612);
                          } else {
                            if (state_val_19648 === 17) {
                              var inst_19633 = state_19647[2];
                              var state_19647__$1 = state_19647;
                              if (cljs.core.truth_(inst_19633)) {
                                var statearr_19658_19722 = state_19647__$1;
                                statearr_19658_19722[1] = 19;
                              } else {
                                var statearr_19659_19723 = state_19647__$1;
                                statearr_19659_19723[1] = 20;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_19648 === 3) {
                                var inst_19645 = state_19647[2];
                                var state_19647__$1 = state_19647;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19647__$1, inst_19645);
                              } else {
                                if (state_val_19648 === 12) {
                                  var inst_19622 = state_19647[10];
                                  var state_19647__$1 = state_19647;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19647__$1, 14, inst_19622);
                                } else {
                                  if (state_val_19648 === 2) {
                                    var state_19647__$1 = state_19647;
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19647__$1, 4, results);
                                  } else {
                                    if (state_val_19648 === 19) {
                                      var state_19647__$1 = state_19647;
                                      var statearr_19660_19724 = state_19647__$1;
                                      statearr_19660_19724[2] = null;
                                      statearr_19660_19724[1] = 12;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_19648 === 11) {
                                        var inst_19622 = state_19647[2];
                                        var state_19647__$1 = function() {
                                          var statearr_19661 = state_19647;
                                          statearr_19661[10] = inst_19622;
                                          return statearr_19661;
                                        }();
                                        var statearr_19662_19725 = state_19647__$1;
                                        statearr_19662_19725[2] = null;
                                        statearr_19662_19725[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_19648 === 9) {
                                          var state_19647__$1 = state_19647;
                                          var statearr_19663_19726 = state_19647__$1;
                                          statearr_19663_19726[2] = null;
                                          statearr_19663_19726[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_19648 === 5) {
                                            var state_19647__$1 = state_19647;
                                            if (cljs.core.truth_(close_QMARK_)) {
                                              var statearr_19664_19727 = state_19647__$1;
                                              statearr_19664_19727[1] = 8;
                                            } else {
                                              var statearr_19665_19728 = state_19647__$1;
                                              statearr_19665_19728[1] = 9;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_19648 === 14) {
                                              var inst_19625 = state_19647[8];
                                              var inst_19627 = state_19647[11];
                                              var inst_19625__$1 = state_19647[2];
                                              var inst_19626 = inst_19625__$1 == null;
                                              var inst_19627__$1 = cljs.core.not.call(null, inst_19626);
                                              var state_19647__$1 = function() {
                                                var statearr_19666 = state_19647;
                                                statearr_19666[8] = inst_19625__$1;
                                                statearr_19666[11] = inst_19627__$1;
                                                return statearr_19666;
                                              }();
                                              if (inst_19627__$1) {
                                                var statearr_19667_19729 = state_19647__$1;
                                                statearr_19667_19729[1] = 15;
                                              } else {
                                                var statearr_19668_19730 = state_19647__$1;
                                                statearr_19668_19730[1] = 16;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_19648 === 16) {
                                                var inst_19627 = state_19647[11];
                                                var state_19647__$1 = state_19647;
                                                var statearr_19669_19731 = state_19647__$1;
                                                statearr_19669_19731[2] = inst_19627;
                                                statearr_19669_19731[1] = 17;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_19648 === 10) {
                                                  var inst_19619 = state_19647[2];
                                                  var state_19647__$1 = state_19647;
                                                  var statearr_19670_19732 = state_19647__$1;
                                                  statearr_19670_19732[2] = inst_19619;
                                                  statearr_19670_19732[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_19648 === 18) {
                                                    var inst_19630 = state_19647[2];
                                                    var state_19647__$1 = state_19647;
                                                    var statearr_19671_19733 = state_19647__$1;
                                                    statearr_19671_19733[2] = inst_19630;
                                                    statearr_19671_19733[1] = 17;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_19648 === 8) {
                                                      var inst_19616 = cljs.core.async.close_BANG_.call(null, to);
                                                      var state_19647__$1 = state_19647;
                                                      var statearr_19672_19734 = state_19647__$1;
                                                      statearr_19672_19734[2] = inst_19616;
                                                      statearr_19672_19734[1] = 10;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6670__auto__, jobs, results, process, async);
        return function(switch__6655__auto__, c__6670__auto__, jobs, results, process, async) {
          return function() {
            var state_machine__6656__auto__ = null;
            var state_machine__6656__auto____0 = function() {
              var statearr_19676 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_19676[0] = state_machine__6656__auto__;
              statearr_19676[1] = 1;
              return statearr_19676;
            };
            var state_machine__6656__auto____1 = function(state_19647) {
              while (true) {
                var ret_value__6657__auto__ = function() {
                  try {
                    while (true) {
                      var result__6658__auto__ = switch__6655__auto__.call(null, state_19647);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6658__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6658__auto__;
                      }
                      break;
                    }
                  } catch (e19677) {
                    if (e19677 instanceof Object) {
                      var ex__6659__auto__ = e19677;
                      var statearr_19678_19735 = state_19647;
                      statearr_19678_19735[5] = ex__6659__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19647);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e19677;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6657__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__19736 = state_19647;
                  state_19647 = G__19736;
                  continue;
                } else {
                  return ret_value__6657__auto__;
                }
                break;
              }
            };
            state_machine__6656__auto__ = function(state_19647) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6656__auto____0.call(this);
                case 1:
                  return state_machine__6656__auto____1.call(this, state_19647);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6656__auto____0;
            state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6656__auto____1;
            return state_machine__6656__auto__;
          }();
        }(switch__6655__auto__, c__6670__auto__, jobs, results, process, async);
      }();
      var state__6672__auto__ = function() {
        var statearr_19679 = f__6671__auto__.call(null);
        statearr_19679[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6670__auto__;
        return statearr_19679;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6672__auto__);
    };
  }(c__6670__auto__, jobs, results, process, async));
  return c__6670__auto__;
};
cljs.core.async.pipeline_async = function() {
  var pipeline_async = null;
  var pipeline_async__4 = function(n, to, af, from) {
    return pipeline_async.call(null, n, to, af, from, true);
  };
  var pipeline_async__5 = function(n, to, af, from, close_QMARK_) {
    return cljs.core.async.pipeline_STAR_.call(null, n, to, af, from, close_QMARK_, null, new cljs.core.Keyword(null, "async", "async", 1050769601));
  };
  pipeline_async = function(n, to, af, from, close_QMARK_) {
    switch(arguments.length) {
      case 4:
        return pipeline_async__4.call(this, n, to, af, from);
      case 5:
        return pipeline_async__5.call(this, n, to, af, from, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipeline_async.cljs$core$IFn$_invoke$arity$4 = pipeline_async__4;
  pipeline_async.cljs$core$IFn$_invoke$arity$5 = pipeline_async__5;
  return pipeline_async;
}();
cljs.core.async.pipeline = function() {
  var pipeline = null;
  var pipeline__4 = function(n, to, xf, from) {
    return pipeline.call(null, n, to, xf, from, true);
  };
  var pipeline__5 = function(n, to, xf, from, close_QMARK_) {
    return pipeline.call(null, n, to, xf, from, close_QMARK_, null);
  };
  var pipeline__6 = function(n, to, xf, from, close_QMARK_, ex_handler) {
    return cljs.core.async.pipeline_STAR_.call(null, n, to, xf, from, close_QMARK_, ex_handler, new cljs.core.Keyword(null, "compute", "compute", 1555393130));
  };
  pipeline = function(n, to, xf, from, close_QMARK_, ex_handler) {
    switch(arguments.length) {
      case 4:
        return pipeline__4.call(this, n, to, xf, from);
      case 5:
        return pipeline__5.call(this, n, to, xf, from, close_QMARK_);
      case 6:
        return pipeline__6.call(this, n, to, xf, from, close_QMARK_, ex_handler);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipeline.cljs$core$IFn$_invoke$arity$4 = pipeline__4;
  pipeline.cljs$core$IFn$_invoke$arity$5 = pipeline__5;
  pipeline.cljs$core$IFn$_invoke$arity$6 = pipeline__6;
  return pipeline;
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null);
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__6670__auto___19837 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6670__auto___19837, tc, fc) {
      return function() {
        var f__6671__auto__ = function() {
          var switch__6655__auto__ = function(c__6670__auto___19837, tc, fc) {
            return function(state_19812) {
              var state_val_19813 = state_19812[1];
              if (state_val_19813 === 7) {
                var inst_19808 = state_19812[2];
                var state_19812__$1 = state_19812;
                var statearr_19814_19838 = state_19812__$1;
                statearr_19814_19838[2] = inst_19808;
                statearr_19814_19838[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_19813 === 1) {
                  var state_19812__$1 = state_19812;
                  var statearr_19815_19839 = state_19812__$1;
                  statearr_19815_19839[2] = null;
                  statearr_19815_19839[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_19813 === 4) {
                    var inst_19789 = state_19812[7];
                    var inst_19789__$1 = state_19812[2];
                    var inst_19790 = inst_19789__$1 == null;
                    var state_19812__$1 = function() {
                      var statearr_19816 = state_19812;
                      statearr_19816[7] = inst_19789__$1;
                      return statearr_19816;
                    }();
                    if (cljs.core.truth_(inst_19790)) {
                      var statearr_19817_19840 = state_19812__$1;
                      statearr_19817_19840[1] = 5;
                    } else {
                      var statearr_19818_19841 = state_19812__$1;
                      statearr_19818_19841[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_19813 === 13) {
                      var state_19812__$1 = state_19812;
                      var statearr_19819_19842 = state_19812__$1;
                      statearr_19819_19842[2] = null;
                      statearr_19819_19842[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_19813 === 6) {
                        var inst_19789 = state_19812[7];
                        var inst_19795 = p.call(null, inst_19789);
                        var state_19812__$1 = state_19812;
                        if (cljs.core.truth_(inst_19795)) {
                          var statearr_19820_19843 = state_19812__$1;
                          statearr_19820_19843[1] = 9;
                        } else {
                          var statearr_19821_19844 = state_19812__$1;
                          statearr_19821_19844[1] = 10;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_19813 === 3) {
                          var inst_19810 = state_19812[2];
                          var state_19812__$1 = state_19812;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19812__$1, inst_19810);
                        } else {
                          if (state_val_19813 === 12) {
                            var state_19812__$1 = state_19812;
                            var statearr_19822_19845 = state_19812__$1;
                            statearr_19822_19845[2] = null;
                            statearr_19822_19845[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_19813 === 2) {
                              var state_19812__$1 = state_19812;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19812__$1, 4, ch);
                            } else {
                              if (state_val_19813 === 11) {
                                var inst_19789 = state_19812[7];
                                var inst_19799 = state_19812[2];
                                var state_19812__$1 = state_19812;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19812__$1, 8, inst_19799, inst_19789);
                              } else {
                                if (state_val_19813 === 9) {
                                  var state_19812__$1 = state_19812;
                                  var statearr_19823_19846 = state_19812__$1;
                                  statearr_19823_19846[2] = tc;
                                  statearr_19823_19846[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_19813 === 5) {
                                    var inst_19792 = cljs.core.async.close_BANG_.call(null, tc);
                                    var inst_19793 = cljs.core.async.close_BANG_.call(null, fc);
                                    var state_19812__$1 = function() {
                                      var statearr_19824 = state_19812;
                                      statearr_19824[8] = inst_19792;
                                      return statearr_19824;
                                    }();
                                    var statearr_19825_19847 = state_19812__$1;
                                    statearr_19825_19847[2] = inst_19793;
                                    statearr_19825_19847[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_19813 === 14) {
                                      var inst_19806 = state_19812[2];
                                      var state_19812__$1 = state_19812;
                                      var statearr_19826_19848 = state_19812__$1;
                                      statearr_19826_19848[2] = inst_19806;
                                      statearr_19826_19848[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_19813 === 10) {
                                        var state_19812__$1 = state_19812;
                                        var statearr_19827_19849 = state_19812__$1;
                                        statearr_19827_19849[2] = fc;
                                        statearr_19827_19849[1] = 11;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_19813 === 8) {
                                          var inst_19801 = state_19812[2];
                                          var state_19812__$1 = state_19812;
                                          if (cljs.core.truth_(inst_19801)) {
                                            var statearr_19828_19850 = state_19812__$1;
                                            statearr_19828_19850[1] = 12;
                                          } else {
                                            var statearr_19829_19851 = state_19812__$1;
                                            statearr_19829_19851[1] = 13;
                                          }
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6670__auto___19837, tc, fc);
          return function(switch__6655__auto__, c__6670__auto___19837, tc, fc) {
            return function() {
              var state_machine__6656__auto__ = null;
              var state_machine__6656__auto____0 = function() {
                var statearr_19833 = [null, null, null, null, null, null, null, null, null];
                statearr_19833[0] = state_machine__6656__auto__;
                statearr_19833[1] = 1;
                return statearr_19833;
              };
              var state_machine__6656__auto____1 = function(state_19812) {
                while (true) {
                  var ret_value__6657__auto__ = function() {
                    try {
                      while (true) {
                        var result__6658__auto__ = switch__6655__auto__.call(null, state_19812);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6658__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6658__auto__;
                        }
                        break;
                      }
                    } catch (e19834) {
                      if (e19834 instanceof Object) {
                        var ex__6659__auto__ = e19834;
                        var statearr_19835_19852 = state_19812;
                        statearr_19835_19852[5] = ex__6659__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19812);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e19834;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6657__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__19853 = state_19812;
                    state_19812 = G__19853;
                    continue;
                  } else {
                    return ret_value__6657__auto__;
                  }
                  break;
                }
              };
              state_machine__6656__auto__ = function(state_19812) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6656__auto____0.call(this);
                  case 1:
                    return state_machine__6656__auto____1.call(this, state_19812);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6656__auto____0;
              state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6656__auto____1;
              return state_machine__6656__auto__;
            }();
          }(switch__6655__auto__, c__6670__auto___19837, tc, fc);
        }();
        var state__6672__auto__ = function() {
          var statearr_19836 = f__6671__auto__.call(null);
          statearr_19836[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6670__auto___19837;
          return statearr_19836;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6672__auto__);
      };
    }(c__6670__auto___19837, tc, fc));
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split;
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__6670__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6670__auto__) {
    return function() {
      var f__6671__auto__ = function() {
        var switch__6655__auto__ = function(c__6670__auto__) {
          return function(state_19900) {
            var state_val_19901 = state_19900[1];
            if (state_val_19901 === 7) {
              var inst_19896 = state_19900[2];
              var state_19900__$1 = state_19900;
              var statearr_19902_19918 = state_19900__$1;
              statearr_19902_19918[2] = inst_19896;
              statearr_19902_19918[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_19901 === 6) {
                var inst_19889 = state_19900[7];
                var inst_19886 = state_19900[8];
                var inst_19893 = f.call(null, inst_19886, inst_19889);
                var inst_19886__$1 = inst_19893;
                var state_19900__$1 = function() {
                  var statearr_19903 = state_19900;
                  statearr_19903[8] = inst_19886__$1;
                  return statearr_19903;
                }();
                var statearr_19904_19919 = state_19900__$1;
                statearr_19904_19919[2] = null;
                statearr_19904_19919[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_19901 === 5) {
                  var inst_19886 = state_19900[8];
                  var state_19900__$1 = state_19900;
                  var statearr_19905_19920 = state_19900__$1;
                  statearr_19905_19920[2] = inst_19886;
                  statearr_19905_19920[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_19901 === 4) {
                    var inst_19889 = state_19900[7];
                    var inst_19889__$1 = state_19900[2];
                    var inst_19890 = inst_19889__$1 == null;
                    var state_19900__$1 = function() {
                      var statearr_19906 = state_19900;
                      statearr_19906[7] = inst_19889__$1;
                      return statearr_19906;
                    }();
                    if (cljs.core.truth_(inst_19890)) {
                      var statearr_19907_19921 = state_19900__$1;
                      statearr_19907_19921[1] = 5;
                    } else {
                      var statearr_19908_19922 = state_19900__$1;
                      statearr_19908_19922[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_19901 === 3) {
                      var inst_19898 = state_19900[2];
                      var state_19900__$1 = state_19900;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19900__$1, inst_19898);
                    } else {
                      if (state_val_19901 === 2) {
                        var state_19900__$1 = state_19900;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19900__$1, 4, ch);
                      } else {
                        if (state_val_19901 === 1) {
                          var inst_19886 = init;
                          var state_19900__$1 = function() {
                            var statearr_19909 = state_19900;
                            statearr_19909[8] = inst_19886;
                            return statearr_19909;
                          }();
                          var statearr_19910_19923 = state_19900__$1;
                          statearr_19910_19923[2] = null;
                          statearr_19910_19923[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6670__auto__);
        return function(switch__6655__auto__, c__6670__auto__) {
          return function() {
            var state_machine__6656__auto__ = null;
            var state_machine__6656__auto____0 = function() {
              var statearr_19914 = [null, null, null, null, null, null, null, null, null];
              statearr_19914[0] = state_machine__6656__auto__;
              statearr_19914[1] = 1;
              return statearr_19914;
            };
            var state_machine__6656__auto____1 = function(state_19900) {
              while (true) {
                var ret_value__6657__auto__ = function() {
                  try {
                    while (true) {
                      var result__6658__auto__ = switch__6655__auto__.call(null, state_19900);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6658__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6658__auto__;
                      }
                      break;
                    }
                  } catch (e19915) {
                    if (e19915 instanceof Object) {
                      var ex__6659__auto__ = e19915;
                      var statearr_19916_19924 = state_19900;
                      statearr_19916_19924[5] = ex__6659__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19900);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e19915;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6657__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__19925 = state_19900;
                  state_19900 = G__19925;
                  continue;
                } else {
                  return ret_value__6657__auto__;
                }
                break;
              }
            };
            state_machine__6656__auto__ = function(state_19900) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6656__auto____0.call(this);
                case 1:
                  return state_machine__6656__auto____1.call(this, state_19900);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6656__auto____0;
            state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6656__auto____1;
            return state_machine__6656__auto__;
          }();
        }(switch__6655__auto__, c__6670__auto__);
      }();
      var state__6672__auto__ = function() {
        var statearr_19917 = f__6671__auto__.call(null);
        statearr_19917[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6670__auto__;
        return statearr_19917;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6672__auto__);
    };
  }(c__6670__auto__));
  return c__6670__auto__;
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true);
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__6670__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6670__auto__) {
      return function() {
        var f__6671__auto__ = function() {
          var switch__6655__auto__ = function(c__6670__auto__) {
            return function(state_19999) {
              var state_val_20000 = state_19999[1];
              if (state_val_20000 === 7) {
                var inst_19981 = state_19999[2];
                var state_19999__$1 = state_19999;
                var statearr_20001_20024 = state_19999__$1;
                statearr_20001_20024[2] = inst_19981;
                statearr_20001_20024[1] = 6;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_20000 === 1) {
                  var inst_19975 = cljs.core.seq.call(null, coll);
                  var inst_19976 = inst_19975;
                  var state_19999__$1 = function() {
                    var statearr_20002 = state_19999;
                    statearr_20002[7] = inst_19976;
                    return statearr_20002;
                  }();
                  var statearr_20003_20025 = state_19999__$1;
                  statearr_20003_20025[2] = null;
                  statearr_20003_20025[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_20000 === 4) {
                    var inst_19976 = state_19999[7];
                    var inst_19979 = cljs.core.first.call(null, inst_19976);
                    var state_19999__$1 = state_19999;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19999__$1, 7, ch, inst_19979);
                  } else {
                    if (state_val_20000 === 13) {
                      var inst_19993 = state_19999[2];
                      var state_19999__$1 = state_19999;
                      var statearr_20004_20026 = state_19999__$1;
                      statearr_20004_20026[2] = inst_19993;
                      statearr_20004_20026[1] = 10;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_20000 === 6) {
                        var inst_19984 = state_19999[2];
                        var state_19999__$1 = state_19999;
                        if (cljs.core.truth_(inst_19984)) {
                          var statearr_20005_20027 = state_19999__$1;
                          statearr_20005_20027[1] = 8;
                        } else {
                          var statearr_20006_20028 = state_19999__$1;
                          statearr_20006_20028[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_20000 === 3) {
                          var inst_19997 = state_19999[2];
                          var state_19999__$1 = state_19999;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19999__$1, inst_19997);
                        } else {
                          if (state_val_20000 === 12) {
                            var state_19999__$1 = state_19999;
                            var statearr_20007_20029 = state_19999__$1;
                            statearr_20007_20029[2] = null;
                            statearr_20007_20029[1] = 13;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_20000 === 2) {
                              var inst_19976 = state_19999[7];
                              var state_19999__$1 = state_19999;
                              if (cljs.core.truth_(inst_19976)) {
                                var statearr_20008_20030 = state_19999__$1;
                                statearr_20008_20030[1] = 4;
                              } else {
                                var statearr_20009_20031 = state_19999__$1;
                                statearr_20009_20031[1] = 5;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_20000 === 11) {
                                var inst_19990 = cljs.core.async.close_BANG_.call(null, ch);
                                var state_19999__$1 = state_19999;
                                var statearr_20010_20032 = state_19999__$1;
                                statearr_20010_20032[2] = inst_19990;
                                statearr_20010_20032[1] = 13;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_20000 === 9) {
                                  var state_19999__$1 = state_19999;
                                  if (cljs.core.truth_(close_QMARK_)) {
                                    var statearr_20011_20033 = state_19999__$1;
                                    statearr_20011_20033[1] = 11;
                                  } else {
                                    var statearr_20012_20034 = state_19999__$1;
                                    statearr_20012_20034[1] = 12;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_20000 === 5) {
                                    var inst_19976 = state_19999[7];
                                    var state_19999__$1 = state_19999;
                                    var statearr_20013_20035 = state_19999__$1;
                                    statearr_20013_20035[2] = inst_19976;
                                    statearr_20013_20035[1] = 6;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_20000 === 10) {
                                      var inst_19995 = state_19999[2];
                                      var state_19999__$1 = state_19999;
                                      var statearr_20014_20036 = state_19999__$1;
                                      statearr_20014_20036[2] = inst_19995;
                                      statearr_20014_20036[1] = 3;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_20000 === 8) {
                                        var inst_19976 = state_19999[7];
                                        var inst_19986 = cljs.core.next.call(null, inst_19976);
                                        var inst_19976__$1 = inst_19986;
                                        var state_19999__$1 = function() {
                                          var statearr_20015 = state_19999;
                                          statearr_20015[7] = inst_19976__$1;
                                          return statearr_20015;
                                        }();
                                        var statearr_20016_20037 = state_19999__$1;
                                        statearr_20016_20037[2] = null;
                                        statearr_20016_20037[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6670__auto__);
          return function(switch__6655__auto__, c__6670__auto__) {
            return function() {
              var state_machine__6656__auto__ = null;
              var state_machine__6656__auto____0 = function() {
                var statearr_20020 = [null, null, null, null, null, null, null, null];
                statearr_20020[0] = state_machine__6656__auto__;
                statearr_20020[1] = 1;
                return statearr_20020;
              };
              var state_machine__6656__auto____1 = function(state_19999) {
                while (true) {
                  var ret_value__6657__auto__ = function() {
                    try {
                      while (true) {
                        var result__6658__auto__ = switch__6655__auto__.call(null, state_19999);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6658__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6658__auto__;
                        }
                        break;
                      }
                    } catch (e20021) {
                      if (e20021 instanceof Object) {
                        var ex__6659__auto__ = e20021;
                        var statearr_20022_20038 = state_19999;
                        statearr_20022_20038[5] = ex__6659__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19999);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e20021;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6657__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__20039 = state_19999;
                    state_19999 = G__20039;
                    continue;
                  } else {
                    return ret_value__6657__auto__;
                  }
                  break;
                }
              };
              state_machine__6656__auto__ = function(state_19999) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6656__auto____0.call(this);
                  case 1:
                    return state_machine__6656__auto____1.call(this, state_19999);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6656__auto____0;
              state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6656__auto____1;
              return state_machine__6656__auto__;
            }();
          }(switch__6655__auto__, c__6670__auto__);
        }();
        var state__6672__auto__ = function() {
          var statearr_20023 = f__6671__auto__.call(null);
          statearr_20023[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6670__auto__;
          return statearr_20023;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6672__auto__);
      };
    }(c__6670__auto__));
    return c__6670__auto__;
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan;
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj20041 = {};
  return obj20041;
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if (function() {
    var and__3749__auto__ = _;
    if (and__3749__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4400__auto__ = _ == null ? null : _;
    return function() {
      var or__3761__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj20043 = {};
  return obj20043;
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__3749__auto__ = m;
    if (and__3749__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4400__auto__ = m == null ? null : m;
    return function() {
      var or__3761__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if (function() {
    var and__3749__auto__ = m;
    if (and__3749__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4400__auto__ = m == null ? null : m;
    return function() {
      var or__3761__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if (function() {
    var and__3749__auto__ = m;
    if (and__3749__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4400__auto__ = m == null ? null : m;
    return function() {
      var or__3761__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t20265 !== "undefined") {
    } else {
      cljs.core.async.t20265 = function(cs, ch, mult, meta20266) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta20266 = meta20266;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t20265.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t20265.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$1, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$1, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t20265.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$1) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$1);
          return null;
        };
      }(cs);
      cljs.core.async.t20265.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t20265.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t20265.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t20265.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_20267) {
          var self__ = this;
          var _20267__$1 = this;
          return self__.meta20266;
        };
      }(cs);
      cljs.core.async.t20265.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_20267, meta20266__$1) {
          var self__ = this;
          var _20267__$1 = this;
          return new cljs.core.async.t20265(self__.cs, self__.ch, self__.mult, meta20266__$1);
        };
      }(cs);
      cljs.core.async.t20265.cljs$lang$type = true;
      cljs.core.async.t20265.cljs$lang$ctorStr = "cljs.core.async/t20265";
      cljs.core.async.t20265.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
          return cljs.core._write.call(null, writer__4344__auto__, "cljs.core.async/t20265");
        };
      }(cs);
      cljs.core.async.__GT_t20265 = function(cs) {
        return function __GT_t20265(cs__$1, ch__$1, mult__$1, meta20266) {
          return new cljs.core.async.t20265(cs__$1, ch__$1, mult__$1, meta20266);
        };
      }(cs);
    }
    return new cljs.core.async.t20265(cs, ch, mult, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 48, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 397, new cljs.core.Keyword(null, "column", "column", 2078222095), 11, new cljs.core.Keyword(null, "line", "line", 212345235), 390, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/tim/clojure/logging-dashboard/resources/public/js/cljs/core/async.cljs"], 
    null));
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function(_) {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__6670__auto___20486 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6670__auto___20486, cs, m, dchan, dctr, done) {
    return function() {
      var f__6671__auto__ = function() {
        var switch__6655__auto__ = function(c__6670__auto___20486, cs, m, dchan, dctr, done) {
          return function(state_20398) {
            var state_val_20399 = state_20398[1];
            if (state_val_20399 === 7) {
              var inst_20394 = state_20398[2];
              var state_20398__$1 = state_20398;
              var statearr_20400_20487 = state_20398__$1;
              statearr_20400_20487[2] = inst_20394;
              statearr_20400_20487[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_20399 === 20) {
                var inst_20299 = state_20398[7];
                var inst_20309 = cljs.core.first.call(null, inst_20299);
                var inst_20310 = cljs.core.nth.call(null, inst_20309, 0, null);
                var inst_20311 = cljs.core.nth.call(null, inst_20309, 1, null);
                var state_20398__$1 = function() {
                  var statearr_20401 = state_20398;
                  statearr_20401[8] = inst_20310;
                  return statearr_20401;
                }();
                if (cljs.core.truth_(inst_20311)) {
                  var statearr_20402_20488 = state_20398__$1;
                  statearr_20402_20488[1] = 22;
                } else {
                  var statearr_20403_20489 = state_20398__$1;
                  statearr_20403_20489[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_20399 === 27) {
                  var inst_20341 = state_20398[9];
                  var inst_20339 = state_20398[10];
                  var inst_20346 = state_20398[11];
                  var inst_20270 = state_20398[12];
                  var inst_20346__$1 = cljs.core._nth.call(null, inst_20339, inst_20341);
                  var inst_20347 = cljs.core.async.put_BANG_.call(null, inst_20346__$1, inst_20270, done);
                  var state_20398__$1 = function() {
                    var statearr_20404 = state_20398;
                    statearr_20404[11] = inst_20346__$1;
                    return statearr_20404;
                  }();
                  if (cljs.core.truth_(inst_20347)) {
                    var statearr_20405_20490 = state_20398__$1;
                    statearr_20405_20490[1] = 30;
                  } else {
                    var statearr_20406_20491 = state_20398__$1;
                    statearr_20406_20491[1] = 31;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_20399 === 1) {
                    var state_20398__$1 = state_20398;
                    var statearr_20407_20492 = state_20398__$1;
                    statearr_20407_20492[2] = null;
                    statearr_20407_20492[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_20399 === 24) {
                      var inst_20299 = state_20398[7];
                      var inst_20316 = state_20398[2];
                      var inst_20317 = cljs.core.next.call(null, inst_20299);
                      var inst_20279 = inst_20317;
                      var inst_20280 = null;
                      var inst_20281 = 0;
                      var inst_20282 = 0;
                      var state_20398__$1 = function() {
                        var statearr_20408 = state_20398;
                        statearr_20408[13] = inst_20279;
                        statearr_20408[14] = inst_20282;
                        statearr_20408[15] = inst_20280;
                        statearr_20408[16] = inst_20316;
                        statearr_20408[17] = inst_20281;
                        return statearr_20408;
                      }();
                      var statearr_20409_20493 = state_20398__$1;
                      statearr_20409_20493[2] = null;
                      statearr_20409_20493[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_20399 === 39) {
                        var state_20398__$1 = state_20398;
                        var statearr_20413_20494 = state_20398__$1;
                        statearr_20413_20494[2] = null;
                        statearr_20413_20494[1] = 41;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_20399 === 4) {
                          var inst_20270 = state_20398[12];
                          var inst_20270__$1 = state_20398[2];
                          var inst_20271 = inst_20270__$1 == null;
                          var state_20398__$1 = function() {
                            var statearr_20414 = state_20398;
                            statearr_20414[12] = inst_20270__$1;
                            return statearr_20414;
                          }();
                          if (cljs.core.truth_(inst_20271)) {
                            var statearr_20415_20495 = state_20398__$1;
                            statearr_20415_20495[1] = 5;
                          } else {
                            var statearr_20416_20496 = state_20398__$1;
                            statearr_20416_20496[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_20399 === 15) {
                            var inst_20279 = state_20398[13];
                            var inst_20282 = state_20398[14];
                            var inst_20280 = state_20398[15];
                            var inst_20281 = state_20398[17];
                            var inst_20295 = state_20398[2];
                            var inst_20296 = inst_20282 + 1;
                            var tmp20410 = inst_20279;
                            var tmp20411 = inst_20280;
                            var tmp20412 = inst_20281;
                            var inst_20279__$1 = tmp20410;
                            var inst_20280__$1 = tmp20411;
                            var inst_20281__$1 = tmp20412;
                            var inst_20282__$1 = inst_20296;
                            var state_20398__$1 = function() {
                              var statearr_20417 = state_20398;
                              statearr_20417[18] = inst_20295;
                              statearr_20417[13] = inst_20279__$1;
                              statearr_20417[14] = inst_20282__$1;
                              statearr_20417[15] = inst_20280__$1;
                              statearr_20417[17] = inst_20281__$1;
                              return statearr_20417;
                            }();
                            var statearr_20418_20497 = state_20398__$1;
                            statearr_20418_20497[2] = null;
                            statearr_20418_20497[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_20399 === 21) {
                              var inst_20320 = state_20398[2];
                              var state_20398__$1 = state_20398;
                              var statearr_20422_20498 = state_20398__$1;
                              statearr_20422_20498[2] = inst_20320;
                              statearr_20422_20498[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_20399 === 31) {
                                var inst_20346 = state_20398[11];
                                var inst_20350 = done.call(null, null);
                                var inst_20351 = cljs.core.async.untap_STAR_.call(null, m, inst_20346);
                                var state_20398__$1 = function() {
                                  var statearr_20423 = state_20398;
                                  statearr_20423[19] = inst_20350;
                                  return statearr_20423;
                                }();
                                var statearr_20424_20499 = state_20398__$1;
                                statearr_20424_20499[2] = inst_20351;
                                statearr_20424_20499[1] = 32;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_20399 === 32) {
                                  var inst_20338 = state_20398[20];
                                  var inst_20341 = state_20398[9];
                                  var inst_20339 = state_20398[10];
                                  var inst_20340 = state_20398[21];
                                  var inst_20353 = state_20398[2];
                                  var inst_20354 = inst_20341 + 1;
                                  var tmp20419 = inst_20338;
                                  var tmp20420 = inst_20339;
                                  var tmp20421 = inst_20340;
                                  var inst_20338__$1 = tmp20419;
                                  var inst_20339__$1 = tmp20420;
                                  var inst_20340__$1 = tmp20421;
                                  var inst_20341__$1 = inst_20354;
                                  var state_20398__$1 = function() {
                                    var statearr_20425 = state_20398;
                                    statearr_20425[20] = inst_20338__$1;
                                    statearr_20425[9] = inst_20341__$1;
                                    statearr_20425[10] = inst_20339__$1;
                                    statearr_20425[21] = inst_20340__$1;
                                    statearr_20425[22] = inst_20353;
                                    return statearr_20425;
                                  }();
                                  var statearr_20426_20500 = state_20398__$1;
                                  statearr_20426_20500[2] = null;
                                  statearr_20426_20500[1] = 25;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_20399 === 40) {
                                    var inst_20366 = state_20398[23];
                                    var inst_20370 = done.call(null, null);
                                    var inst_20371 = cljs.core.async.untap_STAR_.call(null, m, inst_20366);
                                    var state_20398__$1 = function() {
                                      var statearr_20427 = state_20398;
                                      statearr_20427[24] = inst_20370;
                                      return statearr_20427;
                                    }();
                                    var statearr_20428_20501 = state_20398__$1;
                                    statearr_20428_20501[2] = inst_20371;
                                    statearr_20428_20501[1] = 41;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_20399 === 33) {
                                      var inst_20357 = state_20398[25];
                                      var inst_20359 = cljs.core.chunked_seq_QMARK_.call(null, inst_20357);
                                      var state_20398__$1 = state_20398;
                                      if (inst_20359) {
                                        var statearr_20429_20502 = state_20398__$1;
                                        statearr_20429_20502[1] = 36;
                                      } else {
                                        var statearr_20430_20503 = state_20398__$1;
                                        statearr_20430_20503[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_20399 === 13) {
                                        var inst_20289 = state_20398[26];
                                        var inst_20292 = cljs.core.async.close_BANG_.call(null, inst_20289);
                                        var state_20398__$1 = state_20398;
                                        var statearr_20431_20504 = state_20398__$1;
                                        statearr_20431_20504[2] = inst_20292;
                                        statearr_20431_20504[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_20399 === 22) {
                                          var inst_20310 = state_20398[8];
                                          var inst_20313 = cljs.core.async.close_BANG_.call(null, inst_20310);
                                          var state_20398__$1 = state_20398;
                                          var statearr_20432_20505 = state_20398__$1;
                                          statearr_20432_20505[2] = inst_20313;
                                          statearr_20432_20505[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_20399 === 36) {
                                            var inst_20357 = state_20398[25];
                                            var inst_20361 = cljs.core.chunk_first.call(null, inst_20357);
                                            var inst_20362 = cljs.core.chunk_rest.call(null, inst_20357);
                                            var inst_20363 = cljs.core.count.call(null, inst_20361);
                                            var inst_20338 = inst_20362;
                                            var inst_20339 = inst_20361;
                                            var inst_20340 = inst_20363;
                                            var inst_20341 = 0;
                                            var state_20398__$1 = function() {
                                              var statearr_20433 = state_20398;
                                              statearr_20433[20] = inst_20338;
                                              statearr_20433[9] = inst_20341;
                                              statearr_20433[10] = inst_20339;
                                              statearr_20433[21] = inst_20340;
                                              return statearr_20433;
                                            }();
                                            var statearr_20434_20506 = state_20398__$1;
                                            statearr_20434_20506[2] = null;
                                            statearr_20434_20506[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_20399 === 41) {
                                              var inst_20357 = state_20398[25];
                                              var inst_20373 = state_20398[2];
                                              var inst_20374 = cljs.core.next.call(null, inst_20357);
                                              var inst_20338 = inst_20374;
                                              var inst_20339 = null;
                                              var inst_20340 = 0;
                                              var inst_20341 = 0;
                                              var state_20398__$1 = function() {
                                                var statearr_20435 = state_20398;
                                                statearr_20435[20] = inst_20338;
                                                statearr_20435[27] = inst_20373;
                                                statearr_20435[9] = inst_20341;
                                                statearr_20435[10] = inst_20339;
                                                statearr_20435[21] = inst_20340;
                                                return statearr_20435;
                                              }();
                                              var statearr_20436_20507 = state_20398__$1;
                                              statearr_20436_20507[2] = null;
                                              statearr_20436_20507[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_20399 === 43) {
                                                var state_20398__$1 = state_20398;
                                                var statearr_20437_20508 = state_20398__$1;
                                                statearr_20437_20508[2] = null;
                                                statearr_20437_20508[1] = 44;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_20399 === 29) {
                                                  var inst_20382 = state_20398[2];
                                                  var state_20398__$1 = state_20398;
                                                  var statearr_20438_20509 = state_20398__$1;
                                                  statearr_20438_20509[2] = inst_20382;
                                                  statearr_20438_20509[1] = 26;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_20399 === 44) {
                                                    var inst_20391 = state_20398[2];
                                                    var state_20398__$1 = function() {
                                                      var statearr_20439 = state_20398;
                                                      statearr_20439[28] = inst_20391;
                                                      return statearr_20439;
                                                    }();
                                                    var statearr_20440_20510 = state_20398__$1;
                                                    statearr_20440_20510[2] = null;
                                                    statearr_20440_20510[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_20399 === 6) {
                                                      var inst_20330 = state_20398[29];
                                                      var inst_20329 = cljs.core.deref.call(null, cs);
                                                      var inst_20330__$1 = cljs.core.keys.call(null, inst_20329);
                                                      var inst_20331 = cljs.core.count.call(null, inst_20330__$1);
                                                      var inst_20332 = cljs.core.reset_BANG_.call(null, dctr, inst_20331);
                                                      var inst_20337 = cljs.core.seq.call(null, inst_20330__$1);
                                                      var inst_20338 = inst_20337;
                                                      var inst_20339 = null;
                                                      var inst_20340 = 0;
                                                      var inst_20341 = 0;
                                                      var state_20398__$1 = function() {
                                                        var statearr_20441 = state_20398;
                                                        statearr_20441[20] = inst_20338;
                                                        statearr_20441[9] = inst_20341;
                                                        statearr_20441[10] = inst_20339;
                                                        statearr_20441[29] = inst_20330__$1;
                                                        statearr_20441[30] = inst_20332;
                                                        statearr_20441[21] = inst_20340;
                                                        return statearr_20441;
                                                      }();
                                                      var statearr_20442_20511 = state_20398__$1;
                                                      statearr_20442_20511[2] = null;
                                                      statearr_20442_20511[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_20399 === 28) {
                                                        var inst_20338 = state_20398[20];
                                                        var inst_20357 = state_20398[25];
                                                        var inst_20357__$1 = cljs.core.seq.call(null, inst_20338);
                                                        var state_20398__$1 = function() {
                                                          var statearr_20443 = state_20398;
                                                          statearr_20443[25] = inst_20357__$1;
                                                          return statearr_20443;
                                                        }();
                                                        if (inst_20357__$1) {
                                                          var statearr_20444_20512 = state_20398__$1;
                                                          statearr_20444_20512[1] = 33;
                                                        } else {
                                                          var statearr_20445_20513 = state_20398__$1;
                                                          statearr_20445_20513[1] = 34;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_20399 === 25) {
                                                          var inst_20341 = state_20398[9];
                                                          var inst_20340 = state_20398[21];
                                                          var inst_20343 = inst_20341 < inst_20340;
                                                          var inst_20344 = inst_20343;
                                                          var state_20398__$1 = state_20398;
                                                          if (cljs.core.truth_(inst_20344)) {
                                                            var statearr_20446_20514 = state_20398__$1;
                                                            statearr_20446_20514[1] = 27;
                                                          } else {
                                                            var statearr_20447_20515 = state_20398__$1;
                                                            statearr_20447_20515[1] = 28;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_20399 === 34) {
                                                            var state_20398__$1 = state_20398;
                                                            var statearr_20448_20516 = state_20398__$1;
                                                            statearr_20448_20516[2] = null;
                                                            statearr_20448_20516[1] = 35;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_20399 === 17) {
                                                              var state_20398__$1 = state_20398;
                                                              var statearr_20449_20517 = state_20398__$1;
                                                              statearr_20449_20517[2] = null;
                                                              statearr_20449_20517[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_20399 === 3) {
                                                                var inst_20396 = state_20398[2];
                                                                var state_20398__$1 = state_20398;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20398__$1, inst_20396);
                                                              } else {
                                                                if (state_val_20399 === 12) {
                                                                  var inst_20325 = state_20398[2];
                                                                  var state_20398__$1 = state_20398;
                                                                  var statearr_20450_20518 = state_20398__$1;
                                                                  statearr_20450_20518[2] = inst_20325;
                                                                  statearr_20450_20518[1] = 9;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_20399 === 2) {
                                                                    var state_20398__$1 = state_20398;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_20398__$1, 4, ch);
                                                                  } else {
                                                                    if (state_val_20399 === 23) {
                                                                      var state_20398__$1 = state_20398;
                                                                      var statearr_20451_20519 = state_20398__$1;
                                                                      statearr_20451_20519[2] = null;
                                                                      statearr_20451_20519[1] = 24;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_20399 === 35) {
                                                                        var inst_20380 = state_20398[2];
                                                                        var state_20398__$1 = state_20398;
                                                                        var statearr_20452_20520 = state_20398__$1;
                                                                        statearr_20452_20520[2] = inst_20380;
                                                                        statearr_20452_20520[1] = 29;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_20399 === 19) {
                                                                          var inst_20299 = state_20398[7];
                                                                          var inst_20303 = cljs.core.chunk_first.call(null, inst_20299);
                                                                          var inst_20304 = cljs.core.chunk_rest.call(null, inst_20299);
                                                                          var inst_20305 = cljs.core.count.call(null, inst_20303);
                                                                          var inst_20279 = inst_20304;
                                                                          var inst_20280 = inst_20303;
                                                                          var inst_20281 = inst_20305;
                                                                          var inst_20282 = 0;
                                                                          var state_20398__$1 = function() {
                                                                            var statearr_20453 = state_20398;
                                                                            statearr_20453[13] = inst_20279;
                                                                            statearr_20453[14] = inst_20282;
                                                                            statearr_20453[15] = inst_20280;
                                                                            statearr_20453[17] = inst_20281;
                                                                            return statearr_20453;
                                                                          }();
                                                                          var statearr_20454_20521 = state_20398__$1;
                                                                          statearr_20454_20521[2] = null;
                                                                          statearr_20454_20521[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_20399 === 11) {
                                                                            var inst_20279 = state_20398[13];
                                                                            var inst_20299 = state_20398[7];
                                                                            var inst_20299__$1 = cljs.core.seq.call(null, inst_20279);
                                                                            var state_20398__$1 = function() {
                                                                              var statearr_20455 = state_20398;
                                                                              statearr_20455[7] = inst_20299__$1;
                                                                              return statearr_20455;
                                                                            }();
                                                                            if (inst_20299__$1) {
                                                                              var statearr_20456_20522 = state_20398__$1;
                                                                              statearr_20456_20522[1] = 16;
                                                                            } else {
                                                                              var statearr_20457_20523 = state_20398__$1;
                                                                              statearr_20457_20523[1] = 17;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_20399 === 9) {
                                                                              var inst_20327 = state_20398[2];
                                                                              var state_20398__$1 = state_20398;
                                                                              var statearr_20458_20524 = state_20398__$1;
                                                                              statearr_20458_20524[2] = inst_20327;
                                                                              statearr_20458_20524[1] = 7;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_20399 === 5) {
                                                                                var inst_20277 = cljs.core.deref.call(null, cs);
                                                                                var inst_20278 = cljs.core.seq.call(null, inst_20277);
                                                                                var inst_20279 = inst_20278;
                                                                                var inst_20280 = null;
                                                                                var inst_20281 = 0;
                                                                                var inst_20282 = 0;
                                                                                var state_20398__$1 = function() {
                                                                                  var statearr_20459 = state_20398;
                                                                                  statearr_20459[13] = inst_20279;
                                                                                  statearr_20459[14] = inst_20282;
                                                                                  statearr_20459[15] = inst_20280;
                                                                                  statearr_20459[17] = inst_20281;
                                                                                  return statearr_20459;
                                                                                }();
                                                                                var statearr_20460_20525 = state_20398__$1;
                                                                                statearr_20460_20525[2] = null;
                                                                                statearr_20460_20525[1] = 8;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_20399 === 14) {
                                                                                  var state_20398__$1 = state_20398;
                                                                                  var statearr_20461_20526 = state_20398__$1;
                                                                                  statearr_20461_20526[2] = null;
                                                                                  statearr_20461_20526[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_20399 === 45) {
                                                                                    var inst_20388 = state_20398[2];
                                                                                    var state_20398__$1 = state_20398;
                                                                                    var statearr_20462_20527 = state_20398__$1;
                                                                                    statearr_20462_20527[2] = inst_20388;
                                                                                    statearr_20462_20527[1] = 44;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_20399 === 26) {
                                                                                      var inst_20330 = state_20398[29];
                                                                                      var inst_20384 = state_20398[2];
                                                                                      var inst_20385 = cljs.core.seq.call(null, inst_20330);
                                                                                      var state_20398__$1 = function() {
                                                                                        var statearr_20463 = state_20398;
                                                                                        statearr_20463[31] = inst_20384;
                                                                                        return statearr_20463;
                                                                                      }();
                                                                                      if (inst_20385) {
                                                                                        var statearr_20464_20528 = state_20398__$1;
                                                                                        statearr_20464_20528[1] = 42;
                                                                                      } else {
                                                                                        var statearr_20465_20529 = state_20398__$1;
                                                                                        statearr_20465_20529[1] = 43;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_20399 === 16) {
                                                                                        var inst_20299 = state_20398[7];
                                                                                        var inst_20301 = cljs.core.chunked_seq_QMARK_.call(null, inst_20299);
                                                                                        var state_20398__$1 = state_20398;
                                                                                        if (inst_20301) {
                                                                                          var statearr_20466_20530 = state_20398__$1;
                                                                                          statearr_20466_20530[1] = 19;
                                                                                        } else {
                                                                                          var statearr_20467_20531 = state_20398__$1;
                                                                                          statearr_20467_20531[1] = 20;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_20399 === 38) {
                                                                                          var inst_20377 = state_20398[2];
                                                                                          var state_20398__$1 = state_20398;
                                                                                          var statearr_20468_20532 = state_20398__$1;
                                                                                          statearr_20468_20532[2] = inst_20377;
                                                                                          statearr_20468_20532[1] = 35;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_20399 === 30) {
                                                                                            var state_20398__$1 = state_20398;
                                                                                            var statearr_20469_20533 = state_20398__$1;
                                                                                            statearr_20469_20533[2] = null;
                                                                                            statearr_20469_20533[1] = 32;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_20399 === 10) {
                                                                                              var inst_20282 = state_20398[14];
                                                                                              var inst_20280 = state_20398[15];
                                                                                              var inst_20288 = cljs.core._nth.call(null, inst_20280, inst_20282);
                                                                                              var inst_20289 = cljs.core.nth.call(null, inst_20288, 0, null);
                                                                                              var inst_20290 = cljs.core.nth.call(null, inst_20288, 1, null);
                                                                                              var state_20398__$1 = function() {
                                                                                                var statearr_20470 = state_20398;
                                                                                                statearr_20470[26] = inst_20289;
                                                                                                return statearr_20470;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_20290)) {
                                                                                                var statearr_20471_20534 = state_20398__$1;
                                                                                                statearr_20471_20534[1] = 13;
                                                                                              } else {
                                                                                                var statearr_20472_20535 = state_20398__$1;
                                                                                                statearr_20472_20535[1] = 14;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_20399 === 18) {
                                                                                                var inst_20323 = state_20398[2];
                                                                                                var state_20398__$1 = state_20398;
                                                                                                var statearr_20473_20536 = state_20398__$1;
                                                                                                statearr_20473_20536[2] = inst_20323;
                                                                                                statearr_20473_20536[1] = 12;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                if (state_val_20399 === 42) {
                                                                                                  var state_20398__$1 = state_20398;
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_20398__$1, 45, dchan);
                                                                                                } else {
                                                                                                  if (state_val_20399 === 37) {
                                                                                                    var inst_20366 = state_20398[23];
                                                                                                    var inst_20357 = state_20398[25];
                                                                                                    var inst_20270 = state_20398[12];
                                                                                                    var inst_20366__$1 = cljs.core.first.call(null, inst_20357);
                                                                                                    var inst_20367 = cljs.core.async.put_BANG_.call(null, inst_20366__$1, inst_20270, done);
                                                                                                    var state_20398__$1 = function() {
                                                                                                      var statearr_20474 = state_20398;
                                                                                                      statearr_20474[23] = inst_20366__$1;
                                                                                                      return statearr_20474;
                                                                                                    }();
                                                                                                    if (cljs.core.truth_(inst_20367)) {
                                                                                                      var statearr_20475_20537 = state_20398__$1;
                                                                                                      statearr_20475_20537[1] = 39;
                                                                                                    } else {
                                                                                                      var statearr_20476_20538 = state_20398__$1;
                                                                                                      statearr_20476_20538[1] = 40;
                                                                                                    }
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                  } else {
                                                                                                    if (state_val_20399 === 8) {
                                                                                                      var inst_20282 = state_20398[14];
                                                                                                      var inst_20281 = state_20398[17];
                                                                                                      var inst_20284 = inst_20282 < inst_20281;
                                                                                                      var inst_20285 = inst_20284;
                                                                                                      var state_20398__$1 = state_20398;
                                                                                                      if (cljs.core.truth_(inst_20285)) {
                                                                                                        var statearr_20477_20539 = state_20398__$1;
                                                                                                        statearr_20477_20539[1] = 10;
                                                                                                      } else {
                                                                                                        var statearr_20478_20540 = state_20398__$1;
                                                                                                        statearr_20478_20540[1] = 11;
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6670__auto___20486, cs, m, dchan, dctr, done);
        return function(switch__6655__auto__, c__6670__auto___20486, cs, m, dchan, dctr, done) {
          return function() {
            var state_machine__6656__auto__ = null;
            var state_machine__6656__auto____0 = function() {
              var statearr_20482 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_20482[0] = state_machine__6656__auto__;
              statearr_20482[1] = 1;
              return statearr_20482;
            };
            var state_machine__6656__auto____1 = function(state_20398) {
              while (true) {
                var ret_value__6657__auto__ = function() {
                  try {
                    while (true) {
                      var result__6658__auto__ = switch__6655__auto__.call(null, state_20398);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6658__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6658__auto__;
                      }
                      break;
                    }
                  } catch (e20483) {
                    if (e20483 instanceof Object) {
                      var ex__6659__auto__ = e20483;
                      var statearr_20484_20541 = state_20398;
                      statearr_20484_20541[5] = ex__6659__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20398);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e20483;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6657__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__20542 = state_20398;
                  state_20398 = G__20542;
                  continue;
                } else {
                  return ret_value__6657__auto__;
                }
                break;
              }
            };
            state_machine__6656__auto__ = function(state_20398) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6656__auto____0.call(this);
                case 1:
                  return state_machine__6656__auto____1.call(this, state_20398);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6656__auto____0;
            state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6656__auto____1;
            return state_machine__6656__auto__;
          }();
        }(switch__6655__auto__, c__6670__auto___20486, cs, m, dchan, dctr, done);
      }();
      var state__6672__auto__ = function() {
        var statearr_20485 = f__6671__auto__.call(null);
        statearr_20485[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6670__auto___20486;
        return statearr_20485;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6672__auto__);
    };
  }(c__6670__auto___20486, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true);
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch;
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap;
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
  var obj20544 = {};
  return obj20544;
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if (function() {
    var and__3749__auto__ = m;
    if (and__3749__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4400__auto__ = m == null ? null : m;
    return function() {
      var or__3761__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if (function() {
    var and__3749__auto__ = m;
    if (and__3749__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4400__auto__ = m == null ? null : m;
    return function() {
      var or__3761__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if (function() {
    var and__3749__auto__ = m;
    if (and__3749__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4400__auto__ = m == null ? null : m;
    return function() {
      var or__3761__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if (function() {
    var and__3749__auto__ = m;
    if (and__3749__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4400__auto__ = m == null ? null : m;
    return function() {
      var or__3761__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if (function() {
    var and__3749__auto__ = m;
    if (and__3749__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4400__auto__ = m == null ? null : m;
    return function() {
      var or__3761__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__20545) {
    var map__20550 = p__20545;
    var map__20550__$1 = cljs.core.seq_QMARK_.call(null, map__20550) ? cljs.core.apply.call(null, cljs.core.hash_map, map__20550) : map__20550;
    var opts = map__20550__$1;
    var statearr_20551_20554 = state;
    statearr_20551_20554[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4126__auto__ = cljs.core.async.do_alts.call(null, function(map__20550, map__20550__$1, opts) {
      return function(val) {
        var statearr_20552_20555 = state;
        statearr_20552_20555[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
      };
    }(map__20550, map__20550__$1, opts), ports, opts);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var cb = temp__4126__auto__;
      var statearr_20553_20556 = state;
      statearr_20553_20556[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
    } else {
      return null;
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__20545 = null;
    if (arguments.length > 3) {
      p__20545 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__20545);
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__20557) {
    var state = cljs.core.first(arglist__20557);
    arglist__20557 = cljs.core.next(arglist__20557);
    var cont_block = cljs.core.first(arglist__20557);
    arglist__20557 = cljs.core.next(arglist__20557);
    var ports = cljs.core.first(arglist__20557);
    var p__20545 = cljs.core.rest(arglist__20557);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__20545);
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_;
}();
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", -316350075));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), chs), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t20677 !== "undefined") {
    } else {
      cljs.core.async.t20677 = function(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, meta20678) {
        this.change = change;
        this.mix = mix;
        this.solo_mode = solo_mode;
        this.pick = pick;
        this.cs = cs;
        this.calc_state = calc_state;
        this.out = out;
        this.changed = changed;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.meta20678 = meta20678;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t20677.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t20677.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t20677.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t20677.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t20677.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t20677.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, "mode", "mode", -2000032078, null))))].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t20677.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t20677.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t20677.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_20679) {
          var self__ = this;
          var _20679__$1 = this;
          return self__.meta20678;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t20677.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_20679, meta20678__$1) {
          var self__ = this;
          var _20679__$1 = this;
          return new cljs.core.async.t20677(self__.change, self__.mix, self__.solo_mode, self__.pick, self__.cs, self__.calc_state, self__.out, self__.changed, self__.solo_modes, self__.attrs, meta20678__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t20677.cljs$lang$type = true;
      cljs.core.async.t20677.cljs$lang$ctorStr = "cljs.core.async/t20677";
      cljs.core.async.t20677.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
          return cljs.core._write.call(null, writer__4344__auto__, "cljs.core.async/t20677");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t20677 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t20677(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta20678) {
          return new cljs.core.async.t20677(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta20678);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t20677(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 25, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 510, new cljs.core.Keyword(null, "column", "column", 2078222095), 11, new cljs.core.Keyword(null, "line", "line", 212345235), 499, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/tim/clojure/logging-dashboard/resources/public/js/cljs/core/async.cljs"], 
    null));
  }();
  var c__6670__auto___20796 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6670__auto___20796, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__6671__auto__ = function() {
        var switch__6655__auto__ = function(c__6670__auto___20796, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_20749) {
            var state_val_20750 = state_20749[1];
            if (state_val_20750 === 7) {
              var inst_20693 = state_20749[7];
              var inst_20698 = cljs.core.apply.call(null, cljs.core.hash_map, inst_20693);
              var state_20749__$1 = state_20749;
              var statearr_20751_20797 = state_20749__$1;
              statearr_20751_20797[2] = inst_20698;
              statearr_20751_20797[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_20750 === 20) {
                var inst_20708 = state_20749[8];
                var state_20749__$1 = state_20749;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_20749__$1, 23, out, inst_20708);
              } else {
                if (state_val_20750 === 1) {
                  var inst_20683 = state_20749[9];
                  var inst_20683__$1 = calc_state.call(null);
                  var inst_20684 = cljs.core.seq_QMARK_.call(null, inst_20683__$1);
                  var state_20749__$1 = function() {
                    var statearr_20752 = state_20749;
                    statearr_20752[9] = inst_20683__$1;
                    return statearr_20752;
                  }();
                  if (inst_20684) {
                    var statearr_20753_20798 = state_20749__$1;
                    statearr_20753_20798[1] = 2;
                  } else {
                    var statearr_20754_20799 = state_20749__$1;
                    statearr_20754_20799[1] = 3;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_20750 === 24) {
                    var inst_20701 = state_20749[10];
                    var inst_20693 = inst_20701;
                    var state_20749__$1 = function() {
                      var statearr_20755 = state_20749;
                      statearr_20755[7] = inst_20693;
                      return statearr_20755;
                    }();
                    var statearr_20756_20800 = state_20749__$1;
                    statearr_20756_20800[2] = null;
                    statearr_20756_20800[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_20750 === 4) {
                      var inst_20683 = state_20749[9];
                      var inst_20689 = state_20749[2];
                      var inst_20690 = cljs.core.get.call(null, inst_20689, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                      var inst_20691 = cljs.core.get.call(null, inst_20689, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                      var inst_20692 = cljs.core.get.call(null, inst_20689, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                      var inst_20693 = inst_20683;
                      var state_20749__$1 = function() {
                        var statearr_20757 = state_20749;
                        statearr_20757[7] = inst_20693;
                        statearr_20757[11] = inst_20690;
                        statearr_20757[12] = inst_20692;
                        statearr_20757[13] = inst_20691;
                        return statearr_20757;
                      }();
                      var statearr_20758_20801 = state_20749__$1;
                      statearr_20758_20801[2] = null;
                      statearr_20758_20801[1] = 5;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_20750 === 15) {
                        var state_20749__$1 = state_20749;
                        var statearr_20759_20802 = state_20749__$1;
                        statearr_20759_20802[2] = null;
                        statearr_20759_20802[1] = 16;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_20750 === 21) {
                          var inst_20701 = state_20749[10];
                          var inst_20693 = inst_20701;
                          var state_20749__$1 = function() {
                            var statearr_20760 = state_20749;
                            statearr_20760[7] = inst_20693;
                            return statearr_20760;
                          }();
                          var statearr_20761_20803 = state_20749__$1;
                          statearr_20761_20803[2] = null;
                          statearr_20761_20803[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_20750 === 13) {
                            var inst_20745 = state_20749[2];
                            var state_20749__$1 = state_20749;
                            var statearr_20762_20804 = state_20749__$1;
                            statearr_20762_20804[2] = inst_20745;
                            statearr_20762_20804[1] = 6;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_20750 === 22) {
                              var inst_20743 = state_20749[2];
                              var state_20749__$1 = state_20749;
                              var statearr_20763_20805 = state_20749__$1;
                              statearr_20763_20805[2] = inst_20743;
                              statearr_20763_20805[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_20750 === 6) {
                                var inst_20747 = state_20749[2];
                                var state_20749__$1 = state_20749;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20749__$1, inst_20747);
                              } else {
                                if (state_val_20750 === 25) {
                                  var state_20749__$1 = state_20749;
                                  var statearr_20764_20806 = state_20749__$1;
                                  statearr_20764_20806[2] = null;
                                  statearr_20764_20806[1] = 26;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_20750 === 17) {
                                    var inst_20723 = state_20749[14];
                                    var state_20749__$1 = state_20749;
                                    var statearr_20765_20807 = state_20749__$1;
                                    statearr_20765_20807[2] = inst_20723;
                                    statearr_20765_20807[1] = 19;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_20750 === 3) {
                                      var inst_20683 = state_20749[9];
                                      var state_20749__$1 = state_20749;
                                      var statearr_20766_20808 = state_20749__$1;
                                      statearr_20766_20808[2] = inst_20683;
                                      statearr_20766_20808[1] = 4;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_20750 === 12) {
                                        var inst_20709 = state_20749[15];
                                        var inst_20723 = state_20749[14];
                                        var inst_20704 = state_20749[16];
                                        var inst_20723__$1 = inst_20704.call(null, inst_20709);
                                        var state_20749__$1 = function() {
                                          var statearr_20767 = state_20749;
                                          statearr_20767[14] = inst_20723__$1;
                                          return statearr_20767;
                                        }();
                                        if (cljs.core.truth_(inst_20723__$1)) {
                                          var statearr_20768_20809 = state_20749__$1;
                                          statearr_20768_20809[1] = 17;
                                        } else {
                                          var statearr_20769_20810 = state_20749__$1;
                                          statearr_20769_20810[1] = 18;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_20750 === 2) {
                                          var inst_20683 = state_20749[9];
                                          var inst_20686 = cljs.core.apply.call(null, cljs.core.hash_map, inst_20683);
                                          var state_20749__$1 = state_20749;
                                          var statearr_20770_20811 = state_20749__$1;
                                          statearr_20770_20811[2] = inst_20686;
                                          statearr_20770_20811[1] = 4;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_20750 === 23) {
                                            var inst_20734 = state_20749[2];
                                            var state_20749__$1 = state_20749;
                                            if (cljs.core.truth_(inst_20734)) {
                                              var statearr_20771_20812 = state_20749__$1;
                                              statearr_20771_20812[1] = 24;
                                            } else {
                                              var statearr_20772_20813 = state_20749__$1;
                                              statearr_20772_20813[1] = 25;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_20750 === 19) {
                                              var inst_20731 = state_20749[2];
                                              var state_20749__$1 = state_20749;
                                              if (cljs.core.truth_(inst_20731)) {
                                                var statearr_20773_20814 = state_20749__$1;
                                                statearr_20773_20814[1] = 20;
                                              } else {
                                                var statearr_20774_20815 = state_20749__$1;
                                                statearr_20774_20815[1] = 21;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_20750 === 11) {
                                                var inst_20708 = state_20749[8];
                                                var inst_20714 = inst_20708 == null;
                                                var state_20749__$1 = state_20749;
                                                if (cljs.core.truth_(inst_20714)) {
                                                  var statearr_20775_20816 = state_20749__$1;
                                                  statearr_20775_20816[1] = 14;
                                                } else {
                                                  var statearr_20776_20817 = state_20749__$1;
                                                  statearr_20776_20817[1] = 15;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_20750 === 9) {
                                                  var inst_20701 = state_20749[10];
                                                  var inst_20701__$1 = state_20749[2];
                                                  var inst_20702 = cljs.core.get.call(null, inst_20701__$1, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                                                  var inst_20703 = cljs.core.get.call(null, inst_20701__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                                                  var inst_20704 = cljs.core.get.call(null, inst_20701__$1, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                                                  var state_20749__$1 = function() {
                                                    var statearr_20777 = state_20749;
                                                    statearr_20777[16] = inst_20704;
                                                    statearr_20777[17] = inst_20703;
                                                    statearr_20777[10] = inst_20701__$1;
                                                    return statearr_20777;
                                                  }();
                                                  return cljs.core.async.ioc_alts_BANG_.call(null, state_20749__$1, 10, inst_20702);
                                                } else {
                                                  if (state_val_20750 === 5) {
                                                    var inst_20693 = state_20749[7];
                                                    var inst_20696 = cljs.core.seq_QMARK_.call(null, inst_20693);
                                                    var state_20749__$1 = state_20749;
                                                    if (inst_20696) {
                                                      var statearr_20778_20818 = state_20749__$1;
                                                      statearr_20778_20818[1] = 7;
                                                    } else {
                                                      var statearr_20779_20819 = state_20749__$1;
                                                      statearr_20779_20819[1] = 8;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_20750 === 14) {
                                                      var inst_20709 = state_20749[15];
                                                      var inst_20716 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_20709);
                                                      var state_20749__$1 = state_20749;
                                                      var statearr_20780_20820 = state_20749__$1;
                                                      statearr_20780_20820[2] = inst_20716;
                                                      statearr_20780_20820[1] = 16;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_20750 === 26) {
                                                        var inst_20739 = state_20749[2];
                                                        var state_20749__$1 = state_20749;
                                                        var statearr_20781_20821 = state_20749__$1;
                                                        statearr_20781_20821[2] = inst_20739;
                                                        statearr_20781_20821[1] = 22;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_20750 === 16) {
                                                          var inst_20719 = state_20749[2];
                                                          var inst_20720 = calc_state.call(null);
                                                          var inst_20693 = inst_20720;
                                                          var state_20749__$1 = function() {
                                                            var statearr_20782 = state_20749;
                                                            statearr_20782[7] = inst_20693;
                                                            statearr_20782[18] = inst_20719;
                                                            return statearr_20782;
                                                          }();
                                                          var statearr_20783_20822 = state_20749__$1;
                                                          statearr_20783_20822[2] = null;
                                                          statearr_20783_20822[1] = 5;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_20750 === 10) {
                                                            var inst_20708 = state_20749[8];
                                                            var inst_20709 = state_20749[15];
                                                            var inst_20707 = state_20749[2];
                                                            var inst_20708__$1 = cljs.core.nth.call(null, inst_20707, 0, null);
                                                            var inst_20709__$1 = cljs.core.nth.call(null, inst_20707, 1, null);
                                                            var inst_20710 = inst_20708__$1 == null;
                                                            var inst_20711 = cljs.core._EQ_.call(null, inst_20709__$1, change);
                                                            var inst_20712 = inst_20710 || inst_20711;
                                                            var state_20749__$1 = function() {
                                                              var statearr_20784 = state_20749;
                                                              statearr_20784[8] = inst_20708__$1;
                                                              statearr_20784[15] = inst_20709__$1;
                                                              return statearr_20784;
                                                            }();
                                                            if (cljs.core.truth_(inst_20712)) {
                                                              var statearr_20785_20823 = state_20749__$1;
                                                              statearr_20785_20823[1] = 11;
                                                            } else {
                                                              var statearr_20786_20824 = state_20749__$1;
                                                              statearr_20786_20824[1] = 12;
                                                            }
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_20750 === 18) {
                                                              var inst_20709 = state_20749[15];
                                                              var inst_20704 = state_20749[16];
                                                              var inst_20703 = state_20749[17];
                                                              var inst_20726 = cljs.core.empty_QMARK_.call(null, inst_20704);
                                                              var inst_20727 = inst_20703.call(null, inst_20709);
                                                              var inst_20728 = cljs.core.not.call(null, inst_20727);
                                                              var inst_20729 = inst_20726 && inst_20728;
                                                              var state_20749__$1 = state_20749;
                                                              var statearr_20787_20825 = state_20749__$1;
                                                              statearr_20787_20825[2] = inst_20729;
                                                              statearr_20787_20825[1] = 19;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_20750 === 8) {
                                                                var inst_20693 = state_20749[7];
                                                                var state_20749__$1 = state_20749;
                                                                var statearr_20788_20826 = state_20749__$1;
                                                                statearr_20788_20826[2] = inst_20693;
                                                                statearr_20788_20826[1] = 9;
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6670__auto___20796, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__6655__auto__, c__6670__auto___20796, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var state_machine__6656__auto__ = null;
            var state_machine__6656__auto____0 = function() {
              var statearr_20792 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_20792[0] = state_machine__6656__auto__;
              statearr_20792[1] = 1;
              return statearr_20792;
            };
            var state_machine__6656__auto____1 = function(state_20749) {
              while (true) {
                var ret_value__6657__auto__ = function() {
                  try {
                    while (true) {
                      var result__6658__auto__ = switch__6655__auto__.call(null, state_20749);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6658__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6658__auto__;
                      }
                      break;
                    }
                  } catch (e20793) {
                    if (e20793 instanceof Object) {
                      var ex__6659__auto__ = e20793;
                      var statearr_20794_20827 = state_20749;
                      statearr_20794_20827[5] = ex__6659__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20749);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e20793;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6657__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__20828 = state_20749;
                  state_20749 = G__20828;
                  continue;
                } else {
                  return ret_value__6657__auto__;
                }
                break;
              }
            };
            state_machine__6656__auto__ = function(state_20749) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6656__auto____0.call(this);
                case 1:
                  return state_machine__6656__auto____1.call(this, state_20749);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6656__auto____0;
            state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6656__auto____1;
            return state_machine__6656__auto__;
          }();
        }(switch__6655__auto__, c__6670__auto___20796, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__6672__auto__ = function() {
        var statearr_20795 = f__6671__auto__.call(null);
        statearr_20795[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6670__auto___20796;
        return statearr_20795;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6672__auto__);
    };
  }(c__6670__auto___20796, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
  var obj20830 = {};
  return obj20830;
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__3749__auto__ = p;
    if (and__3749__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4400__auto__ = p == null ? null : p;
    return function() {
      var or__3761__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if (function() {
    var and__3749__auto__ = p;
    if (and__3749__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4400__auto__ = p == null ? null : p;
    return function() {
      var or__3761__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if (function() {
      var and__3749__auto__ = p;
      if (and__3749__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
    } else {
      var x__4400__auto__ = p == null ? null : p;
      return function() {
        var or__3761__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p);
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if (function() {
      var and__3749__auto__ = p;
      if (and__3749__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
    } else {
      var x__4400__auto__ = p == null ? null : p;
      return function() {
        var or__3761__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v);
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_;
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3761__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if (cljs.core.truth_(or__3761__auto__)) {
          return or__3761__auto__;
        } else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3761__auto__, mults) {
            return function(p1__20831_SHARP_) {
              if (cljs.core.truth_(p1__20831_SHARP_.call(null, topic))) {
                return p1__20831_SHARP_;
              } else {
                return cljs.core.assoc.call(null, p1__20831_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
              }
            };
          }(or__3761__auto__, mults)), topic);
        }
      };
    }(mults);
    var p = function() {
      if (typeof cljs.core.async.t20954 !== "undefined") {
      } else {
        cljs.core.async.t20954 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta20955) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta20955 = meta20955;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
        };
        cljs.core.async.t20954.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t20954.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$1, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$1, close_QMARK_);
          };
        }(mults, ensure_mult);
        cljs.core.async.t20954.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$1) {
            var self__ = this;
            var p__$1 = this;
            var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if (cljs.core.truth_(temp__4126__auto__)) {
              var m = temp__4126__auto__;
              return cljs.core.async.untap.call(null, m, ch__$1);
            } else {
              return null;
            }
          };
        }(mults, ensure_mult);
        cljs.core.async.t20954.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
          };
        }(mults, ensure_mult);
        cljs.core.async.t20954.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
          };
        }(mults, ensure_mult);
        cljs.core.async.t20954.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t20954.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch;
          };
        }(mults, ensure_mult);
        cljs.core.async.t20954.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_20956) {
            var self__ = this;
            var _20956__$1 = this;
            return self__.meta20955;
          };
        }(mults, ensure_mult);
        cljs.core.async.t20954.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_20956, meta20955__$1) {
            var self__ = this;
            var _20956__$1 = this;
            return new cljs.core.async.t20954(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta20955__$1);
          };
        }(mults, ensure_mult);
        cljs.core.async.t20954.cljs$lang$type = true;
        cljs.core.async.t20954.cljs$lang$ctorStr = "cljs.core.async/t20954";
        cljs.core.async.t20954.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
            return cljs.core._write.call(null, writer__4344__auto__, "cljs.core.async/t20954");
          };
        }(mults, ensure_mult);
        cljs.core.async.__GT_t20954 = function(mults, ensure_mult) {
          return function __GT_t20954(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta20955) {
            return new cljs.core.async.t20954(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta20955);
          };
        }(mults, ensure_mult);
      }
      return new cljs.core.async.t20954(ensure_mult, mults, buf_fn, topic_fn, ch, pub, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 65, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 603, new cljs.core.Keyword(null, "column", "column", 2078222095), 14, new cljs.core.Keyword(null, "line", "line", 212345235), 591, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/tim/clojure/logging-dashboard/resources/public/js/cljs/core/async.cljs"], 
      null));
    }();
    var c__6670__auto___21076 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6670__auto___21076, mults, ensure_mult, p) {
      return function() {
        var f__6671__auto__ = function() {
          var switch__6655__auto__ = function(c__6670__auto___21076, mults, ensure_mult, p) {
            return function(state_21028) {
              var state_val_21029 = state_21028[1];
              if (state_val_21029 === 7) {
                var inst_21024 = state_21028[2];
                var state_21028__$1 = state_21028;
                var statearr_21030_21077 = state_21028__$1;
                statearr_21030_21077[2] = inst_21024;
                statearr_21030_21077[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_21029 === 20) {
                  var state_21028__$1 = state_21028;
                  var statearr_21031_21078 = state_21028__$1;
                  statearr_21031_21078[2] = null;
                  statearr_21031_21078[1] = 21;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_21029 === 1) {
                    var state_21028__$1 = state_21028;
                    var statearr_21032_21079 = state_21028__$1;
                    statearr_21032_21079[2] = null;
                    statearr_21032_21079[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_21029 === 24) {
                      var inst_21007 = state_21028[7];
                      var inst_21016 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_21007);
                      var state_21028__$1 = state_21028;
                      var statearr_21033_21080 = state_21028__$1;
                      statearr_21033_21080[2] = inst_21016;
                      statearr_21033_21080[1] = 25;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_21029 === 4) {
                        var inst_20959 = state_21028[8];
                        var inst_20959__$1 = state_21028[2];
                        var inst_20960 = inst_20959__$1 == null;
                        var state_21028__$1 = function() {
                          var statearr_21034 = state_21028;
                          statearr_21034[8] = inst_20959__$1;
                          return statearr_21034;
                        }();
                        if (cljs.core.truth_(inst_20960)) {
                          var statearr_21035_21081 = state_21028__$1;
                          statearr_21035_21081[1] = 5;
                        } else {
                          var statearr_21036_21082 = state_21028__$1;
                          statearr_21036_21082[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_21029 === 15) {
                          var inst_21001 = state_21028[2];
                          var state_21028__$1 = state_21028;
                          var statearr_21037_21083 = state_21028__$1;
                          statearr_21037_21083[2] = inst_21001;
                          statearr_21037_21083[1] = 12;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_21029 === 21) {
                            var inst_21021 = state_21028[2];
                            var state_21028__$1 = function() {
                              var statearr_21038 = state_21028;
                              statearr_21038[9] = inst_21021;
                              return statearr_21038;
                            }();
                            var statearr_21039_21084 = state_21028__$1;
                            statearr_21039_21084[2] = null;
                            statearr_21039_21084[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_21029 === 13) {
                              var inst_20983 = state_21028[10];
                              var inst_20985 = cljs.core.chunked_seq_QMARK_.call(null, inst_20983);
                              var state_21028__$1 = state_21028;
                              if (inst_20985) {
                                var statearr_21040_21085 = state_21028__$1;
                                statearr_21040_21085[1] = 16;
                              } else {
                                var statearr_21041_21086 = state_21028__$1;
                                statearr_21041_21086[1] = 17;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_21029 === 22) {
                                var inst_21013 = state_21028[2];
                                var state_21028__$1 = state_21028;
                                if (cljs.core.truth_(inst_21013)) {
                                  var statearr_21042_21087 = state_21028__$1;
                                  statearr_21042_21087[1] = 23;
                                } else {
                                  var statearr_21043_21088 = state_21028__$1;
                                  statearr_21043_21088[1] = 24;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_21029 === 6) {
                                  var inst_21009 = state_21028[11];
                                  var inst_21007 = state_21028[7];
                                  var inst_20959 = state_21028[8];
                                  var inst_21007__$1 = topic_fn.call(null, inst_20959);
                                  var inst_21008 = cljs.core.deref.call(null, mults);
                                  var inst_21009__$1 = cljs.core.get.call(null, inst_21008, inst_21007__$1);
                                  var state_21028__$1 = function() {
                                    var statearr_21044 = state_21028;
                                    statearr_21044[11] = inst_21009__$1;
                                    statearr_21044[7] = inst_21007__$1;
                                    return statearr_21044;
                                  }();
                                  if (cljs.core.truth_(inst_21009__$1)) {
                                    var statearr_21045_21089 = state_21028__$1;
                                    statearr_21045_21089[1] = 19;
                                  } else {
                                    var statearr_21046_21090 = state_21028__$1;
                                    statearr_21046_21090[1] = 20;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_21029 === 25) {
                                    var inst_21018 = state_21028[2];
                                    var state_21028__$1 = state_21028;
                                    var statearr_21047_21091 = state_21028__$1;
                                    statearr_21047_21091[2] = inst_21018;
                                    statearr_21047_21091[1] = 21;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_21029 === 17) {
                                      var inst_20983 = state_21028[10];
                                      var inst_20992 = cljs.core.first.call(null, inst_20983);
                                      var inst_20993 = cljs.core.async.muxch_STAR_.call(null, inst_20992);
                                      var inst_20994 = cljs.core.async.close_BANG_.call(null, inst_20993);
                                      var inst_20995 = cljs.core.next.call(null, inst_20983);
                                      var inst_20969 = inst_20995;
                                      var inst_20970 = null;
                                      var inst_20971 = 0;
                                      var inst_20972 = 0;
                                      var state_21028__$1 = function() {
                                        var statearr_21048 = state_21028;
                                        statearr_21048[12] = inst_20994;
                                        statearr_21048[13] = inst_20971;
                                        statearr_21048[14] = inst_20972;
                                        statearr_21048[15] = inst_20969;
                                        statearr_21048[16] = inst_20970;
                                        return statearr_21048;
                                      }();
                                      var statearr_21049_21092 = state_21028__$1;
                                      statearr_21049_21092[2] = null;
                                      statearr_21049_21092[1] = 8;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_21029 === 3) {
                                        var inst_21026 = state_21028[2];
                                        var state_21028__$1 = state_21028;
                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21028__$1, inst_21026);
                                      } else {
                                        if (state_val_21029 === 12) {
                                          var inst_21003 = state_21028[2];
                                          var state_21028__$1 = state_21028;
                                          var statearr_21050_21093 = state_21028__$1;
                                          statearr_21050_21093[2] = inst_21003;
                                          statearr_21050_21093[1] = 9;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_21029 === 2) {
                                            var state_21028__$1 = state_21028;
                                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21028__$1, 4, ch);
                                          } else {
                                            if (state_val_21029 === 23) {
                                              var state_21028__$1 = state_21028;
                                              var statearr_21051_21094 = state_21028__$1;
                                              statearr_21051_21094[2] = null;
                                              statearr_21051_21094[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_21029 === 19) {
                                                var inst_21009 = state_21028[11];
                                                var inst_20959 = state_21028[8];
                                                var inst_21011 = cljs.core.async.muxch_STAR_.call(null, inst_21009);
                                                var state_21028__$1 = state_21028;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_21028__$1, 22, inst_21011, inst_20959);
                                              } else {
                                                if (state_val_21029 === 11) {
                                                  var inst_20969 = state_21028[15];
                                                  var inst_20983 = state_21028[10];
                                                  var inst_20983__$1 = cljs.core.seq.call(null, inst_20969);
                                                  var state_21028__$1 = function() {
                                                    var statearr_21052 = state_21028;
                                                    statearr_21052[10] = inst_20983__$1;
                                                    return statearr_21052;
                                                  }();
                                                  if (inst_20983__$1) {
                                                    var statearr_21053_21095 = state_21028__$1;
                                                    statearr_21053_21095[1] = 13;
                                                  } else {
                                                    var statearr_21054_21096 = state_21028__$1;
                                                    statearr_21054_21096[1] = 14;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_21029 === 9) {
                                                    var inst_21005 = state_21028[2];
                                                    var state_21028__$1 = state_21028;
                                                    var statearr_21055_21097 = state_21028__$1;
                                                    statearr_21055_21097[2] = inst_21005;
                                                    statearr_21055_21097[1] = 7;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_21029 === 5) {
                                                      var inst_20966 = cljs.core.deref.call(null, mults);
                                                      var inst_20967 = cljs.core.vals.call(null, inst_20966);
                                                      var inst_20968 = cljs.core.seq.call(null, inst_20967);
                                                      var inst_20969 = inst_20968;
                                                      var inst_20970 = null;
                                                      var inst_20971 = 0;
                                                      var inst_20972 = 0;
                                                      var state_21028__$1 = function() {
                                                        var statearr_21056 = state_21028;
                                                        statearr_21056[13] = inst_20971;
                                                        statearr_21056[14] = inst_20972;
                                                        statearr_21056[15] = inst_20969;
                                                        statearr_21056[16] = inst_20970;
                                                        return statearr_21056;
                                                      }();
                                                      var statearr_21057_21098 = state_21028__$1;
                                                      statearr_21057_21098[2] = null;
                                                      statearr_21057_21098[1] = 8;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_21029 === 14) {
                                                        var state_21028__$1 = state_21028;
                                                        var statearr_21061_21099 = state_21028__$1;
                                                        statearr_21061_21099[2] = null;
                                                        statearr_21061_21099[1] = 15;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_21029 === 16) {
                                                          var inst_20983 = state_21028[10];
                                                          var inst_20987 = cljs.core.chunk_first.call(null, inst_20983);
                                                          var inst_20988 = cljs.core.chunk_rest.call(null, inst_20983);
                                                          var inst_20989 = cljs.core.count.call(null, inst_20987);
                                                          var inst_20969 = inst_20988;
                                                          var inst_20970 = inst_20987;
                                                          var inst_20971 = inst_20989;
                                                          var inst_20972 = 0;
                                                          var state_21028__$1 = function() {
                                                            var statearr_21062 = state_21028;
                                                            statearr_21062[13] = inst_20971;
                                                            statearr_21062[14] = inst_20972;
                                                            statearr_21062[15] = inst_20969;
                                                            statearr_21062[16] = inst_20970;
                                                            return statearr_21062;
                                                          }();
                                                          var statearr_21063_21100 = state_21028__$1;
                                                          statearr_21063_21100[2] = null;
                                                          statearr_21063_21100[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_21029 === 10) {
                                                            var inst_20971 = state_21028[13];
                                                            var inst_20972 = state_21028[14];
                                                            var inst_20969 = state_21028[15];
                                                            var inst_20970 = state_21028[16];
                                                            var inst_20977 = cljs.core._nth.call(null, inst_20970, inst_20972);
                                                            var inst_20978 = cljs.core.async.muxch_STAR_.call(null, inst_20977);
                                                            var inst_20979 = cljs.core.async.close_BANG_.call(null, inst_20978);
                                                            var inst_20980 = inst_20972 + 1;
                                                            var tmp21058 = inst_20971;
                                                            var tmp21059 = inst_20969;
                                                            var tmp21060 = inst_20970;
                                                            var inst_20969__$1 = tmp21059;
                                                            var inst_20970__$1 = tmp21060;
                                                            var inst_20971__$1 = tmp21058;
                                                            var inst_20972__$1 = inst_20980;
                                                            var state_21028__$1 = function() {
                                                              var statearr_21064 = state_21028;
                                                              statearr_21064[17] = inst_20979;
                                                              statearr_21064[13] = inst_20971__$1;
                                                              statearr_21064[14] = inst_20972__$1;
                                                              statearr_21064[15] = inst_20969__$1;
                                                              statearr_21064[16] = inst_20970__$1;
                                                              return statearr_21064;
                                                            }();
                                                            var statearr_21065_21101 = state_21028__$1;
                                                            statearr_21065_21101[2] = null;
                                                            statearr_21065_21101[1] = 8;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_21029 === 18) {
                                                              var inst_20998 = state_21028[2];
                                                              var state_21028__$1 = state_21028;
                                                              var statearr_21066_21102 = state_21028__$1;
                                                              statearr_21066_21102[2] = inst_20998;
                                                              statearr_21066_21102[1] = 15;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_21029 === 8) {
                                                                var inst_20971 = state_21028[13];
                                                                var inst_20972 = state_21028[14];
                                                                var inst_20974 = inst_20972 < inst_20971;
                                                                var inst_20975 = inst_20974;
                                                                var state_21028__$1 = state_21028;
                                                                if (cljs.core.truth_(inst_20975)) {
                                                                  var statearr_21067_21103 = state_21028__$1;
                                                                  statearr_21067_21103[1] = 10;
                                                                } else {
                                                                  var statearr_21068_21104 = state_21028__$1;
                                                                  statearr_21068_21104[1] = 11;
                                                                }
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6670__auto___21076, mults, ensure_mult, p);
          return function(switch__6655__auto__, c__6670__auto___21076, mults, ensure_mult, p) {
            return function() {
              var state_machine__6656__auto__ = null;
              var state_machine__6656__auto____0 = function() {
                var statearr_21072 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_21072[0] = state_machine__6656__auto__;
                statearr_21072[1] = 1;
                return statearr_21072;
              };
              var state_machine__6656__auto____1 = function(state_21028) {
                while (true) {
                  var ret_value__6657__auto__ = function() {
                    try {
                      while (true) {
                        var result__6658__auto__ = switch__6655__auto__.call(null, state_21028);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6658__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6658__auto__;
                        }
                        break;
                      }
                    } catch (e21073) {
                      if (e21073 instanceof Object) {
                        var ex__6659__auto__ = e21073;
                        var statearr_21074_21105 = state_21028;
                        statearr_21074_21105[5] = ex__6659__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21028);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e21073;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6657__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__21106 = state_21028;
                    state_21028 = G__21106;
                    continue;
                  } else {
                    return ret_value__6657__auto__;
                  }
                  break;
                }
              };
              state_machine__6656__auto__ = function(state_21028) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6656__auto____0.call(this);
                  case 1:
                    return state_machine__6656__auto____1.call(this, state_21028);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6656__auto____0;
              state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6656__auto____1;
              return state_machine__6656__auto__;
            }();
          }(switch__6655__auto__, c__6670__auto___21076, mults, ensure_mult, p);
        }();
        var state__6672__auto__ = function() {
          var statearr_21075 = f__6671__auto__.call(null);
          statearr_21075[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6670__auto___21076;
          return statearr_21075;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6672__auto__);
      };
    }(c__6670__auto___21076, mults, ensure_mult, p));
    return p;
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub;
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true);
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub;
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p);
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all;
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null);
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
            } else {
              return null;
            }
          };
        }(chs__$1, out, cnt, rets, dchan, dctr);
      };
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__6670__auto___21243 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6670__auto___21243, chs__$1, out, cnt, rets, dchan, dctr, done) {
      return function() {
        var f__6671__auto__ = function() {
          var switch__6655__auto__ = function(c__6670__auto___21243, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function(state_21213) {
              var state_val_21214 = state_21213[1];
              if (state_val_21214 === 7) {
                var state_21213__$1 = state_21213;
                var statearr_21215_21244 = state_21213__$1;
                statearr_21215_21244[2] = null;
                statearr_21215_21244[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_21214 === 1) {
                  var state_21213__$1 = state_21213;
                  var statearr_21216_21245 = state_21213__$1;
                  statearr_21216_21245[2] = null;
                  statearr_21216_21245[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_21214 === 4) {
                    var inst_21177 = state_21213[7];
                    var inst_21179 = inst_21177 < cnt;
                    var state_21213__$1 = state_21213;
                    if (cljs.core.truth_(inst_21179)) {
                      var statearr_21217_21246 = state_21213__$1;
                      statearr_21217_21246[1] = 6;
                    } else {
                      var statearr_21218_21247 = state_21213__$1;
                      statearr_21218_21247[1] = 7;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_21214 === 15) {
                      var inst_21209 = state_21213[2];
                      var state_21213__$1 = state_21213;
                      var statearr_21219_21248 = state_21213__$1;
                      statearr_21219_21248[2] = inst_21209;
                      statearr_21219_21248[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_21214 === 13) {
                        var inst_21202 = cljs.core.async.close_BANG_.call(null, out);
                        var state_21213__$1 = state_21213;
                        var statearr_21220_21249 = state_21213__$1;
                        statearr_21220_21249[2] = inst_21202;
                        statearr_21220_21249[1] = 15;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_21214 === 6) {
                          var state_21213__$1 = state_21213;
                          var statearr_21221_21250 = state_21213__$1;
                          statearr_21221_21250[2] = null;
                          statearr_21221_21250[1] = 11;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_21214 === 3) {
                            var inst_21211 = state_21213[2];
                            var state_21213__$1 = state_21213;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21213__$1, inst_21211);
                          } else {
                            if (state_val_21214 === 12) {
                              var inst_21199 = state_21213[8];
                              var inst_21199__$1 = state_21213[2];
                              var inst_21200 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_21199__$1);
                              var state_21213__$1 = function() {
                                var statearr_21222 = state_21213;
                                statearr_21222[8] = inst_21199__$1;
                                return statearr_21222;
                              }();
                              if (cljs.core.truth_(inst_21200)) {
                                var statearr_21223_21251 = state_21213__$1;
                                statearr_21223_21251[1] = 13;
                              } else {
                                var statearr_21224_21252 = state_21213__$1;
                                statearr_21224_21252[1] = 14;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_21214 === 2) {
                                var inst_21176 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                                var inst_21177 = 0;
                                var state_21213__$1 = function() {
                                  var statearr_21225 = state_21213;
                                  statearr_21225[9] = inst_21176;
                                  statearr_21225[7] = inst_21177;
                                  return statearr_21225;
                                }();
                                var statearr_21226_21253 = state_21213__$1;
                                statearr_21226_21253[2] = null;
                                statearr_21226_21253[1] = 4;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_21214 === 11) {
                                  var inst_21177 = state_21213[7];
                                  var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_21213, 10, Object, null, 9);
                                  var inst_21186 = chs__$1.call(null, inst_21177);
                                  var inst_21187 = done.call(null, inst_21177);
                                  var inst_21188 = cljs.core.async.take_BANG_.call(null, inst_21186, inst_21187);
                                  var state_21213__$1 = state_21213;
                                  var statearr_21227_21254 = state_21213__$1;
                                  statearr_21227_21254[2] = inst_21188;
                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21213__$1);
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_21214 === 9) {
                                    var inst_21177 = state_21213[7];
                                    var inst_21190 = state_21213[2];
                                    var inst_21191 = inst_21177 + 1;
                                    var inst_21177__$1 = inst_21191;
                                    var state_21213__$1 = function() {
                                      var statearr_21228 = state_21213;
                                      statearr_21228[10] = inst_21190;
                                      statearr_21228[7] = inst_21177__$1;
                                      return statearr_21228;
                                    }();
                                    var statearr_21229_21255 = state_21213__$1;
                                    statearr_21229_21255[2] = null;
                                    statearr_21229_21255[1] = 4;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_21214 === 5) {
                                      var inst_21197 = state_21213[2];
                                      var state_21213__$1 = function() {
                                        var statearr_21230 = state_21213;
                                        statearr_21230[11] = inst_21197;
                                        return statearr_21230;
                                      }();
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21213__$1, 12, dchan);
                                    } else {
                                      if (state_val_21214 === 14) {
                                        var inst_21199 = state_21213[8];
                                        var inst_21204 = cljs.core.apply.call(null, f, inst_21199);
                                        var state_21213__$1 = state_21213;
                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_21213__$1, 16, out, inst_21204);
                                      } else {
                                        if (state_val_21214 === 16) {
                                          var inst_21206 = state_21213[2];
                                          var state_21213__$1 = function() {
                                            var statearr_21231 = state_21213;
                                            statearr_21231[12] = inst_21206;
                                            return statearr_21231;
                                          }();
                                          var statearr_21232_21256 = state_21213__$1;
                                          statearr_21232_21256[2] = null;
                                          statearr_21232_21256[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_21214 === 10) {
                                            var inst_21181 = state_21213[2];
                                            var inst_21182 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                            var state_21213__$1 = function() {
                                              var statearr_21233 = state_21213;
                                              statearr_21233[13] = inst_21181;
                                              return statearr_21233;
                                            }();
                                            var statearr_21234_21257 = state_21213__$1;
                                            statearr_21234_21257[2] = inst_21182;
                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21213__$1);
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_21214 === 8) {
                                              var inst_21195 = state_21213[2];
                                              var state_21213__$1 = state_21213;
                                              var statearr_21235_21258 = state_21213__$1;
                                              statearr_21235_21258[2] = inst_21195;
                                              statearr_21235_21258[1] = 5;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6670__auto___21243, chs__$1, out, cnt, rets, dchan, dctr, done);
          return function(switch__6655__auto__, c__6670__auto___21243, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function() {
              var state_machine__6656__auto__ = null;
              var state_machine__6656__auto____0 = function() {
                var statearr_21239 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_21239[0] = state_machine__6656__auto__;
                statearr_21239[1] = 1;
                return statearr_21239;
              };
              var state_machine__6656__auto____1 = function(state_21213) {
                while (true) {
                  var ret_value__6657__auto__ = function() {
                    try {
                      while (true) {
                        var result__6658__auto__ = switch__6655__auto__.call(null, state_21213);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6658__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6658__auto__;
                        }
                        break;
                      }
                    } catch (e21240) {
                      if (e21240 instanceof Object) {
                        var ex__6659__auto__ = e21240;
                        var statearr_21241_21259 = state_21213;
                        statearr_21241_21259[5] = ex__6659__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21213);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e21240;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6657__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__21260 = state_21213;
                    state_21213 = G__21260;
                    continue;
                  } else {
                    return ret_value__6657__auto__;
                  }
                  break;
                }
              };
              state_machine__6656__auto__ = function(state_21213) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6656__auto____0.call(this);
                  case 1:
                    return state_machine__6656__auto____1.call(this, state_21213);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6656__auto____0;
              state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6656__auto____1;
              return state_machine__6656__auto__;
            }();
          }(switch__6655__auto__, c__6670__auto___21243, chs__$1, out, cnt, rets, dchan, dctr, done);
        }();
        var state__6672__auto__ = function() {
          var statearr_21242 = f__6671__auto__.call(null);
          statearr_21242[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6670__auto___21243;
          return statearr_21242;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6672__auto__);
      };
    }(c__6670__auto___21243, chs__$1, out, cnt, rets, dchan, dctr, done));
    return out;
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map;
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null);
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6670__auto___21368 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6670__auto___21368, out) {
      return function() {
        var f__6671__auto__ = function() {
          var switch__6655__auto__ = function(c__6670__auto___21368, out) {
            return function(state_21344) {
              var state_val_21345 = state_21344[1];
              if (state_val_21345 === 7) {
                var inst_21323 = state_21344[7];
                var inst_21324 = state_21344[8];
                var inst_21323__$1 = state_21344[2];
                var inst_21324__$1 = cljs.core.nth.call(null, inst_21323__$1, 0, null);
                var inst_21325 = cljs.core.nth.call(null, inst_21323__$1, 1, null);
                var inst_21326 = inst_21324__$1 == null;
                var state_21344__$1 = function() {
                  var statearr_21346 = state_21344;
                  statearr_21346[7] = inst_21323__$1;
                  statearr_21346[9] = inst_21325;
                  statearr_21346[8] = inst_21324__$1;
                  return statearr_21346;
                }();
                if (cljs.core.truth_(inst_21326)) {
                  var statearr_21347_21369 = state_21344__$1;
                  statearr_21347_21369[1] = 8;
                } else {
                  var statearr_21348_21370 = state_21344__$1;
                  statearr_21348_21370[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_21345 === 1) {
                  var inst_21315 = cljs.core.vec.call(null, chs);
                  var inst_21316 = inst_21315;
                  var state_21344__$1 = function() {
                    var statearr_21349 = state_21344;
                    statearr_21349[10] = inst_21316;
                    return statearr_21349;
                  }();
                  var statearr_21350_21371 = state_21344__$1;
                  statearr_21350_21371[2] = null;
                  statearr_21350_21371[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_21345 === 4) {
                    var inst_21316 = state_21344[10];
                    var state_21344__$1 = state_21344;
                    return cljs.core.async.ioc_alts_BANG_.call(null, state_21344__$1, 7, inst_21316);
                  } else {
                    if (state_val_21345 === 6) {
                      var inst_21340 = state_21344[2];
                      var state_21344__$1 = state_21344;
                      var statearr_21351_21372 = state_21344__$1;
                      statearr_21351_21372[2] = inst_21340;
                      statearr_21351_21372[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_21345 === 3) {
                        var inst_21342 = state_21344[2];
                        var state_21344__$1 = state_21344;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21344__$1, inst_21342);
                      } else {
                        if (state_val_21345 === 2) {
                          var inst_21316 = state_21344[10];
                          var inst_21318 = cljs.core.count.call(null, inst_21316);
                          var inst_21319 = inst_21318 > 0;
                          var state_21344__$1 = state_21344;
                          if (cljs.core.truth_(inst_21319)) {
                            var statearr_21353_21373 = state_21344__$1;
                            statearr_21353_21373[1] = 4;
                          } else {
                            var statearr_21354_21374 = state_21344__$1;
                            statearr_21354_21374[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_21345 === 11) {
                            var inst_21316 = state_21344[10];
                            var inst_21333 = state_21344[2];
                            var tmp21352 = inst_21316;
                            var inst_21316__$1 = tmp21352;
                            var state_21344__$1 = function() {
                              var statearr_21355 = state_21344;
                              statearr_21355[10] = inst_21316__$1;
                              statearr_21355[11] = inst_21333;
                              return statearr_21355;
                            }();
                            var statearr_21356_21375 = state_21344__$1;
                            statearr_21356_21375[2] = null;
                            statearr_21356_21375[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_21345 === 9) {
                              var inst_21324 = state_21344[8];
                              var state_21344__$1 = state_21344;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_21344__$1, 11, out, inst_21324);
                            } else {
                              if (state_val_21345 === 5) {
                                var inst_21338 = cljs.core.async.close_BANG_.call(null, out);
                                var state_21344__$1 = state_21344;
                                var statearr_21357_21376 = state_21344__$1;
                                statearr_21357_21376[2] = inst_21338;
                                statearr_21357_21376[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_21345 === 10) {
                                  var inst_21336 = state_21344[2];
                                  var state_21344__$1 = state_21344;
                                  var statearr_21358_21377 = state_21344__$1;
                                  statearr_21358_21377[2] = inst_21336;
                                  statearr_21358_21377[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_21345 === 8) {
                                    var inst_21323 = state_21344[7];
                                    var inst_21316 = state_21344[10];
                                    var inst_21325 = state_21344[9];
                                    var inst_21324 = state_21344[8];
                                    var inst_21328 = function() {
                                      var c = inst_21325;
                                      var v = inst_21324;
                                      var vec__21321 = inst_21323;
                                      var cs = inst_21316;
                                      return function(c, v, vec__21321, cs, inst_21323, inst_21316, inst_21325, inst_21324, state_val_21345, c__6670__auto___21368, out) {
                                        return function(p1__21261_SHARP_) {
                                          return cljs.core.not_EQ_.call(null, c, p1__21261_SHARP_);
                                        };
                                      }(c, v, vec__21321, cs, inst_21323, inst_21316, inst_21325, inst_21324, state_val_21345, c__6670__auto___21368, out);
                                    }();
                                    var inst_21329 = cljs.core.filterv.call(null, inst_21328, inst_21316);
                                    var inst_21316__$1 = inst_21329;
                                    var state_21344__$1 = function() {
                                      var statearr_21359 = state_21344;
                                      statearr_21359[10] = inst_21316__$1;
                                      return statearr_21359;
                                    }();
                                    var statearr_21360_21378 = state_21344__$1;
                                    statearr_21360_21378[2] = null;
                                    statearr_21360_21378[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6670__auto___21368, out);
          return function(switch__6655__auto__, c__6670__auto___21368, out) {
            return function() {
              var state_machine__6656__auto__ = null;
              var state_machine__6656__auto____0 = function() {
                var statearr_21364 = [null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_21364[0] = state_machine__6656__auto__;
                statearr_21364[1] = 1;
                return statearr_21364;
              };
              var state_machine__6656__auto____1 = function(state_21344) {
                while (true) {
                  var ret_value__6657__auto__ = function() {
                    try {
                      while (true) {
                        var result__6658__auto__ = switch__6655__auto__.call(null, state_21344);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6658__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6658__auto__;
                        }
                        break;
                      }
                    } catch (e21365) {
                      if (e21365 instanceof Object) {
                        var ex__6659__auto__ = e21365;
                        var statearr_21366_21379 = state_21344;
                        statearr_21366_21379[5] = ex__6659__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21344);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e21365;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6657__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__21380 = state_21344;
                    state_21344 = G__21380;
                    continue;
                  } else {
                    return ret_value__6657__auto__;
                  }
                  break;
                }
              };
              state_machine__6656__auto__ = function(state_21344) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6656__auto____0.call(this);
                  case 1:
                    return state_machine__6656__auto____1.call(this, state_21344);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6656__auto____0;
              state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6656__auto____1;
              return state_machine__6656__auto__;
            }();
          }(switch__6655__auto__, c__6670__auto___21368, out);
        }();
        var state__6672__auto__ = function() {
          var statearr_21367 = f__6671__auto__.call(null);
          statearr_21367[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6670__auto___21368;
          return statearr_21367;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6672__auto__);
      };
    }(c__6670__auto___21368, out));
    return out;
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge;
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function() {
  var take = null;
  var take__2 = function(n, ch) {
    return take.call(null, n, ch, null);
  };
  var take__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6670__auto___21473 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6670__auto___21473, out) {
      return function() {
        var f__6671__auto__ = function() {
          var switch__6655__auto__ = function(c__6670__auto___21473, out) {
            return function(state_21450) {
              var state_val_21451 = state_21450[1];
              if (state_val_21451 === 7) {
                var inst_21432 = state_21450[7];
                var inst_21432__$1 = state_21450[2];
                var inst_21433 = inst_21432__$1 == null;
                var inst_21434 = cljs.core.not.call(null, inst_21433);
                var state_21450__$1 = function() {
                  var statearr_21452 = state_21450;
                  statearr_21452[7] = inst_21432__$1;
                  return statearr_21452;
                }();
                if (inst_21434) {
                  var statearr_21453_21474 = state_21450__$1;
                  statearr_21453_21474[1] = 8;
                } else {
                  var statearr_21454_21475 = state_21450__$1;
                  statearr_21454_21475[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_21451 === 1) {
                  var inst_21427 = 0;
                  var state_21450__$1 = function() {
                    var statearr_21455 = state_21450;
                    statearr_21455[8] = inst_21427;
                    return statearr_21455;
                  }();
                  var statearr_21456_21476 = state_21450__$1;
                  statearr_21456_21476[2] = null;
                  statearr_21456_21476[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_21451 === 4) {
                    var state_21450__$1 = state_21450;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21450__$1, 7, ch);
                  } else {
                    if (state_val_21451 === 6) {
                      var inst_21445 = state_21450[2];
                      var state_21450__$1 = state_21450;
                      var statearr_21457_21477 = state_21450__$1;
                      statearr_21457_21477[2] = inst_21445;
                      statearr_21457_21477[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_21451 === 3) {
                        var inst_21447 = state_21450[2];
                        var inst_21448 = cljs.core.async.close_BANG_.call(null, out);
                        var state_21450__$1 = function() {
                          var statearr_21458 = state_21450;
                          statearr_21458[9] = inst_21447;
                          return statearr_21458;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21450__$1, inst_21448);
                      } else {
                        if (state_val_21451 === 2) {
                          var inst_21427 = state_21450[8];
                          var inst_21429 = inst_21427 < n;
                          var state_21450__$1 = state_21450;
                          if (cljs.core.truth_(inst_21429)) {
                            var statearr_21459_21478 = state_21450__$1;
                            statearr_21459_21478[1] = 4;
                          } else {
                            var statearr_21460_21479 = state_21450__$1;
                            statearr_21460_21479[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_21451 === 11) {
                            var inst_21427 = state_21450[8];
                            var inst_21437 = state_21450[2];
                            var inst_21438 = inst_21427 + 1;
                            var inst_21427__$1 = inst_21438;
                            var state_21450__$1 = function() {
                              var statearr_21461 = state_21450;
                              statearr_21461[10] = inst_21437;
                              statearr_21461[8] = inst_21427__$1;
                              return statearr_21461;
                            }();
                            var statearr_21462_21480 = state_21450__$1;
                            statearr_21462_21480[2] = null;
                            statearr_21462_21480[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_21451 === 9) {
                              var state_21450__$1 = state_21450;
                              var statearr_21463_21481 = state_21450__$1;
                              statearr_21463_21481[2] = null;
                              statearr_21463_21481[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_21451 === 5) {
                                var state_21450__$1 = state_21450;
                                var statearr_21464_21482 = state_21450__$1;
                                statearr_21464_21482[2] = null;
                                statearr_21464_21482[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_21451 === 10) {
                                  var inst_21442 = state_21450[2];
                                  var state_21450__$1 = state_21450;
                                  var statearr_21465_21483 = state_21450__$1;
                                  statearr_21465_21483[2] = inst_21442;
                                  statearr_21465_21483[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_21451 === 8) {
                                    var inst_21432 = state_21450[7];
                                    var state_21450__$1 = state_21450;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_21450__$1, 11, out, inst_21432);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6670__auto___21473, out);
          return function(switch__6655__auto__, c__6670__auto___21473, out) {
            return function() {
              var state_machine__6656__auto__ = null;
              var state_machine__6656__auto____0 = function() {
                var statearr_21469 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_21469[0] = state_machine__6656__auto__;
                statearr_21469[1] = 1;
                return statearr_21469;
              };
              var state_machine__6656__auto____1 = function(state_21450) {
                while (true) {
                  var ret_value__6657__auto__ = function() {
                    try {
                      while (true) {
                        var result__6658__auto__ = switch__6655__auto__.call(null, state_21450);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6658__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6658__auto__;
                        }
                        break;
                      }
                    } catch (e21470) {
                      if (e21470 instanceof Object) {
                        var ex__6659__auto__ = e21470;
                        var statearr_21471_21484 = state_21450;
                        statearr_21471_21484[5] = ex__6659__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21450);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e21470;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6657__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__21485 = state_21450;
                    state_21450 = G__21485;
                    continue;
                  } else {
                    return ret_value__6657__auto__;
                  }
                  break;
                }
              };
              state_machine__6656__auto__ = function(state_21450) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6656__auto____0.call(this);
                  case 1:
                    return state_machine__6656__auto____1.call(this, state_21450);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6656__auto____0;
              state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6656__auto____1;
              return state_machine__6656__auto__;
            }();
          }(switch__6655__auto__, c__6670__auto___21473, out);
        }();
        var state__6672__auto__ = function() {
          var statearr_21472 = f__6671__auto__.call(null);
          statearr_21472[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6670__auto___21473;
          return statearr_21472;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6672__auto__);
      };
    }(c__6670__auto___21473, out));
    return out;
  };
  take = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return take__2.call(this, n, ch);
      case 3:
        return take__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  take.cljs$core$IFn$_invoke$arity$3 = take__3;
  return take;
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if (typeof cljs.core.async.t21493 !== "undefined") {
  } else {
    cljs.core.async.t21493 = function(ch, f, map_LT_, meta21494) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta21494 = meta21494;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t21493.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t21493.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
    };
    cljs.core.async.t21493.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t21493.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t21496 !== "undefined") {
        } else {
          cljs.core.async.t21496 = function(fn1, _, meta21494, map_LT_, f, ch, meta21497) {
            this.fn1 = fn1;
            this._ = _;
            this.meta21494 = meta21494;
            this.map_LT_ = map_LT_;
            this.f = f;
            this.ch = ch;
            this.meta21497 = meta21497;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t21496.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t21496.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t21496.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$2, ___$1) {
                return function(p1__21486_SHARP_) {
                  return f1.call(null, p1__21486_SHARP_ == null ? null : self__.f.call(null, p1__21486_SHARP_));
                };
              }(f1, ___$2, ___$1);
            };
          }(___$1);
          cljs.core.async.t21496.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_21498) {
              var self__ = this;
              var _21498__$1 = this;
              return self__.meta21497;
            };
          }(___$1);
          cljs.core.async.t21496.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_21498, meta21497__$1) {
              var self__ = this;
              var _21498__$1 = this;
              return new cljs.core.async.t21496(self__.fn1, self__._, self__.meta21494, self__.map_LT_, self__.f, self__.ch, meta21497__$1);
            };
          }(___$1);
          cljs.core.async.t21496.cljs$lang$type = true;
          cljs.core.async.t21496.cljs$lang$ctorStr = "cljs.core.async/t21496";
          cljs.core.async.t21496.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
              return cljs.core._write.call(null, writer__4344__auto__, "cljs.core.async/t21496");
            };
          }(___$1);
          cljs.core.async.__GT_t21496 = function(___$1) {
            return function __GT_t21496(fn1__$1, ___$2, meta21494__$1, map_LT___$1, f__$1, ch__$1, meta21497) {
              return new cljs.core.async.t21496(fn1__$1, ___$2, meta21494__$1, map_LT___$1, f__$1, ch__$1, meta21497);
            };
          }(___$1);
        }
        return new cljs.core.async.t21496(fn1, ___$1, self__.meta21494, self__.map_LT_, self__.f, self__.ch, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 46, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 737, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 731, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/tim/clojure/logging-dashboard/resources/public/js/cljs/core/async.cljs"], 
        null));
      }());
      if (cljs.core.truth_(function() {
        var and__3749__auto__ = ret;
        if (cljs.core.truth_(and__3749__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__3749__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t21493.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t21493.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t21493.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t21493.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21495) {
      var self__ = this;
      var _21495__$1 = this;
      return self__.meta21494;
    };
    cljs.core.async.t21493.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21495, meta21494__$1) {
      var self__ = this;
      var _21495__$1 = this;
      return new cljs.core.async.t21493(self__.ch, self__.f, self__.map_LT_, meta21494__$1);
    };
    cljs.core.async.t21493.cljs$lang$type = true;
    cljs.core.async.t21493.cljs$lang$ctorStr = "cljs.core.async/t21493";
    cljs.core.async.t21493.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
      return cljs.core._write.call(null, writer__4344__auto__, "cljs.core.async/t21493");
    };
    cljs.core.async.__GT_t21493 = function __GT_t21493(ch__$1, f__$1, map_LT___$1, meta21494) {
      return new cljs.core.async.t21493(ch__$1, f__$1, map_LT___$1, meta21494);
    };
  }
  return new cljs.core.async.t21493(ch, f, map_LT_, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 46, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 743, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 722, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/tim/clojure/logging-dashboard/resources/public/js/cljs/core/async.cljs"], 
  null));
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if (typeof cljs.core.async.t21502 !== "undefined") {
  } else {
    cljs.core.async.t21502 = function(ch, f, map_GT_, meta21503) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta21503 = meta21503;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t21502.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t21502.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn1);
    };
    cljs.core.async.t21502.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t21502.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t21502.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t21502.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t21502.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21504) {
      var self__ = this;
      var _21504__$1 = this;
      return self__.meta21503;
    };
    cljs.core.async.t21502.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21504, meta21503__$1) {
      var self__ = this;
      var _21504__$1 = this;
      return new cljs.core.async.t21502(self__.ch, self__.f, self__.map_GT_, meta21503__$1);
    };
    cljs.core.async.t21502.cljs$lang$type = true;
    cljs.core.async.t21502.cljs$lang$ctorStr = "cljs.core.async/t21502";
    cljs.core.async.t21502.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
      return cljs.core._write.call(null, writer__4344__auto__, "cljs.core.async/t21502");
    };
    cljs.core.async.__GT_t21502 = function __GT_t21502(ch__$1, f__$1, map_GT___$1, meta21503) {
      return new cljs.core.async.t21502(ch__$1, f__$1, map_GT___$1, meta21503);
    };
  }
  return new cljs.core.async.t21502(ch, f, map_GT_, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 34, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 757, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 748, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/tim/clojure/logging-dashboard/resources/public/js/cljs/core/async.cljs"], 
  null));
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if (typeof cljs.core.async.t21508 !== "undefined") {
  } else {
    cljs.core.async.t21508 = function(ch, p, filter_GT_, meta21509) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta21509 = meta21509;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t21508.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t21508.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
      } else {
        return cljs.core.async.impl.channels.box.call(null, cljs.core.not.call(null, cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch)));
      }
    };
    cljs.core.async.t21508.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t21508.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t21508.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t21508.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t21508.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t21508.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21510) {
      var self__ = this;
      var _21510__$1 = this;
      return self__.meta21509;
    };
    cljs.core.async.t21508.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21510, meta21509__$1) {
      var self__ = this;
      var _21510__$1 = this;
      return new cljs.core.async.t21508(self__.ch, self__.p, self__.filter_GT_, meta21509__$1);
    };
    cljs.core.async.t21508.cljs$lang$type = true;
    cljs.core.async.t21508.cljs$lang$ctorStr = "cljs.core.async/t21508";
    cljs.core.async.t21508.cljs$lang$ctorPrWriter = function(this__4343__auto__, writer__4344__auto__, opt__4345__auto__) {
      return cljs.core._write.call(null, writer__4344__auto__, "cljs.core.async/t21508");
    };
    cljs.core.async.__GT_t21508 = function __GT_t21508(ch__$1, p__$1, filter_GT___$1, meta21509) {
      return new cljs.core.async.t21508(ch__$1, p__$1, filter_GT___$1, meta21509);
    };
  }
  return new cljs.core.async.t21508(ch, p, filter_GT_, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 48, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 774, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 762, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/tim/clojure/logging-dashboard/resources/public/js/cljs/core/async.cljs"], 
  null));
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null);
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6670__auto___21593 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6670__auto___21593, out) {
      return function() {
        var f__6671__auto__ = function() {
          var switch__6655__auto__ = function(c__6670__auto___21593, out) {
            return function(state_21572) {
              var state_val_21573 = state_21572[1];
              if (state_val_21573 === 7) {
                var inst_21568 = state_21572[2];
                var state_21572__$1 = state_21572;
                var statearr_21574_21594 = state_21572__$1;
                statearr_21574_21594[2] = inst_21568;
                statearr_21574_21594[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_21573 === 1) {
                  var state_21572__$1 = state_21572;
                  var statearr_21575_21595 = state_21572__$1;
                  statearr_21575_21595[2] = null;
                  statearr_21575_21595[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_21573 === 4) {
                    var inst_21554 = state_21572[7];
                    var inst_21554__$1 = state_21572[2];
                    var inst_21555 = inst_21554__$1 == null;
                    var state_21572__$1 = function() {
                      var statearr_21576 = state_21572;
                      statearr_21576[7] = inst_21554__$1;
                      return statearr_21576;
                    }();
                    if (cljs.core.truth_(inst_21555)) {
                      var statearr_21577_21596 = state_21572__$1;
                      statearr_21577_21596[1] = 5;
                    } else {
                      var statearr_21578_21597 = state_21572__$1;
                      statearr_21578_21597[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_21573 === 6) {
                      var inst_21554 = state_21572[7];
                      var inst_21559 = p.call(null, inst_21554);
                      var state_21572__$1 = state_21572;
                      if (cljs.core.truth_(inst_21559)) {
                        var statearr_21579_21598 = state_21572__$1;
                        statearr_21579_21598[1] = 8;
                      } else {
                        var statearr_21580_21599 = state_21572__$1;
                        statearr_21580_21599[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_21573 === 3) {
                        var inst_21570 = state_21572[2];
                        var state_21572__$1 = state_21572;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21572__$1, inst_21570);
                      } else {
                        if (state_val_21573 === 2) {
                          var state_21572__$1 = state_21572;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21572__$1, 4, ch);
                        } else {
                          if (state_val_21573 === 11) {
                            var inst_21562 = state_21572[2];
                            var state_21572__$1 = state_21572;
                            var statearr_21581_21600 = state_21572__$1;
                            statearr_21581_21600[2] = inst_21562;
                            statearr_21581_21600[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_21573 === 9) {
                              var state_21572__$1 = state_21572;
                              var statearr_21582_21601 = state_21572__$1;
                              statearr_21582_21601[2] = null;
                              statearr_21582_21601[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_21573 === 5) {
                                var inst_21557 = cljs.core.async.close_BANG_.call(null, out);
                                var state_21572__$1 = state_21572;
                                var statearr_21583_21602 = state_21572__$1;
                                statearr_21583_21602[2] = inst_21557;
                                statearr_21583_21602[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_21573 === 10) {
                                  var inst_21565 = state_21572[2];
                                  var state_21572__$1 = function() {
                                    var statearr_21584 = state_21572;
                                    statearr_21584[8] = inst_21565;
                                    return statearr_21584;
                                  }();
                                  var statearr_21585_21603 = state_21572__$1;
                                  statearr_21585_21603[2] = null;
                                  statearr_21585_21603[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_21573 === 8) {
                                    var inst_21554 = state_21572[7];
                                    var state_21572__$1 = state_21572;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_21572__$1, 11, out, inst_21554);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6670__auto___21593, out);
          return function(switch__6655__auto__, c__6670__auto___21593, out) {
            return function() {
              var state_machine__6656__auto__ = null;
              var state_machine__6656__auto____0 = function() {
                var statearr_21589 = [null, null, null, null, null, null, null, null, null];
                statearr_21589[0] = state_machine__6656__auto__;
                statearr_21589[1] = 1;
                return statearr_21589;
              };
              var state_machine__6656__auto____1 = function(state_21572) {
                while (true) {
                  var ret_value__6657__auto__ = function() {
                    try {
                      while (true) {
                        var result__6658__auto__ = switch__6655__auto__.call(null, state_21572);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6658__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6658__auto__;
                        }
                        break;
                      }
                    } catch (e21590) {
                      if (e21590 instanceof Object) {
                        var ex__6659__auto__ = e21590;
                        var statearr_21591_21604 = state_21572;
                        statearr_21591_21604[5] = ex__6659__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21572);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e21590;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6657__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__21605 = state_21572;
                    state_21572 = G__21605;
                    continue;
                  } else {
                    return ret_value__6657__auto__;
                  }
                  break;
                }
              };
              state_machine__6656__auto__ = function(state_21572) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6656__auto____0.call(this);
                  case 1:
                    return state_machine__6656__auto____1.call(this, state_21572);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6656__auto____0;
              state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6656__auto____1;
              return state_machine__6656__auto__;
            }();
          }(switch__6655__auto__, c__6670__auto___21593, out);
        }();
        var state__6672__auto__ = function() {
          var statearr_21592 = f__6671__auto__.call(null);
          statearr_21592[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6670__auto___21593;
          return statearr_21592;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6672__auto__);
      };
    }(c__6670__auto___21593, out));
    return out;
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_;
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null);
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_;
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__6670__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6670__auto__) {
    return function() {
      var f__6671__auto__ = function() {
        var switch__6655__auto__ = function(c__6670__auto__) {
          return function(state_21771) {
            var state_val_21772 = state_21771[1];
            if (state_val_21772 === 7) {
              var inst_21767 = state_21771[2];
              var state_21771__$1 = state_21771;
              var statearr_21773_21814 = state_21771__$1;
              statearr_21773_21814[2] = inst_21767;
              statearr_21773_21814[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_21772 === 20) {
                var inst_21737 = state_21771[7];
                var inst_21748 = state_21771[2];
                var inst_21749 = cljs.core.next.call(null, inst_21737);
                var inst_21723 = inst_21749;
                var inst_21724 = null;
                var inst_21725 = 0;
                var inst_21726 = 0;
                var state_21771__$1 = function() {
                  var statearr_21774 = state_21771;
                  statearr_21774[8] = inst_21724;
                  statearr_21774[9] = inst_21726;
                  statearr_21774[10] = inst_21723;
                  statearr_21774[11] = inst_21725;
                  statearr_21774[12] = inst_21748;
                  return statearr_21774;
                }();
                var statearr_21775_21815 = state_21771__$1;
                statearr_21775_21815[2] = null;
                statearr_21775_21815[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_21772 === 1) {
                  var state_21771__$1 = state_21771;
                  var statearr_21776_21816 = state_21771__$1;
                  statearr_21776_21816[2] = null;
                  statearr_21776_21816[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_21772 === 4) {
                    var inst_21712 = state_21771[13];
                    var inst_21712__$1 = state_21771[2];
                    var inst_21713 = inst_21712__$1 == null;
                    var state_21771__$1 = function() {
                      var statearr_21777 = state_21771;
                      statearr_21777[13] = inst_21712__$1;
                      return statearr_21777;
                    }();
                    if (cljs.core.truth_(inst_21713)) {
                      var statearr_21778_21817 = state_21771__$1;
                      statearr_21778_21817[1] = 5;
                    } else {
                      var statearr_21779_21818 = state_21771__$1;
                      statearr_21779_21818[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_21772 === 15) {
                      var state_21771__$1 = state_21771;
                      var statearr_21783_21819 = state_21771__$1;
                      statearr_21783_21819[2] = null;
                      statearr_21783_21819[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_21772 === 21) {
                        var state_21771__$1 = state_21771;
                        var statearr_21784_21820 = state_21771__$1;
                        statearr_21784_21820[2] = null;
                        statearr_21784_21820[1] = 23;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_21772 === 13) {
                          var inst_21724 = state_21771[8];
                          var inst_21726 = state_21771[9];
                          var inst_21723 = state_21771[10];
                          var inst_21725 = state_21771[11];
                          var inst_21733 = state_21771[2];
                          var inst_21734 = inst_21726 + 1;
                          var tmp21780 = inst_21724;
                          var tmp21781 = inst_21723;
                          var tmp21782 = inst_21725;
                          var inst_21723__$1 = tmp21781;
                          var inst_21724__$1 = tmp21780;
                          var inst_21725__$1 = tmp21782;
                          var inst_21726__$1 = inst_21734;
                          var state_21771__$1 = function() {
                            var statearr_21785 = state_21771;
                            statearr_21785[8] = inst_21724__$1;
                            statearr_21785[9] = inst_21726__$1;
                            statearr_21785[10] = inst_21723__$1;
                            statearr_21785[14] = inst_21733;
                            statearr_21785[11] = inst_21725__$1;
                            return statearr_21785;
                          }();
                          var statearr_21786_21821 = state_21771__$1;
                          statearr_21786_21821[2] = null;
                          statearr_21786_21821[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_21772 === 22) {
                            var state_21771__$1 = state_21771;
                            var statearr_21787_21822 = state_21771__$1;
                            statearr_21787_21822[2] = null;
                            statearr_21787_21822[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_21772 === 6) {
                              var inst_21712 = state_21771[13];
                              var inst_21721 = f.call(null, inst_21712);
                              var inst_21722 = cljs.core.seq.call(null, inst_21721);
                              var inst_21723 = inst_21722;
                              var inst_21724 = null;
                              var inst_21725 = 0;
                              var inst_21726 = 0;
                              var state_21771__$1 = function() {
                                var statearr_21788 = state_21771;
                                statearr_21788[8] = inst_21724;
                                statearr_21788[9] = inst_21726;
                                statearr_21788[10] = inst_21723;
                                statearr_21788[11] = inst_21725;
                                return statearr_21788;
                              }();
                              var statearr_21789_21823 = state_21771__$1;
                              statearr_21789_21823[2] = null;
                              statearr_21789_21823[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_21772 === 17) {
                                var inst_21737 = state_21771[7];
                                var inst_21741 = cljs.core.chunk_first.call(null, inst_21737);
                                var inst_21742 = cljs.core.chunk_rest.call(null, inst_21737);
                                var inst_21743 = cljs.core.count.call(null, inst_21741);
                                var inst_21723 = inst_21742;
                                var inst_21724 = inst_21741;
                                var inst_21725 = inst_21743;
                                var inst_21726 = 0;
                                var state_21771__$1 = function() {
                                  var statearr_21790 = state_21771;
                                  statearr_21790[8] = inst_21724;
                                  statearr_21790[9] = inst_21726;
                                  statearr_21790[10] = inst_21723;
                                  statearr_21790[11] = inst_21725;
                                  return statearr_21790;
                                }();
                                var statearr_21791_21824 = state_21771__$1;
                                statearr_21791_21824[2] = null;
                                statearr_21791_21824[1] = 8;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_21772 === 3) {
                                  var inst_21769 = state_21771[2];
                                  var state_21771__$1 = state_21771;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21771__$1, inst_21769);
                                } else {
                                  if (state_val_21772 === 12) {
                                    var inst_21757 = state_21771[2];
                                    var state_21771__$1 = state_21771;
                                    var statearr_21792_21825 = state_21771__$1;
                                    statearr_21792_21825[2] = inst_21757;
                                    statearr_21792_21825[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_21772 === 2) {
                                      var state_21771__$1 = state_21771;
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21771__$1, 4, in$);
                                    } else {
                                      if (state_val_21772 === 23) {
                                        var inst_21765 = state_21771[2];
                                        var state_21771__$1 = state_21771;
                                        var statearr_21793_21826 = state_21771__$1;
                                        statearr_21793_21826[2] = inst_21765;
                                        statearr_21793_21826[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_21772 === 19) {
                                          var inst_21752 = state_21771[2];
                                          var state_21771__$1 = state_21771;
                                          var statearr_21794_21827 = state_21771__$1;
                                          statearr_21794_21827[2] = inst_21752;
                                          statearr_21794_21827[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_21772 === 11) {
                                            var inst_21723 = state_21771[10];
                                            var inst_21737 = state_21771[7];
                                            var inst_21737__$1 = cljs.core.seq.call(null, inst_21723);
                                            var state_21771__$1 = function() {
                                              var statearr_21795 = state_21771;
                                              statearr_21795[7] = inst_21737__$1;
                                              return statearr_21795;
                                            }();
                                            if (inst_21737__$1) {
                                              var statearr_21796_21828 = state_21771__$1;
                                              statearr_21796_21828[1] = 14;
                                            } else {
                                              var statearr_21797_21829 = state_21771__$1;
                                              statearr_21797_21829[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_21772 === 9) {
                                              var inst_21759 = state_21771[2];
                                              var inst_21760 = cljs.core.async.impl.protocols.closed_QMARK_.call(null, out);
                                              var state_21771__$1 = function() {
                                                var statearr_21798 = state_21771;
                                                statearr_21798[15] = inst_21759;
                                                return statearr_21798;
                                              }();
                                              if (cljs.core.truth_(inst_21760)) {
                                                var statearr_21799_21830 = state_21771__$1;
                                                statearr_21799_21830[1] = 21;
                                              } else {
                                                var statearr_21800_21831 = state_21771__$1;
                                                statearr_21800_21831[1] = 22;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_21772 === 5) {
                                                var inst_21715 = cljs.core.async.close_BANG_.call(null, out);
                                                var state_21771__$1 = state_21771;
                                                var statearr_21801_21832 = state_21771__$1;
                                                statearr_21801_21832[2] = inst_21715;
                                                statearr_21801_21832[1] = 7;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_21772 === 14) {
                                                  var inst_21737 = state_21771[7];
                                                  var inst_21739 = cljs.core.chunked_seq_QMARK_.call(null, inst_21737);
                                                  var state_21771__$1 = state_21771;
                                                  if (inst_21739) {
                                                    var statearr_21802_21833 = state_21771__$1;
                                                    statearr_21802_21833[1] = 17;
                                                  } else {
                                                    var statearr_21803_21834 = state_21771__$1;
                                                    statearr_21803_21834[1] = 18;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_21772 === 16) {
                                                    var inst_21755 = state_21771[2];
                                                    var state_21771__$1 = state_21771;
                                                    var statearr_21804_21835 = state_21771__$1;
                                                    statearr_21804_21835[2] = inst_21755;
                                                    statearr_21804_21835[1] = 12;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_21772 === 10) {
                                                      var inst_21724 = state_21771[8];
                                                      var inst_21726 = state_21771[9];
                                                      var inst_21731 = cljs.core._nth.call(null, inst_21724, inst_21726);
                                                      var state_21771__$1 = state_21771;
                                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_21771__$1, 13, out, inst_21731);
                                                    } else {
                                                      if (state_val_21772 === 18) {
                                                        var inst_21737 = state_21771[7];
                                                        var inst_21746 = cljs.core.first.call(null, inst_21737);
                                                        var state_21771__$1 = state_21771;
                                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_21771__$1, 20, out, inst_21746);
                                                      } else {
                                                        if (state_val_21772 === 8) {
                                                          var inst_21726 = state_21771[9];
                                                          var inst_21725 = state_21771[11];
                                                          var inst_21728 = inst_21726 < inst_21725;
                                                          var inst_21729 = inst_21728;
                                                          var state_21771__$1 = state_21771;
                                                          if (cljs.core.truth_(inst_21729)) {
                                                            var statearr_21805_21836 = state_21771__$1;
                                                            statearr_21805_21836[1] = 10;
                                                          } else {
                                                            var statearr_21806_21837 = state_21771__$1;
                                                            statearr_21806_21837[1] = 11;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6670__auto__);
        return function(switch__6655__auto__, c__6670__auto__) {
          return function() {
            var state_machine__6656__auto__ = null;
            var state_machine__6656__auto____0 = function() {
              var statearr_21810 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_21810[0] = state_machine__6656__auto__;
              statearr_21810[1] = 1;
              return statearr_21810;
            };
            var state_machine__6656__auto____1 = function(state_21771) {
              while (true) {
                var ret_value__6657__auto__ = function() {
                  try {
                    while (true) {
                      var result__6658__auto__ = switch__6655__auto__.call(null, state_21771);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6658__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6658__auto__;
                      }
                      break;
                    }
                  } catch (e21811) {
                    if (e21811 instanceof Object) {
                      var ex__6659__auto__ = e21811;
                      var statearr_21812_21838 = state_21771;
                      statearr_21812_21838[5] = ex__6659__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21771);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e21811;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6657__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__21839 = state_21771;
                  state_21771 = G__21839;
                  continue;
                } else {
                  return ret_value__6657__auto__;
                }
                break;
              }
            };
            state_machine__6656__auto__ = function(state_21771) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6656__auto____0.call(this);
                case 1:
                  return state_machine__6656__auto____1.call(this, state_21771);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6656__auto____0;
            state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6656__auto____1;
            return state_machine__6656__auto__;
          }();
        }(switch__6655__auto__, c__6670__auto__);
      }();
      var state__6672__auto__ = function() {
        var statearr_21813 = f__6671__auto__.call(null);
        statearr_21813[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6670__auto__;
        return statearr_21813;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6672__auto__);
    };
  }(c__6670__auto__));
  return c__6670__auto__;
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null);
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out;
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_;
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null);
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$;
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_;
}();
cljs.core.async.unique = function() {
  var unique = null;
  var unique__1 = function(ch) {
    return unique.call(null, ch, null);
  };
  var unique__2 = function(ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6670__auto___21936 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6670__auto___21936, out) {
      return function() {
        var f__6671__auto__ = function() {
          var switch__6655__auto__ = function(c__6670__auto___21936, out) {
            return function(state_21911) {
              var state_val_21912 = state_21911[1];
              if (state_val_21912 === 7) {
                var inst_21906 = state_21911[2];
                var state_21911__$1 = state_21911;
                var statearr_21913_21937 = state_21911__$1;
                statearr_21913_21937[2] = inst_21906;
                statearr_21913_21937[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_21912 === 1) {
                  var inst_21888 = null;
                  var state_21911__$1 = function() {
                    var statearr_21914 = state_21911;
                    statearr_21914[7] = inst_21888;
                    return statearr_21914;
                  }();
                  var statearr_21915_21938 = state_21911__$1;
                  statearr_21915_21938[2] = null;
                  statearr_21915_21938[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_21912 === 4) {
                    var inst_21891 = state_21911[8];
                    var inst_21891__$1 = state_21911[2];
                    var inst_21892 = inst_21891__$1 == null;
                    var inst_21893 = cljs.core.not.call(null, inst_21892);
                    var state_21911__$1 = function() {
                      var statearr_21916 = state_21911;
                      statearr_21916[8] = inst_21891__$1;
                      return statearr_21916;
                    }();
                    if (inst_21893) {
                      var statearr_21917_21939 = state_21911__$1;
                      statearr_21917_21939[1] = 5;
                    } else {
                      var statearr_21918_21940 = state_21911__$1;
                      statearr_21918_21940[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_21912 === 6) {
                      var state_21911__$1 = state_21911;
                      var statearr_21919_21941 = state_21911__$1;
                      statearr_21919_21941[2] = null;
                      statearr_21919_21941[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_21912 === 3) {
                        var inst_21908 = state_21911[2];
                        var inst_21909 = cljs.core.async.close_BANG_.call(null, out);
                        var state_21911__$1 = function() {
                          var statearr_21920 = state_21911;
                          statearr_21920[9] = inst_21908;
                          return statearr_21920;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21911__$1, inst_21909);
                      } else {
                        if (state_val_21912 === 2) {
                          var state_21911__$1 = state_21911;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21911__$1, 4, ch);
                        } else {
                          if (state_val_21912 === 11) {
                            var inst_21891 = state_21911[8];
                            var inst_21900 = state_21911[2];
                            var inst_21888 = inst_21891;
                            var state_21911__$1 = function() {
                              var statearr_21921 = state_21911;
                              statearr_21921[7] = inst_21888;
                              statearr_21921[10] = inst_21900;
                              return statearr_21921;
                            }();
                            var statearr_21922_21942 = state_21911__$1;
                            statearr_21922_21942[2] = null;
                            statearr_21922_21942[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_21912 === 9) {
                              var inst_21891 = state_21911[8];
                              var state_21911__$1 = state_21911;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_21911__$1, 11, out, inst_21891);
                            } else {
                              if (state_val_21912 === 5) {
                                var inst_21888 = state_21911[7];
                                var inst_21891 = state_21911[8];
                                var inst_21895 = cljs.core._EQ_.call(null, inst_21891, inst_21888);
                                var state_21911__$1 = state_21911;
                                if (inst_21895) {
                                  var statearr_21924_21943 = state_21911__$1;
                                  statearr_21924_21943[1] = 8;
                                } else {
                                  var statearr_21925_21944 = state_21911__$1;
                                  statearr_21925_21944[1] = 9;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_21912 === 10) {
                                  var inst_21903 = state_21911[2];
                                  var state_21911__$1 = state_21911;
                                  var statearr_21926_21945 = state_21911__$1;
                                  statearr_21926_21945[2] = inst_21903;
                                  statearr_21926_21945[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_21912 === 8) {
                                    var inst_21888 = state_21911[7];
                                    var tmp21923 = inst_21888;
                                    var inst_21888__$1 = tmp21923;
                                    var state_21911__$1 = function() {
                                      var statearr_21927 = state_21911;
                                      statearr_21927[7] = inst_21888__$1;
                                      return statearr_21927;
                                    }();
                                    var statearr_21928_21946 = state_21911__$1;
                                    statearr_21928_21946[2] = null;
                                    statearr_21928_21946[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6670__auto___21936, out);
          return function(switch__6655__auto__, c__6670__auto___21936, out) {
            return function() {
              var state_machine__6656__auto__ = null;
              var state_machine__6656__auto____0 = function() {
                var statearr_21932 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_21932[0] = state_machine__6656__auto__;
                statearr_21932[1] = 1;
                return statearr_21932;
              };
              var state_machine__6656__auto____1 = function(state_21911) {
                while (true) {
                  var ret_value__6657__auto__ = function() {
                    try {
                      while (true) {
                        var result__6658__auto__ = switch__6655__auto__.call(null, state_21911);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6658__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6658__auto__;
                        }
                        break;
                      }
                    } catch (e21933) {
                      if (e21933 instanceof Object) {
                        var ex__6659__auto__ = e21933;
                        var statearr_21934_21947 = state_21911;
                        statearr_21934_21947[5] = ex__6659__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21911);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e21933;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6657__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__21948 = state_21911;
                    state_21911 = G__21948;
                    continue;
                  } else {
                    return ret_value__6657__auto__;
                  }
                  break;
                }
              };
              state_machine__6656__auto__ = function(state_21911) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6656__auto____0.call(this);
                  case 1:
                    return state_machine__6656__auto____1.call(this, state_21911);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6656__auto____0;
              state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6656__auto____1;
              return state_machine__6656__auto__;
            }();
          }(switch__6655__auto__, c__6670__auto___21936, out);
        }();
        var state__6672__auto__ = function() {
          var statearr_21935 = f__6671__auto__.call(null);
          statearr_21935[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6670__auto___21936;
          return statearr_21935;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6672__auto__);
      };
    }(c__6670__auto___21936, out));
    return out;
  };
  unique = function(ch, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return unique__1.call(this, ch);
      case 2:
        return unique__2.call(this, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unique.cljs$core$IFn$_invoke$arity$1 = unique__1;
  unique.cljs$core$IFn$_invoke$arity$2 = unique__2;
  return unique;
}();
cljs.core.async.partition = function() {
  var partition = null;
  var partition__2 = function(n, ch) {
    return partition.call(null, n, ch, null);
  };
  var partition__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6670__auto___22083 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6670__auto___22083, out) {
      return function() {
        var f__6671__auto__ = function() {
          var switch__6655__auto__ = function(c__6670__auto___22083, out) {
            return function(state_22053) {
              var state_val_22054 = state_22053[1];
              if (state_val_22054 === 7) {
                var inst_22049 = state_22053[2];
                var state_22053__$1 = state_22053;
                var statearr_22055_22084 = state_22053__$1;
                statearr_22055_22084[2] = inst_22049;
                statearr_22055_22084[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22054 === 1) {
                  var inst_22016 = new Array(n);
                  var inst_22017 = inst_22016;
                  var inst_22018 = 0;
                  var state_22053__$1 = function() {
                    var statearr_22056 = state_22053;
                    statearr_22056[7] = inst_22017;
                    statearr_22056[8] = inst_22018;
                    return statearr_22056;
                  }();
                  var statearr_22057_22085 = state_22053__$1;
                  statearr_22057_22085[2] = null;
                  statearr_22057_22085[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22054 === 4) {
                    var inst_22021 = state_22053[9];
                    var inst_22021__$1 = state_22053[2];
                    var inst_22022 = inst_22021__$1 == null;
                    var inst_22023 = cljs.core.not.call(null, inst_22022);
                    var state_22053__$1 = function() {
                      var statearr_22058 = state_22053;
                      statearr_22058[9] = inst_22021__$1;
                      return statearr_22058;
                    }();
                    if (inst_22023) {
                      var statearr_22059_22086 = state_22053__$1;
                      statearr_22059_22086[1] = 5;
                    } else {
                      var statearr_22060_22087 = state_22053__$1;
                      statearr_22060_22087[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_22054 === 15) {
                      var inst_22043 = state_22053[2];
                      var state_22053__$1 = state_22053;
                      var statearr_22061_22088 = state_22053__$1;
                      statearr_22061_22088[2] = inst_22043;
                      statearr_22061_22088[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_22054 === 13) {
                        var state_22053__$1 = state_22053;
                        var statearr_22062_22089 = state_22053__$1;
                        statearr_22062_22089[2] = null;
                        statearr_22062_22089[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_22054 === 6) {
                          var inst_22018 = state_22053[8];
                          var inst_22039 = inst_22018 > 0;
                          var state_22053__$1 = state_22053;
                          if (cljs.core.truth_(inst_22039)) {
                            var statearr_22063_22090 = state_22053__$1;
                            statearr_22063_22090[1] = 12;
                          } else {
                            var statearr_22064_22091 = state_22053__$1;
                            statearr_22064_22091[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_22054 === 3) {
                            var inst_22051 = state_22053[2];
                            var state_22053__$1 = state_22053;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22053__$1, inst_22051);
                          } else {
                            if (state_val_22054 === 12) {
                              var inst_22017 = state_22053[7];
                              var inst_22041 = cljs.core.vec.call(null, inst_22017);
                              var state_22053__$1 = state_22053;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22053__$1, 15, out, inst_22041);
                            } else {
                              if (state_val_22054 === 2) {
                                var state_22053__$1 = state_22053;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_22053__$1, 4, ch);
                              } else {
                                if (state_val_22054 === 11) {
                                  var inst_22033 = state_22053[2];
                                  var inst_22034 = new Array(n);
                                  var inst_22017 = inst_22034;
                                  var inst_22018 = 0;
                                  var state_22053__$1 = function() {
                                    var statearr_22065 = state_22053;
                                    statearr_22065[7] = inst_22017;
                                    statearr_22065[10] = inst_22033;
                                    statearr_22065[8] = inst_22018;
                                    return statearr_22065;
                                  }();
                                  var statearr_22066_22092 = state_22053__$1;
                                  statearr_22066_22092[2] = null;
                                  statearr_22066_22092[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_22054 === 9) {
                                    var inst_22017 = state_22053[7];
                                    var inst_22031 = cljs.core.vec.call(null, inst_22017);
                                    var state_22053__$1 = state_22053;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22053__$1, 11, out, inst_22031);
                                  } else {
                                    if (state_val_22054 === 5) {
                                      var inst_22017 = state_22053[7];
                                      var inst_22018 = state_22053[8];
                                      var inst_22026 = state_22053[11];
                                      var inst_22021 = state_22053[9];
                                      var inst_22025 = inst_22017[inst_22018] = inst_22021;
                                      var inst_22026__$1 = inst_22018 + 1;
                                      var inst_22027 = inst_22026__$1 < n;
                                      var state_22053__$1 = function() {
                                        var statearr_22067 = state_22053;
                                        statearr_22067[11] = inst_22026__$1;
                                        statearr_22067[12] = inst_22025;
                                        return statearr_22067;
                                      }();
                                      if (cljs.core.truth_(inst_22027)) {
                                        var statearr_22068_22093 = state_22053__$1;
                                        statearr_22068_22093[1] = 8;
                                      } else {
                                        var statearr_22069_22094 = state_22053__$1;
                                        statearr_22069_22094[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_22054 === 14) {
                                        var inst_22046 = state_22053[2];
                                        var inst_22047 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_22053__$1 = function() {
                                          var statearr_22071 = state_22053;
                                          statearr_22071[13] = inst_22046;
                                          return statearr_22071;
                                        }();
                                        var statearr_22072_22095 = state_22053__$1;
                                        statearr_22072_22095[2] = inst_22047;
                                        statearr_22072_22095[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_22054 === 10) {
                                          var inst_22037 = state_22053[2];
                                          var state_22053__$1 = state_22053;
                                          var statearr_22073_22096 = state_22053__$1;
                                          statearr_22073_22096[2] = inst_22037;
                                          statearr_22073_22096[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_22054 === 8) {
                                            var inst_22017 = state_22053[7];
                                            var inst_22026 = state_22053[11];
                                            var tmp22070 = inst_22017;
                                            var inst_22017__$1 = tmp22070;
                                            var inst_22018 = inst_22026;
                                            var state_22053__$1 = function() {
                                              var statearr_22074 = state_22053;
                                              statearr_22074[7] = inst_22017__$1;
                                              statearr_22074[8] = inst_22018;
                                              return statearr_22074;
                                            }();
                                            var statearr_22075_22097 = state_22053__$1;
                                            statearr_22075_22097[2] = null;
                                            statearr_22075_22097[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6670__auto___22083, out);
          return function(switch__6655__auto__, c__6670__auto___22083, out) {
            return function() {
              var state_machine__6656__auto__ = null;
              var state_machine__6656__auto____0 = function() {
                var statearr_22079 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_22079[0] = state_machine__6656__auto__;
                statearr_22079[1] = 1;
                return statearr_22079;
              };
              var state_machine__6656__auto____1 = function(state_22053) {
                while (true) {
                  var ret_value__6657__auto__ = function() {
                    try {
                      while (true) {
                        var result__6658__auto__ = switch__6655__auto__.call(null, state_22053);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6658__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6658__auto__;
                        }
                        break;
                      }
                    } catch (e22080) {
                      if (e22080 instanceof Object) {
                        var ex__6659__auto__ = e22080;
                        var statearr_22081_22098 = state_22053;
                        statearr_22081_22098[5] = ex__6659__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22053);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e22080;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6657__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__22099 = state_22053;
                    state_22053 = G__22099;
                    continue;
                  } else {
                    return ret_value__6657__auto__;
                  }
                  break;
                }
              };
              state_machine__6656__auto__ = function(state_22053) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6656__auto____0.call(this);
                  case 1:
                    return state_machine__6656__auto____1.call(this, state_22053);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6656__auto____0;
              state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6656__auto____1;
              return state_machine__6656__auto__;
            }();
          }(switch__6655__auto__, c__6670__auto___22083, out);
        }();
        var state__6672__auto__ = function() {
          var statearr_22082 = f__6671__auto__.call(null);
          statearr_22082[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6670__auto___22083;
          return statearr_22082;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6672__auto__);
      };
    }(c__6670__auto___22083, out));
    return out;
  };
  partition = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, ch);
      case 3:
        return partition__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  return partition;
}();
cljs.core.async.partition_by = function() {
  var partition_by = null;
  var partition_by__2 = function(f, ch) {
    return partition_by.call(null, f, ch, null);
  };
  var partition_by__3 = function(f, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6670__auto___22242 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6670__auto___22242, out) {
      return function() {
        var f__6671__auto__ = function() {
          var switch__6655__auto__ = function(c__6670__auto___22242, out) {
            return function(state_22212) {
              var state_val_22213 = state_22212[1];
              if (state_val_22213 === 7) {
                var inst_22208 = state_22212[2];
                var state_22212__$1 = state_22212;
                var statearr_22214_22243 = state_22212__$1;
                statearr_22214_22243[2] = inst_22208;
                statearr_22214_22243[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22213 === 1) {
                  var inst_22171 = [];
                  var inst_22172 = inst_22171;
                  var inst_22173 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
                  var state_22212__$1 = function() {
                    var statearr_22215 = state_22212;
                    statearr_22215[7] = inst_22173;
                    statearr_22215[8] = inst_22172;
                    return statearr_22215;
                  }();
                  var statearr_22216_22244 = state_22212__$1;
                  statearr_22216_22244[2] = null;
                  statearr_22216_22244[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22213 === 4) {
                    var inst_22176 = state_22212[9];
                    var inst_22176__$1 = state_22212[2];
                    var inst_22177 = inst_22176__$1 == null;
                    var inst_22178 = cljs.core.not.call(null, inst_22177);
                    var state_22212__$1 = function() {
                      var statearr_22217 = state_22212;
                      statearr_22217[9] = inst_22176__$1;
                      return statearr_22217;
                    }();
                    if (inst_22178) {
                      var statearr_22218_22245 = state_22212__$1;
                      statearr_22218_22245[1] = 5;
                    } else {
                      var statearr_22219_22246 = state_22212__$1;
                      statearr_22219_22246[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_22213 === 15) {
                      var inst_22202 = state_22212[2];
                      var state_22212__$1 = state_22212;
                      var statearr_22220_22247 = state_22212__$1;
                      statearr_22220_22247[2] = inst_22202;
                      statearr_22220_22247[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_22213 === 13) {
                        var state_22212__$1 = state_22212;
                        var statearr_22221_22248 = state_22212__$1;
                        statearr_22221_22248[2] = null;
                        statearr_22221_22248[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_22213 === 6) {
                          var inst_22172 = state_22212[8];
                          var inst_22197 = inst_22172.length;
                          var inst_22198 = inst_22197 > 0;
                          var state_22212__$1 = state_22212;
                          if (cljs.core.truth_(inst_22198)) {
                            var statearr_22222_22249 = state_22212__$1;
                            statearr_22222_22249[1] = 12;
                          } else {
                            var statearr_22223_22250 = state_22212__$1;
                            statearr_22223_22250[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_22213 === 3) {
                            var inst_22210 = state_22212[2];
                            var state_22212__$1 = state_22212;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22212__$1, inst_22210);
                          } else {
                            if (state_val_22213 === 12) {
                              var inst_22172 = state_22212[8];
                              var inst_22200 = cljs.core.vec.call(null, inst_22172);
                              var state_22212__$1 = state_22212;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22212__$1, 15, out, inst_22200);
                            } else {
                              if (state_val_22213 === 2) {
                                var state_22212__$1 = state_22212;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_22212__$1, 4, ch);
                              } else {
                                if (state_val_22213 === 11) {
                                  var inst_22180 = state_22212[10];
                                  var inst_22176 = state_22212[9];
                                  var inst_22190 = state_22212[2];
                                  var inst_22191 = [];
                                  var inst_22192 = inst_22191.push(inst_22176);
                                  var inst_22172 = inst_22191;
                                  var inst_22173 = inst_22180;
                                  var state_22212__$1 = function() {
                                    var statearr_22224 = state_22212;
                                    statearr_22224[11] = inst_22190;
                                    statearr_22224[7] = inst_22173;
                                    statearr_22224[12] = inst_22192;
                                    statearr_22224[8] = inst_22172;
                                    return statearr_22224;
                                  }();
                                  var statearr_22225_22251 = state_22212__$1;
                                  statearr_22225_22251[2] = null;
                                  statearr_22225_22251[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_22213 === 9) {
                                    var inst_22172 = state_22212[8];
                                    var inst_22188 = cljs.core.vec.call(null, inst_22172);
                                    var state_22212__$1 = state_22212;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22212__$1, 11, out, inst_22188);
                                  } else {
                                    if (state_val_22213 === 5) {
                                      var inst_22180 = state_22212[10];
                                      var inst_22173 = state_22212[7];
                                      var inst_22176 = state_22212[9];
                                      var inst_22180__$1 = f.call(null, inst_22176);
                                      var inst_22181 = cljs.core._EQ_.call(null, inst_22180__$1, inst_22173);
                                      var inst_22182 = cljs.core.keyword_identical_QMARK_.call(null, inst_22173, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123));
                                      var inst_22183 = inst_22181 || inst_22182;
                                      var state_22212__$1 = function() {
                                        var statearr_22226 = state_22212;
                                        statearr_22226[10] = inst_22180__$1;
                                        return statearr_22226;
                                      }();
                                      if (cljs.core.truth_(inst_22183)) {
                                        var statearr_22227_22252 = state_22212__$1;
                                        statearr_22227_22252[1] = 8;
                                      } else {
                                        var statearr_22228_22253 = state_22212__$1;
                                        statearr_22228_22253[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_22213 === 14) {
                                        var inst_22205 = state_22212[2];
                                        var inst_22206 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_22212__$1 = function() {
                                          var statearr_22230 = state_22212;
                                          statearr_22230[13] = inst_22205;
                                          return statearr_22230;
                                        }();
                                        var statearr_22231_22254 = state_22212__$1;
                                        statearr_22231_22254[2] = inst_22206;
                                        statearr_22231_22254[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_22213 === 10) {
                                          var inst_22195 = state_22212[2];
                                          var state_22212__$1 = state_22212;
                                          var statearr_22232_22255 = state_22212__$1;
                                          statearr_22232_22255[2] = inst_22195;
                                          statearr_22232_22255[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_22213 === 8) {
                                            var inst_22180 = state_22212[10];
                                            var inst_22176 = state_22212[9];
                                            var inst_22172 = state_22212[8];
                                            var inst_22185 = inst_22172.push(inst_22176);
                                            var tmp22229 = inst_22172;
                                            var inst_22172__$1 = tmp22229;
                                            var inst_22173 = inst_22180;
                                            var state_22212__$1 = function() {
                                              var statearr_22233 = state_22212;
                                              statearr_22233[14] = inst_22185;
                                              statearr_22233[7] = inst_22173;
                                              statearr_22233[8] = inst_22172__$1;
                                              return statearr_22233;
                                            }();
                                            var statearr_22234_22256 = state_22212__$1;
                                            statearr_22234_22256[2] = null;
                                            statearr_22234_22256[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6670__auto___22242, out);
          return function(switch__6655__auto__, c__6670__auto___22242, out) {
            return function() {
              var state_machine__6656__auto__ = null;
              var state_machine__6656__auto____0 = function() {
                var statearr_22238 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_22238[0] = state_machine__6656__auto__;
                statearr_22238[1] = 1;
                return statearr_22238;
              };
              var state_machine__6656__auto____1 = function(state_22212) {
                while (true) {
                  var ret_value__6657__auto__ = function() {
                    try {
                      while (true) {
                        var result__6658__auto__ = switch__6655__auto__.call(null, state_22212);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6658__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6658__auto__;
                        }
                        break;
                      }
                    } catch (e22239) {
                      if (e22239 instanceof Object) {
                        var ex__6659__auto__ = e22239;
                        var statearr_22240_22257 = state_22212;
                        statearr_22240_22257[5] = ex__6659__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22212);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e22239;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6657__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__22258 = state_22212;
                    state_22212 = G__22258;
                    continue;
                  } else {
                    return ret_value__6657__auto__;
                  }
                  break;
                }
              };
              state_machine__6656__auto__ = function(state_22212) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6656__auto____0.call(this);
                  case 1:
                    return state_machine__6656__auto____1.call(this, state_22212);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6656__auto____0;
              state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6656__auto____1;
              return state_machine__6656__auto__;
            }();
          }(switch__6655__auto__, c__6670__auto___22242, out);
        }();
        var state__6672__auto__ = function() {
          var statearr_22241 = f__6671__auto__.call(null);
          statearr_22241[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6670__auto___22242;
          return statearr_22241;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6672__auto__);
      };
    }(c__6670__auto___22242, out));
    return out;
  };
  partition_by = function(f, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition_by__2.call(this, f, ch);
      case 3:
        return partition_by__3.call(this, f, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  partition_by.cljs$core$IFn$_invoke$arity$3 = partition_by__3;
  return partition_by;
}();
goog.provide("goog.json");
goog.provide("goog.json.Replacer");
goog.provide("goog.json.Reviver");
goog.provide("goog.json.Serializer");
goog.define("goog.json.USE_NATIVE_JSON", false);
goog.json.isValid = function(s) {
  if (/^\s*$/.test(s)) {
    return false;
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""));
};
goog.json.parse = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["parse"]) : function(s) {
  var o = String(s);
  if (goog.json.isValid(o)) {
    try {
      return(eval("(" + o + ")"));
    } catch (ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["parse"]) : function(s) {
  return(eval("(" + s + ")"));
};
goog.json.Replacer;
goog.json.Reviver;
goog.json.serialize = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["stringify"]) : function(object, opt_replacer) {
  return(new goog.json.Serializer(opt_replacer)).serialize(object);
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer;
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serializeInternal(object, sb);
  return sb.join("");
};
goog.json.Serializer.prototype.serializeInternal = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_((object), sb);
      break;
    case "number":
      this.serializeNumber_((object), sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if (object == null) {
        sb.push("null");
        break;
      }
      if (goog.isArray(object)) {
        this.serializeArray((object), sb);
        break;
      }
      this.serializeObject_((object), sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);;
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if (c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c];
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if (cc < 16) {
      rv += "000";
    } else {
      if (cc < 256) {
        rv += "00";
      } else {
        if (cc < 4096) {
          rv += "0";
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16);
  }), '"');
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null");
};
goog.json.Serializer.prototype.serializeArray = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for (var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serializeInternal(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ",";
  }
  sb.push("]");
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if (typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serializeInternal(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ",";
      }
    }
  }
  sb.push("}");
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return "No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return "Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return "File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return "Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return "Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return "An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return "Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return "Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return "Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return "The resource is not available offline";
    default:
      return "Unrecognized error code";
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, QUIRK_IE_NO_CONTENT:1223};
goog.net.HttpStatus.isSuccess = function(status) {
  switch(status) {
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.PARTIAL_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false;
  }
};
goog.provide("goog.net.XhrLike");
goog.net.XhrLike = function() {
};
goog.net.XhrLike.OrNative;
goog.net.XhrLike.prototype.onreadystatechange;
goog.net.XhrLike.prototype.responseText;
goog.net.XhrLike.prototype.responseXML;
goog.net.XhrLike.prototype.readyState;
goog.net.XhrLike.prototype.status;
goog.net.XhrLike.prototype.statusText;
goog.net.XhrLike.prototype.open = function(method, url, opt_async, opt_user, opt_password) {
};
goog.net.XhrLike.prototype.send = function(opt_data) {
};
goog.net.XhrLike.prototype.abort = function() {
};
goog.net.XhrLike.prototype.setRequestHeader = function(header, value) {
};
goog.net.XhrLike.prototype.getResponseHeader = function(header) {
};
goog.net.XhrLike.prototype.getAllResponseHeaders = function() {
};
goog.provide("goog.net.XmlHttpFactory");
goog.require("goog.net.XhrLike");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions());
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XhrLike");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory;
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_();
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_();
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.provide("goog.net.XmlHttpDefines");
goog.require("goog.asserts");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance();
};
goog.define("goog.net.XmlHttp.ASSUME_NATIVE_XHR", false);
goog.net.XmlHttpDefines = {};
goog.define("goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR", false);
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions();
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(goog.asserts.assert(factory), goog.asserts.assert(optionsFactory)));
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory;
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this);
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if (progId) {
    return new ActiveXObject(progId);
  } else {
    return new XMLHttpRequest;
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if (progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true;
  }
  return options;
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if (goog.net.XmlHttp.ASSUME_NATIVE_XHR || goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR) {
    return "";
  }
  if (!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for (var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate;
      } catch (e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return(this.ieProgId_);
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  goog.uri.utils.phishingProtection_();
  return(uri.match(goog.uri.utils.splitRe_));
};
goog.uri.utils.needsPhishingProtection_ = goog.userAgent.WEBKIT;
goog.uri.utils.phishingProtection_ = function() {
  if (goog.uri.utils.needsPhishingProtection_) {
    goog.uri.utils.needsPhishingProtection_ = false;
    var location = goog.global["location"];
    if (location) {
      var href = location["href"];
      if (href) {
        var domain = goog.uri.utils.getDomain(href);
        if (domain && domain != location["hostname"]) {
          goog.uri.utils.needsPhishingProtection_ = true;
          throw Error();
        }
      }
    }
  }
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && self.location) {
    var protocol = self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri));
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri));
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if (goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if (buffer[1]) {
    var baseUri = (buffer[0]);
    var hashIndex = baseUri.indexOf("#");
    if (hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex);
    }
    var questionIndex = baseUri.indexOf("?");
    if (questionIndex < 0) {
      buffer[1] = "?";
    } else {
      if (questionIndex == baseUri.length - 1) {
        buffer[1] = undefined;
      }
    }
  }
  return buffer.join("");
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0;j < value.length;j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push("\x26", key, value === "" ? "" : "\x3d", goog.string.urlEncode(value));
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for (var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1));
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map));
};
goog.uri.utils.appendParam = function(uri, key, opt_value) {
  var paramArr = [uri, "\x26", key];
  if (goog.isDefAndNotNull(opt_value)) {
    paramArr.push("\x3d", goog.string.urlEncode(opt_value));
  }
  return goog.uri.utils.appendQueryData_(paramArr);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return-1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.setPath = function(uri, path) {
  if (!goog.string.startsWith(path, "/")) {
    path = "/" + path;
  }
  var parts = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME], parts[goog.uri.utils.ComponentIndex.USER_INFO], parts[goog.uri.utils.ComponentIndex.DOMAIN], parts[goog.uri.utils.ComponentIndex.PORT], path, parts[goog.uri.utils.ComponentIndex.QUERY_DATA], parts[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.log");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.userAgent");
goog.forwardDeclare("goog.Uri");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.net.XhrIo.base(this, "constructor");
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null;
  this.active_ = false;
  this.xhr_ = null;
  this.xhrOptions_ = null;
  this.lastUri_ = "";
  this.lastMethod_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastError_ = "";
  this.errorDispatched_ = false;
  this.inSend_ = false;
  this.inOpen_ = false;
  this.inAbort_ = false;
  this.timeoutInterval_ = 0;
  this.timeoutId_ = null;
  this.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
  this.withCredentials_ = false;
  this.useXhr2Timeout_ = false;
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.log.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;
goog.net.XhrIo.METHODS_WITH_FORM_DATA = ["POST", "PUT"];
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset\x3dutf-8";
goog.net.XhrIo.XHR2_TIMEOUT_ = "timeout";
goog.net.XhrIo.XHR2_ON_TIMEOUT_ = "ontimeout";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval, opt_withCredentials) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if (opt_callback) {
    x.listen(goog.net.EventType.COMPLETE, opt_callback);
  }
  x.listenOnce(goog.net.EventType.READY, x.cleanupSend_);
  if (opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval);
  }
  if (opt_withCredentials) {
    x.setWithCredentials(opt_withCredentials);
  }
  x.send(url, opt_method, opt_content, opt_headers);
  return x;
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while (instances.length) {
    instances.pop().dispose();
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
};
goog.net.XhrIo.prototype.cleanupSend_ = function() {
  this.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, this);
};
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_;
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms);
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type;
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_;
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials;
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_;
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if (this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request\x3d" + this.lastUri_ + "; newUri\x3d" + url);
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    goog.log.fine(this.logger_, this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, String(url), true);
    this.inOpen_ = false;
  } catch (err) {
    goog.log.fine(this.logger_, this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return;
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if (opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value);
    });
  }
  var contentTypeKey = goog.array.find(headers.getKeys(), goog.net.XhrIo.isContentTypeHeader_);
  var contentIsFormData = goog.global["FormData"] && content instanceof goog.global["FormData"];
  if (goog.array.contains(goog.net.XhrIo.METHODS_WITH_FORM_DATA, method) && !contentTypeKey && !contentIsFormData) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE);
  }
  headers.forEach(function(value, key) {
    this.xhr_.setRequestHeader(key, value);
  }, this);
  if (this.responseType_) {
    this.xhr_.responseType = this.responseType_;
  }
  if (goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_;
  }
  try {
    this.cleanUpTimeoutTimer_();
    if (this.timeoutInterval_ > 0) {
      this.useXhr2Timeout_ = goog.net.XhrIo.shouldUseXhr2Timeout_(this.xhr_);
      goog.log.fine(this.logger_, this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete, xhr2 " + this.useXhr2Timeout_));
      if (this.useXhr2Timeout_) {
        this.xhr_[goog.net.XhrIo.XHR2_TIMEOUT_] = this.timeoutInterval_;
        this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = goog.bind(this.timeout_, this);
      } else {
        this.timeoutId_ = goog.Timer.callOnce(this.timeout_, this.timeoutInterval_, this);
      }
    }
    goog.log.fine(this.logger_, this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false;
  } catch (err) {
    goog.log.fine(this.logger_, this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
  }
};
goog.net.XhrIo.shouldUseXhr2Timeout_ = function(xhr) {
  return goog.userAgent.IE && goog.userAgent.isVersionOrHigher(9) && goog.isNumber(xhr[goog.net.XhrIo.XHR2_TIMEOUT_]) && goog.isDef(xhr[goog.net.XhrIo.XHR2_ON_TIMEOUT_]);
};
goog.net.XhrIo.isContentTypeHeader_ = function(header) {
  return goog.string.caseInsensitiveEquals(goog.net.XhrIo.CONTENT_TYPE_HEADER, header);
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp();
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if (typeof goog == "undefined") {
  } else {
    if (this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      goog.log.fine(this.logger_, this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT);
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if (this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_();
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if (!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR);
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if (this.xhr_ && this.active_) {
    goog.log.fine(this.logger_, this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_();
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if (this.xhr_) {
    if (this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false;
    }
    this.cleanUpXhr_(true);
  }
  goog.net.XhrIo.base(this, "disposeInternal");
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if (this.isDisposed()) {
    return;
  }
  if (!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_();
  } else {
    this.onReadyStateChangeHelper_();
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_();
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if (!this.active_) {
    return;
  }
  if (typeof goog == "undefined") {
  } else {
    if (this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      goog.log.fine(this.logger_, this.formatMsg_("Local request error detected and ignored"));
    } else {
      if (this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.callOnce(this.onReadyStateChange_, 0, this);
        return;
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if (this.isComplete()) {
        goog.log.fine(this.logger_, this.formatMsg_("Request complete"));
        this.active_ = false;
        try {
          if (this.isSuccess()) {
            this.dispatchEvent(goog.net.EventType.COMPLETE);
            this.dispatchEvent(goog.net.EventType.SUCCESS);
          } else {
            this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
            this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
            this.dispatchErrors_();
          }
        } finally {
          this.cleanUpXhr_();
        }
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if (this.xhr_) {
    this.cleanUpTimeoutTimer_();
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if (!opt_fromDispose) {
      this.dispatchEvent(goog.net.EventType.READY);
    }
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange;
    } catch (e) {
      goog.log.error(this.logger_, "Problem encountered resetting onreadystatechange: " + e.message);
    }
  }
};
goog.net.XhrIo.prototype.cleanUpTimeoutTimer_ = function() {
  if (this.xhr_ && this.useXhr2Timeout_) {
    this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = null;
  }
  if (goog.isNumber(this.timeoutId_)) {
    goog.Timer.clear(this.timeoutId_);
    this.timeoutId_ = null;
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_;
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE;
};
goog.net.XhrIo.prototype.isSuccess = function() {
  var status = this.getStatus();
  return goog.net.HttpStatus.isSuccess(status) || status === 0 && !this.isLastUriEffectiveSchemeHttp_();
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var scheme = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));
  return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(scheme);
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? (this.xhr_.readyState) : goog.net.XmlHttp.ReadyState.UNINITIALIZED;
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1;
  } catch (e) {
    return-1;
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : "";
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get status: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_);
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : "";
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseText: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getResponseBody = function() {
  try {
    if (this.xhr_ && "responseBody" in this.xhr_) {
      return this.xhr_["responseBody"];
    }
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseBody: " + e.message);
  }
  return null;
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null;
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseXML: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if (!this.xhr_) {
    return undefined;
  }
  var responseText = this.xhr_.responseText;
  if (opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length);
  }
  return goog.json.parse(responseText);
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if (!this.xhr_) {
      return null;
    }
    if ("response" in this.xhr_) {
      return this.xhr_.response;
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if ("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer;
        }
      ;
    }
    goog.log.error(this.logger_, "Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null;
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get response: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined;
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : "";
};
goog.net.XhrIo.prototype.getResponseHeaders = function() {
  var headersObject = {};
  var headersArray = this.getAllResponseHeaders().split("\r\n");
  for (var i = 0;i < headersArray.length;i++) {
    if (goog.string.isEmpty(headersArray[i])) {
      continue;
    }
    var keyValue = goog.string.splitLimit(headersArray[i], ": ", 2);
    if (headersObject[keyValue[0]]) {
      headersObject[keyValue[0]] += ", " + keyValue[1];
    } else {
      headersObject[keyValue[0]] = keyValue[1];
    }
  }
  return headersObject;
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_;
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_);
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]";
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
});
goog.provide("goog.structs.Queue");
goog.require("goog.array");
goog.structs.Queue = function() {
  this.front_ = [];
  this.back_ = [];
};
goog.structs.Queue.prototype.maybeFlip_ = function() {
  if (goog.array.isEmpty(this.front_)) {
    this.front_ = this.back_;
    this.front_.reverse();
    this.back_ = [];
  }
};
goog.structs.Queue.prototype.enqueue = function(element) {
  this.back_.push(element);
};
goog.structs.Queue.prototype.dequeue = function() {
  this.maybeFlip_();
  return this.front_.pop();
};
goog.structs.Queue.prototype.peek = function() {
  this.maybeFlip_();
  return goog.array.peek(this.front_);
};
goog.structs.Queue.prototype.getCount = function() {
  return this.front_.length + this.back_.length;
};
goog.structs.Queue.prototype.isEmpty = function() {
  return goog.array.isEmpty(this.front_) && goog.array.isEmpty(this.back_);
};
goog.structs.Queue.prototype.clear = function() {
  this.front_ = [];
  this.back_ = [];
};
goog.structs.Queue.prototype.contains = function(obj) {
  return goog.array.contains(this.front_, obj) || goog.array.contains(this.back_, obj);
};
goog.structs.Queue.prototype.remove = function(obj) {
  var index = goog.array.lastIndexOf(this.front_, obj);
  if (index < 0) {
    return goog.array.remove(this.back_, obj);
  }
  goog.array.removeAt(this.front_, index);
  return true;
};
goog.structs.Queue.prototype.getValues = function() {
  var res = [];
  for (var i = this.front_.length - 1;i >= 0;--i) {
    res.push(this.front_[i]);
  }
  var len = this.back_.length;
  for (var i = 0;i < len;++i) {
    res.push(this.back_[i]);
  }
  return res;
};
goog.provide("goog.structs.Pool");
goog.require("goog.Disposable");
goog.require("goog.structs.Queue");
goog.require("goog.structs.Set");
goog.structs.Pool = function(opt_minCount, opt_maxCount) {
  goog.Disposable.call(this);
  this.minCount_ = opt_minCount || 0;
  this.maxCount_ = opt_maxCount || 10;
  if (this.minCount_ > this.maxCount_) {
    throw Error(goog.structs.Pool.ERROR_MIN_MAX_);
  }
  this.freeQueue_ = new goog.structs.Queue;
  this.inUseSet_ = new goog.structs.Set;
  this.delay = 0;
  this.lastAccess = null;
  this.adjustForMinMax();
  var magicProps = {canBeReused:0};
};
goog.inherits(goog.structs.Pool, goog.Disposable);
goog.structs.Pool.ERROR_MIN_MAX_ = "[goog.structs.Pool] Min can not be greater than max";
goog.structs.Pool.ERROR_DISPOSE_UNRELEASED_OBJS_ = "[goog.structs.Pool] Objects not released";
goog.structs.Pool.prototype.setMinimumCount = function(min) {
  if (min > this.maxCount_) {
    throw Error(goog.structs.Pool.ERROR_MIN_MAX_);
  }
  this.minCount_ = min;
  this.adjustForMinMax();
};
goog.structs.Pool.prototype.setMaximumCount = function(max) {
  if (max < this.minCount_) {
    throw Error(goog.structs.Pool.ERROR_MIN_MAX_);
  }
  this.maxCount_ = max;
  this.adjustForMinMax();
};
goog.structs.Pool.prototype.setDelay = function(delay) {
  this.delay = delay;
};
goog.structs.Pool.prototype.getObject = function() {
  var time = goog.now();
  if (goog.isDefAndNotNull(this.lastAccess) && time - this.lastAccess < this.delay) {
    return undefined;
  }
  var obj = this.removeFreeObject_();
  if (obj) {
    this.lastAccess = time;
    this.inUseSet_.add(obj);
  }
  return obj;
};
goog.structs.Pool.prototype.releaseObject = function(obj) {
  if (this.inUseSet_.remove(obj)) {
    this.addFreeObject(obj);
    return true;
  }
  return false;
};
goog.structs.Pool.prototype.removeFreeObject_ = function() {
  var obj;
  while (this.getFreeCount() > 0) {
    obj = this.freeQueue_.dequeue();
    if (!this.objectCanBeReused(obj)) {
      this.adjustForMinMax();
    } else {
      break;
    }
  }
  if (!obj && this.getCount() < this.maxCount_) {
    obj = this.createObject();
  }
  return obj;
};
goog.structs.Pool.prototype.addFreeObject = function(obj) {
  this.inUseSet_.remove(obj);
  if (this.objectCanBeReused(obj) && this.getCount() < this.maxCount_) {
    this.freeQueue_.enqueue(obj);
  } else {
    this.disposeObject(obj);
  }
};
goog.structs.Pool.prototype.adjustForMinMax = function() {
  var freeQueue = this.freeQueue_;
  while (this.getCount() < this.minCount_) {
    freeQueue.enqueue(this.createObject());
  }
  while (this.getCount() > this.maxCount_ && this.getFreeCount() > 0) {
    this.disposeObject(freeQueue.dequeue());
  }
};
goog.structs.Pool.prototype.createObject = function() {
  return{};
};
goog.structs.Pool.prototype.disposeObject = function(obj) {
  if (typeof obj.dispose == "function") {
    obj.dispose();
  } else {
    for (var i in obj) {
      obj[i] = null;
    }
  }
};
goog.structs.Pool.prototype.objectCanBeReused = function(obj) {
  if (typeof obj.canBeReused == "function") {
    return obj.canBeReused();
  }
  return true;
};
goog.structs.Pool.prototype.contains = function(obj) {
  return this.freeQueue_.contains(obj) || this.inUseSet_.contains(obj);
};
goog.structs.Pool.prototype.getCount = function() {
  return this.freeQueue_.getCount() + this.inUseSet_.getCount();
};
goog.structs.Pool.prototype.getInUseCount = function() {
  return this.inUseSet_.getCount();
};
goog.structs.Pool.prototype.getFreeCount = function() {
  return this.freeQueue_.getCount();
};
goog.structs.Pool.prototype.isEmpty = function() {
  return this.freeQueue_.isEmpty() && this.inUseSet_.isEmpty();
};
goog.structs.Pool.prototype.disposeInternal = function() {
  goog.structs.Pool.superClass_.disposeInternal.call(this);
  if (this.getInUseCount() > 0) {
    throw Error(goog.structs.Pool.ERROR_DISPOSE_UNRELEASED_OBJS_);
  }
  delete this.inUseSet_;
  var freeQueue = this.freeQueue_;
  while (!freeQueue.isEmpty()) {
    this.disposeObject(freeQueue.dequeue());
  }
  delete this.freeQueue_;
};
goog.provide("goog.structs.Heap");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.structs.Node");
goog.structs.Heap = function(opt_heap) {
  this.nodes_ = [];
  if (opt_heap) {
    this.insertAll(opt_heap);
  }
};
goog.structs.Heap.prototype.insert = function(key, value) {
  var node = new goog.structs.Node(key, value);
  var nodes = this.nodes_;
  nodes.push(node);
  this.moveUp_(nodes.length - 1);
};
goog.structs.Heap.prototype.insertAll = function(heap) {
  var keys, values;
  if (heap instanceof goog.structs.Heap) {
    keys = heap.getKeys();
    values = heap.getValues();
    if (heap.getCount() <= 0) {
      var nodes = this.nodes_;
      for (var i = 0;i < keys.length;i++) {
        nodes.push(new goog.structs.Node(keys[i], values[i]));
      }
      return;
    }
  } else {
    keys = goog.object.getKeys(heap);
    values = goog.object.getValues(heap);
  }
  for (var i = 0;i < keys.length;i++) {
    this.insert(keys[i], values[i]);
  }
};
goog.structs.Heap.prototype.remove = function() {
  var nodes = this.nodes_;
  var count = nodes.length;
  var rootNode = nodes[0];
  if (count <= 0) {
    return undefined;
  } else {
    if (count == 1) {
      goog.array.clear(nodes);
    } else {
      nodes[0] = nodes.pop();
      this.moveDown_(0);
    }
  }
  return rootNode.getValue();
};
goog.structs.Heap.prototype.peek = function() {
  var nodes = this.nodes_;
  if (nodes.length == 0) {
    return undefined;
  }
  return nodes[0].getValue();
};
goog.structs.Heap.prototype.peekKey = function() {
  return this.nodes_[0] && this.nodes_[0].getKey();
};
goog.structs.Heap.prototype.moveDown_ = function(index) {
  var nodes = this.nodes_;
  var count = nodes.length;
  var node = nodes[index];
  while (index < count >> 1) {
    var leftChildIndex = this.getLeftChildIndex_(index);
    var rightChildIndex = this.getRightChildIndex_(index);
    var smallerChildIndex = rightChildIndex < count && nodes[rightChildIndex].getKey() < nodes[leftChildIndex].getKey() ? rightChildIndex : leftChildIndex;
    if (nodes[smallerChildIndex].getKey() > node.getKey()) {
      break;
    }
    nodes[index] = nodes[smallerChildIndex];
    index = smallerChildIndex;
  }
  nodes[index] = node;
};
goog.structs.Heap.prototype.moveUp_ = function(index) {
  var nodes = this.nodes_;
  var node = nodes[index];
  while (index > 0) {
    var parentIndex = this.getParentIndex_(index);
    if (nodes[parentIndex].getKey() > node.getKey()) {
      nodes[index] = nodes[parentIndex];
      index = parentIndex;
    } else {
      break;
    }
  }
  nodes[index] = node;
};
goog.structs.Heap.prototype.getLeftChildIndex_ = function(index) {
  return index * 2 + 1;
};
goog.structs.Heap.prototype.getRightChildIndex_ = function(index) {
  return index * 2 + 2;
};
goog.structs.Heap.prototype.getParentIndex_ = function(index) {
  return index - 1 >> 1;
};
goog.structs.Heap.prototype.getValues = function() {
  var nodes = this.nodes_;
  var rv = [];
  var l = nodes.length;
  for (var i = 0;i < l;i++) {
    rv.push(nodes[i].getValue());
  }
  return rv;
};
goog.structs.Heap.prototype.getKeys = function() {
  var nodes = this.nodes_;
  var rv = [];
  var l = nodes.length;
  for (var i = 0;i < l;i++) {
    rv.push(nodes[i].getKey());
  }
  return rv;
};
goog.structs.Heap.prototype.containsValue = function(val) {
  return goog.array.some(this.nodes_, function(node) {
    return node.getValue() == val;
  });
};
goog.structs.Heap.prototype.containsKey = function(key) {
  return goog.array.some(this.nodes_, function(node) {
    return node.getKey() == key;
  });
};
goog.structs.Heap.prototype.clone = function() {
  return new goog.structs.Heap(this);
};
goog.structs.Heap.prototype.getCount = function() {
  return this.nodes_.length;
};
goog.structs.Heap.prototype.isEmpty = function() {
  return goog.array.isEmpty(this.nodes_);
};
goog.structs.Heap.prototype.clear = function() {
  goog.array.clear(this.nodes_);
};
goog.provide("goog.structs.PriorityQueue");
goog.require("goog.structs.Heap");
goog.structs.PriorityQueue = function() {
  goog.structs.Heap.call(this);
};
goog.inherits(goog.structs.PriorityQueue, goog.structs.Heap);
goog.structs.PriorityQueue.prototype.enqueue = function(priority, value) {
  this.insert(priority, value);
};
goog.structs.PriorityQueue.prototype.dequeue = function() {
  return this.remove();
};
goog.provide("goog.structs.PriorityPool");
goog.require("goog.structs.Pool");
goog.require("goog.structs.PriorityQueue");
goog.structs.PriorityPool = function(opt_minCount, opt_maxCount) {
  this.delayTimeout_ = undefined;
  this.requestQueue_ = new goog.structs.PriorityQueue;
  goog.structs.Pool.call(this, opt_minCount, opt_maxCount);
};
goog.inherits(goog.structs.PriorityPool, goog.structs.Pool);
goog.structs.PriorityPool.DEFAULT_PRIORITY_ = 100;
goog.structs.PriorityPool.prototype.setDelay = function(delay) {
  goog.structs.PriorityPool.base(this, "setDelay", delay);
  if (!goog.isDefAndNotNull(this.lastAccess)) {
    return;
  }
  goog.global.clearTimeout(this.delayTimeout_);
  this.delayTimeout_ = goog.global.setTimeout(goog.bind(this.handleQueueRequests_, this), this.delay + this.lastAccess - goog.now());
  this.handleQueueRequests_();
};
goog.structs.PriorityPool.prototype.getObject = function(opt_callback, opt_priority) {
  if (!opt_callback) {
    var result = goog.structs.PriorityPool.base(this, "getObject");
    if (result && this.delay) {
      this.delayTimeout_ = goog.global.setTimeout(goog.bind(this.handleQueueRequests_, this), this.delay);
    }
    return result;
  }
  var priority = goog.isDef(opt_priority) ? opt_priority : goog.structs.PriorityPool.DEFAULT_PRIORITY_;
  this.requestQueue_.enqueue(priority, opt_callback);
  this.handleQueueRequests_();
  return undefined;
};
goog.structs.PriorityPool.prototype.handleQueueRequests_ = function() {
  var requestQueue = this.requestQueue_;
  while (requestQueue.getCount() > 0) {
    var obj = this.getObject();
    if (!obj) {
      return;
    } else {
      var requestCallback = requestQueue.dequeue();
      requestCallback.apply(this, [obj]);
    }
  }
};
goog.structs.PriorityPool.prototype.addFreeObject = function(obj) {
  goog.structs.PriorityPool.superClass_.addFreeObject.call(this, obj);
  this.handleQueueRequests_();
};
goog.structs.PriorityPool.prototype.adjustForMinMax = function() {
  goog.structs.PriorityPool.superClass_.adjustForMinMax.call(this);
  this.handleQueueRequests_();
};
goog.structs.PriorityPool.prototype.disposeInternal = function() {
  goog.structs.PriorityPool.superClass_.disposeInternal.call(this);
  goog.global.clearTimeout(this.delayTimeout_);
  this.requestQueue_.clear();
  this.requestQueue_ = null;
};
goog.provide("goog.net.XhrIoPool");
goog.require("goog.net.XhrIo");
goog.require("goog.structs.PriorityPool");
goog.net.XhrIoPool = function(opt_headers, opt_minCount, opt_maxCount) {
  goog.structs.PriorityPool.call(this, opt_minCount, opt_maxCount);
  this.headers_ = opt_headers;
};
goog.inherits(goog.net.XhrIoPool, goog.structs.PriorityPool);
goog.net.XhrIoPool.prototype.createObject = function() {
  var xhrIo = new goog.net.XhrIo;
  var headers = this.headers_;
  if (headers) {
    headers.forEach(function(value, key) {
      xhrIo.headers.set(key, value);
    });
  }
  return xhrIo;
};
goog.net.XhrIoPool.prototype.objectCanBeReused = function(obj) {
  var xhr = (obj);
  return!xhr.isDisposed() && !xhr.isActive();
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.require("goog.uri.utils.StandardQueryParam");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if (opt_uri instanceof goog.Uri) {
    this.ignoreCase_ = goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase();
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment());
  } else {
    if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true);
    } else {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_);
    }
  }
};
goog.Uri.preserveParameterTypesCompatibilityFlag = false;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  if (scheme) {
    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":");
  }
  var domain = this.getDomain();
  if (domain) {
    out.push("//");
    var userInfo = this.getUserInfo();
    if (userInfo) {
      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@");
    }
    out.push(goog.string.urlEncode(domain));
    var port = this.getPort();
    if (port != null) {
      out.push(":", String(port));
    }
  }
  var path = this.getPath();
  if (path) {
    if (this.hasDomain() && path.charAt(0) != "/") {
      out.push("/");
    }
    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_));
  }
  var query = this.getEncodedQuery();
  if (query) {
    out.push("?", query);
  }
  var fragment = this.getFragment();
  if (fragment) {
    out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));
  }
  return out.join("");
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if (overridden) {
    absoluteUri.setScheme(relativeUri.getScheme());
  } else {
    overridden = relativeUri.hasUserInfo();
  }
  if (overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo());
  } else {
    overridden = relativeUri.hasDomain();
  }
  if (overridden) {
    absoluteUri.setDomain(relativeUri.getDomain());
  } else {
    overridden = relativeUri.hasPort();
  }
  var path = relativeUri.getPath();
  if (overridden) {
    absoluteUri.setPort(relativeUri.getPort());
  } else {
    overridden = relativeUri.hasPath();
    if (overridden) {
      if (path.charAt(0) != "/") {
        if (this.hasDomain() && !this.hasPath()) {
          path = "/" + path;
        } else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if (lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;
          }
        }
      }
      path = goog.Uri.removeDotSegments(path);
    }
  }
  if (overridden) {
    absoluteUri.setPath(path);
  } else {
    overridden = relativeUri.hasQuery();
  }
  if (overridden) {
    absoluteUri.setQueryData(relativeUri.getDecodedQuery());
  } else {
    overridden = relativeUri.hasFragment();
  }
  if (overridden) {
    absoluteUri.setFragment(relativeUri.getFragment());
  }
  return absoluteUri;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if (this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if (newPort) {
    newPort = Number(newPort);
    if (isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== "";
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  if (queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.setIgnoreCase(this.ignoreCase_);
  } else {
    if (!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_);
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_);
  }
  return this;
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this;
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  if (!goog.isArray(values)) {
    values = [String(values)];
  }
  this.queryData_.setValues(key, (values));
  return this;
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name);
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return(this.queryData_.get(paramName));
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this;
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if (this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase);
  }
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri;
};
goog.Uri.resolve = function(base, rel) {
  if (!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base);
  }
  if (!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel);
  }
  return base.resolve(rel);
};
goog.Uri.removeDotSegments = function(path) {
  if (path == ".." || path == ".") {
    return "";
  } else {
    if (!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path;
    } else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for (var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if (segment == ".") {
          if (leadingSlash && pos == segments.length) {
            out.push("");
          }
        } else {
          if (segment == "..") {
            if (out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop();
            }
            if (leadingSlash && pos == segments.length) {
              out.push("");
            }
          } else {
            out.push(segment);
            leadingSlash = true;
          }
        }
      }
      return out.join("/");
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : "";
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  if (goog.isString(unescapedPart)) {
    return encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);
  }
  return null;
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return "%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16);
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if (this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("\x26");
      for (var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("\x3d");
        var name = null;
        var value = null;
        if (indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1);
        } else {
          name = pairs[i];
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "");
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if (typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = values[i];
    if (!goog.isArray(value)) {
      queryData.add(key, value);
    } else {
      queryData.setValues(key, value);
    }
  }
  return queryData;
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if (keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  for (var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i]);
  }
  return queryData;
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  if (!values) {
    this.keyMap_.set(key, values = []);
  }
  values.push(value);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if (this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    this.count_ -= this.keyMap_.get(key).length;
    return this.keyMap_.remove(key);
  }
  return false;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0;
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key);
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = (this.keyMap_.getValues());
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for (var i = 0;i < keys.length;i++) {
    var val = vals[i];
    for (var j = 0;j < val.length;j++) {
      rv.push(keys[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if (goog.isString(opt_key)) {
    if (this.containsKey(opt_key)) {
      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)));
    }
  } else {
    var values = (this.keyMap_.getValues());
    for (var i = 0;i < values.length;i++) {
      rv = goog.array.concat(rv, values[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if (this.containsKey(key)) {
    this.count_ -= this.keyMap_.get(key).length;
  }
  this.keyMap_.set(key, [value]);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  var values = key ? this.getValues(key) : [];
  if (goog.Uri.preserveParameterTypesCompatibilityFlag) {
    return values.length > 0 ? values[0] : opt_default;
  } else {
    return values.length > 0 ? String(values[0]) : opt_default;
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  if (values.length > 0) {
    this.invalidateCache_();
    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));
    this.count_ += values.length;
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  var sb = [];
  var keys = this.keyMap_.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.getValues(key);
    for (var j = 0;j < val.length;j++) {
      var param = encodedKey;
      if (val[j] !== "") {
        param += "\x3d" + goog.string.urlEncode(val[j]);
      }
      sb.push(param);
    }
  }
  return this.encodedQuery_ = sb.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(value, key) {
    if (!goog.array.contains(keys, key)) {
      this.remove(key);
    }
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  if (this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone();
    rv.count_ = this.count_;
  }
  return rv;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if (this.ignoreCase_) {
    keyName = keyName.toLowerCase();
  }
  return keyName;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if (resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    this.keyMap_.forEach(function(value, key) {
      var lowerCase = key.toLowerCase();
      if (key != lowerCase) {
        this.remove(key);
        this.setValues(lowerCase, value);
      }
    }, this);
  }
  this.ignoreCase_ = ignoreCase;
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for (var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value);
    }, this);
  }
};
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max, cljs.core.remove.call(null, function(max) {
    return function(p1__23322_SHARP_) {
      return max === p1__23322_SHARP_;
    };
  }(max), coll));
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var union__1 = function(s1) {
    return s1;
  };
  var union__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2);
    }
  };
  var union__3 = function() {
    var G__23323__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__23323 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23323__delegate.call(this, s1, s2, sets);
    };
    G__23323.cljs$lang$maxFixedArity = 2;
    G__23323.cljs$lang$applyTo = function(arglist__23324) {
      var s1 = cljs.core.first(arglist__23324);
      arglist__23324 = cljs.core.next(arglist__23324);
      var s2 = cljs.core.first(arglist__23324);
      var sets = cljs.core.rest(arglist__23324);
      return G__23323__delegate(s1, s2, sets);
    };
    G__23323.cljs$core$IFn$_invoke$arity$variadic = G__23323__delegate;
    return G__23323;
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        return union__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$core$IFn$_invoke$arity$0 = union__0;
  union.cljs$core$IFn$_invoke$arity$1 = union__1;
  union.cljs$core$IFn$_invoke$arity$2 = union__2;
  union.cljs$core$IFn$_invoke$arity$variadic = union__3.cljs$core$IFn$_invoke$arity$variadic;
  return union;
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1;
  };
  var intersection__2 = function(s1, s2) {
    while (true) {
      if (cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__23326 = s2;
        var G__23327 = s1;
        s1 = G__23326;
        s2 = G__23327;
        continue;
      } else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if (cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result;
            } else {
              return cljs.core.disj.call(null, result, item);
            }
          };
        }(s1, s2), s1, s1);
      }
      break;
    }
  };
  var intersection__3 = function() {
    var G__23328__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, function(p1__23325_SHARP_) {
        return-cljs.core.count.call(null, p1__23325_SHARP_);
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__23328 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23328__delegate.call(this, s1, s2, sets);
    };
    G__23328.cljs$lang$maxFixedArity = 2;
    G__23328.cljs$lang$applyTo = function(arglist__23329) {
      var s1 = cljs.core.first(arglist__23329);
      arglist__23329 = cljs.core.next(arglist__23329);
      var s2 = cljs.core.first(arglist__23329);
      var sets = cljs.core.rest(arglist__23329);
      return G__23328__delegate(s1, s2, sets);
    };
    G__23328.cljs$core$IFn$_invoke$arity$variadic = G__23328__delegate;
    return G__23328;
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        return intersection__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$core$IFn$_invoke$arity$1 = intersection__1;
  intersection.cljs$core$IFn$_invoke$arity$2 = intersection__2;
  intersection.cljs$core$IFn$_invoke$arity$variadic = intersection__3.cljs$core$IFn$_invoke$arity$variadic;
  return intersection;
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1;
  };
  var difference__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if (cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item);
        } else {
          return result;
        }
      }, s1, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2);
    }
  };
  var difference__3 = function() {
    var G__23330__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2));
    };
    var G__23330 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23330__delegate.call(this, s1, s2, sets);
    };
    G__23330.cljs$lang$maxFixedArity = 2;
    G__23330.cljs$lang$applyTo = function(arglist__23331) {
      var s1 = cljs.core.first(arglist__23331);
      arglist__23331 = cljs.core.next(arglist__23331);
      var s2 = cljs.core.first(arglist__23331);
      var sets = cljs.core.rest(arglist__23331);
      return G__23330__delegate(s1, s2, sets);
    };
    G__23330.cljs$core$IFn$_invoke$arity$variadic = G__23330__delegate;
    return G__23330;
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        return difference__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$core$IFn$_invoke$arity$1 = difference__1;
  difference.cljs$core$IFn$_invoke$arity$2 = difference__2;
  difference.cljs$core$IFn$_invoke$arity$variadic = difference__3.cljs$core$IFn$_invoke$arity$variadic;
  return difference;
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if (cljs.core.truth_(pred.call(null, k))) {
      return s;
    } else {
      return cljs.core.disj.call(null, s, k);
    }
  }, xset, xset);
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__23332_SHARP_) {
    return cljs.core.select_keys.call(null, p1__23332_SHARP_, ks);
  }, xrel));
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__23335) {
    var vec__23336 = p__23335;
    var old = cljs.core.nth.call(null, vec__23336, 0, null);
    var new$ = cljs.core.nth.call(null, vec__23336, 1, null);
    if (cljs.core.contains_QMARK_.call(null, map, old)) {
      return cljs.core.assoc.call(null, m, new$, cljs.core.get.call(null, map, old));
    } else {
      return m;
    }
  }, cljs.core.apply.call(null, cljs.core.dissoc, map, cljs.core.keys.call(null, kmap)), kmap);
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__23337_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__23337_SHARP_, kmap);
  }, xrel));
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik, cljs.core.PersistentHashSet.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, xrel);
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m__$1, p__23340) {
    var vec__23341 = p__23340;
    var k = cljs.core.nth.call(null, vec__23341, 0, null);
    var v = cljs.core.nth.call(null, vec__23341, 1, null);
    return cljs.core.assoc.call(null, m__$1, v, k);
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if (cljs.core.seq.call(null, xrel) && cljs.core.seq.call(null, yrel)) {
      var ks = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__23348 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel], null);
      var r = cljs.core.nth.call(null, vec__23348, 0, null);
      var s = cljs.core.nth.call(null, vec__23348, 1, null);
      var idx = clojure.set.index.call(null, r, ks);
      return cljs.core.reduce.call(null, function(ks, vec__23348, r, s, idx) {
        return function(ret, x) {
          var found = idx.call(null, cljs.core.select_keys.call(null, x, ks));
          if (cljs.core.truth_(found)) {
            return cljs.core.reduce.call(null, function(found, ks, vec__23348, r, s, idx) {
              return function(p1__23342_SHARP_, p2__23343_SHARP_) {
                return cljs.core.conj.call(null, p1__23342_SHARP_, cljs.core.merge.call(null, p2__23343_SHARP_, x));
              };
            }(found, ks, vec__23348, r, s, idx), ret, found);
          } else {
            return ret;
          }
        };
      }(ks, vec__23348, r, s, idx), cljs.core.PersistentHashSet.EMPTY, s);
    } else {
      return cljs.core.PersistentHashSet.EMPTY;
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__23349 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel, clojure.set.map_invert.call(null, km)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel, km], null);
    var r = cljs.core.nth.call(null, vec__23349, 0, null);
    var s = cljs.core.nth.call(null, vec__23349, 1, null);
    var k = cljs.core.nth.call(null, vec__23349, 2, null);
    var idx = clojure.set.index.call(null, r, cljs.core.vals.call(null, k));
    return cljs.core.reduce.call(null, function(vec__23349, r, s, k, idx) {
      return function(ret, x) {
        var found = idx.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k)), k));
        if (cljs.core.truth_(found)) {
          return cljs.core.reduce.call(null, function(found, vec__23349, r, s, k, idx) {
            return function(p1__23344_SHARP_, p2__23345_SHARP_) {
              return cljs.core.conj.call(null, p1__23344_SHARP_, cljs.core.merge.call(null, p2__23345_SHARP_, x));
            };
          }(found, vec__23349, r, s, k, idx), ret, found);
        } else {
          return ret;
        }
      };
    }(vec__23349, r, s, k, idx), cljs.core.PersistentHashSet.EMPTY, s);
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  join.cljs$core$IFn$_invoke$arity$3 = join__3;
  return join;
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__23350_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set2, p1__23350_SHARP_);
  }, set1);
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__23351_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set1, p1__23351_SHARP_);
  }, set2);
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if (typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if (type == "%") {
      return "%";
    }
    var value = args.shift();
    if (typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments);
  }
  return template.replace(formatRe, replacerDemuxer);
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if (isNaN(width) || width == "" || replacement.length >= width) {
    return replacement;
  }
  if (flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length);
  } else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if (!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision);
  }
  var sign;
  if (value < 0) {
    sign = "-";
  } else {
    if (flags.indexOf("+") >= 0) {
      sign = "+";
    } else {
      if (flags.indexOf(" ") >= 0) {
        sign = " ";
      } else {
        sign = "";
      }
    }
  }
  if (value >= 0) {
    replacement = sign + replacement;
  }
  if (isNaN(width) || replacement.length >= width) {
    return replacement;
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if (flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount);
  } else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString);
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("taoensso.encore");
goog.require("cljs.core");
goog.require("goog.net.XhrIoPool");
goog.require("goog.events");
goog.require("clojure.set");
goog.require("goog.net.XhrIo");
goog.require("goog.Uri.QueryData");
goog.require("goog.string");
goog.require("goog.Uri.QueryData");
goog.require("goog.net.XhrIoPool");
goog.require("goog.string.StringBuffer");
goog.require("goog.net.EventType");
goog.require("clojure.set");
goog.require("goog.structs");
goog.require("goog.string.format");
goog.require("goog.structs");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("cljs.reader");
goog.require("goog.string");
goog.require("cljs.reader");
goog.require("goog.events");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.XhrIo");
taoensso.encore.encore_version = 1.37;
taoensso.encore.assert_min_encore_version = function assert_min_encore_version(min_version) {
  if (taoensso.encore.encore_version < min_version) {
    throw cljs.core.ex_info.call(null, taoensso.encore.format.call(null, "Insufficient com.taoensso/encore version: %s \x3c %s. You may have a Leiningen dependency conflict (see http://goo.gl/qBbLvC for solution).", taoensso.encore.encore_version, min_version), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min-version", "min-version", -1697197126), min_version, new cljs.core.Keyword(null, "this-version", "this-version", 355666086), taoensso.encore.encore_version], null));
  } else {
    return null;
  }
};
taoensso.encore.read_edn = function read_edn(s) {
  return cljs.reader.read_string.call(null, s);
};
taoensso.encore.name_with_attrs = function name_with_attrs(name, macro_args) {
  var vec__22873 = typeof cljs.core.first.call(null, macro_args) === "string" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, macro_args), cljs.core.next.call(null, macro_args)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, macro_args], null);
  var docstring = cljs.core.nth.call(null, vec__22873, 0, null);
  var macro_args__$1 = cljs.core.nth.call(null, vec__22873, 1, null);
  var vec__22874 = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, macro_args__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, macro_args__$1), cljs.core.next.call(null, macro_args__$1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentArrayMap.EMPTY, macro_args__$1], null);
  var attr = cljs.core.nth.call(null, vec__22874, 0, null);
  var macro_args__$2 = cljs.core.nth.call(null, vec__22874, 1, null);
  var attr__$1 = cljs.core.truth_(docstring) ? cljs.core.assoc.call(null, attr, new cljs.core.Keyword(null, "doc", "doc", 1913296891), docstring) : attr;
  var attr__$2 = cljs.core.truth_(cljs.core.meta.call(null, name)) ? cljs.core.conj.call(null, cljs.core.meta.call(null, name), attr__$1) : attr__$1;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta.call(null, name, attr__$2), macro_args__$2], null);
};
taoensso.encore.kw_identical_QMARK_ = cljs.core.keyword_identical_QMARK_;
taoensso.encore.stringy_QMARK_ = function stringy_QMARK_(x) {
  return x instanceof cljs.core.Keyword || typeof x === "string";
};
taoensso.encore.atom_QMARK_ = function atom_QMARK_(x) {
  return x instanceof cljs.core.Atom;
};
taoensso.encore.chan_QMARK_ = function chan_QMARK_(x) {
  return x instanceof cljs.core.async.impl.channels.ManyToManyChannel;
};
taoensso.encore.re_pattern_QMARK_ = function re_pattern_QMARK_(x) {
  return x instanceof RegExp;
};
taoensso.encore.error_QMARK_ = function error_QMARK_(x) {
  return x instanceof Error;
};
taoensso.encore.error_data = function error_data(x) {
  var temp__4126__auto__ = function() {
    var or__3761__auto__ = cljs.core.ex_data.call(null, x);
    if (cljs.core.truth_(or__3761__auto__)) {
      return or__3761__auto__;
    } else {
      if (x instanceof Error) {
        return cljs.core.PersistentArrayMap.EMPTY;
      } else {
        return null;
      }
    }
  }();
  if (cljs.core.truth_(temp__4126__auto__)) {
    var data_map = temp__4126__auto__;
    return cljs.core.merge.call(null, function() {
      var err = x;
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "err-type", "err-type", -116717722), cljs.core.type.call(null, err), new cljs.core.Keyword(null, "err-msg", "err-msg", -1158512684), err.message, new cljs.core.Keyword(null, "err-cause", "err-cause", 897008749), err.cause], null);
    }(), data_map);
  } else {
    return null;
  }
};
taoensso.encore.nnil_QMARK_ = function nnil_QMARK_(x) {
  return!(x == null);
};
taoensso.encore.nblank_QMARK_ = function nblank_QMARK_(x) {
  return cljs.core.not.call(null, clojure.string.blank_QMARK_.call(null, x));
};
taoensso.encore.nneg_QMARK_ = function nneg_QMARK_(x) {
  return!(x < 0);
};
taoensso.encore.pos_int_QMARK_ = function pos_int_QMARK_(x) {
  return cljs.core.integer_QMARK_.call(null, x) && x > 0;
};
taoensso.encore.nneg_int_QMARK_ = function nneg_int_QMARK_(x) {
  return cljs.core.integer_QMARK_.call(null, x) && !(x < 0);
};
taoensso.encore.nvec_QMARK_ = function nvec_QMARK_(n, x) {
  return cljs.core.vector_QMARK_.call(null, x) && cljs.core._EQ_.call(null, cljs.core.count.call(null, x), n);
};
taoensso.encore.udt_QMARK_ = taoensso.encore.nneg_int_QMARK_;
taoensso.encore.vec2_QMARK_ = function vec2_QMARK_(x) {
  return taoensso.encore.nvec_QMARK_.call(null, 2, x);
};
taoensso.encore.vec3_QMARK_ = function vec3_QMARK_(x) {
  return taoensso.encore.nvec_QMARK_.call(null, 3, x);
};
taoensso.encore.distinct_elements_QMARK_ = function distinct_elements_QMARK_(x) {
  return cljs.core.set_QMARK_.call(null, x) || cljs.core._EQ_.call(null, cljs.core.count.call(null, x), cljs.core.count.call(null, taoensso.encore.set_STAR_.call(null, x)));
};
taoensso.encore.nblank_str_QMARK_ = function nblank_str_QMARK_(x) {
  return typeof x === "string" && cljs.core.not.call(null, clojure.string.blank_QMARK_.call(null, x));
};
taoensso.encore.nneg_num_QMARK_ = function nneg_num_QMARK_(x) {
  return typeof x === "number" && !(x < 0);
};
taoensso.encore.pos_num_QMARK_ = function pos_num_QMARK_(x) {
  return typeof x === "number" && x > 0;
};
taoensso.encore.zero_num_QMARK_ = function zero_num_QMARK_(x) {
  return cljs.core._EQ_.call(null, 0, x);
};
taoensso.encore.as__QMARK_nblank = function as__QMARK_nblank(x) {
  if (typeof x === "string") {
    if (cljs.core.truth_(clojure.string.blank_QMARK_.call(null, x))) {
      return null;
    } else {
      return x;
    }
  } else {
    return null;
  }
};
taoensso.encore.as__QMARK_kw = function as__QMARK_kw(x) {
  if (x instanceof cljs.core.Keyword) {
    return x;
  } else {
    if (typeof x === "string") {
      return cljs.core.keyword.call(null, x);
    } else {
      return null;
    }
  }
};
taoensso.encore.as__QMARK_name = function as__QMARK_name(x) {
  if (x instanceof cljs.core.Keyword) {
    return cljs.core.name.call(null, x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      return null;
    }
  }
};
taoensso.encore.as__QMARK_bool = function as__QMARK_bool(x) {
  if (x == null) {
    return null;
  } else {
    if (x === true || x === false) {
      return x;
    } else {
      if (cljs.core._EQ_.call(null, x, 0) || cljs.core._EQ_.call(null, x, "false") || cljs.core._EQ_.call(null, x, "FALSE") || cljs.core._EQ_.call(null, x, "0")) {
        return false;
      } else {
        if (cljs.core._EQ_.call(null, x, 1) || cljs.core._EQ_.call(null, x, "true") || cljs.core._EQ_.call(null, x, "TRUE") || cljs.core._EQ_.call(null, x, "1")) {
          return true;
        } else {
          return null;
        }
      }
    }
  }
};
taoensso.encore.as__QMARK_int = function as__QMARK_int(x) {
  if (x == null) {
    return null;
  } else {
    if (typeof x === "number") {
      return cljs.core.long$.call(null, x);
    } else {
      if (typeof x === "string") {
        var x__$1 = parseInt(x, 10);
        if (cljs.core.truth_(isNaN(x__$1))) {
          return null;
        } else {
          return x__$1;
        }
      } else {
        return null;
      }
    }
  }
};
taoensso.encore.as__QMARK_float = function as__QMARK_float(x) {
  if (x == null) {
    return null;
  } else {
    if (typeof x === "number") {
      return x;
    } else {
      if (typeof x === "string") {
        var x__$1 = parseFloat(x);
        if (cljs.core.truth_(isNan(x__$1))) {
          return null;
        } else {
          return x__$1;
        }
      } else {
        return null;
      }
    }
  }
};
taoensso.encore.nnil_EQ_ = function() {
  var nnil_EQ_ = null;
  var nnil_EQ___2 = function(x, y) {
    return taoensso.encore.nnil_QMARK_.call(null, x) && cljs.core._EQ_.call(null, x, y);
  };
  var nnil_EQ___3 = function() {
    var G__22877__delegate = function(x, y, more) {
      var and__3749__auto__ = taoensso.encore.nnil_QMARK_.call(null, x);
      if (and__3749__auto__) {
        return cljs.core.apply.call(null, cljs.core._EQ_, x, y, more);
      } else {
        return and__3749__auto__;
      }
    };
    var G__22877 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__22877__delegate.call(this, x, y, more);
    };
    G__22877.cljs$lang$maxFixedArity = 2;
    G__22877.cljs$lang$applyTo = function(arglist__22878) {
      var x = cljs.core.first(arglist__22878);
      arglist__22878 = cljs.core.next(arglist__22878);
      var y = cljs.core.first(arglist__22878);
      var more = cljs.core.rest(arglist__22878);
      return G__22877__delegate(x, y, more);
    };
    G__22877.cljs$core$IFn$_invoke$arity$variadic = G__22877__delegate;
    return G__22877;
  }();
  nnil_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return nnil_EQ___2.call(this, x, y);
      default:
        return nnil_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nnil_EQ_.cljs$lang$maxFixedArity = 2;
  nnil_EQ_.cljs$lang$applyTo = nnil_EQ___3.cljs$lang$applyTo;
  nnil_EQ_.cljs$core$IFn$_invoke$arity$2 = nnil_EQ___2;
  nnil_EQ_.cljs$core$IFn$_invoke$arity$variadic = nnil_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return nnil_EQ_;
}();
taoensso.encore.vec_STAR_ = function vec_STAR_(x) {
  if (cljs.core.vector_QMARK_.call(null, x)) {
    return x;
  } else {
    return cljs.core.vec.call(null, x);
  }
};
taoensso.encore.set_STAR_ = function set_STAR_(x) {
  if (cljs.core.set_QMARK_.call(null, x)) {
    return x;
  } else {
    return cljs.core.set.call(null, x);
  }
};
taoensso.encore.ks_EQ_ = function ks_EQ_(ks, m) {
  return cljs.core._EQ_.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, m)), taoensso.encore.set_STAR_.call(null, ks));
};
taoensso.encore.ks_LT__EQ_ = function ks_LT__EQ_(ks, m) {
  return clojure.set.subset_QMARK_.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, m)), taoensso.encore.set_STAR_.call(null, ks));
};
taoensso.encore.ks_GT__EQ_ = function ks_GT__EQ_(ks, m) {
  return clojure.set.superset_QMARK_.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, m)), taoensso.encore.set_STAR_.call(null, ks));
};
taoensso.encore.ks_nnil_QMARK_ = function ks_nnil_QMARK_(ks, m) {
  return cljs.core.every_QMARK_.call(null, function(p1__22879_SHARP_) {
    return taoensso.encore.nnil_QMARK_.call(null, cljs.core.get.call(null, m, p1__22879_SHARP_));
  }, ks);
};
taoensso.encore.assertion_error = function assertion_error(msg) {
  return new Error(msg);
};
taoensso.encore.hthrow = function() {
  var hthrow__delegate = function(hard_QMARK_, ns_str, _QMARK_line, form, val, p__22880) {
    var vec__22882 = p__22880;
    var _QMARK_err = cljs.core.nth.call(null, vec__22882, 0, null);
    var pattern = "Condition failed in `%s:%s` [pred-form, val]: [%s, %s]";
    var line_str = function() {
      var or__3761__auto__ = _QMARK_line;
      if (cljs.core.truth_(or__3761__auto__)) {
        return or__3761__auto__;
      } else {
        return "?";
      }
    }();
    var form_str = [cljs.core.str(function() {
      var or__3761__auto__ = form;
      if (cljs.core.truth_(or__3761__auto__)) {
        return or__3761__auto__;
      } else {
        return "\x3cnil\x3e";
      }
    }())].join("");
    var val_str = [cljs.core.str(function() {
      var or__3761__auto__ = val;
      if (cljs.core.truth_(or__3761__auto__)) {
        return or__3761__auto__;
      } else {
        return "\x3cnil\x3e";
      }
    }())].join("");
    var _QMARK_err_str = function() {
      var temp__4126__auto__ = _QMARK_err;
      if (cljs.core.truth_(temp__4126__auto__)) {
        var e = temp__4126__auto__;
        return[cljs.core.str(_QMARK_err)].join("");
      } else {
        return null;
      }
    }();
    var msg = function() {
      var m = taoensso.encore.format.call(null, pattern, ns_str, line_str, form_str, val_str);
      if (cljs.core.not.call(null, _QMARK_err_str)) {
        return m;
      } else {
        return[cljs.core.str(m), cljs.core.str("\nPredicate error: "), cljs.core.str(_QMARK_err_str)].join("");
      }
    }();
    throw cljs.core.not.call(null, hard_QMARK_) ? taoensso.encore.assertion_error.call(null, msg) : cljs.core.ex_info.call(null, msg, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "ns", "ns", 441598760), ns_str, new cljs.core.Keyword(null, "?line", "?line", -631853385), _QMARK_line, new cljs.core.Keyword(null, "form", "form", -1624062471), form, new cljs.core.Keyword(null, "val", "val", 128701612), val, new cljs.core.Keyword(null, "?err", "?err", 549653299), _QMARK_err], 
    null));
  };
  var hthrow = function(hard_QMARK_, ns_str, _QMARK_line, form, val, var_args) {
    var p__22880 = null;
    if (arguments.length > 5) {
      p__22880 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
    }
    return hthrow__delegate.call(this, hard_QMARK_, ns_str, _QMARK_line, form, val, p__22880);
  };
  hthrow.cljs$lang$maxFixedArity = 5;
  hthrow.cljs$lang$applyTo = function(arglist__22883) {
    var hard_QMARK_ = cljs.core.first(arglist__22883);
    arglist__22883 = cljs.core.next(arglist__22883);
    var ns_str = cljs.core.first(arglist__22883);
    arglist__22883 = cljs.core.next(arglist__22883);
    var _QMARK_line = cljs.core.first(arglist__22883);
    arglist__22883 = cljs.core.next(arglist__22883);
    var form = cljs.core.first(arglist__22883);
    arglist__22883 = cljs.core.next(arglist__22883);
    var val = cljs.core.first(arglist__22883);
    var p__22880 = cljs.core.rest(arglist__22883);
    return hthrow__delegate(hard_QMARK_, ns_str, _QMARK_line, form, val, p__22880);
  };
  hthrow.cljs$core$IFn$_invoke$arity$variadic = hthrow__delegate;
  return hthrow;
}();
taoensso.encore.non_throwing = function non_throwing(pred) {
  return function(x) {
    var vec__22886 = function() {
      try {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [pred.call(null, x)], null);
      } catch (e22887) {
        if (e22887 instanceof Error) {
          var e__16154__auto__ = e22887;
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, e__16154__auto__], null);
        } else {
          throw e22887;
        }
      }
    }();
    var _QMARK_r = cljs.core.nth.call(null, vec__22886, 0, null);
    var _ = cljs.core.nth.call(null, vec__22886, 1, null);
    return _QMARK_r;
  };
};
taoensso.encore.hpred = function hpred(pred_form) {
  if (!cljs.core.vector_QMARK_.call(null, pred_form)) {
    return pred_form;
  } else {
    var vec__22893 = pred_form;
    var type = cljs.core.nth.call(null, vec__22893, 0, null);
    var p1 = cljs.core.nth.call(null, vec__22893, 1, null);
    var p2 = cljs.core.nth.call(null, vec__22893, 2, null);
    var more = cljs.core.nthnext.call(null, vec__22893, 3);
    var G__22894 = type instanceof cljs.core.Keyword ? type.fqn : null;
    switch(G__22894) {
      case "el":
        return function(G__22894, vec__22893, type, p1, p2, more) {
          return function(x) {
            return cljs.core.contains_QMARK_.call(null, taoensso.encore.set_STAR_.call(null, p1), x);
          };
        }(G__22894, vec__22893, type, p1, p2, more);
        break;
      case "not\x3d":
        return function(G__22894, vec__22893, type, p1, p2, more) {
          return function(x) {
            return cljs.core.not_EQ_.call(null, p1, x);
          };
        }(G__22894, vec__22893, type, p1, p2, more);
        break;
      case "ks-nnil?":
        return function(G__22894, vec__22893, type, p1, p2, more) {
          return function(x) {
            return taoensso.encore.ks_nnil_QMARK_.call(null, p1, x);
          };
        }(G__22894, vec__22893, type, p1, p2, more);
        break;
      case "ks\x3c\x3d":
        return function(G__22894, vec__22893, type, p1, p2, more) {
          return function(x) {
            return taoensso.encore.ks_LT__EQ_.call(null, p1, x);
          };
        }(G__22894, vec__22893, type, p1, p2, more);
        break;
      case "or":
        return function(G__22894, vec__22893, type, p1, p2, more) {
          return function(x) {
            var or__3761__auto__ = cljs.core.truth_(p1) ? taoensso.encore.non_throwing.call(null, hpred.call(null, p1)).call(null, x) : null;
            if (cljs.core.truth_(or__3761__auto__)) {
              return or__3761__auto__;
            } else {
              var or__3761__auto____$1 = cljs.core.truth_(p2) ? taoensso.encore.non_throwing.call(null, hpred.call(null, p2)).call(null, x) : null;
              if (cljs.core.truth_(or__3761__auto____$1)) {
                return or__3761__auto____$1;
              } else {
                return cljs.core.some.call(null, function(or__3761__auto____$1, or__3761__auto__, G__22894, vec__22893, type, p1, p2, more) {
                  return function(p1__22889_SHARP_) {
                    return taoensso.encore.non_throwing.call(null, hpred.call(null, p1__22889_SHARP_)).call(null, x);
                  };
                }(or__3761__auto____$1, or__3761__auto__, G__22894, vec__22893, type, p1, p2, more), more);
              }
            }
          };
        }(G__22894, vec__22893, type, p1, p2, more);
        break;
      case "not":
        return function(G__22894, vec__22893, type, p1, p2, more) {
          return function(x) {
            var and__3749__auto__ = cljs.core.not.call(null, p1) ? true : cljs.core.not.call(null, hpred.call(null, p1).call(null, x));
            if (and__3749__auto__) {
              var and__3749__auto____$1 = cljs.core.not.call(null, p2) ? true : cljs.core.not.call(null, hpred.call(null, p2).call(null, x));
              if (and__3749__auto____$1) {
                return cljs.core.every_QMARK_.call(null, function(and__3749__auto____$1, and__3749__auto__, G__22894, vec__22893, type, p1, p2, more) {
                  return function(p1__22888_SHARP_) {
                    return cljs.core.not.call(null, hpred.call(null, p1__22888_SHARP_).call(null, x));
                  };
                }(and__3749__auto____$1, and__3749__auto__, G__22894, vec__22893, type, p1, p2, more), more);
              } else {
                return and__3749__auto____$1;
              }
            } else {
              return and__3749__auto__;
            }
          };
        }(G__22894, vec__22893, type, p1, p2, more);
        break;
      case "ks\x3d":
        return function(G__22894, vec__22893, type, p1, p2, more) {
          return function(x) {
            return taoensso.encore.ks_EQ_.call(null, p1, x);
          };
        }(G__22894, vec__22893, type, p1, p2, more);
        break;
      case "and":
        return function(G__22894, vec__22893, type, p1, p2, more) {
          return function(x) {
            var and__3749__auto__ = cljs.core.not.call(null, p1) ? true : hpred.call(null, p1).call(null, x);
            if (cljs.core.truth_(and__3749__auto__)) {
              var and__3749__auto____$1 = cljs.core.not.call(null, p2) ? true : hpred.call(null, p2).call(null, x);
              if (cljs.core.truth_(and__3749__auto____$1)) {
                return cljs.core.every_QMARK_.call(null, function(and__3749__auto____$1, and__3749__auto__, G__22894, vec__22893, type, p1, p2, more) {
                  return function(p1__22890_SHARP_) {
                    return hpred.call(null, p1__22890_SHARP_).call(null, x);
                  };
                }(and__3749__auto____$1, and__3749__auto__, G__22894, vec__22893, type, p1, p2, more), more);
              } else {
                return and__3749__auto____$1;
              }
            } else {
              return and__3749__auto__;
            }
          };
        }(G__22894, vec__22893, type, p1, p2, more);
        break;
      case "ks\x3e\x3d":
        return function(G__22894, vec__22893, type, p1, p2, more) {
          return function(x) {
            return taoensso.encore.ks_GT__EQ_.call(null, p1, x);
          };
        }(G__22894, vec__22893, type, p1, p2, more);
        break;
      case "not-in":
        return function(G__22894, vec__22893, type, p1, p2, more) {
          return function(x) {
            return!cljs.core.contains_QMARK_.call(null, taoensso.encore.set_STAR_.call(null, p1), x);
          };
        }(G__22894, vec__22893, type, p1, p2, more);
        break;
      case "not-el":
        return function(G__22894, vec__22893, type, p1, p2, more) {
          return function(x) {
            return!cljs.core.contains_QMARK_.call(null, taoensso.encore.set_STAR_.call(null, p1), x);
          };
        }(G__22894, vec__22893, type, p1, p2, more);
        break;
      case "\x3d":
        return function(G__22894, vec__22893, type, p1, p2, more) {
          return function(x) {
            return cljs.core._EQ_.call(null, p1, x);
          };
        }(G__22894, vec__22893, type, p1, p2, more);
        break;
      case "set\x3c\x3d":
        return function(G__22894, vec__22893, type, p1, p2, more) {
          return function(x) {
            return clojure.set.subset_QMARK_.call(null, taoensso.encore.set_STAR_.call(null, x), taoensso.encore.set_STAR_.call(null, p1));
          };
        }(G__22894, vec__22893, type, p1, p2, more);
        break;
      case "set\x3e\x3d":
        return function(G__22894, vec__22893, type, p1, p2, more) {
          return function(x) {
            return clojure.set.superset_QMARK_.call(null, taoensso.encore.set_STAR_.call(null, x), taoensso.encore.set_STAR_.call(null, p1));
          };
        }(G__22894, vec__22893, type, p1, p2, more);
        break;
      case "set\x3d":
        return function(G__22894, vec__22893, type, p1, p2, more) {
          return function(x) {
            return cljs.core._EQ_.call(null, taoensso.encore.set_STAR_.call(null, x), taoensso.encore.set_STAR_.call(null, p1));
          };
        }(G__22894, vec__22893, type, p1, p2, more);
        break;
      case "in":
        return function(G__22894, vec__22893, type, p1, p2, more) {
          return function(x) {
            return cljs.core.contains_QMARK_.call(null, taoensso.encore.set_STAR_.call(null, p1), x);
          };
        }(G__22894, vec__22893, type, p1, p2, more);
        break;
      default:
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(type)].join(""));;
    }
  }
};
taoensso.encore.hcond = function hcond(hard_QMARK_, ns_str, line, x_, x_form, pred, pred_form) {
  var vec__22900 = function() {
    try {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, x_)], null);
    } catch (e22902) {
      if (e22902 instanceof Error) {
        var e__16154__auto__ = e22902;
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, e__16154__auto__], null);
      } else {
        throw e22902;
      }
    }
  }();
  var _QMARK_x = cljs.core.nth.call(null, vec__22900, 0, null);
  var _QMARK_x_err = cljs.core.nth.call(null, vec__22900, 1, null);
  var have_x_QMARK_ = _QMARK_x_err == null;
  var vec__22901 = have_x_QMARK_ ? function() {
    try {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [taoensso.encore.hpred.call(null, pred).call(null, _QMARK_x)], null);
    } catch (e22903) {
      if (e22903 instanceof Error) {
        var e__16154__auto__ = e22903;
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, e__16154__auto__], null);
      } else {
        throw e22903;
      }
    }
  }() : null;
  var pass_QMARK_ = cljs.core.nth.call(null, vec__22901, 0, null);
  var _QMARK_pred_err = cljs.core.nth.call(null, vec__22901, 1, null);
  if (cljs.core.truth_(pass_QMARK_)) {
    return _QMARK_x;
  } else {
    return taoensso.encore.hthrow.call(null, hard_QMARK_, ns_str, line, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, x_form), pred_form), have_x_QMARK_ ? _QMARK_x : _QMARK_x_err, _QMARK_pred_err);
  }
};
taoensso.encore.fq_name = function fq_name(x) {
  if (typeof x === "string") {
    return x;
  } else {
    var n = cljs.core.name.call(null, x);
    var temp__4124__auto__ = cljs.core.namespace.call(null, x);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var ns = temp__4124__auto__;
      return[cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(n)].join("");
    } else {
      return n;
    }
  }
};
taoensso.encore.explode_keyword = function explode_keyword(k) {
  return clojure.string.split.call(null, taoensso.encore.fq_name.call(null, k), /[\.\/]/);
};
taoensso.encore.merge_keywords = function() {
  var merge_keywords__delegate = function(ks, p__22904) {
    var vec__22906 = p__22904;
    var no_slash_QMARK_ = cljs.core.nth.call(null, vec__22906, 0, null);
    var parts = cljs.core.reduce.call(null, cljs.core.into, cljs.core.PersistentVector.EMPTY, cljs.core.mapv.call(null, taoensso.encore.explode_keyword, cljs.core.filterv.call(null, cljs.core.identity, ks)));
    if (cljs.core.empty_QMARK_.call(null, parts)) {
      return null;
    } else {
      if (cljs.core.truth_(no_slash_QMARK_)) {
        return cljs.core.keyword.call(null, clojure.string.join.call(null, ".", parts));
      } else {
        var ppop = cljs.core.pop.call(null, parts);
        return cljs.core.keyword.call(null, cljs.core.empty_QMARK_.call(null, ppop) ? null : clojure.string.join.call(null, ".", ppop), cljs.core.peek.call(null, parts));
      }
    }
  };
  var merge_keywords = function(ks, var_args) {
    var p__22904 = null;
    if (arguments.length > 1) {
      p__22904 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return merge_keywords__delegate.call(this, ks, p__22904);
  };
  merge_keywords.cljs$lang$maxFixedArity = 1;
  merge_keywords.cljs$lang$applyTo = function(arglist__22907) {
    var ks = cljs.core.first(arglist__22907);
    var p__22904 = cljs.core.rest(arglist__22907);
    return merge_keywords__delegate(ks, p__22904);
  };
  merge_keywords.cljs$core$IFn$_invoke$arity$variadic = merge_keywords__delegate;
  return merge_keywords;
}();
taoensso.encore.clamp = function clamp(nmin, nmax, n) {
  if (n < nmin) {
    return nmin;
  } else {
    if (n > nmax) {
      return nmax;
    } else {
      return n;
    }
  }
};
taoensso.encore.pow = function pow(n, exp) {
  return Math.pow.call(null, n, exp);
};
taoensso.encore.abs = function abs(n) {
  if (n < 0) {
    return-n;
  } else {
    return n;
  }
};
taoensso.encore.round = function() {
  var round__delegate = function(n, p__22908) {
    var vec__22911 = p__22908;
    var type = cljs.core.nth.call(null, vec__22911, 0, null);
    var nplaces = cljs.core.nth.call(null, vec__22911, 1, null);
    var n__$1 = n;
    var modifier = cljs.core.truth_(nplaces) ? Math.pow.call(null, 10, nplaces) : null;
    var n_STAR_ = cljs.core.not.call(null, modifier) ? n__$1 : n__$1 * modifier;
    var rounded = function() {
      var G__22912 = function() {
        var or__3761__auto__ = type;
        if (cljs.core.truth_(or__3761__auto__)) {
          return or__3761__auto__;
        } else {
          return new cljs.core.Keyword(null, "round", "round", 2009433328);
        }
      }() instanceof cljs.core.Keyword ? function() {
        var or__3761__auto__ = type;
        if (cljs.core.truth_(or__3761__auto__)) {
          return or__3761__auto__;
        } else {
          return new cljs.core.Keyword(null, "round", "round", 2009433328);
        }
      }().fqn : null;
      switch(G__22912) {
        case "trunc":
          return cljs.core.long$.call(null, n_STAR_);
          break;
        case "ceil":
          return Math.ceil.call(null, n_STAR_);
          break;
        case "floor":
          return Math.floor.call(null, n_STAR_);
          break;
        case "round":
          return Math.round.call(null, n_STAR_);
          break;
        default:
          throw cljs.core.ex_info.call(null, "Unknown round type", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), type], null));;
      }
    }();
    if (cljs.core.not.call(null, modifier)) {
      return cljs.core.long$.call(null, rounded);
    } else {
      return rounded / modifier;
    }
  };
  var round = function(n, var_args) {
    var p__22908 = null;
    if (arguments.length > 1) {
      p__22908 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return round__delegate.call(this, n, p__22908);
  };
  round.cljs$lang$maxFixedArity = 1;
  round.cljs$lang$applyTo = function(arglist__22914) {
    var n = cljs.core.first(arglist__22914);
    var p__22908 = cljs.core.rest(arglist__22914);
    return round__delegate(n, p__22908);
  };
  round.cljs$core$IFn$_invoke$arity$variadic = round__delegate;
  return round;
}();
taoensso.encore.round_STAR_ = taoensso.encore.round;
taoensso.encore.round1 = function round1(n) {
  return Math.round.call(null, n * 10) / 10;
};
taoensso.encore.round2 = function round2(n) {
  return Math.round.call(null, n * 100) / 100;
};
taoensso.encore.exp_backoff = function() {
  var exp_backoff__delegate = function(nattempt, p__22915) {
    var vec__22918 = p__22915;
    var map__22919 = cljs.core.nth.call(null, vec__22918, 0, null);
    var map__22919__$1 = cljs.core.seq_QMARK_.call(null, map__22919) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22919) : map__22919;
    var factor = cljs.core.get.call(null, map__22919__$1, new cljs.core.Keyword(null, "factor", "factor", -2103172748), 1E3);
    var min_SINGLEQUOTE_ = cljs.core.get.call(null, map__22919__$1, new cljs.core.Keyword(null, "min", "min", 444991522));
    var max_SINGLEQUOTE_ = cljs.core.get.call(null, map__22919__$1, new cljs.core.Keyword(null, "max", "max", 61366548));
    var binary_exp = Math.pow.call(null, 2, nattempt - 1);
    var time = (binary_exp + cljs.core.rand.call(null, binary_exp)) * .5 * factor;
    return cljs.core.long$.call(null, function() {
      var time__$1 = cljs.core.truth_(min_SINGLEQUOTE_) ? function() {
        var x__4073__auto__ = min_SINGLEQUOTE_;
        var y__4074__auto__ = time;
        return x__4073__auto__ > y__4074__auto__ ? x__4073__auto__ : y__4074__auto__;
      }() : time;
      var time__$2 = cljs.core.truth_(max_SINGLEQUOTE_) ? function() {
        var x__4080__auto__ = max_SINGLEQUOTE_;
        var y__4081__auto__ = time__$1;
        return x__4080__auto__ < y__4081__auto__ ? x__4080__auto__ : y__4081__auto__;
      }() : time__$1;
      return time__$2;
    }());
  };
  var exp_backoff = function(nattempt, var_args) {
    var p__22915 = null;
    if (arguments.length > 1) {
      p__22915 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return exp_backoff__delegate.call(this, nattempt, p__22915);
  };
  exp_backoff.cljs$lang$maxFixedArity = 1;
  exp_backoff.cljs$lang$applyTo = function(arglist__22920) {
    var nattempt = cljs.core.first(arglist__22920);
    var p__22915 = cljs.core.rest(arglist__22920);
    return exp_backoff__delegate(nattempt, p__22915);
  };
  exp_backoff.cljs$core$IFn$_invoke$arity$variadic = exp_backoff__delegate;
  return exp_backoff;
}();
taoensso.encore.now_dt = function now_dt() {
  return new Date;
};
taoensso.encore.now_udt = function now_udt() {
  return(new Date).getTime();
};
taoensso.encore.now_udt_mock_fn = function() {
  var now_udt_mock_fn__delegate = function(p__22921) {
    var vec__22923 = p__22921;
    var mock_udts = cljs.core.nth.call(null, vec__22923, 0, null);
    var mock_udts__$1 = function() {
      var or__3761__auto__ = mock_udts;
      if (cljs.core.truth_(or__3761__auto__)) {
        return or__3761__auto__;
      } else {
        return cljs.core.range.call(null);
      }
    }();
    var idx = cljs.core.atom.call(null, -1);
    return function(mock_udts__$1, idx, vec__22923, mock_udts) {
      return function() {
        return cljs.core.nth.call(null, mock_udts__$1, cljs.core.swap_BANG_.call(null, idx, cljs.core.inc));
      };
    }(mock_udts__$1, idx, vec__22923, mock_udts);
  };
  var now_udt_mock_fn = function(var_args) {
    var p__22921 = null;
    if (arguments.length > 0) {
      p__22921 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return now_udt_mock_fn__delegate.call(this, p__22921);
  };
  now_udt_mock_fn.cljs$lang$maxFixedArity = 0;
  now_udt_mock_fn.cljs$lang$applyTo = function(arglist__22924) {
    var p__22921 = cljs.core.seq(arglist__22924);
    return now_udt_mock_fn__delegate(p__22921);
  };
  now_udt_mock_fn.cljs$core$IFn$_invoke$arity$variadic = now_udt_mock_fn__delegate;
  return now_udt_mock_fn;
}();
taoensso.encore.secs__GT_ms = function secs__GT_ms(secs) {
  return cljs.core.long$.call(null, secs * 1E3);
};
taoensso.encore.ms__GT_secs = function ms__GT_secs(ms) {
  return cljs.core.quot.call(null, ms, 1E3);
};
taoensso.encore.ms = function() {
  var ms__delegate = function(p__22925) {
    var map__22928 = p__22925;
    var map__22928__$1 = cljs.core.seq_QMARK_.call(null, map__22928) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22928) : map__22928;
    var opts = map__22928__$1;
    var ms__$1 = cljs.core.get.call(null, map__22928__$1, new cljs.core.Keyword(null, "ms", "ms", -1152709733));
    var msecs = cljs.core.get.call(null, map__22928__$1, new cljs.core.Keyword(null, "msecs", "msecs", 1711980553));
    var secs = cljs.core.get.call(null, map__22928__$1, new cljs.core.Keyword(null, "secs", "secs", 1532330091));
    var mins = cljs.core.get.call(null, map__22928__$1, new cljs.core.Keyword(null, "mins", "mins", 467369676));
    var hours = cljs.core.get.call(null, map__22928__$1, new cljs.core.Keyword(null, "hours", "hours", 58380855));
    var days = cljs.core.get.call(null, map__22928__$1, new cljs.core.Keyword(null, "days", "days", -1394072564));
    var weeks = cljs.core.get.call(null, map__22928__$1, new cljs.core.Keyword(null, "weeks", "weeks", 1844596125));
    var months = cljs.core.get.call(null, map__22928__$1, new cljs.core.Keyword(null, "months", "months", -45571637));
    var years = cljs.core.get.call(null, map__22928__$1, new cljs.core.Keyword(null, "years", "years", -1298579689));
    if (cljs.core.truth_(cljs.core.mapv.call(null, function(map__22928, map__22928__$1, opts, ms__$1, msecs, secs, mins, hours, days, weeks, months, years) {
      return function(have_in__22929) {
        return taoensso.encore.hcond.call(null, false, "taoensso.encore", 666, new cljs.core.Delay(function(map__22928, map__22928__$1, opts, ms__$1, msecs, secs, mins, hours, days, weeks, months, years) {
          return function() {
            return have_in__22929;
          };
        }(map__22928, map__22928__$1, opts, ms__$1, msecs, secs, mins, hours, days, weeks, months, years), null), new cljs.core.Symbol(null, "have-in__22929", "have-in__22929", 293968772, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 9, [new cljs.core.Keyword(null, "msecs", "msecs", 1711980553), null, new cljs.core.Keyword(null, "secs", "secs", 1532330091), null, new cljs.core.Keyword(null, "months", "months", -45571637), null, new cljs.core.Keyword(null, "days", 
        "days", -1394072564), null, new cljs.core.Keyword(null, "mins", "mins", 467369676), null, new cljs.core.Keyword(null, "hours", "hours", 58380855), null, new cljs.core.Keyword(null, "years", "years", -1298579689), null, new cljs.core.Keyword(null, "ms", "ms", -1152709733), null, new cljs.core.Keyword(null, "weeks", "weeks", 1844596125), null], null), null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 9, [new cljs.core.Keyword(null, "msecs", "msecs", 1711980553), 
        null, new cljs.core.Keyword(null, "secs", "secs", 1532330091), null, new cljs.core.Keyword(null, "months", "months", -45571637), null, new cljs.core.Keyword(null, "days", "days", -1394072564), null, new cljs.core.Keyword(null, "mins", "mins", 467369676), null, new cljs.core.Keyword(null, "hours", "hours", 58380855), null, new cljs.core.Keyword(null, "years", "years", -1298579689), null, new cljs.core.Keyword(null, "ms", "ms", -1152709733), null, new cljs.core.Keyword(null, "weeks", "weeks", 
        1844596125), null], null), null));
      };
    }(map__22928, map__22928__$1, opts, ms__$1, msecs, secs, mins, hours, days, weeks, months, years), cljs.core.keys.call(null, opts)))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have", "have", 574419306, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 9, [new cljs.core.Keyword(null, "msecs", "msecs", 1711980553), null, new cljs.core.Keyword(null, "secs", "secs", 1532330091), null, new cljs.core.Keyword(null, "months", "months", -45571637), null, new cljs.core.Keyword(null, "days", "days", -1394072564), 
      null, new cljs.core.Keyword(null, "mins", "mins", 467369676), null, new cljs.core.Keyword(null, "hours", "hours", 58380855), null, new cljs.core.Keyword(null, "years", "years", -1298579689), null, new cljs.core.Keyword(null, "ms", "ms", -1152709733), null, new cljs.core.Keyword(null, "weeks", "weeks", 1844596125), null], null), null), new cljs.core.Keyword(null, "in", "in", -1531184865), cljs.core.list(new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, 
      "opts", "opts", 1795607228, null)))))].join(""));
    }
    return taoensso.encore.round.call(null, (cljs.core.truth_(years) ? years * 1E3 * 60 * 60 * 24 * 365 : 0) + (cljs.core.truth_(months) ? months * 1E3 * 60 * 60 * 24 * 29.53 : 0) + (cljs.core.truth_(weeks) ? weeks * 1E3 * 60 * 60 * 24 * 7 : 0) + (cljs.core.truth_(days) ? days * 1E3 * 60 * 60 * 24 : 0) + (cljs.core.truth_(hours) ? hours * 1E3 * 60 * 60 : 0) + (cljs.core.truth_(mins) ? mins * 1E3 * 60 : 0) + (cljs.core.truth_(secs) ? secs * 1E3 : 0) + (cljs.core.truth_(msecs) ? msecs : 0) + (cljs.core.truth_(ms__$1) ? 
    ms__$1 : 0));
  };
  var ms = function(var_args) {
    var p__22925 = null;
    if (arguments.length > 0) {
      p__22925 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return ms__delegate.call(this, p__22925);
  };
  ms.cljs$lang$maxFixedArity = 0;
  ms.cljs$lang$applyTo = function(arglist__22930) {
    var p__22925 = cljs.core.seq(arglist__22930);
    return ms__delegate(p__22925);
  };
  ms.cljs$core$IFn$_invoke$arity$variadic = ms__delegate;
  return ms;
}();
taoensso.encore.secs = cljs.core.comp.call(null, taoensso.encore.ms__GT_secs, taoensso.encore.ms);
taoensso.encore.singleton_QMARK_ = function singleton_QMARK_(coll) {
  if (cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._EQ_.call(null, cljs.core.count.call(null, coll), 1);
  } else {
    return cljs.core.not.call(null, cljs.core.next.call(null, coll));
  }
};
taoensso.encore.__GT__QMARK_singleton = function __GT__QMARK_singleton(coll) {
  if (taoensso.encore.singleton_QMARK_.call(null, coll)) {
    var vec__22936 = coll;
    var c1 = cljs.core.nth.call(null, vec__22936, 0, null);
    return c1;
  } else {
    return null;
  }
};
taoensso.encore.__GT_vec = function __GT_vec(x) {
  if (cljs.core.vector_QMARK_.call(null, x)) {
    return x;
  } else {
    if (cljs.core.sequential_QMARK_.call(null, x)) {
      return cljs.core.vec.call(null, x);
    } else {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [x], null);
    }
  }
};
taoensso.encore.vsplit_first = function vsplit_first(v) {
  var vec__22938 = v;
  var v1 = cljs.core.nth.call(null, vec__22938, 0, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v1, cljs.core.count.call(null, v) > 1 ? cljs.core.subvec.call(null, v, 1) : null], null);
};
taoensso.encore.nnil_set = function nnil_set(x) {
  return cljs.core.disj.call(null, taoensso.encore.set_STAR_.call(null, x), null);
};
taoensso.encore.conj_some = function() {
  var conj_some = null;
  var conj_some__2 = function(coll, _QMARK_x) {
    if (taoensso.encore.nnil_QMARK_.call(null, _QMARK_x)) {
      return cljs.core.conj.call(null, coll, _QMARK_x);
    } else {
      return coll;
    }
  };
  var conj_some__3 = function() {
    var G__22939__delegate = function(coll, _QMARK_x, _QMARK_xs) {
      return cljs.core.reduce.call(null, conj_some, conj_some.call(null, coll, _QMARK_x), _QMARK_xs);
    };
    var G__22939 = function(coll, _QMARK_x, var_args) {
      var _QMARK_xs = null;
      if (arguments.length > 2) {
        _QMARK_xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__22939__delegate.call(this, coll, _QMARK_x, _QMARK_xs);
    };
    G__22939.cljs$lang$maxFixedArity = 2;
    G__22939.cljs$lang$applyTo = function(arglist__22940) {
      var coll = cljs.core.first(arglist__22940);
      arglist__22940 = cljs.core.next(arglist__22940);
      var _QMARK_x = cljs.core.first(arglist__22940);
      var _QMARK_xs = cljs.core.rest(arglist__22940);
      return G__22939__delegate(coll, _QMARK_x, _QMARK_xs);
    };
    G__22939.cljs$core$IFn$_invoke$arity$variadic = G__22939__delegate;
    return G__22939;
  }();
  conj_some = function(coll, _QMARK_x, var_args) {
    var _QMARK_xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj_some__2.call(this, coll, _QMARK_x);
      default:
        return conj_some__3.cljs$core$IFn$_invoke$arity$variadic(coll, _QMARK_x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_some.cljs$lang$maxFixedArity = 2;
  conj_some.cljs$lang$applyTo = conj_some__3.cljs$lang$applyTo;
  conj_some.cljs$core$IFn$_invoke$arity$2 = conj_some__2;
  conj_some.cljs$core$IFn$_invoke$arity$variadic = conj_some__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_some;
}();
taoensso.encore.backport_run_BANG_ = function backport_run_BANG_(proc, coll) {
  return cljs.core.reduce.call(null, function(p1__22942_SHARP_, p2__22941_SHARP_) {
    return proc.call(null, p2__22941_SHARP_);
  }, null, coll);
};
taoensso.encore.translate_signed_idx = function translate_signed_idx(signed_idx, max_idx) {
  if (signed_idx >= 0) {
    var x__4080__auto__ = signed_idx;
    var y__4081__auto__ = max_idx;
    return x__4080__auto__ < y__4081__auto__ ? x__4080__auto__ : y__4081__auto__;
  } else {
    var x__4073__auto__ = 0;
    var y__4074__auto__ = signed_idx + max_idx;
    return x__4073__auto__ > y__4074__auto__ ? x__4073__auto__ : y__4074__auto__;
  }
};
taoensso.encore.sub_indexes = function() {
  var sub_indexes__delegate = function(x, start_idx, p__22943) {
    var map__22945 = p__22943;
    var map__22945__$1 = cljs.core.seq_QMARK_.call(null, map__22945) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22945) : map__22945;
    var end_idx = cljs.core.get.call(null, map__22945__$1, new cljs.core.Keyword(null, "end-idx", "end-idx", -85750788));
    var max_len = cljs.core.get.call(null, map__22945__$1, new cljs.core.Keyword(null, "max-len", "max-len", -18846016));
    if (function() {
      taoensso.encore.hcond.call(null, false, "taoensso.encore", null, new cljs.core.Delay(function(map__22945, map__22945__$1, end_idx, max_len) {
        return function() {
          return max_len;
        };
      }(map__22945, map__22945__$1, end_idx, max_len), null), new cljs.core.Symbol(null, "max-len", "max-len", 1621685511, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), cljs.core.nil_QMARK_, taoensso.encore.nneg_int_QMARK_], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), new cljs.core.Symbol(null, "nil?", "nil?", 
      1612038930, null), new cljs.core.Symbol(null, "nneg-int?", "nneg-int?", 803479360, null)], null));
      return true;
    }()) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "nneg-int?", "nneg-int?", 803479360, null)], null), new cljs.core.Symbol(null, "max-len", "max-len", 
      1621685511, null))))].join(""));
    }
    var start_idx__$1 = start_idx;
    var xlen = cljs.core.count.call(null, x);
    var start_idx_STAR_ = taoensso.encore.translate_signed_idx.call(null, start_idx__$1, xlen);
    var end_idx_STAR_ = cljs.core.truth_(max_len) ? function() {
      var n1__16331__auto__ = start_idx_STAR_ + max_len;
      var n2__16332__auto__ = xlen;
      if (n1__16331__auto__ > n2__16332__auto__) {
        return n2__16332__auto__;
      } else {
        return n1__16331__auto__;
      }
    }() : cljs.core.truth_(end_idx) ? taoensso.encore.translate_signed_idx.call(null, end_idx, xlen) + 1 : xlen;
    if (start_idx_STAR_ > end_idx_STAR_) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [start_idx_STAR_, end_idx_STAR_], null);
    }
  };
  var sub_indexes = function(x, start_idx, var_args) {
    var p__22943 = null;
    if (arguments.length > 2) {
      p__22943 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return sub_indexes__delegate.call(this, x, start_idx, p__22943);
  };
  sub_indexes.cljs$lang$maxFixedArity = 2;
  sub_indexes.cljs$lang$applyTo = function(arglist__22946) {
    var x = cljs.core.first(arglist__22946);
    arglist__22946 = cljs.core.next(arglist__22946);
    var start_idx = cljs.core.first(arglist__22946);
    var p__22943 = cljs.core.rest(arglist__22946);
    return sub_indexes__delegate(x, start_idx, p__22943);
  };
  sub_indexes.cljs$core$IFn$_invoke$arity$variadic = sub_indexes__delegate;
  return sub_indexes;
}();
taoensso.encore.subvec_STAR_ = function() {
  var subvec_STAR___delegate = function(v, start_idx, p__22947) {
    var vec__22950 = p__22947;
    var _QMARK_max_len = cljs.core.nth.call(null, vec__22950, 0, null);
    if (function() {
      taoensso.encore.hcond.call(null, false, "taoensso.encore", null, new cljs.core.Delay(function(vec__22950, _QMARK_max_len) {
        return function() {
          return v;
        };
      }(vec__22950, _QMARK_max_len), null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), cljs.core.vector_QMARK_, new cljs.core.Symbol(null, "vector?", "vector?", -61367869, null));
      return true;
    }()) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.Symbol(null, "vector?", "vector?", -61367869, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null))))].join(""));
    }
    var vec__22951 = taoensso.encore.sub_indexes.call(null, v, start_idx, new cljs.core.Keyword(null, "max-len", "max-len", -18846016), _QMARK_max_len);
    var start_idx_STAR_ = cljs.core.nth.call(null, vec__22951, 0, null);
    var end_idx_STAR_ = cljs.core.nth.call(null, vec__22951, 1, null);
    return cljs.core.subvec.call(null, v, start_idx_STAR_, end_idx_STAR_);
  };
  var subvec_STAR_ = function(v, start_idx, var_args) {
    var p__22947 = null;
    if (arguments.length > 2) {
      p__22947 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return subvec_STAR___delegate.call(this, v, start_idx, p__22947);
  };
  subvec_STAR_.cljs$lang$maxFixedArity = 2;
  subvec_STAR_.cljs$lang$applyTo = function(arglist__22952) {
    var v = cljs.core.first(arglist__22952);
    arglist__22952 = cljs.core.next(arglist__22952);
    var start_idx = cljs.core.first(arglist__22952);
    var p__22947 = cljs.core.rest(arglist__22952);
    return subvec_STAR___delegate(v, start_idx, p__22947);
  };
  subvec_STAR_.cljs$core$IFn$_invoke$arity$variadic = subvec_STAR___delegate;
  return subvec_STAR_;
}();
taoensso.encore.Swapped = function(new_val, return_val, __meta, __extmap) {
  this.new_val = new_val;
  this.return_val = return_val;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
taoensso.encore.Swapped.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4359__auto__, k__4360__auto__) {
  var self__ = this;
  var this__4359__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4359__auto____$1, k__4360__auto__, null);
};
taoensso.encore.Swapped.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4361__auto__, k22954, else__4362__auto__) {
  var self__ = this;
  var this__4361__auto____$1 = this;
  var G__22956 = k22954 instanceof cljs.core.Keyword ? k22954.fqn : null;
  switch(G__22956) {
    case "return-val":
      return self__.return_val;
      break;
    case "new-val":
      return self__.new_val;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k22954, else__4362__auto__);
  }
};
taoensso.encore.Swapped.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4373__auto__, writer__4374__auto__, opts__4375__auto__) {
  var self__ = this;
  var this__4373__auto____$1 = this;
  var pr_pair__4376__auto__ = function(this__4373__auto____$1) {
    return function(keyval__4377__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4374__auto__, cljs.core.pr_writer, "", " ", "", opts__4375__auto__, keyval__4377__auto__);
    };
  }(this__4373__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4374__auto__, pr_pair__4376__auto__, "#taoensso.encore.Swapped{", ", ", "}", opts__4375__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "new-val", "new-val", -738158599), self__.new_val], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "return-val", "return-val", -512772489), self__.return_val], null)], null), self__.__extmap));
};
taoensso.encore.Swapped.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4357__auto__) {
  var self__ = this;
  var this__4357__auto____$1 = this;
  return self__.__meta;
};
taoensso.encore.Swapped.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4353__auto__) {
  var self__ = this;
  var this__4353__auto____$1 = this;
  return new taoensso.encore.Swapped(self__.new_val, self__.return_val, self__.__meta, self__.__extmap, self__.__hash);
};
taoensso.encore.Swapped.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4363__auto__) {
  var self__ = this;
  var this__4363__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
taoensso.encore.Swapped.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4354__auto__) {
  var self__ = this;
  var this__4354__auto____$1 = this;
  var h__4177__auto__ = self__.__hash;
  if (!(h__4177__auto__ == null)) {
    return h__4177__auto__;
  } else {
    var h__4177__auto____$1 = cljs.core.hash_imap.call(null, this__4354__auto____$1);
    self__.__hash = h__4177__auto____$1;
    return h__4177__auto____$1;
  }
};
taoensso.encore.Swapped.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4355__auto__, other__4356__auto__) {
  var self__ = this;
  var this__4355__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3749__auto__ = other__4356__auto__;
    if (cljs.core.truth_(and__3749__auto__)) {
      return this__4355__auto____$1.constructor === other__4356__auto__.constructor && cljs.core.equiv_map.call(null, this__4355__auto____$1, other__4356__auto__);
    } else {
      return and__3749__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
taoensso.encore.Swapped.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4368__auto__, k__4369__auto__) {
  var self__ = this;
  var this__4368__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "return-val", "return-val", -512772489), null, new cljs.core.Keyword(null, "new-val", "new-val", -738158599), null], null), null), k__4369__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4368__auto____$1), self__.__meta), k__4369__auto__);
  } else {
    return new taoensso.encore.Swapped(self__.new_val, self__.return_val, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4369__auto__)), null);
  }
};
taoensso.encore.Swapped.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4366__auto__, k__4367__auto__, G__22953) {
  var self__ = this;
  var this__4366__auto____$1 = this;
  var pred__22957 = cljs.core.keyword_identical_QMARK_;
  var expr__22958 = k__4367__auto__;
  if (cljs.core.truth_(pred__22957.call(null, new cljs.core.Keyword(null, "new-val", "new-val", -738158599), expr__22958))) {
    return new taoensso.encore.Swapped(G__22953, self__.return_val, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__22957.call(null, new cljs.core.Keyword(null, "return-val", "return-val", -512772489), expr__22958))) {
      return new taoensso.encore.Swapped(self__.new_val, G__22953, self__.__meta, self__.__extmap, null);
    } else {
      return new taoensso.encore.Swapped(self__.new_val, self__.return_val, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4367__auto__, G__22953), null);
    }
  }
};
taoensso.encore.Swapped.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4371__auto__) {
  var self__ = this;
  var this__4371__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "new-val", "new-val", -738158599), self__.new_val], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "return-val", "return-val", -512772489), self__.return_val], null)], null), 
  self__.__extmap));
};
taoensso.encore.Swapped.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4358__auto__, G__22953) {
  var self__ = this;
  var this__4358__auto____$1 = this;
  return new taoensso.encore.Swapped(self__.new_val, self__.return_val, G__22953, self__.__extmap, self__.__hash);
};
taoensso.encore.Swapped.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4364__auto__, entry__4365__auto__) {
  var self__ = this;
  var this__4364__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4365__auto__)) {
    return cljs.core._assoc.call(null, this__4364__auto____$1, cljs.core._nth.call(null, entry__4365__auto__, 0), cljs.core._nth.call(null, entry__4365__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4364__auto____$1, entry__4365__auto__);
  }
};
taoensso.encore.Swapped.cljs$lang$type = true;
taoensso.encore.Swapped.cljs$lang$ctorPrSeq = function(this__4393__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "taoensso.encore/Swapped");
};
taoensso.encore.Swapped.cljs$lang$ctorPrWriter = function(this__4393__auto__, writer__4394__auto__) {
  return cljs.core._write.call(null, writer__4394__auto__, "taoensso.encore/Swapped");
};
taoensso.encore.__GT_Swapped = function __GT_Swapped(new_val, return_val) {
  return new taoensso.encore.Swapped(new_val, return_val);
};
taoensso.encore.map__GT_Swapped = function map__GT_Swapped(G__22955) {
  return new taoensso.encore.Swapped((new cljs.core.Keyword(null, "new-val", "new-val", -738158599)).cljs$core$IFn$_invoke$arity$1(G__22955), (new cljs.core.Keyword(null, "return-val", "return-val", -512772489)).cljs$core$IFn$_invoke$arity$1(G__22955), null, cljs.core.dissoc.call(null, G__22955, new cljs.core.Keyword(null, "new-val", "new-val", -738158599), new cljs.core.Keyword(null, "return-val", "return-val", -512772489)));
};
taoensso.encore.swapped = function swapped(new_val, return_val) {
  return new taoensso.encore.Swapped(new_val, return_val);
};
taoensso.encore.swapped_QMARK_ = function swapped_QMARK_(x) {
  return x instanceof taoensso.encore.Swapped;
};
taoensso.encore.swapped_STAR_ = function swapped_STAR_(x) {
  if (taoensso.encore.swapped_QMARK_.call(null, x)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "new-val", "new-val", -738158599)).cljs$core$IFn$_invoke$arity$1(x), (new cljs.core.Keyword(null, "return-val", "return-val", -512772489)).cljs$core$IFn$_invoke$arity$1(x)], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, x], null);
  }
};
taoensso.encore.swapped_STAR__in = function swapped_STAR__in(m, ks, f) {
  if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, f, new cljs.core.Keyword("swap", "dissoc", "swap/dissoc", -605373782)))) {
    return taoensso.encore.swapped_STAR_.call(null, taoensso.encore.dissoc_in.call(null, m, cljs.core.butlast.call(null, ks), cljs.core.last.call(null, ks)));
  } else {
    var old_val_in = cljs.core.get_in.call(null, m, ks);
    var vec__22962 = taoensso.encore.swapped_STAR_.call(null, f.call(null, old_val_in));
    var new_val_in = cljs.core.nth.call(null, vec__22962, 0, null);
    var return_val = cljs.core.nth.call(null, vec__22962, 1, null);
    var new_val = cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, new_val_in, new cljs.core.Keyword("swap", "dissoc", "swap/dissoc", -605373782))) ? taoensso.encore.dissoc_in.call(null, m, cljs.core.butlast.call(null, ks), cljs.core.last.call(null, ks)) : cljs.core.assoc_in.call(null, m, ks, new_val_in);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new_val, return_val], null);
  }
};
taoensso.encore.replace_in_STAR_ = function replace_in_STAR_(_QMARK_vf_type, m, ops) {
  return cljs.core.reduce.call(null, function(accum, _QMARK_op) {
    if (cljs.core.not.call(null, _QMARK_op)) {
      return accum;
    } else {
      var vec__22965 = cljs.core.not.call(null, _QMARK_vf_type) ? _QMARK_op : cljs.core.cons.call(null, _QMARK_vf_type, _QMARK_op);
      var vf_type = cljs.core.nth.call(null, vec__22965, 0, null);
      var ks = cljs.core.nth.call(null, vec__22965, 1, null);
      var valf = cljs.core.nth.call(null, vec__22965, 2, null);
      var G__22966 = vf_type instanceof cljs.core.Keyword ? vf_type.fqn : null;
      switch(G__22966) {
        case "swap":
          if (cljs.core.empty_QMARK_.call(null, ks)) {
            return valf.call(null, accum);
          } else {
            return cljs.core.nth.call(null, taoensso.encore.swapped_STAR__in.call(null, accum, ks, valf), 0);
          }
          break;
        case "reset":
          if (cljs.core.empty_QMARK_.call(null, ks)) {
            return valf;
          } else {
            return cljs.core.assoc_in.call(null, accum, ks, valf);
          }
          break;
        default:
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(vf_type)].join(""));;
      }
    }
  }, m, ops);
};
taoensso.encore.replace_in = function() {
  var replace_in__delegate = function(m, ops) {
    return taoensso.encore.replace_in_STAR_.call(null, null, m, ops);
  };
  var replace_in = function(m, var_args) {
    var ops = null;
    if (arguments.length > 1) {
      ops = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return replace_in__delegate.call(this, m, ops);
  };
  replace_in.cljs$lang$maxFixedArity = 1;
  replace_in.cljs$lang$applyTo = function(arglist__22968) {
    var m = cljs.core.first(arglist__22968);
    var ops = cljs.core.rest(arglist__22968);
    return replace_in__delegate(m, ops);
  };
  replace_in.cljs$core$IFn$_invoke$arity$variadic = replace_in__delegate;
  return replace_in;
}();
taoensso.encore.swap_in_BANG_ = function() {
  var swap_in_BANG_ = null;
  var swap_in_BANG___3 = function(atom_, ks, f) {
    if (cljs.core.empty_QMARK_.call(null, ks)) {
      while (true) {
        var old_val = cljs.core.deref.call(null, atom_);
        var vec__22971 = taoensso.encore.swapped_STAR_.call(null, f.call(null, old_val));
        var new_val = cljs.core.nth.call(null, vec__22971, 0, null);
        var return_val = cljs.core.nth.call(null, vec__22971, 1, null);
        if (!cljs.core.compare_and_set_BANG_.call(null, atom_, old_val, new_val)) {
          continue;
        } else {
          return return_val;
        }
        break;
      }
    } else {
      while (true) {
        var old_val = cljs.core.deref.call(null, atom_);
        var vec__22972 = taoensso.encore.swapped_STAR__in.call(null, old_val, ks, f);
        var new_val = cljs.core.nth.call(null, vec__22972, 0, null);
        var return_val = cljs.core.nth.call(null, vec__22972, 1, null);
        if (!cljs.core.compare_and_set_BANG_.call(null, atom_, old_val, new_val)) {
          continue;
        } else {
          return return_val;
        }
        break;
      }
    }
  };
  var swap_in_BANG___4 = function() {
    var G__22973__delegate = function(atom_, ks, f, more) {
      if (function() {
        taoensso.encore.hcond.call(null, false, "taoensso.encore", null, new cljs.core.Delay(function() {
          return cljs.core.count.call(null, more);
        }, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "more", "more", -418290273, null)), cljs.core.even_QMARK_, new cljs.core.Symbol(null, "even?", "even?", -1827825394, null));
        return true;
      }()) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "more", "more", -418290273, null)))))].join(""));
      }
      var pairs = cljs.core.into.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ks, f], null)], null), cljs.core.partition.call(null, 2, more));
      while (true) {
        var old_val = cljs.core.deref.call(null, atom_);
        var new_val = taoensso.encore.replace_in_STAR_.call(null, new cljs.core.Keyword(null, "swap", "swap", 228675637), old_val, pairs);
        if (!cljs.core.compare_and_set_BANG_.call(null, atom_, old_val, new_val)) {
          continue;
        } else {
          return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "old", "old", -1825222690), old_val, new cljs.core.Keyword(null, "new", "new", -2085437848), new_val], null);
        }
        break;
      }
    };
    var G__22973 = function(atom_, ks, f, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__22973__delegate.call(this, atom_, ks, f, more);
    };
    G__22973.cljs$lang$maxFixedArity = 3;
    G__22973.cljs$lang$applyTo = function(arglist__22974) {
      var atom_ = cljs.core.first(arglist__22974);
      arglist__22974 = cljs.core.next(arglist__22974);
      var ks = cljs.core.first(arglist__22974);
      arglist__22974 = cljs.core.next(arglist__22974);
      var f = cljs.core.first(arglist__22974);
      var more = cljs.core.rest(arglist__22974);
      return G__22973__delegate(atom_, ks, f, more);
    };
    G__22973.cljs$core$IFn$_invoke$arity$variadic = G__22973__delegate;
    return G__22973;
  }();
  swap_in_BANG_ = function(atom_, ks, f, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 3:
        return swap_in_BANG___3.call(this, atom_, ks, f);
      default:
        return swap_in_BANG___4.cljs$core$IFn$_invoke$arity$variadic(atom_, ks, f, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_in_BANG_.cljs$lang$maxFixedArity = 3;
  swap_in_BANG_.cljs$lang$applyTo = swap_in_BANG___4.cljs$lang$applyTo;
  swap_in_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_in_BANG___3;
  swap_in_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_in_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return swap_in_BANG_;
}();
taoensso.encore.reset_in_BANG_ = function() {
  var reset_in_BANG_ = null;
  var reset_in_BANG___3 = function(atom_, ks, new_val) {
    if (cljs.core.empty_QMARK_.call(null, ks)) {
      return cljs.core.reset_BANG_.call(null, atom_, new_val);
    } else {
      return cljs.core.swap_BANG_.call(null, atom_, function(old_val) {
        return cljs.core.assoc_in.call(null, old_val, ks, new_val);
      });
    }
  };
  var reset_in_BANG___4 = function() {
    var G__22975__delegate = function(atom_, ks, new_val, more) {
      if (function() {
        taoensso.encore.hcond.call(null, false, "taoensso.encore", null, new cljs.core.Delay(function() {
          return cljs.core.count.call(null, more);
        }, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "more", "more", -418290273, null)), cljs.core.even_QMARK_, new cljs.core.Symbol(null, "even?", "even?", -1827825394, null));
        return true;
      }()) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "more", "more", -418290273, null)))))].join(""));
      }
      var pairs = cljs.core.into.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ks, new_val], null)], null), cljs.core.partition.call(null, 2, more));
      while (true) {
        var old_val = cljs.core.deref.call(null, atom_);
        var new_val__$1 = taoensso.encore.replace_in_STAR_.call(null, new cljs.core.Keyword(null, "reset", "reset", -800929946), old_val, pairs);
        if (!cljs.core.compare_and_set_BANG_.call(null, atom_, old_val, new_val__$1)) {
          continue;
        } else {
          return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "old", "old", -1825222690), old_val, new cljs.core.Keyword(null, "new", "new", -2085437848), new_val__$1], null);
        }
        break;
      }
    };
    var G__22975 = function(atom_, ks, new_val, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__22975__delegate.call(this, atom_, ks, new_val, more);
    };
    G__22975.cljs$lang$maxFixedArity = 3;
    G__22975.cljs$lang$applyTo = function(arglist__22976) {
      var atom_ = cljs.core.first(arglist__22976);
      arglist__22976 = cljs.core.next(arglist__22976);
      var ks = cljs.core.first(arglist__22976);
      arglist__22976 = cljs.core.next(arglist__22976);
      var new_val = cljs.core.first(arglist__22976);
      var more = cljs.core.rest(arglist__22976);
      return G__22975__delegate(atom_, ks, new_val, more);
    };
    G__22975.cljs$core$IFn$_invoke$arity$variadic = G__22975__delegate;
    return G__22975;
  }();
  reset_in_BANG_ = function(atom_, ks, new_val, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 3:
        return reset_in_BANG___3.call(this, atom_, ks, new_val);
      default:
        return reset_in_BANG___4.cljs$core$IFn$_invoke$arity$variadic(atom_, ks, new_val, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reset_in_BANG_.cljs$lang$maxFixedArity = 3;
  reset_in_BANG_.cljs$lang$applyTo = reset_in_BANG___4.cljs$lang$applyTo;
  reset_in_BANG_.cljs$core$IFn$_invoke$arity$3 = reset_in_BANG___3;
  reset_in_BANG_.cljs$core$IFn$_invoke$arity$variadic = reset_in_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return reset_in_BANG_;
}();
taoensso.encore.dissoc_in = function() {
  var dissoc_in__delegate = function(m, ks, dissoc_ks) {
    if (cljs.core.empty_QMARK_.call(null, ks)) {
      return cljs.core.apply.call(null, cljs.core.dissoc, m, dissoc_ks);
    } else {
      return cljs.core.apply.call(null, cljs.core.update_in, m, ks, cljs.core.dissoc, dissoc_ks);
    }
  };
  var dissoc_in = function(m, ks, var_args) {
    var dissoc_ks = null;
    if (arguments.length > 2) {
      dissoc_ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return dissoc_in__delegate.call(this, m, ks, dissoc_ks);
  };
  dissoc_in.cljs$lang$maxFixedArity = 2;
  dissoc_in.cljs$lang$applyTo = function(arglist__22977) {
    var m = cljs.core.first(arglist__22977);
    arglist__22977 = cljs.core.next(arglist__22977);
    var ks = cljs.core.first(arglist__22977);
    var dissoc_ks = cljs.core.rest(arglist__22977);
    return dissoc_in__delegate(m, ks, dissoc_ks);
  };
  dissoc_in.cljs$core$IFn$_invoke$arity$variadic = dissoc_in__delegate;
  return dissoc_in;
}();
taoensso.encore.contains_in_QMARK_ = function contains_in_QMARK_(coll, ks) {
  return cljs.core.contains_QMARK_.call(null, cljs.core.get_in.call(null, coll, cljs.core.butlast.call(null, ks)), cljs.core.last.call(null, ks));
};
taoensso.encore.assoc_some = function() {
  var assoc_some__delegate = function(m, kvs) {
    if (function() {
      taoensso.encore.hcond.call(null, false, "taoensso.encore", null, new cljs.core.Delay(function() {
        return cljs.core.count.call(null, kvs);
      }, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "kvs", "kvs", -1695980277, null)), cljs.core.even_QMARK_, new cljs.core.Symbol(null, "even?", "even?", -1827825394, null));
      return true;
    }()) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "kvs", "kvs", -1695980277, null)))))].join(""));
    }
    return cljs.core.into.call(null, function() {
      var or__3761__auto__ = m;
      if (cljs.core.truth_(or__3761__auto__)) {
        return or__3761__auto__;
      } else {
        return cljs.core.PersistentArrayMap.EMPTY;
      }
    }(), function() {
      var iter__4512__auto__ = function iter__22986(s__22987) {
        return new cljs.core.LazySeq(null, function() {
          var s__22987__$1 = s__22987;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__22987__$1);
            if (temp__4126__auto__) {
              var s__22987__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__22987__$2)) {
                var c__4510__auto__ = cljs.core.chunk_first.call(null, s__22987__$2);
                var size__4511__auto__ = cljs.core.count.call(null, c__4510__auto__);
                var b__22989 = cljs.core.chunk_buffer.call(null, size__4511__auto__);
                if (function() {
                  var i__22988 = 0;
                  while (true) {
                    if (i__22988 < size__4511__auto__) {
                      var vec__22992 = cljs.core._nth.call(null, c__4510__auto__, i__22988);
                      var k = cljs.core.nth.call(null, vec__22992, 0, null);
                      var v = cljs.core.nth.call(null, vec__22992, 1, null);
                      if (!(v == null)) {
                        cljs.core.chunk_append.call(null, b__22989, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
                        var G__22994 = i__22988 + 1;
                        i__22988 = G__22994;
                        continue;
                      } else {
                        var G__22995 = i__22988 + 1;
                        i__22988 = G__22995;
                        continue;
                      }
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__22989), iter__22986.call(null, cljs.core.chunk_rest.call(null, s__22987__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__22989), null);
                }
              } else {
                var vec__22993 = cljs.core.first.call(null, s__22987__$2);
                var k = cljs.core.nth.call(null, vec__22993, 0, null);
                var v = cljs.core.nth.call(null, vec__22993, 1, null);
                if (!(v == null)) {
                  return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null), iter__22986.call(null, cljs.core.rest.call(null, s__22987__$2)));
                } else {
                  var G__22996 = cljs.core.rest.call(null, s__22987__$2);
                  s__22987__$1 = G__22996;
                  continue;
                }
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__4512__auto__.call(null, cljs.core.partition.call(null, 2, kvs));
    }());
  };
  var assoc_some = function(m, var_args) {
    var kvs = null;
    if (arguments.length > 1) {
      kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return assoc_some__delegate.call(this, m, kvs);
  };
  assoc_some.cljs$lang$maxFixedArity = 1;
  assoc_some.cljs$lang$applyTo = function(arglist__22997) {
    var m = cljs.core.first(arglist__22997);
    var kvs = cljs.core.rest(arglist__22997);
    return assoc_some__delegate(m, kvs);
  };
  assoc_some.cljs$core$IFn$_invoke$arity$variadic = assoc_some__delegate;
  return assoc_some;
}();
taoensso.encore.assoc_when = function() {
  var assoc_when__delegate = function(m, kvs) {
    if (function() {
      taoensso.encore.hcond.call(null, false, "taoensso.encore", null, new cljs.core.Delay(function() {
        return cljs.core.count.call(null, kvs);
      }, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "kvs", "kvs", -1695980277, null)), cljs.core.even_QMARK_, new cljs.core.Symbol(null, "even?", "even?", -1827825394, null));
      return true;
    }()) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "kvs", "kvs", -1695980277, null)))))].join(""));
    }
    return cljs.core.into.call(null, function() {
      var or__3761__auto__ = m;
      if (cljs.core.truth_(or__3761__auto__)) {
        return or__3761__auto__;
      } else {
        return cljs.core.PersistentArrayMap.EMPTY;
      }
    }(), function() {
      var iter__4512__auto__ = function iter__23006(s__23007) {
        return new cljs.core.LazySeq(null, function() {
          var s__23007__$1 = s__23007;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__23007__$1);
            if (temp__4126__auto__) {
              var s__23007__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__23007__$2)) {
                var c__4510__auto__ = cljs.core.chunk_first.call(null, s__23007__$2);
                var size__4511__auto__ = cljs.core.count.call(null, c__4510__auto__);
                var b__23009 = cljs.core.chunk_buffer.call(null, size__4511__auto__);
                if (function() {
                  var i__23008 = 0;
                  while (true) {
                    if (i__23008 < size__4511__auto__) {
                      var vec__23012 = cljs.core._nth.call(null, c__4510__auto__, i__23008);
                      var k = cljs.core.nth.call(null, vec__23012, 0, null);
                      var v = cljs.core.nth.call(null, vec__23012, 1, null);
                      if (cljs.core.truth_(v)) {
                        cljs.core.chunk_append.call(null, b__23009, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
                        var G__23014 = i__23008 + 1;
                        i__23008 = G__23014;
                        continue;
                      } else {
                        var G__23015 = i__23008 + 1;
                        i__23008 = G__23015;
                        continue;
                      }
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23009), iter__23006.call(null, cljs.core.chunk_rest.call(null, s__23007__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23009), null);
                }
              } else {
                var vec__23013 = cljs.core.first.call(null, s__23007__$2);
                var k = cljs.core.nth.call(null, vec__23013, 0, null);
                var v = cljs.core.nth.call(null, vec__23013, 1, null);
                if (cljs.core.truth_(v)) {
                  return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null), iter__23006.call(null, cljs.core.rest.call(null, s__23007__$2)));
                } else {
                  var G__23016 = cljs.core.rest.call(null, s__23007__$2);
                  s__23007__$1 = G__23016;
                  continue;
                }
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__4512__auto__.call(null, cljs.core.partition.call(null, 2, kvs));
    }());
  };
  var assoc_when = function(m, var_args) {
    var kvs = null;
    if (arguments.length > 1) {
      kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return assoc_when__delegate.call(this, m, kvs);
  };
  assoc_when.cljs$lang$maxFixedArity = 1;
  assoc_when.cljs$lang$applyTo = function(arglist__23017) {
    var m = cljs.core.first(arglist__23017);
    var kvs = cljs.core.rest(arglist__23017);
    return assoc_when__delegate(m, kvs);
  };
  assoc_when.cljs$core$IFn$_invoke$arity$variadic = assoc_when__delegate;
  return assoc_when;
}();
taoensso.encore.queue_QMARK_ = function queue_QMARK_(x) {
  return x instanceof cljs.core.PersistentQueue;
};
taoensso.encore.queue = function() {
  var queue = null;
  var queue__0 = function() {
    return cljs.core.PersistentQueue.EMPTY;
  };
  var queue__1 = function(coll) {
    return cljs.core.into.call(null, queue.call(null), coll);
  };
  queue = function(coll) {
    switch(arguments.length) {
      case 0:
        return queue__0.call(this);
      case 1:
        return queue__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  queue.cljs$core$IFn$_invoke$arity$0 = queue__0;
  queue.cljs$core$IFn$_invoke$arity$1 = queue__1;
  return queue;
}();
taoensso.encore.queue_STAR_ = function() {
  var queue_STAR___delegate = function(items) {
    return taoensso.encore.queue.call(null, items);
  };
  var queue_STAR_ = function(var_args) {
    var items = null;
    if (arguments.length > 0) {
      items = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return queue_STAR___delegate.call(this, items);
  };
  queue_STAR_.cljs$lang$maxFixedArity = 0;
  queue_STAR_.cljs$lang$applyTo = function(arglist__23018) {
    var items = cljs.core.seq(arglist__23018);
    return queue_STAR___delegate(items);
  };
  queue_STAR_.cljs$core$IFn$_invoke$arity$variadic = queue_STAR___delegate;
  return queue_STAR_;
}();
taoensso.encore.seq_kvs = cljs.core.partial.call(null, cljs.core.reduce, cljs.core.concat);
taoensso.encore.mapply = function() {
  var mapply__delegate = function(f, args) {
    return cljs.core.apply.call(null, f, cljs.core.concat.call(null, cljs.core.butlast.call(null, args), taoensso.encore.seq_kvs.call(null, cljs.core.last.call(null, args))));
  };
  var mapply = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return mapply__delegate.call(this, f, args);
  };
  mapply.cljs$lang$maxFixedArity = 1;
  mapply.cljs$lang$applyTo = function(arglist__23019) {
    var f = cljs.core.first(arglist__23019);
    var args = cljs.core.rest(arglist__23019);
    return mapply__delegate(f, args);
  };
  mapply.cljs$core$IFn$_invoke$arity$variadic = mapply__delegate;
  return mapply;
}();
taoensso.encore.clj1098 = function clj1098(x) {
  var or__3761__auto__ = x;
  if (cljs.core.truth_(or__3761__auto__)) {
    return or__3761__auto__;
  } else {
    return cljs.core.PersistentArrayMap.EMPTY;
  }
};
taoensso.encore.map_kvs = function map_kvs(kf, vf, m) {
  if (cljs.core.not.call(null, m)) {
    return cljs.core.PersistentArrayMap.EMPTY;
  } else {
    var kf__$1 = cljs.core.not.call(null, taoensso.encore.kw_identical_QMARK_.call(null, kf, new cljs.core.Keyword(null, "keywordize", "keywordize", 1381210758))) ? kf : function(k, _) {
      return cljs.core.keyword.call(null, k);
    };
    var vf__$1 = cljs.core.not.call(null, taoensso.encore.kw_identical_QMARK_.call(null, vf, new cljs.core.Keyword(null, "keywordize", "keywordize", 1381210758))) ? vf : function(kf__$1) {
      return function(_, v) {
        return cljs.core.keyword.call(null, v);
      };
    }(kf__$1);
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce_kv.call(null, function(kf__$1, vf__$1) {
      return function(m__$1, k, v) {
        return cljs.core.assoc_BANG_.call(null, m__$1, cljs.core.truth_(kf__$1) ? kf__$1.call(null, k, v) : k, cljs.core.truth_(vf__$1) ? vf__$1.call(null, k, v) : v);
      };
    }(kf__$1, vf__$1), cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), m));
  }
};
taoensso.encore.map_keys = function map_keys(f, m) {
  return taoensso.encore.map_kvs.call(null, function(k, _) {
    return f.call(null, k);
  }, null, m);
};
taoensso.encore.map_vals = function map_vals(f, m) {
  return taoensso.encore.map_kvs.call(null, null, function(_, v) {
    return f.call(null, v);
  }, m);
};
taoensso.encore.filter_kvs = function filter_kvs(predk, predv, m) {
  if (cljs.core.not.call(null, m)) {
    return cljs.core.PersistentArrayMap.EMPTY;
  } else {
    return cljs.core.reduce_kv.call(null, function(m__$1, k, v) {
      if (cljs.core.truth_(function() {
        var and__3749__auto__ = predk.call(null, k);
        if (cljs.core.truth_(and__3749__auto__)) {
          return predv.call(null, v);
        } else {
          return and__3749__auto__;
        }
      }())) {
        return m__$1;
      } else {
        return cljs.core.dissoc.call(null, m__$1, k);
      }
    }, m, m);
  }
};
taoensso.encore.filter_keys = function filter_keys(pred, m) {
  return taoensso.encore.filter_kvs.call(null, pred, cljs.core.constantly.call(null, true), m);
};
taoensso.encore.filter_vals = function filter_vals(pred, m) {
  return taoensso.encore.filter_kvs.call(null, cljs.core.constantly.call(null, true), pred, m);
};
taoensso.encore.remove_vals = function remove_vals(pred, m) {
  if (cljs.core.not.call(null, m)) {
    return cljs.core.PersistentArrayMap.EMPTY;
  } else {
    return cljs.core.reduce_kv.call(null, function(m__$1, k, v) {
      if (cljs.core.truth_(pred.call(null, v))) {
        return cljs.core.dissoc.call(null, m__$1, k);
      } else {
        return m__$1;
      }
    }, m, m);
  }
};
taoensso.encore.keywordize_map = function keywordize_map(m) {
  if (cljs.core.not.call(null, m)) {
    return cljs.core.PersistentArrayMap.EMPTY;
  } else {
    return cljs.core.reduce_kv.call(null, function(m__$1, k, v) {
      return cljs.core.assoc.call(null, m__$1, cljs.core.keyword.call(null, k), v);
    }, cljs.core.PersistentArrayMap.EMPTY, m);
  }
};
taoensso.encore.as_map = function() {
  var as_map__delegate = function(kvs, p__23020) {
    var vec__23026 = p__23020;
    var kf = cljs.core.nth.call(null, vec__23026, 0, null);
    var vf = cljs.core.nth.call(null, vec__23026, 1, null);
    if (function() {
      taoensso.encore.hcond.call(null, false, "taoensso.encore", null, new cljs.core.Delay(function(vec__23026, kf, vf) {
        return function() {
          return kvs;
        };
      }(vec__23026, kf, vf), null), new cljs.core.Symbol(null, "kvs", "kvs", -1695980277, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), cljs.core.nil_QMARK_, cljs.core.sequential_QMARK_], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, 
      "sequential?", "sequential?", 1102351463, null)], null));
      return true;
    }()) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "sequential?", "sequential?", 1102351463, null)], null), new cljs.core.Symbol(null, "kvs", "kvs", 
      -1695980277, null))))].join(""));
    }
    if (function() {
      new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [taoensso.encore.hcond.call(null, false, "taoensso.encore", null, new cljs.core.Delay(function(vec__23026, kf, vf) {
        return function() {
          return kf;
        };
      }(vec__23026, kf, vf), null), new cljs.core.Symbol(null, "kf", "kf", -1046348180, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), cljs.core.nil_QMARK_, cljs.core.ifn_QMARK_], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, 
      "ifn?", "ifn?", -2106461064, null)], null)), taoensso.encore.hcond.call(null, false, "taoensso.encore", null, new cljs.core.Delay(function(vec__23026, kf, vf) {
        return function() {
          return vf;
        };
      }(vec__23026, kf, vf), null), new cljs.core.Symbol(null, "vf", "vf", 1319108258, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), cljs.core.nil_QMARK_, cljs.core.ifn_QMARK_], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, 
      "ifn?", "ifn?", -2106461064, null)], null))], null);
      return true;
    }()) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null)], null), new cljs.core.Symbol(null, "kf", "kf", -1046348180, null), 
      new cljs.core.Symbol(null, "vf", "vf", 1319108258, null))))].join(""));
    }
    var _PERCENT_ = cljs.core.empty_QMARK_.call(null, kvs) ? cljs.core.PersistentArrayMap.EMPTY : function() {
      var kf__$1 = cljs.core.not.call(null, taoensso.encore.kw_identical_QMARK_.call(null, kf, new cljs.core.Keyword(null, "keywordize", "keywordize", 1381210758))) ? kf : function(vec__23026, kf, vf) {
        return function(k, _) {
          return cljs.core.keyword.call(null, k);
        };
      }(vec__23026, kf, vf);
      var m = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
      var G__23028 = kvs;
      var vec__23029 = G__23028;
      var k = cljs.core.nth.call(null, vec__23029, 0, null);
      var v = cljs.core.nth.call(null, vec__23029, 1, null);
      var s = vec__23029;
      var m__$1 = m;
      var G__23028__$1 = G__23028;
      while (true) {
        var m__$2 = m__$1;
        var vec__23030 = G__23028__$1;
        var k__$1 = cljs.core.nth.call(null, vec__23030, 0, null);
        var v__$1 = cljs.core.nth.call(null, vec__23030, 1, null);
        var s__$1 = vec__23030;
        var k__$2 = cljs.core.not.call(null, kf__$1) ? k__$1 : kf__$1.call(null, k__$1, v__$1);
        var v__$2 = cljs.core.not.call(null, vf) ? v__$1 : vf.call(null, k__$2, v__$1);
        var new_m = cljs.core.assoc_BANG_.call(null, m__$2, k__$2, v__$2);
        var temp__4124__auto__ = cljs.core.nnext.call(null, s__$1);
        if (temp__4124__auto__) {
          var n = temp__4124__auto__;
          var G__23031 = new_m;
          var G__23032 = n;
          m__$1 = G__23031;
          G__23028__$1 = G__23032;
          continue;
        } else {
          return cljs.core.persistent_BANG_.call(null, new_m);
        }
        break;
      }
    }();
    if (function() {
      taoensso.encore.hcond.call(null, false, "taoensso.encore", null, new cljs.core.Delay(function(_PERCENT_, vec__23026, kf, vf) {
        return function() {
          return _PERCENT_;
        };
      }(_PERCENT_, vec__23026, kf, vf), null), new cljs.core.Symbol(null, "%", "%", -950237169, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), cljs.core.nil_QMARK_, cljs.core.map_QMARK_], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, 
      "map?", "map?", -1780568534, null)], null));
      return true;
    }()) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "map?", "map?", -1780568534, null)], null), new cljs.core.Symbol(null, "%", "%", -950237169, null))))].join(""));
    }
    return _PERCENT_;
  };
  var as_map = function(kvs, var_args) {
    var p__23020 = null;
    if (arguments.length > 1) {
      p__23020 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return as_map__delegate.call(this, kvs, p__23020);
  };
  as_map.cljs$lang$maxFixedArity = 1;
  as_map.cljs$lang$applyTo = function(arglist__23033) {
    var kvs = cljs.core.first(arglist__23033);
    var p__23020 = cljs.core.rest(arglist__23033);
    return as_map__delegate(kvs, p__23020);
  };
  as_map.cljs$core$IFn$_invoke$arity$variadic = as_map__delegate;
  return as_map;
}();
taoensso.encore.fzipmap = function fzipmap(ks, vs) {
  var m = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks__$1 = cljs.core.seq.call(null, ks);
  var vs__$1 = cljs.core.seq.call(null, vs);
  while (true) {
    if (!(ks__$1 && vs__$1)) {
      return cljs.core.persistent_BANG_.call(null, m);
    } else {
      var G__23034 = cljs.core.assoc_BANG_.call(null, m, cljs.core.first.call(null, ks__$1), cljs.core.first.call(null, vs__$1));
      var G__23035 = cljs.core.next.call(null, ks__$1);
      var G__23036 = cljs.core.next.call(null, vs__$1);
      m = G__23034;
      ks__$1 = G__23035;
      vs__$1 = G__23036;
      continue;
    }
    break;
  }
};
taoensso.encore.into_all = function() {
  var into_all = null;
  var into_all__2 = function(to, from) {
    return cljs.core.into.call(null, to, from);
  };
  var into_all__3 = function() {
    var G__23037__delegate = function(to, from, more) {
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.into.call(null, to, from), more);
    };
    var G__23037 = function(to, from, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23037__delegate.call(this, to, from, more);
    };
    G__23037.cljs$lang$maxFixedArity = 2;
    G__23037.cljs$lang$applyTo = function(arglist__23038) {
      var to = cljs.core.first(arglist__23038);
      arglist__23038 = cljs.core.next(arglist__23038);
      var from = cljs.core.first(arglist__23038);
      var more = cljs.core.rest(arglist__23038);
      return G__23037__delegate(to, from, more);
    };
    G__23037.cljs$core$IFn$_invoke$arity$variadic = G__23037__delegate;
    return G__23037;
  }();
  into_all = function(to, from, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return into_all__2.call(this, to, from);
      default:
        return into_all__3.cljs$core$IFn$_invoke$arity$variadic(to, from, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_all.cljs$lang$maxFixedArity = 2;
  into_all.cljs$lang$applyTo = into_all__3.cljs$lang$applyTo;
  into_all.cljs$core$IFn$_invoke$arity$2 = into_all__2;
  into_all.cljs$core$IFn$_invoke$arity$variadic = into_all__3.cljs$core$IFn$_invoke$arity$variadic;
  return into_all;
}();
taoensso.encore.interleave_all = function() {
  var interleave_all = null;
  var interleave_all__0 = function() {
    return cljs.core.List.EMPTY;
  };
  var interleave_all__1 = function(c1) {
    return new cljs.core.LazySeq(null, function() {
      return c1;
    }, null, null);
  };
  var interleave_all__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave_all.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))));
      } else {
        if (s1) {
          return s1;
        } else {
          if (s2) {
            return s2;
          } else {
            return null;
          }
        }
      }
    }, null, null);
  };
  var interleave_all__3 = function() {
    var G__23039__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.filter.call(null, cljs.core.identity, cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1)));
        return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave_all, cljs.core.map.call(null, cljs.core.rest, ss)));
      }, null, null);
    };
    var G__23039 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23039__delegate.call(this, c1, c2, colls);
    };
    G__23039.cljs$lang$maxFixedArity = 2;
    G__23039.cljs$lang$applyTo = function(arglist__23040) {
      var c1 = cljs.core.first(arglist__23040);
      arglist__23040 = cljs.core.next(arglist__23040);
      var c2 = cljs.core.first(arglist__23040);
      var colls = cljs.core.rest(arglist__23040);
      return G__23039__delegate(c1, c2, colls);
    };
    G__23039.cljs$core$IFn$_invoke$arity$variadic = G__23039__delegate;
    return G__23039;
  }();
  interleave_all = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 0:
        return interleave_all__0.call(this);
      case 1:
        return interleave_all__1.call(this, c1);
      case 2:
        return interleave_all__2.call(this, c1, c2);
      default:
        return interleave_all__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave_all.cljs$lang$maxFixedArity = 2;
  interleave_all.cljs$lang$applyTo = interleave_all__3.cljs$lang$applyTo;
  interleave_all.cljs$core$IFn$_invoke$arity$0 = interleave_all__0;
  interleave_all.cljs$core$IFn$_invoke$arity$1 = interleave_all__1;
  interleave_all.cljs$core$IFn$_invoke$arity$2 = interleave_all__2;
  interleave_all.cljs$core$IFn$_invoke$arity$variadic = interleave_all__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave_all;
}();
taoensso.encore.takev = function takev(n, coll) {
  if (cljs.core.vector_QMARK_.call(null, coll)) {
    return taoensso.encore.subvec_STAR_.call(null, coll, 0, n);
  } else {
    return cljs.core.vec.call(null, cljs.core.take.call(null, n, coll));
  }
};
taoensso.encore.distinctv = function() {
  var distinctv = null;
  var distinctv__1 = function(coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.nth.call(null, cljs.core.reduce.call(null, function(p__23045, in$) {
      var vec__23046 = p__23045;
      var v = cljs.core.nth.call(null, vec__23046, 0, null);
      var seen = cljs.core.nth.call(null, vec__23046, 1, null);
      if (!cljs.core.contains_QMARK_.call(null, seen, in$)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj_BANG_.call(null, v, in$), cljs.core.conj.call(null, seen, in$)], null);
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, seen], null);
      }
    }, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), cljs.core.PersistentHashSet.EMPTY], null), coll), 0));
  };
  var distinctv__2 = function(keyfn, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.nth.call(null, cljs.core.reduce.call(null, function(p__23047, in$) {
      var vec__23048 = p__23047;
      var v = cljs.core.nth.call(null, vec__23048, 0, null);
      var seen = cljs.core.nth.call(null, vec__23048, 1, null);
      var in_STAR_ = keyfn.call(null, in$);
      if (!cljs.core.contains_QMARK_.call(null, seen, in_STAR_)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj_BANG_.call(null, v, in$), cljs.core.conj.call(null, seen, in_STAR_)], null);
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, seen], null);
      }
    }, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), cljs.core.PersistentHashSet.EMPTY], null), coll), 0));
  };
  distinctv = function(keyfn, coll) {
    switch(arguments.length) {
      case 1:
        return distinctv__1.call(this, keyfn);
      case 2:
        return distinctv__2.call(this, keyfn, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinctv.cljs$core$IFn$_invoke$arity$1 = distinctv__1;
  distinctv.cljs$core$IFn$_invoke$arity$2 = distinctv__2;
  return distinctv;
}();
taoensso.encore.distinct_by = function distinct_by(keyfn, coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__23055, seen__$1) {
        while (true) {
          var vec__23056 = p__23055;
          var v = cljs.core.nth.call(null, vec__23056, 0, null);
          var xs__$1 = vec__23056;
          var temp__4126__auto__ = cljs.core.seq.call(null, xs__$1);
          if (temp__4126__auto__) {
            var s = temp__4126__auto__;
            var v_STAR_ = keyfn.call(null, v);
            if (cljs.core.contains_QMARK_.call(null, seen__$1, v_STAR_)) {
              var G__23057 = cljs.core.rest.call(null, s);
              var G__23058 = seen__$1;
              p__23055 = G__23057;
              seen__$1 = G__23058;
              continue;
            } else {
              return cljs.core.cons.call(null, v, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, v_STAR_)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY);
};
taoensso.encore.rcompare = function rcompare(x, y) {
  return cljs.core.compare.call(null, y, x);
};
taoensso.encore.nested_merge_with = function() {
  var nested_merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.key.call(null, e);
        var rv = cljs.core.val.call(null, e);
        if (!cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, rv);
        } else {
          var lv = cljs.core.get.call(null, m, k);
          if (cljs.core.map_QMARK_.call(null, lv) && cljs.core.map_QMARK_.call(null, rv)) {
            return cljs.core.assoc.call(null, m, k, nested_merge_with.call(null, f, lv, rv));
          } else {
            return cljs.core.assoc.call(null, m, k, f.call(null, lv, rv));
          }
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3761__auto__ = m1;
            if (cljs.core.truth_(or__3761__auto__)) {
              return or__3761__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq.call(null, m2));
        };
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps);
    } else {
      return null;
    }
  };
  var nested_merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return nested_merge_with__delegate.call(this, f, maps);
  };
  nested_merge_with.cljs$lang$maxFixedArity = 1;
  nested_merge_with.cljs$lang$applyTo = function(arglist__23060) {
    var f = cljs.core.first(arglist__23060);
    var maps = cljs.core.rest(arglist__23060);
    return nested_merge_with__delegate(f, maps);
  };
  nested_merge_with.cljs$core$IFn$_invoke$arity$variadic = nested_merge_with__delegate;
  return nested_merge_with;
}();
taoensso.encore.nested_merge = cljs.core.partial.call(null, taoensso.encore.nested_merge_with, function(x, y) {
  if (cljs.core.map_QMARK_.call(null, x) && y == null) {
    return x;
  } else {
    return y;
  }
});
taoensso.encore.greatest = function() {
  var greatest__delegate = function(coll, p__23063) {
    var vec__23065 = p__23063;
    var _QMARK_comparator = cljs.core.nth.call(null, vec__23065, 0, null);
    var comparator = function() {
      var or__3761__auto__ = _QMARK_comparator;
      if (cljs.core.truth_(or__3761__auto__)) {
        return or__3761__auto__;
      } else {
        return taoensso.encore.rcompare;
      }
    }();
    return cljs.core.reduce.call(null, function(comparator, vec__23065, _QMARK_comparator) {
      return function(p1__23061_SHARP_, p2__23062_SHARP_) {
        if (comparator.call(null, p1__23061_SHARP_, p2__23062_SHARP_) > 0) {
          return p2__23062_SHARP_;
        } else {
          return p1__23061_SHARP_;
        }
      };
    }(comparator, vec__23065, _QMARK_comparator), coll);
  };
  var greatest = function(coll, var_args) {
    var p__23063 = null;
    if (arguments.length > 1) {
      p__23063 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return greatest__delegate.call(this, coll, p__23063);
  };
  greatest.cljs$lang$maxFixedArity = 1;
  greatest.cljs$lang$applyTo = function(arglist__23066) {
    var coll = cljs.core.first(arglist__23066);
    var p__23063 = cljs.core.rest(arglist__23066);
    return greatest__delegate(coll, p__23063);
  };
  greatest.cljs$core$IFn$_invoke$arity$variadic = greatest__delegate;
  return greatest;
}();
taoensso.encore.least = function() {
  var least__delegate = function(coll, p__23069) {
    var vec__23071 = p__23069;
    var _QMARK_comparator = cljs.core.nth.call(null, vec__23071, 0, null);
    var comparator = function() {
      var or__3761__auto__ = _QMARK_comparator;
      if (cljs.core.truth_(or__3761__auto__)) {
        return or__3761__auto__;
      } else {
        return taoensso.encore.rcompare;
      }
    }();
    return cljs.core.reduce.call(null, function(comparator, vec__23071, _QMARK_comparator) {
      return function(p1__23067_SHARP_, p2__23068_SHARP_) {
        if (comparator.call(null, p1__23067_SHARP_, p2__23068_SHARP_) < 0) {
          return p2__23068_SHARP_;
        } else {
          return p1__23067_SHARP_;
        }
      };
    }(comparator, vec__23071, _QMARK_comparator), coll);
  };
  var least = function(coll, var_args) {
    var p__23069 = null;
    if (arguments.length > 1) {
      p__23069 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return least__delegate.call(this, coll, p__23069);
  };
  least.cljs$lang$maxFixedArity = 1;
  least.cljs$lang$applyTo = function(arglist__23072) {
    var coll = cljs.core.first(arglist__23072);
    var p__23069 = cljs.core.rest(arglist__23072);
    return least__delegate(coll, p__23069);
  };
  least.cljs$core$IFn$_invoke$arity$variadic = least__delegate;
  return least;
}();
taoensso.encore.repeatedly_into = function repeatedly_into(coll, n, f) {
  if (coll instanceof clojure.lang.IEditableCollection) {
    var v = cljs.core.transient$.call(null, coll);
    var idx = 0;
    while (true) {
      if (idx >= n) {
        return cljs.core.persistent_BANG_.call(null, v);
      } else {
        var G__23073 = cljs.core.conj_BANG_.call(null, v, f.call(null));
        var G__23074 = idx + 1;
        v = G__23073;
        idx = G__23074;
        continue;
      }
      break;
    }
  } else {
    var v = coll;
    var idx = 0;
    while (true) {
      if (idx >= n) {
        return v;
      } else {
        var G__23075 = cljs.core.conj.call(null, v, f.call(null));
        var G__23076 = idx + 1;
        v = G__23075;
        idx = G__23076;
        continue;
      }
      break;
    }
  }
};
taoensso.encore.undefined__GT_nil = function undefined__GT_nil(x) {
  if (void 0 === x) {
    return null;
  } else {
    return x;
  }
};
taoensso.encore.nil__GT_str = function nil__GT_str(x) {
  if (void 0 === x || x == null) {
    return "nil";
  } else {
    return x;
  }
};
taoensso.encore.spaced_str_with_nils = function spaced_str_with_nils(xs) {
  return clojure.string.join.call(null, " ", cljs.core.mapv.call(null, taoensso.encore.nil__GT_str, xs));
};
taoensso.encore.spaced_str = function spaced_str(xs) {
  return clojure.string.join.call(null, " ", cljs.core.mapv.call(null, taoensso.encore.undefined__GT_nil, xs));
};
taoensso.encore.format_STAR_ = function format_STAR_(fmt, args) {
  var fmt__$1 = function() {
    var or__3761__auto__ = fmt;
    if (cljs.core.truth_(or__3761__auto__)) {
      return or__3761__auto__;
    } else {
      return "";
    }
  }();
  var args__$1 = cljs.core.mapv.call(null, taoensso.encore.nil__GT_str, args);
  return cljs.core.apply.call(null, goog.string.format, fmt__$1, args__$1);
};
taoensso.encore.format = function() {
  var format__delegate = function(fmt, args) {
    return taoensso.encore.format_STAR_.call(null, fmt, args);
  };
  var format = function(fmt, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return format__delegate.call(this, fmt, args);
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__23077) {
    var fmt = cljs.core.first(arglist__23077);
    var args = cljs.core.rest(arglist__23077);
    return format__delegate(fmt, args);
  };
  format.cljs$core$IFn$_invoke$arity$variadic = format__delegate;
  return format;
}();
taoensso.encore.str_replace = function str_replace(s, match, replacement) {
  var replacement__$1 = !cljs.core.fn_QMARK_.call(null, replacement) ? replacement : function() {
    var G__23078__delegate = function(args) {
      return replacement.call(null, cljs.core.vec.call(null, args));
    };
    var G__23078 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__23078__delegate.call(this, args);
    };
    G__23078.cljs$lang$maxFixedArity = 0;
    G__23078.cljs$lang$applyTo = function(arglist__23079) {
      var args = cljs.core.seq(arglist__23079);
      return G__23078__delegate(args);
    };
    G__23078.cljs$core$IFn$_invoke$arity$variadic = G__23078__delegate;
    return G__23078;
  }();
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement__$1);
  } else {
    if (match instanceof RegExp) {
      var flags = [cljs.core.str("g"), cljs.core.str(cljs.core.truth_(match.ignoreCase) ? "i" : null), cljs.core.str(cljs.core.truth_(match.multiline) ? "m" : null)].join("");
      return s.replace(new RegExp(match.source, flags), replacement__$1);
    } else {
      throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
taoensso.encore.substr = function() {
  var substr__delegate = function(s, start_idx, p__23080) {
    var vec__23083 = p__23080;
    var _QMARK_max_len = cljs.core.nth.call(null, vec__23083, 0, null);
    if (function() {
      taoensso.encore.hcond.call(null, false, "taoensso.encore", null, new cljs.core.Delay(function(vec__23083, _QMARK_max_len) {
        return function() {
          return s;
        };
      }(vec__23083, _QMARK_max_len), null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.string_QMARK_, new cljs.core.Symbol(null, "string?", "string?", -1129175764, null));
      return true;
    }()) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.Symbol(null, "string?", "string?", -1129175764, null), new cljs.core.Symbol(null, "s", "s", -948495851, null))))].join(""));
    }
    var vec__23084 = taoensso.encore.sub_indexes.call(null, s, start_idx, new cljs.core.Keyword(null, "max-len", "max-len", -18846016), _QMARK_max_len);
    var start_idx_STAR_ = cljs.core.nth.call(null, vec__23084, 0, null);
    var end_idx_STAR_ = cljs.core.nth.call(null, vec__23084, 1, null);
    return s.substring(start_idx_STAR_, end_idx_STAR_);
  };
  var substr = function(s, start_idx, var_args) {
    var p__23080 = null;
    if (arguments.length > 2) {
      p__23080 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return substr__delegate.call(this, s, start_idx, p__23080);
  };
  substr.cljs$lang$maxFixedArity = 2;
  substr.cljs$lang$applyTo = function(arglist__23085) {
    var s = cljs.core.first(arglist__23085);
    arglist__23085 = cljs.core.next(arglist__23085);
    var start_idx = cljs.core.first(arglist__23085);
    var p__23080 = cljs.core.rest(arglist__23085);
    return substr__delegate(s, start_idx, p__23080);
  };
  substr.cljs$core$IFn$_invoke$arity$variadic = substr__delegate;
  return substr;
}();
taoensso.encore.str_contains_QMARK_ = function str_contains_QMARK_(s, substr) {
  return cljs.core.not_EQ_.call(null, -1, s.indexOf(substr));
};
taoensso.encore.str_starts_with_QMARK_ = function str_starts_with_QMARK_(s, substr) {
  return s.indexOf(substr) === 0;
};
taoensso.encore.str_ends_with_QMARK_ = function str_ends_with_QMARK_(s, substr) {
  var s_len = s.length;
  var substr_len = substr.length;
  if (s_len >= substr_len) {
    return cljs.core.not_EQ_.call(null, -1, s.indexOf(substr, s_len - substr_len));
  } else {
    return null;
  }
};
taoensso.encore.str__QMARK_index = function() {
  var str__QMARK_index__delegate = function(s, substr, p__23086) {
    var vec__23088 = p__23086;
    var start_idx = cljs.core.nth.call(null, vec__23088, 0, null);
    var last_QMARK_ = cljs.core.nth.call(null, vec__23088, 1, null);
    var start_idx__$1 = function() {
      var or__3761__auto__ = start_idx;
      if (cljs.core.truth_(or__3761__auto__)) {
        return or__3761__auto__;
      } else {
        return 0;
      }
    }() | 0;
    var result = (cljs.core.truth_(last_QMARK_) ? s.lastIndexOf(substr, start_idx__$1) : s.indexOf(substr, start_idx__$1)) | 0;
    if (cljs.core.not_EQ_.call(null, result, -1)) {
      return result;
    } else {
      return null;
    }
  };
  var str__QMARK_index = function(s, substr, var_args) {
    var p__23086 = null;
    if (arguments.length > 2) {
      p__23086 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return str__QMARK_index__delegate.call(this, s, substr, p__23086);
  };
  str__QMARK_index.cljs$lang$maxFixedArity = 2;
  str__QMARK_index.cljs$lang$applyTo = function(arglist__23089) {
    var s = cljs.core.first(arglist__23089);
    arglist__23089 = cljs.core.next(arglist__23089);
    var substr = cljs.core.first(arglist__23089);
    var p__23086 = cljs.core.rest(arglist__23089);
    return str__QMARK_index__delegate(s, substr, p__23086);
  };
  str__QMARK_index.cljs$core$IFn$_invoke$arity$variadic = str__QMARK_index__delegate;
  return str__QMARK_index;
}();
taoensso.encore.join_once = function() {
  var join_once__delegate = function(separator, coll) {
    return cljs.core.reduce.call(null, function(s1, s2) {
      var s1__$1 = [cljs.core.str(s1)].join("");
      var s2__$1 = [cljs.core.str(s2)].join("");
      if (cljs.core.truth_(taoensso.encore.str_ends_with_QMARK_.call(null, s1__$1, separator))) {
        if (taoensso.encore.str_starts_with_QMARK_.call(null, s2__$1, separator)) {
          return[cljs.core.str(s1__$1), cljs.core.str(s2__$1.substring(1))].join("");
        } else {
          return[cljs.core.str(s1__$1), cljs.core.str(s2__$1)].join("");
        }
      } else {
        if (taoensso.encore.str_starts_with_QMARK_.call(null, s2__$1, separator)) {
          return[cljs.core.str(s1__$1), cljs.core.str(s2__$1)].join("");
        } else {
          if (cljs.core._EQ_.call(null, s1__$1, "") || cljs.core._EQ_.call(null, s2__$1, "")) {
            return[cljs.core.str(s1__$1), cljs.core.str(s2__$1)].join("");
          } else {
            return[cljs.core.str(s1__$1), cljs.core.str(separator), cljs.core.str(s2__$1)].join("");
          }
        }
      }
    }, null, coll);
  };
  var join_once = function(separator, var_args) {
    var coll = null;
    if (arguments.length > 1) {
      coll = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return join_once__delegate.call(this, separator, coll);
  };
  join_once.cljs$lang$maxFixedArity = 1;
  join_once.cljs$lang$applyTo = function(arglist__23090) {
    var separator = cljs.core.first(arglist__23090);
    var coll = cljs.core.rest(arglist__23090);
    return join_once__delegate(separator, coll);
  };
  join_once.cljs$core$IFn$_invoke$arity$variadic = join_once__delegate;
  return join_once;
}();
taoensso.encore.path = function() {
  var path__delegate = function(parts) {
    return cljs.core.apply.call(null, taoensso.encore.join_once, "/", parts);
  };
  var path = function(var_args) {
    var parts = null;
    if (arguments.length > 0) {
      parts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return path__delegate.call(this, parts);
  };
  path.cljs$lang$maxFixedArity = 0;
  path.cljs$lang$applyTo = function(arglist__23091) {
    var parts = cljs.core.seq(arglist__23091);
    return path__delegate(parts);
  };
  path.cljs$core$IFn$_invoke$arity$variadic = path__delegate;
  return path;
}();
taoensso.encore.norm_word_breaks = function norm_word_breaks(s) {
  return clojure.string.replace.call(null, [cljs.core.str(s)].join(""), /\s+/, " ");
};
taoensso.encore.count_words = function count_words(s) {
  if (cljs.core.truth_(clojure.string.blank_QMARK_.call(null, s))) {
    return 0;
  } else {
    return cljs.core.count.call(null, clojure.string.split.call(null, s, /\s+/));
  }
};
taoensso.encore.uuid_str = function() {
  var uuid_str = null;
  var uuid_str__0 = function() {
    var hex = function() {
      return cljs.core.rand_int.call(null, 15).toString(16);
    };
    var rhex = (8 | 3 & cljs.core.rand_int.call(null, 14)).toString(16);
    return[cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str("-"), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str("-"), cljs.core.str("4"), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), 
    cljs.core.str(hex.call(null)), cljs.core.str("-"), cljs.core.str(rhex), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str("-"), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), 
    cljs.core.str(hex.call(null))].join("");
  };
  var uuid_str__1 = function(max_length) {
    return taoensso.encore.substr.call(null, uuid_str.call(null), 0, max_length);
  };
  uuid_str = function(max_length) {
    switch(arguments.length) {
      case 0:
        return uuid_str__0.call(this);
      case 1:
        return uuid_str__1.call(this, max_length);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  uuid_str.cljs$core$IFn$_invoke$arity$0 = uuid_str__0;
  uuid_str.cljs$core$IFn$_invoke$arity$1 = uuid_str__1;
  return uuid_str;
}();
taoensso.encore.gc_rate = 1 / 16E3;
taoensso.encore.gc_now_QMARK_ = function gc_now_QMARK_() {
  return cljs.core.rand.call(null) <= taoensso.encore.gc_rate;
};
taoensso.encore.swap_val_BANG_ = function swap_val_BANG_(atom_, k, f) {
  while (true) {
    var old_m = cljs.core.deref.call(null, atom_);
    var new_v = f.call(null, cljs.core.get.call(null, old_m, k));
    var new_m = cljs.core.assoc.call(null, old_m, k, new_v);
    if (cljs.core.compare_and_set_BANG_.call(null, atom_, old_m, new_m)) {
      return new_v;
    } else {
      continue;
    }
    break;
  }
};
taoensso.encore.memoize_ = function memoize_(f) {
  var cache_ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(cache_) {
    return function() {
      var G__23092__delegate = function(args) {
        return cljs.core.deref.call(null, function() {
          var or__3761__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, cache_), args);
          if (cljs.core.truth_(or__3761__auto__)) {
            return or__3761__auto__;
          } else {
            return taoensso.encore.swap_val_BANG_.call(null, cache_, args, function(or__3761__auto__, cache_) {
              return function(_QMARK_dv) {
                if (cljs.core.truth_(_QMARK_dv)) {
                  return _QMARK_dv;
                } else {
                  return new cljs.core.Delay(function(or__3761__auto__, cache_) {
                    return function() {
                      return cljs.core.apply.call(null, f, args);
                    };
                  }(or__3761__auto__, cache_), null);
                }
              };
            }(or__3761__auto__, cache_));
          }
        }());
      };
      var G__23092 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__23092__delegate.call(this, args);
      };
      G__23092.cljs$lang$maxFixedArity = 0;
      G__23092.cljs$lang$applyTo = function(arglist__23093) {
        var args = cljs.core.seq(arglist__23093);
        return G__23092__delegate(args);
      };
      G__23092.cljs$core$IFn$_invoke$arity$variadic = G__23092__delegate;
      return G__23092;
    }();
  }(cache_);
};
taoensso.encore.memoize1 = function memoize1(f) {
  var cache_ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(cache_) {
    return function() {
      var G__23094__delegate = function(args) {
        return cljs.core.deref.call(null, function() {
          var or__3761__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, cache_), args);
          if (cljs.core.truth_(or__3761__auto__)) {
            return or__3761__auto__;
          } else {
            return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, cache_, function(or__3761__auto__, cache_) {
              return function(cache) {
                if (cljs.core.truth_(cljs.core.get.call(null, cache, args))) {
                  return cache;
                } else {
                  return new cljs.core.PersistentArrayMap.fromArray([args, new cljs.core.Delay(function(or__3761__auto__, cache_) {
                    return function() {
                      return cljs.core.apply.call(null, f, args);
                    };
                  }(or__3761__auto__, cache_), null)], true, false);
                }
              };
            }(or__3761__auto__, cache_)), args);
          }
        }());
      };
      var G__23094 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__23094__delegate.call(this, args);
      };
      G__23094.cljs$lang$maxFixedArity = 0;
      G__23094.cljs$lang$applyTo = function(arglist__23095) {
        var args = cljs.core.seq(arglist__23095);
        return G__23094__delegate(args);
      };
      G__23094.cljs$core$IFn$_invoke$arity$variadic = G__23094__delegate;
      return G__23094;
    }();
  }(cache_);
};
taoensso.encore.memoized = function() {
  var memoized__delegate = function(cache, f, args) {
    if (cljs.core.not.call(null, cache)) {
      return cljs.core.apply.call(null, f, args);
    } else {
      return cljs.core.deref.call(null, taoensso.encore.swap_val_BANG_.call(null, cache, args, function(p1__23096_SHARP_) {
        if (cljs.core.truth_(p1__23096_SHARP_)) {
          return p1__23096_SHARP_;
        } else {
          return new cljs.core.Delay(function() {
            return cljs.core.apply.call(null, f, args);
          }, null);
        }
      }));
    }
  };
  var memoized = function(cache, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return memoized__delegate.call(this, cache, f, args);
  };
  memoized.cljs$lang$maxFixedArity = 2;
  memoized.cljs$lang$applyTo = function(arglist__23097) {
    var cache = cljs.core.first(arglist__23097);
    arglist__23097 = cljs.core.next(arglist__23097);
    var f = cljs.core.first(arglist__23097);
    var args = cljs.core.rest(arglist__23097);
    return memoized__delegate(cache, f, args);
  };
  memoized.cljs$core$IFn$_invoke$arity$variadic = memoized__delegate;
  return memoized;
}();
taoensso.encore.memoize_STAR_ = function() {
  var memoize_STAR_ = null;
  var memoize_STAR___1 = function(f) {
    var cache_ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    return function(cache_) {
      return function() {
        var G__23140__delegate = function(p__23120) {
          var vec__23121 = p__23120;
          var arg1 = cljs.core.nth.call(null, vec__23121, 0, null);
          var argn = cljs.core.nthnext.call(null, vec__23121, 1);
          var args = vec__23121;
          if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, arg1, new cljs.core.Keyword("mem", "del", "mem/del", 574870667)))) {
            if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, cljs.core.first.call(null, argn), new cljs.core.Keyword("mem", "all", "mem/all", 892075139)))) {
              cljs.core.reset_BANG_.call(null, cache_, cljs.core.PersistentArrayMap.EMPTY);
            } else {
              cljs.core.swap_BANG_.call(null, cache_, cljs.core.dissoc, argn);
            }
            return null;
          } else {
            var fresh_QMARK_ = taoensso.encore.kw_identical_QMARK_.call(null, arg1, new cljs.core.Keyword("mem", "fresh", "mem/fresh", -1179989133));
            var args__$1 = cljs.core.truth_(fresh_QMARK_) ? argn : args;
            return cljs.core.deref.call(null, function() {
              var or__3761__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, cache_), args__$1);
              if (cljs.core.truth_(or__3761__auto__)) {
                return or__3761__auto__;
              } else {
                return taoensso.encore.swap_val_BANG_.call(null, cache_, args__$1, function(or__3761__auto__, fresh_QMARK_, args__$1, vec__23121, arg1, argn, args, cache_) {
                  return function(_QMARK_dv) {
                    if (cljs.core.truth_(function() {
                      var and__3749__auto__ = _QMARK_dv;
                      if (cljs.core.truth_(and__3749__auto__)) {
                        return cljs.core.not.call(null, fresh_QMARK_);
                      } else {
                        return and__3749__auto__;
                      }
                    }())) {
                      return _QMARK_dv;
                    } else {
                      return new cljs.core.Delay(function(or__3761__auto__, fresh_QMARK_, args__$1, vec__23121, arg1, argn, args, cache_) {
                        return function() {
                          return cljs.core.apply.call(null, f, args__$1);
                        };
                      }(or__3761__auto__, fresh_QMARK_, args__$1, vec__23121, arg1, argn, args, cache_), null);
                    }
                  };
                }(or__3761__auto__, fresh_QMARK_, args__$1, vec__23121, arg1, argn, args, cache_));
              }
            }());
          }
        };
        var G__23140 = function(var_args) {
          var p__23120 = null;
          if (arguments.length > 0) {
            p__23120 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__23140__delegate.call(this, p__23120);
        };
        G__23140.cljs$lang$maxFixedArity = 0;
        G__23140.cljs$lang$applyTo = function(arglist__23141) {
          var p__23120 = cljs.core.seq(arglist__23141);
          return G__23140__delegate(p__23120);
        };
        G__23140.cljs$core$IFn$_invoke$arity$variadic = G__23140__delegate;
        return G__23140;
      }();
    }(cache_);
  };
  var memoize_STAR___2 = function(ttl_ms, f) {
    taoensso.encore.hcond.call(null, false, "taoensso.encore", null, new cljs.core.Delay(function() {
      return ttl_ms;
    }, null), new cljs.core.Symbol(null, "ttl-ms", "ttl-ms", -1349172894, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), cljs.core.nil_QMARK_, taoensso.encore.pos_int_QMARK_], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, 
    "pos-int?", "pos-int?", -1205815015, null)], null));
    var cache = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    return function(cache) {
      return function() {
        var G__23142__delegate = function(p__23122) {
          var vec__23123 = p__23122;
          var arg1 = cljs.core.nth.call(null, vec__23123, 0, null);
          var argn = cljs.core.nthnext.call(null, vec__23123, 1);
          var args = vec__23123;
          if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, arg1, new cljs.core.Keyword("mem", "del", "mem/del", 574870667)))) {
            if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, cljs.core.first.call(null, argn), new cljs.core.Keyword("mem", "all", "mem/all", 892075139)))) {
              cljs.core.reset_BANG_.call(null, cache, cljs.core.PersistentArrayMap.EMPTY);
            } else {
              cljs.core.swap_BANG_.call(null, cache, cljs.core.dissoc, argn);
            }
            return null;
          } else {
            if (taoensso.encore.gc_now_QMARK_.call(null)) {
              var instant_23143 = taoensso.encore.now_udt.call(null);
              cljs.core.swap_BANG_.call(null, cache, function(instant_23143, vec__23123, arg1, argn, args, cache) {
                return function(m) {
                  return cljs.core.reduce_kv.call(null, function(instant_23143, vec__23123, arg1, argn, args, cache) {
                    return function(m_STAR_, k, p__23124) {
                      var vec__23125 = p__23124;
                      var dv = cljs.core.nth.call(null, vec__23125, 0, null);
                      var udt = cljs.core.nth.call(null, vec__23125, 1, null);
                      var cv = vec__23125;
                      if (instant_23143 - udt > ttl_ms) {
                        return m_STAR_;
                      } else {
                        return cljs.core.assoc.call(null, m_STAR_, k, cv);
                      }
                    };
                  }(instant_23143, vec__23123, arg1, argn, args, cache), cljs.core.PersistentArrayMap.EMPTY, taoensso.encore.clj1098.call(null, m));
                };
              }(instant_23143, vec__23123, arg1, argn, args, cache));
            } else {
            }
            var fresh_QMARK_ = taoensso.encore.kw_identical_QMARK_.call(null, arg1, new cljs.core.Keyword("mem", "fresh", "mem/fresh", -1179989133));
            var args__$1 = cljs.core.truth_(fresh_QMARK_) ? argn : args;
            var instant = taoensso.encore.now_udt.call(null);
            var vec__23126 = taoensso.encore.swap_val_BANG_.call(null, cache, args__$1, function(fresh_QMARK_, args__$1, instant, vec__23123, arg1, argn, args, cache) {
              return function(_QMARK_cv) {
                if (cljs.core.truth_(function() {
                  var and__3749__auto__ = _QMARK_cv;
                  if (cljs.core.truth_(and__3749__auto__)) {
                    var and__3749__auto____$1 = cljs.core.not.call(null, fresh_QMARK_);
                    if (and__3749__auto____$1) {
                      var vec__23128 = _QMARK_cv;
                      var _dv = cljs.core.nth.call(null, vec__23128, 0, null);
                      var udt = cljs.core.nth.call(null, vec__23128, 1, null);
                      return instant - udt < ttl_ms;
                    } else {
                      return and__3749__auto____$1;
                    }
                  } else {
                    return and__3749__auto__;
                  }
                }())) {
                  return _QMARK_cv;
                } else {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Delay(function(fresh_QMARK_, args__$1, instant, vec__23123, arg1, argn, args, cache) {
                    return function() {
                      return cljs.core.apply.call(null, f, args__$1);
                    };
                  }(fresh_QMARK_, args__$1, instant, vec__23123, arg1, argn, args, cache), null), instant], null);
                }
              };
            }(fresh_QMARK_, args__$1, instant, vec__23123, arg1, argn, args, cache));
            var dv = cljs.core.nth.call(null, vec__23126, 0, null);
            return cljs.core.deref.call(null, dv);
          }
        };
        var G__23142 = function(var_args) {
          var p__23122 = null;
          if (arguments.length > 0) {
            p__23122 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__23142__delegate.call(this, p__23122);
        };
        G__23142.cljs$lang$maxFixedArity = 0;
        G__23142.cljs$lang$applyTo = function(arglist__23144) {
          var p__23122 = cljs.core.seq(arglist__23144);
          return G__23142__delegate(p__23122);
        };
        G__23142.cljs$core$IFn$_invoke$arity$variadic = G__23142__delegate;
        return G__23142;
      }();
    }(cache);
  };
  var memoize_STAR___3 = function(cache_size, ttl_ms, f) {
    taoensso.encore.hcond.call(null, false, "taoensso.encore", null, new cljs.core.Delay(function() {
      return ttl_ms;
    }, null), new cljs.core.Symbol(null, "ttl-ms", "ttl-ms", -1349172894, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), cljs.core.nil_QMARK_, taoensso.encore.pos_int_QMARK_], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, 
    "pos-int?", "pos-int?", -1205815015, null)], null));
    taoensso.encore.hcond.call(null, false, "taoensso.encore", null, new cljs.core.Delay(function() {
      return cache_size;
    }, null), new cljs.core.Symbol(null, "cache-size", "cache-size", 1049002054, null), taoensso.encore.pos_int_QMARK_, new cljs.core.Symbol(null, "pos-int?", "pos-int?", -1205815015, null));
    var state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tick", "tick", -835886976), 0], null));
    return function(state) {
      return function() {
        var G__23145__delegate = function(p__23129) {
          var vec__23130 = p__23129;
          var arg1 = cljs.core.nth.call(null, vec__23130, 0, null);
          var argn = cljs.core.nthnext.call(null, vec__23130, 1);
          var args = vec__23130;
          if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, arg1, new cljs.core.Keyword("mem", "del", "mem/del", 574870667)))) {
            if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, cljs.core.first.call(null, argn), new cljs.core.Keyword("mem", "all", "mem/all", 892075139)))) {
              cljs.core.reset_BANG_.call(null, state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tick", "tick", -835886976), 0], null));
            } else {
              cljs.core.swap_BANG_.call(null, state, cljs.core.dissoc, argn);
            }
            return null;
          } else {
            if (taoensso.encore.gc_now_QMARK_.call(null)) {
              var instant_23146 = taoensso.encore.now_udt.call(null);
              cljs.core.swap_BANG_.call(null, state, function(instant_23146, vec__23130, arg1, argn, args, state) {
                return function(m) {
                  var m_STAR_ = cljs.core.dissoc.call(null, m, new cljs.core.Keyword(null, "tick", "tick", -835886976));
                  var m_STAR___$1 = cljs.core.not.call(null, ttl_ms) ? m_STAR_ : cljs.core.reduce_kv.call(null, function(m_STAR_, instant_23146, vec__23130, arg1, argn, args, state) {
                    return function(m_STAR___$1, k, p__23131) {
                      var vec__23132 = p__23131;
                      var dv = cljs.core.nth.call(null, vec__23132, 0, null);
                      var udt = cljs.core.nth.call(null, vec__23132, 1, null);
                      var _ = cljs.core.nth.call(null, vec__23132, 2, null);
                      var ___$1 = cljs.core.nth.call(null, vec__23132, 3, null);
                      var cv = vec__23132;
                      if (instant_23146 - udt > ttl_ms) {
                        return m_STAR___$1;
                      } else {
                        return cljs.core.assoc.call(null, m_STAR___$1, k, cv);
                      }
                    };
                  }(m_STAR_, instant_23146, vec__23130, arg1, argn, args, state), cljs.core.PersistentArrayMap.EMPTY, taoensso.encore.clj1098.call(null, m_STAR_));
                  var n_to_prune = cljs.core.count.call(null, m_STAR___$1) - cache_size;
                  var m_STAR___$2 = !(n_to_prune > 0) ? m_STAR___$1 : cljs.core.apply.call(null, cljs.core.dissoc, m_STAR___$1, cljs.core.mapv.call(null, function(m_STAR_, m_STAR___$1, n_to_prune, instant_23146, vec__23130, arg1, argn, args, state) {
                    return function(p1__23099_SHARP_) {
                      return cljs.core.nth.call(null, p1__23099_SHARP_, 1);
                    };
                  }(m_STAR_, m_STAR___$1, n_to_prune, instant_23146, vec__23130, arg1, argn, args, state), cljs.core.take.call(null, n_to_prune, cljs.core.sort_by.call(null, function(m_STAR_, m_STAR___$1, n_to_prune, instant_23146, vec__23130, arg1, argn, args, state) {
                    return function(p1__23098_SHARP_) {
                      return cljs.core.nth.call(null, p1__23098_SHARP_, 0);
                    };
                  }(m_STAR_, m_STAR___$1, n_to_prune, instant_23146, vec__23130, arg1, argn, args, state), cljs.core.mapv.call(null, function(m_STAR_, m_STAR___$1, n_to_prune, instant_23146, vec__23130, arg1, argn, args, state) {
                    return function(k) {
                      var vec__23133 = m_STAR___$1.call(null, k);
                      var _ = cljs.core.nth.call(null, vec__23133, 0, null);
                      var ___$1 = cljs.core.nth.call(null, vec__23133, 1, null);
                      var tick_lru = cljs.core.nth.call(null, vec__23133, 2, null);
                      var tick_lfu = cljs.core.nth.call(null, vec__23133, 3, null);
                      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tick_lru + tick_lfu, k], null);
                    };
                  }(m_STAR_, m_STAR___$1, n_to_prune, instant_23146, vec__23130, arg1, argn, args, state), cljs.core.keys.call(null, m_STAR___$1))))));
                  return cljs.core.assoc.call(null, m_STAR___$2, new cljs.core.Keyword(null, "tick", "tick", -835886976), (new cljs.core.Keyword(null, "tick", "tick", -835886976)).cljs$core$IFn$_invoke$arity$1(m));
                };
              }(instant_23146, vec__23130, arg1, argn, args, state));
            } else {
            }
            var fresh_QMARK_ = taoensso.encore.kw_identical_QMARK_.call(null, arg1, new cljs.core.Keyword("mem", "fresh", "mem/fresh", -1179989133));
            var args__$1 = cljs.core.truth_(fresh_QMARK_) ? argn : args;
            var _QMARK_instant = cljs.core.truth_(ttl_ms) ? taoensso.encore.now_udt.call(null) : null;
            var tick_SINGLEQUOTE_ = (new cljs.core.Keyword(null, "tick", "tick", -835886976)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, state));
            var vec__23134 = taoensso.encore.swap_val_BANG_.call(null, state, args__$1, function(fresh_QMARK_, args__$1, _QMARK_instant, tick_SINGLEQUOTE_, vec__23130, arg1, argn, args, state) {
              return function(_QMARK_cv) {
                if (cljs.core.truth_(function() {
                  var and__3749__auto__ = _QMARK_cv;
                  if (cljs.core.truth_(and__3749__auto__)) {
                    var and__3749__auto____$1 = cljs.core.not.call(null, fresh_QMARK_);
                    if (and__3749__auto____$1) {
                      var or__3761__auto__ = _QMARK_instant == null;
                      if (or__3761__auto__) {
                        return or__3761__auto__;
                      } else {
                        var vec__23138 = _QMARK_cv;
                        var _dv = cljs.core.nth.call(null, vec__23138, 0, null);
                        var udt = cljs.core.nth.call(null, vec__23138, 1, null);
                        return _QMARK_instant - udt < ttl_ms;
                      }
                    } else {
                      return and__3749__auto____$1;
                    }
                  } else {
                    return and__3749__auto__;
                  }
                }())) {
                  return _QMARK_cv;
                } else {
                  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Delay(function(fresh_QMARK_, args__$1, _QMARK_instant, tick_SINGLEQUOTE_, vec__23130, arg1, argn, args, state) {
                    return function() {
                      return cljs.core.apply.call(null, f, args__$1);
                    };
                  }(fresh_QMARK_, args__$1, _QMARK_instant, tick_SINGLEQUOTE_, vec__23130, arg1, argn, args, state), null), _QMARK_instant, tick_SINGLEQUOTE_, 1], null);
                }
              };
            }(fresh_QMARK_, args__$1, _QMARK_instant, tick_SINGLEQUOTE_, vec__23130, arg1, argn, args, state));
            var dv = cljs.core.nth.call(null, vec__23134, 0, null);
            cljs.core.swap_BANG_.call(null, state, function(fresh_QMARK_, args__$1, _QMARK_instant, tick_SINGLEQUOTE_, vec__23134, dv, vec__23130, arg1, argn, args, state) {
              return function(m) {
                var temp__4126__auto__ = cljs.core.get.call(null, m, args__$1);
                if (cljs.core.truth_(temp__4126__auto__)) {
                  var vec__23139 = temp__4126__auto__;
                  var dv__$1 = cljs.core.nth.call(null, vec__23139, 0, null);
                  var _QMARK_udt = cljs.core.nth.call(null, vec__23139, 1, null);
                  var tick_lru = cljs.core.nth.call(null, vec__23139, 2, null);
                  var tick_lfu = cljs.core.nth.call(null, vec__23139, 3, null);
                  var cv = vec__23139;
                  return cljs.core.merge.call(null, m, new cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "tick", "tick", -835886976), tick_SINGLEQUOTE_ + 1, args__$1, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [dv__$1, _QMARK_udt, tick_SINGLEQUOTE_, tick_lfu + 1], null)], true, false));
                } else {
                  return null;
                }
              };
            }(fresh_QMARK_, args__$1, _QMARK_instant, tick_SINGLEQUOTE_, vec__23134, dv, vec__23130, arg1, argn, args, state));
            return cljs.core.deref.call(null, dv);
          }
        };
        var G__23145 = function(var_args) {
          var p__23129 = null;
          if (arguments.length > 0) {
            p__23129 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__23145__delegate.call(this, p__23129);
        };
        G__23145.cljs$lang$maxFixedArity = 0;
        G__23145.cljs$lang$applyTo = function(arglist__23147) {
          var p__23129 = cljs.core.seq(arglist__23147);
          return G__23145__delegate(p__23129);
        };
        G__23145.cljs$core$IFn$_invoke$arity$variadic = G__23145__delegate;
        return G__23145;
      }();
    }(state);
  };
  memoize_STAR_ = function(cache_size, ttl_ms, f) {
    switch(arguments.length) {
      case 1:
        return memoize_STAR___1.call(this, cache_size);
      case 2:
        return memoize_STAR___2.call(this, cache_size, ttl_ms);
      case 3:
        return memoize_STAR___3.call(this, cache_size, ttl_ms, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  memoize_STAR_.cljs$core$IFn$_invoke$arity$1 = memoize_STAR___1;
  memoize_STAR_.cljs$core$IFn$_invoke$arity$2 = memoize_STAR___2;
  memoize_STAR_.cljs$core$IFn$_invoke$arity$3 = memoize_STAR___3;
  return memoize_STAR_;
}();
taoensso.encore.rate_limiter_STAR_ = function rate_limiter_STAR_(specs) {
  if (cljs.core.empty_QMARK_.call(null, specs)) {
    return cljs.core.constantly.call(null, null);
  } else {
    var vspecs = cljs.core.vec.call(null, specs);
    var vstates_ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var max_win_ms = cljs.core.reduce.call(null, cljs.core.max, 0, cljs.core.mapv.call(null, function(vspecs, vstates_) {
      return function(p__23183) {
        var vec__23184 = p__23183;
        var _ = cljs.core.nth.call(null, vec__23184, 0, null);
        var win_ms = cljs.core.nth.call(null, vec__23184, 1, null);
        var ___$1 = cljs.core.nth.call(null, vec__23184, 2, null);
        var spec = vec__23184;
        return win_ms;
      };
    }(vspecs, vstates_), vspecs));
    var nspecs = cljs.core.count.call(null, vspecs);
    var nid_specs = cljs.core.count.call(null, cljs.core.filterv.call(null, function(vspecs, vstates_, max_win_ms, nspecs) {
      return function(p__23185) {
        var vec__23186 = p__23185;
        var _ = cljs.core.nth.call(null, vec__23186, 0, null);
        var ___$1 = cljs.core.nth.call(null, vec__23186, 1, null);
        var id = cljs.core.nth.call(null, vec__23186, 2, null);
        return id;
      };
    }(vspecs, vstates_, max_win_ms, nspecs), vspecs));
    var _ = nid_specs === 0 || cljs.core._EQ_.call(null, nid_specs, nspecs) ? null : function() {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), new cljs.core.Symbol(null, "nid-specs", "nid-specs", -1204406222, null)), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "nid-specs", "nid-specs", -1204406222, null), new cljs.core.Symbol(null, 
      "nspecs", "nspecs", -1621596945, null)))))].join(""));
    }();
    var return_ids_QMARK_ = !(nid_specs === 0);
    return function(vspecs, vstates_, max_win_ms, nspecs, nid_specs, _, return_ids_QMARK_) {
      return function() {
        var check_rate_limits__delegate = function(p__23187) {
          var vec__23203 = p__23187;
          var req_id = cljs.core.nth.call(null, vec__23203, 0, null);
          var instant = taoensso.encore.now_udt.call(null);
          if (cljs.core.truth_(function() {
            var and__3749__auto__ = req_id;
            if (cljs.core.truth_(and__3749__auto__)) {
              return taoensso.encore.gc_now_QMARK_.call(null);
            } else {
              return and__3749__auto__;
            }
          }())) {
            taoensso.encore.swap_in_BANG_.call(null, vstates_, cljs.core.PersistentVector.EMPTY, function(instant, vec__23203, req_id, vspecs, vstates_, max_win_ms, nspecs, nid_specs, _, return_ids_QMARK_) {
              return function gc(m) {
                var m__$1 = taoensso.encore.clj1098.call(null, m);
                return cljs.core.reduce_kv.call(null, function(m__$1, instant, vec__23203, req_id, vspecs, vstates_, max_win_ms, nspecs, nid_specs, _, return_ids_QMARK_) {
                  return function(m_STAR_, req_id__$1, vstate) {
                    var max_udt_win_start = cljs.core.reduce.call(null, function(m__$1, instant, vec__23203, req_id, vspecs, vstates_, max_win_ms, nspecs, nid_specs, _, return_ids_QMARK_) {
                      return function(acc, p__23206) {
                        var vec__23207 = p__23206;
                        var ___$1 = cljs.core.nth.call(null, vec__23207, 0, null);
                        var udt = cljs.core.nth.call(null, vec__23207, 1, null);
                        var ___$2 = cljs.core.nth.call(null, vec__23207, 2, null);
                        var x__4073__auto__ = acc;
                        var y__4074__auto__ = udt;
                        return x__4073__auto__ > y__4074__auto__ ? x__4073__auto__ : y__4074__auto__;
                      };
                    }(m__$1, instant, vec__23203, req_id, vspecs, vstates_, max_win_ms, nspecs, nid_specs, _, return_ids_QMARK_), 0, vstate);
                    var min_win_ms_elapsed = instant - max_udt_win_start;
                    if (min_win_ms_elapsed > max_win_ms) {
                      return cljs.core.dissoc.call(null, m_STAR_, req_id__$1);
                    } else {
                      return m_STAR_;
                    }
                  };
                }(m__$1, instant, vec__23203, req_id, vspecs, vstates_, max_win_ms, nspecs, nid_specs, _, return_ids_QMARK_), m__$1, m__$1);
              };
            }(instant, vec__23203, req_id, vspecs, vstates_, max_win_ms, nspecs, nid_specs, _, return_ids_QMARK_));
          } else {
          }
          return taoensso.encore.swap_in_BANG_.call(null, vstates_, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [req_id], null), function(instant, vec__23203, req_id, vspecs, vstates_, max_win_ms, nspecs, nid_specs, _, return_ids_QMARK_) {
            return function(_QMARK_vstate) {
              if (cljs.core.not.call(null, _QMARK_vstate)) {
                return taoensso.encore.swapped.call(null, cljs.core.vec.call(null, cljs.core.repeat.call(null, nspecs, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, instant], null))), null);
              } else {
                var vec__23208 = function() {
                  var in_vspecs = vspecs;
                  var in_vstate = _QMARK_vstate;
                  var out_vstate = cljs.core.PersistentVector.EMPTY;
                  var _QMARK_worst_limit_offence = null;
                  while (true) {
                    var vec__23209 = in_vspecs;
                    var vec__23210 = cljs.core.nth.call(null, vec__23209, 0, null);
                    var ncalls_limit = cljs.core.nth.call(null, vec__23210, 0, null);
                    var win_ms = cljs.core.nth.call(null, vec__23210, 1, null);
                    var _QMARK_spec_id = cljs.core.nth.call(null, vec__23210, 2, null);
                    var next_in_vspecs = cljs.core.nthnext.call(null, vec__23209, 1);
                    var vec__23211 = in_vstate;
                    var vec__23212 = cljs.core.nth.call(null, vec__23211, 0, null);
                    var ncalls = cljs.core.nth.call(null, vec__23212, 0, null);
                    var udt_win_start = cljs.core.nth.call(null, vec__23212, 1, null);
                    var next_in_vstate = cljs.core.nthnext.call(null, vec__23211, 1);
                    var win_ms_elapsed = instant - udt_win_start;
                    var reset_due_QMARK_ = win_ms_elapsed >= win_ms;
                    var rate_limited_QMARK_ = !reset_due_QMARK_ && ncalls >= ncalls_limit;
                    var new_out_vstate = cljs.core.conj.call(null, out_vstate, reset_due_QMARK_ ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, instant], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ncalls, udt_win_start], null));
                    var new__QMARK_worst_limit_offence = !rate_limited_QMARK_ ? _QMARK_worst_limit_offence : function() {
                      var ms_wait = win_ms - win_ms_elapsed;
                      if (function() {
                        var or__3761__auto__ = _QMARK_worst_limit_offence == null;
                        if (or__3761__auto__) {
                          return or__3761__auto__;
                        } else {
                          var vec__23214 = _QMARK_worst_limit_offence;
                          var max_ms_wait = cljs.core.nth.call(null, vec__23214, 0, null);
                          var ___$1 = cljs.core.nth.call(null, vec__23214, 1, null);
                          return ms_wait > max_ms_wait;
                        }
                      }()) {
                        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ms_wait, _QMARK_spec_id], null);
                      } else {
                        return _QMARK_worst_limit_offence;
                      }
                    }();
                    if (cljs.core.not.call(null, next_in_vspecs)) {
                      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new_out_vstate, new__QMARK_worst_limit_offence], null);
                    } else {
                      var G__23218 = next_in_vspecs;
                      var G__23219 = next_in_vstate;
                      var G__23220 = new_out_vstate;
                      var G__23221 = new__QMARK_worst_limit_offence;
                      in_vspecs = G__23218;
                      in_vstate = G__23219;
                      out_vstate = G__23220;
                      _QMARK_worst_limit_offence = G__23221;
                      continue;
                    }
                    break;
                  }
                }();
                var vstate_with_resets = cljs.core.nth.call(null, vec__23208, 0, null);
                var _QMARK_worst_limit_offence = cljs.core.nth.call(null, vec__23208, 1, null);
                var all_limits_pass_QMARK_ = _QMARK_worst_limit_offence == null;
                var new_vstate = !all_limits_pass_QMARK_ ? vstate_with_resets : cljs.core.mapv.call(null, function(vec__23208, vstate_with_resets, _QMARK_worst_limit_offence, all_limits_pass_QMARK_, instant, vec__23203, req_id, vspecs, vstates_, max_win_ms, nspecs, nid_specs, _, return_ids_QMARK_) {
                  return function(p__23215) {
                    var vec__23216 = p__23215;
                    var ncalls = cljs.core.nth.call(null, vec__23216, 0, null);
                    var udt_win_start = cljs.core.nth.call(null, vec__23216, 1, null);
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ncalls + 1, udt_win_start], null);
                  };
                }(vec__23208, vstate_with_resets, _QMARK_worst_limit_offence, all_limits_pass_QMARK_, instant, vec__23203, req_id, vspecs, vstates_, max_win_ms, nspecs, nid_specs, _, return_ids_QMARK_), vstate_with_resets);
                var result = function() {
                  var temp__4126__auto__ = _QMARK_worst_limit_offence;
                  if (cljs.core.truth_(temp__4126__auto__)) {
                    var wlo = temp__4126__auto__;
                    if (return_ids_QMARK_) {
                      return wlo;
                    } else {
                      var vec__23217 = wlo;
                      var ms_wait = cljs.core.nth.call(null, vec__23217, 0, null);
                      var ___$1 = cljs.core.nth.call(null, vec__23217, 1, null);
                      return ms_wait;
                    }
                  } else {
                    return null;
                  }
                }();
                return taoensso.encore.swapped.call(null, new_vstate, result);
              }
            };
          }(instant, vec__23203, req_id, vspecs, vstates_, max_win_ms, nspecs, nid_specs, _, return_ids_QMARK_));
        };
        var check_rate_limits = function(var_args) {
          var p__23187 = null;
          if (arguments.length > 0) {
            p__23187 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return check_rate_limits__delegate.call(this, p__23187);
        };
        check_rate_limits.cljs$lang$maxFixedArity = 0;
        check_rate_limits.cljs$lang$applyTo = function(arglist__23222) {
          var p__23187 = cljs.core.seq(arglist__23222);
          return check_rate_limits__delegate(p__23187);
        };
        check_rate_limits.cljs$core$IFn$_invoke$arity$variadic = check_rate_limits__delegate;
        return check_rate_limits;
      }();
    }(vspecs, vstates_, max_win_ms, nspecs, nid_specs, _, return_ids_QMARK_);
  }
};
taoensso.encore.rate_limit = function rate_limit(specs, f) {
  var rl = taoensso.encore.rate_limiter_STAR_.call(null, specs);
  return function(rl) {
    return function() {
      var G__23223__delegate = function(args) {
        var temp__4124__auto__ = rl.call(null);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var backoff = temp__4124__auto__;
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, backoff], null);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), null], null);
        }
      };
      var G__23223 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__23223__delegate.call(this, args);
      };
      G__23223.cljs$lang$maxFixedArity = 0;
      G__23223.cljs$lang$applyTo = function(arglist__23224) {
        var args = cljs.core.seq(arglist__23224);
        return G__23223__delegate(args);
      };
      G__23223.cljs$core$IFn$_invoke$arity$variadic = G__23223__delegate;
      return G__23223;
    }();
  }(rl);
};
taoensso.encore.nano_time = function() {
  var temp__4124__auto__ = function() {
    var and__3749__auto__ = typeof window !== "undefined";
    if (and__3749__auto__) {
      return window["performance"];
    } else {
      return and__3749__auto__;
    }
  }();
  if (cljs.core.truth_(temp__4124__auto__)) {
    var perf = temp__4124__auto__;
    var temp__4124__auto____$1 = function() {
      var or__3761__auto__ = perf["now"];
      if (cljs.core.truth_(or__3761__auto__)) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = perf["mozNow"];
        if (cljs.core.truth_(or__3761__auto____$1)) {
          return or__3761__auto____$1;
        } else {
          var or__3761__auto____$2 = perf["msNow"];
          if (cljs.core.truth_(or__3761__auto____$2)) {
            return or__3761__auto____$2;
          } else {
            var or__3761__auto____$3 = perf["oNow"];
            if (cljs.core.truth_(or__3761__auto____$3)) {
              return or__3761__auto____$3;
            } else {
              return perf["webkitNow"];
            }
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var f = temp__4124__auto____$1;
      return function(f, temp__4124__auto____$1, perf, temp__4124__auto__) {
        return function() {
          return cljs.core.long$.call(null, 1E6 * f.call(perf));
        };
      }(f, temp__4124__auto____$1, perf, temp__4124__auto__);
    } else {
      return function(temp__4124__auto____$1, perf, temp__4124__auto__) {
        return function() {
          return 1E6 * taoensso.encore.now_udt.call(null);
        };
      }(temp__4124__auto____$1, perf, temp__4124__auto__);
    }
  } else {
    return function(temp__4124__auto__) {
      return function() {
        return 1E6 * taoensso.encore.now_udt.call(null);
      };
    }(temp__4124__auto__);
  }
}();
taoensso.encore.qb_min_times = function qb_min_times(times) {
  return cljs.core.apply.call(null, cljs.core.min, times);
};
taoensso.encore.console_log = function() {
  var temp__4124__auto__ = function() {
    var and__3749__auto__ = typeof console !== "undefined";
    if (and__3749__auto__) {
      return console.log;
    } else {
      return and__3749__auto__;
    }
  }();
  if (cljs.core.truth_(temp__4124__auto__)) {
    var f = temp__4124__auto__;
    return function(f, temp__4124__auto__) {
      return function(xs) {
        return f.apply(console, cljs.core.into_array.call(null, xs));
      };
    }(f, temp__4124__auto__);
  } else {
    return function(temp__4124__auto__) {
      return function(xs) {
        return null;
      };
    }(temp__4124__auto__);
  }
}();
taoensso.encore.log = function() {
  var log__delegate = function(xs) {
    return taoensso.encore.console_log.call(null, xs);
  };
  var log = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return log__delegate.call(this, xs);
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__23225) {
    var xs = cljs.core.seq(arglist__23225);
    return log__delegate(xs);
  };
  log.cljs$core$IFn$_invoke$arity$variadic = log__delegate;
  return log;
}();
taoensso.encore.logp = function() {
  var logp__delegate = function(xs) {
    return taoensso.encore.console_log.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [taoensso.encore.spaced_str.call(null, xs)], null));
  };
  var logp = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return logp__delegate.call(this, xs);
  };
  logp.cljs$lang$maxFixedArity = 0;
  logp.cljs$lang$applyTo = function(arglist__23226) {
    var xs = cljs.core.seq(arglist__23226);
    return logp__delegate(xs);
  };
  logp.cljs$core$IFn$_invoke$arity$variadic = logp__delegate;
  return logp;
}();
taoensso.encore.logf = function() {
  var logf__delegate = function(fmt, xs) {
    return taoensso.encore.console_log.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [taoensso.encore.format_STAR_.call(null, fmt, xs)], null));
  };
  var logf = function(fmt, var_args) {
    var xs = null;
    if (arguments.length > 1) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return logf__delegate.call(this, fmt, xs);
  };
  logf.cljs$lang$maxFixedArity = 1;
  logf.cljs$lang$applyTo = function(arglist__23227) {
    var fmt = cljs.core.first(arglist__23227);
    var xs = cljs.core.rest(arglist__23227);
    return logf__delegate(fmt, xs);
  };
  logf.cljs$core$IFn$_invoke$arity$variadic = logf__delegate;
  return logf;
}();
taoensso.encore.sayp = function() {
  var sayp__delegate = function(xs) {
    return alert(taoensso.encore.spaced_str.call(null, xs));
  };
  var sayp = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sayp__delegate.call(this, xs);
  };
  sayp.cljs$lang$maxFixedArity = 0;
  sayp.cljs$lang$applyTo = function(arglist__23228) {
    var xs = cljs.core.seq(arglist__23228);
    return sayp__delegate(xs);
  };
  sayp.cljs$core$IFn$_invoke$arity$variadic = sayp__delegate;
  return sayp;
}();
taoensso.encore.sayf = function() {
  var sayf__delegate = function(fmt, xs) {
    return alert(taoensso.encore.format_STAR_.call(null, fmt, xs));
  };
  var sayf = function(fmt, var_args) {
    var xs = null;
    if (arguments.length > 1) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sayf__delegate.call(this, fmt, xs);
  };
  sayf.cljs$lang$maxFixedArity = 1;
  sayf.cljs$lang$applyTo = function(arglist__23229) {
    var fmt = cljs.core.first(arglist__23229);
    var xs = cljs.core.rest(arglist__23229);
    return sayf__delegate(fmt, xs);
  };
  sayf.cljs$core$IFn$_invoke$arity$variadic = sayf__delegate;
  return sayf;
}();
taoensso.encore.get_window_location = function get_window_location() {
  var loc_STAR_ = window.location;
  var loc = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "href", "href", -793805698), loc_STAR_.href, new cljs.core.Keyword(null, "protocol", "protocol", 652470118), loc_STAR_.protocol, new cljs.core.Keyword(null, "hostname", "hostname", 2105669933), loc_STAR_.hostname, new cljs.core.Keyword(null, "host", "host", -1558485167), loc_STAR_.host, new cljs.core.Keyword(null, "pathname", "pathname", -1420497528), loc_STAR_.pathname, new cljs.core.Keyword(null, "search", "search", 
  1564939822), loc_STAR_.search, new cljs.core.Keyword(null, "hash", "hash", -13781596), loc_STAR_.hash], null);
  return loc;
};
taoensso.encore.xhr_pool_ = new cljs.core.Delay(function() {
  return new goog.net.XhrIoPool;
}, null);
taoensso.encore.get_pooled_xhr_BANG_ = function get_pooled_xhr_BANG_() {
  var result = cljs.core.deref.call(null, taoensso.encore.xhr_pool_).getObject();
  if (void 0 === result) {
    return null;
  } else {
    return result;
  }
};
taoensso.encore.coerce_xhr_params = function coerce_xhr_params(uri, method, params) {
  if (function() {
    taoensso.encore.hcond.call(null, false, "taoensso.encore", null, new cljs.core.Delay(function() {
      return params;
    }, null), new cljs.core.Symbol(null, "params", "params", -1943919534, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), cljs.core.nil_QMARK_, cljs.core.map_QMARK_], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "map?", "map?", 
    -1780568534, null)], null));
    return true;
  }()) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "map?", "map?", -1780568534, null)], null), new cljs.core.Symbol(null, "params", "params", -1943919534, 
    null))))].join(""));
  }
  var _QMARK_pstr = cljs.core.empty_QMARK_.call(null, params) ? null : function() {
    var s = goog.Uri.QueryData.createFromMap(new goog.structs.Map(cljs.core.clj__GT_js.call(null, params))).toString();
    if (cljs.core.truth_(clojure.string.blank_QMARK_.call(null, s))) {
      return null;
    } else {
      return s;
    }
  }();
  var G__23231 = method instanceof cljs.core.Keyword ? method.fqn : null;
  switch(G__23231) {
    case "put":
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [uri, _QMARK_pstr], null);
      break;
    case "post":
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [uri, _QMARK_pstr], null);
      break;
    case "get":
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(_QMARK_pstr) ? [cljs.core.str(uri), cljs.core.str("?"), cljs.core.str(_QMARK_pstr)].join("") : uri, null], null);
      break;
    default:
      throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(method)].join(""));;
  }
};
taoensso.encore.ajax_lite = function ajax_lite(uri, p__23235, callback) {
  var map__23252 = p__23235;
  var map__23252__$1 = cljs.core.seq_QMARK_.call(null, map__23252) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23252) : map__23252;
  var opts = map__23252__$1;
  var errorf = cljs.core.get.call(null, map__23252__$1, new cljs.core.Keyword(null, "errorf", "errorf", -620376044), taoensso.encore.logf);
  var progress_fn = cljs.core.get.call(null, map__23252__$1, new cljs.core.Keyword(null, "progress-fn", "progress-fn", -1146547855));
  var with_credentials_QMARK_ = cljs.core.get.call(null, map__23252__$1, new cljs.core.Keyword(null, "with-credentials?", "with-credentials?", -1773202222));
  var resp_type = cljs.core.get.call(null, map__23252__$1, new cljs.core.Keyword(null, "resp-type", "resp-type", 1050675962), new cljs.core.Keyword(null, "auto", "auto", -566279492));
  var timeout_ms = cljs.core.get.call(null, map__23252__$1, new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406), 1E4);
  var headers = cljs.core.get.call(null, map__23252__$1, new cljs.core.Keyword(null, "headers", "headers", -835030129));
  var params = cljs.core.get.call(null, map__23252__$1, new cljs.core.Keyword(null, "params", "params", 710516235));
  var method = cljs.core.get.call(null, map__23252__$1, new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "get", "get", 1683182755));
  if (function() {
    taoensso.encore.hcond.call(null, false, "taoensso.encore", null, new cljs.core.Delay(function(map__23252, map__23252__$1, opts, errorf, progress_fn, with_credentials_QMARK_, resp_type, timeout_ms, headers, params, method) {
      return function() {
        return timeout_ms;
      };
    }(map__23252, map__23252__$1, opts, errorf, progress_fn, with_credentials_QMARK_, resp_type, timeout_ms, headers, params, method), null), new cljs.core.Symbol(null, "timeout-ms", "timeout-ms", -1900214363, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), cljs.core.nil_QMARK_, taoensso.encore.nneg_int_QMARK_], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
    "or", "or", 235744169), new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "nneg-int?", "nneg-int?", 803479360, null)], null));
    return true;
  }()) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "nneg-int?", "nneg-int?", 803479360, null)], null), new cljs.core.Symbol(null, "timeout-ms", "timeout-ms", 
    -1900214363, null))))].join(""));
  }
  var temp__4124__auto__ = taoensso.encore.get_pooled_xhr_BANG_.call(null);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var xhr = temp__4124__auto__;
    try {
      var timeout_ms__$1 = function() {
        var or__3761__auto__ = (new cljs.core.Keyword(null, "timeout", "timeout", -318625318)).cljs$core$IFn$_invoke$arity$1(opts);
        if (cljs.core.truth_(or__3761__auto__)) {
          return or__3761__auto__;
        } else {
          return timeout_ms;
        }
      }();
      var method_STAR_ = function() {
        var G__23255 = method instanceof cljs.core.Keyword ? method.fqn : null;
        switch(G__23255) {
          case "put":
            return "PUT";
            break;
          case "post":
            return "POST";
            break;
          case "get":
            return "GET";
            break;
          default:
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(method)].join(""));;
        }
      }();
      var params__$1 = taoensso.encore.map_keys.call(null, cljs.core.name, params);
      var headers__$1 = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, ["X-Requested-With", "XMLHTTPRequest"], null), taoensso.encore.map_keys.call(null, cljs.core.name, headers));
      var vec__23254 = taoensso.encore.coerce_xhr_params.call(null, uri, method, params__$1);
      var uri_STAR_ = cljs.core.nth.call(null, vec__23254, 0, null);
      var post_content_STAR_ = cljs.core.nth.call(null, vec__23254, 1, null);
      var headers_STAR_ = cljs.core.clj__GT_js.call(null, cljs.core.not.call(null, post_content_STAR_) ? headers__$1 : cljs.core.assoc.call(null, headers__$1, "Content-Type", "application/x-www-form-urlencoded; charset\x3dUTF-8"));
      var G__23256_23269 = xhr;
      goog.events.listenOnce(G__23256_23269, goog.net.EventType.READY, function(G__23256_23269, timeout_ms__$1, method_STAR_, params__$1, headers__$1, vec__23254, uri_STAR_, post_content_STAR_, headers_STAR_, xhr, temp__4124__auto__, map__23252, map__23252__$1, opts, errorf, progress_fn, with_credentials_QMARK_, resp_type, timeout_ms, headers, params, method) {
        return function(_) {
          return cljs.core.deref.call(null, taoensso.encore.xhr_pool_).releaseObject(xhr);
        };
      }(G__23256_23269, timeout_ms__$1, method_STAR_, params__$1, headers__$1, vec__23254, uri_STAR_, post_content_STAR_, headers_STAR_, xhr, temp__4124__auto__, map__23252, map__23252__$1, opts, errorf, progress_fn, with_credentials_QMARK_, resp_type, timeout_ms, headers, params, method));
      goog.events.listenOnce(G__23256_23269, goog.net.EventType.COMPLETE, function(G__23256_23269, timeout_ms__$1, method_STAR_, params__$1, headers__$1, vec__23254, uri_STAR_, post_content_STAR_, headers_STAR_, xhr, temp__4124__auto__, map__23252, map__23252__$1, opts, errorf, progress_fn, with_credentials_QMARK_, resp_type, timeout_ms, headers, params, method) {
        return function wrapped_callback(resp) {
          var status = xhr.getStatus();
          var success_QMARK_ = xhr.isSuccess();
          var _QMARK_http_status = cljs.core.not_EQ_.call(null, status, -1) ? status : null;
          var _QMARK_content_type = cljs.core.truth_(_QMARK_http_status) ? xhr.getResponseHeader("Content-Type") : null;
          var _QMARK_content = cljs.core.truth_(_QMARK_http_status) ? function() {
            var resp_type__$1 = !cljs.core._EQ_.call(null, resp_type, new cljs.core.Keyword(null, "auto", "auto", -566279492)) ? resp_type : function() {
              var pred__23262 = function(status, success_QMARK_, _QMARK_http_status, _QMARK_content_type, G__23256_23269, timeout_ms__$1, method_STAR_, params__$1, headers__$1, vec__23254, uri_STAR_, post_content_STAR_, headers_STAR_, xhr, temp__4124__auto__, map__23252, map__23252__$1, opts, errorf, progress_fn, with_credentials_QMARK_, resp_type, timeout_ms, headers, params, method) {
                return function(p1__23234_SHARP_, p2__23233_SHARP_) {
                  return taoensso.encore.str_contains_QMARK_.call(null, p2__23233_SHARP_, p1__23234_SHARP_);
                };
              }(status, success_QMARK_, _QMARK_http_status, _QMARK_content_type, G__23256_23269, timeout_ms__$1, method_STAR_, params__$1, headers__$1, vec__23254, uri_STAR_, post_content_STAR_, headers_STAR_, xhr, temp__4124__auto__, map__23252, map__23252__$1, opts, errorf, progress_fn, with_credentials_QMARK_, resp_type, timeout_ms, headers, params, method);
              var expr__23263 = [cljs.core.str(_QMARK_content_type)].join("");
              if (pred__23262.call(null, "/edn", expr__23263)) {
                return new cljs.core.Keyword(null, "edn", "edn", 1317840885);
              } else {
                if (pred__23262.call(null, "/json", expr__23263)) {
                  return new cljs.core.Keyword(null, "json", "json", 1279968570);
                } else {
                  if (pred__23262.call(null, "/xml", expr__23263)) {
                    return new cljs.core.Keyword(null, "xml", "xml", -1170142052);
                  } else {
                    if (pred__23262.call(null, "/html", expr__23263)) {
                      return new cljs.core.Keyword(null, "text", "text", -1790561697);
                    } else {
                      return new cljs.core.Keyword(null, "text", "text", -1790561697);
                    }
                  }
                }
              }
            }();
            try {
              var G__23266 = resp_type__$1 instanceof cljs.core.Keyword ? resp_type__$1.fqn : null;
              switch(G__23266) {
                case "edn":
                  return cljs.reader.read_string.call(null, xhr.getResponseText());
                  break;
                case "xml":
                  return xhr.getResponseXml();
                  break;
                case "json":
                  return xhr.getResponseJson();
                  break;
                case "text":
                  return xhr.getResponseText();
                  break;
                default:
                  throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(resp_type__$1)].join(""));;
              }
            } catch (e23265) {
              if (e23265 instanceof Error) {
                var e = e23265;
                return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("ajax", "bad-response-type", "ajax/bad-response-type", 789441015), resp_type__$1, new cljs.core.Keyword("ajax", "resp-as-text", "ajax/resp-as-text", 141416819), xhr.getResponseText()], null);
              } else {
                throw e23265;
              }
            }
          }() : null;
          var cb_arg = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "raw-resp", "raw-resp", -1924342506), resp, new cljs.core.Keyword(null, "xhr", "xhr", -177710851), xhr, new cljs.core.Keyword(null, "success?", "success?", -122854052), success_QMARK_, new cljs.core.Keyword(null, "?content-type", "?content-type", -2129759049), cljs.core.truth_(_QMARK_http_status) ? _QMARK_content_type : null, new cljs.core.Keyword(null, "?content", "?content", 1697782054), _QMARK_content, 
          new cljs.core.Keyword(null, "?status", "?status", 938730360), _QMARK_http_status, new cljs.core.Keyword(null, "?error", "?error", 1070752222), function() {
            var or__3761__auto__ = cljs.core.truth_(_QMARK_http_status) ? function() {
              var n = _QMARK_http_status;
              if (cljs.core.truth_(success_QMARK_)) {
                return null;
              } else {
                return _QMARK_http_status;
              }
            }() : cljs.core.get.call(null, new cljs.core.PersistentArrayMap.fromArray([goog.net.ErrorCode.EXCEPTION, new cljs.core.Keyword(null, "exception", "exception", -335277064), goog.net.ErrorCode.HTTP_ERROR, new cljs.core.Keyword(null, "http-error", "http-error", -1040049553), goog.net.ErrorCode.ABORT, new cljs.core.Keyword(null, "abort", "abort", 521193198), goog.net.ErrorCode.TIMEOUT, new cljs.core.Keyword(null, "timeout", "timeout", -318625318)], true, false), xhr.getLastErrorCode(), new cljs.core.Keyword(null, 
            "unknown", "unknown", -935977881));
            if (cljs.core.truth_(or__3761__auto__)) {
              return or__3761__auto__;
            } else {
              if (_QMARK_content == null && cljs.core.not.call(null, (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [204, null, 1223, null], null), null)).call(null, _QMARK_http_status))) {
                return new cljs.core.Keyword(null, "no-content", "no-content", -1860206018);
              } else {
                return null;
              }
            }
          }()], null);
          return callback.call(null, cb_arg);
        };
      }(G__23256_23269, timeout_ms__$1, method_STAR_, params__$1, headers__$1, vec__23254, uri_STAR_, post_content_STAR_, headers_STAR_, xhr, temp__4124__auto__, map__23252, map__23252__$1, opts, errorf, progress_fn, with_credentials_QMARK_, resp_type, timeout_ms, headers, params, method));
      var temp__4126__auto___23271 = progress_fn;
      if (cljs.core.truth_(temp__4126__auto___23271)) {
        var pf_23272 = temp__4126__auto___23271;
        goog.events.listen(xhr, goog.net.EventType.PROGRESS, function(pf_23272, temp__4126__auto___23271, timeout_ms__$1, method_STAR_, params__$1, headers__$1, vec__23254, uri_STAR_, post_content_STAR_, headers_STAR_, xhr, temp__4124__auto__, map__23252, map__23252__$1, opts, errorf, progress_fn, with_credentials_QMARK_, resp_type, timeout_ms, headers, params, method) {
          return function(ev) {
            var length_computable_QMARK_ = ev.lengthComputable;
            var loaded = ev.loaded;
            var total = ev.total;
            var _QMARK_ratio = cljs.core.truth_(function() {
              var and__3749__auto__ = length_computable_QMARK_;
              if (cljs.core.truth_(and__3749__auto__)) {
                return cljs.core.not_EQ_.call(null, total, 0);
              } else {
                return and__3749__auto__;
              }
            }()) ? loaded / total : null;
            return pf_23272.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "?ratio", "?ratio", -1275760831), _QMARK_ratio, new cljs.core.Keyword(null, "length-computable?", "length-computable?", 1915473276), length_computable_QMARK_, new cljs.core.Keyword(null, "loaded", "loaded", -1246482293), loaded, new cljs.core.Keyword(null, "total", "total", 1916810418), total, new cljs.core.Keyword(null, "ev", "ev", -406827324), ev], null));
          };
        }(pf_23272, temp__4126__auto___23271, timeout_ms__$1, method_STAR_, params__$1, headers__$1, vec__23254, uri_STAR_, post_content_STAR_, headers_STAR_, xhr, temp__4124__auto__, map__23252, map__23252__$1, opts, errorf, progress_fn, with_credentials_QMARK_, resp_type, timeout_ms, headers, params, method));
      } else {
      }
      var G__23267_23273 = xhr;
      var temp__4126__auto___23274 = new cljs.core.Keyword(null, "always", "always", -1772028770);
      if (cljs.core.truth_(temp__4126__auto___23274)) {
        var x_23275 = temp__4126__auto___23274;
        G__23267_23273.setTimeoutInterval(function() {
          var or__3761__auto__ = timeout_ms__$1;
          if (cljs.core.truth_(or__3761__auto__)) {
            return or__3761__auto__;
          } else {
            return 0;
          }
        }());
      } else {
      }
      var temp__4126__auto___23276 = with_credentials_QMARK_;
      if (cljs.core.truth_(temp__4126__auto___23276)) {
        var x_23277 = temp__4126__auto___23276;
        G__23267_23273.setWithCredentials(true);
      } else {
      }
      var temp__4126__auto___23278 = new cljs.core.Keyword(null, "always", "always", -1772028770);
      if (cljs.core.truth_(temp__4126__auto___23278)) {
        var x_23279 = temp__4126__auto___23278;
        G__23267_23273.send(uri_STAR_, method_STAR_, post_content_STAR_, headers_STAR_);
      } else {
      }
      return xhr;
    } catch (e23253) {
      if (e23253 instanceof Error) {
        var e = e23253;
        cljs.core.deref.call(null, taoensso.encore.xhr_pool_).releaseObject(xhr);
        return null;
      } else {
        throw e23253;
      }
    }
  } else {
    callback.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "?error", "?error", 1070752222), new cljs.core.Keyword(null, "xhr-pool-depleted", "xhr-pool-depleted", -1812092376)], null));
    return null;
  }
};
taoensso.encore.url_encode = function url_encode(s) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, clojure.string.replace.call(null, encodeURIComponent([cljs.core.str(s)].join(""), s), "*", "%2A"), "'", "%27");
  } else {
    return null;
  }
};
taoensso.encore.url_decode = function() {
  var url_decode__delegate = function(s, p__23280) {
    var vec__23282 = p__23280;
    var encoding = cljs.core.nth.call(null, vec__23282, 0, null);
    if (cljs.core.truth_(s)) {
      return decodeURIComponent(s);
    } else {
      return null;
    }
  };
  var url_decode = function(s, var_args) {
    var p__23280 = null;
    if (arguments.length > 1) {
      p__23280 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return url_decode__delegate.call(this, s, p__23280);
  };
  url_decode.cljs$lang$maxFixedArity = 1;
  url_decode.cljs$lang$applyTo = function(arglist__23283) {
    var s = cljs.core.first(arglist__23283);
    var p__23280 = cljs.core.rest(arglist__23283);
    return url_decode__delegate(s, p__23280);
  };
  url_decode.cljs$core$IFn$_invoke$arity$variadic = url_decode__delegate;
  return url_decode;
}();
taoensso.encore.format_query_string = function format_query_string(m) {
  var param = function(k, v) {
    return[cljs.core.str(taoensso.encore.url_encode.call(null, cljs.core.name.call(null, k))), cljs.core.str("\x3d"), cljs.core.str(taoensso.encore.url_encode.call(null, v))].join("");
  };
  var join = function(param) {
    return function(strs) {
      return clojure.string.join.call(null, "\x26", strs);
    };
  }(param);
  if (cljs.core.empty_QMARK_.call(null, m)) {
    return null;
  } else {
    return join.call(null, function() {
      var iter__4512__auto__ = function(param, join) {
        return function iter__23292(s__23293) {
          return new cljs.core.LazySeq(null, function(param, join) {
            return function() {
              var s__23293__$1 = s__23293;
              while (true) {
                var temp__4126__auto__ = cljs.core.seq.call(null, s__23293__$1);
                if (temp__4126__auto__) {
                  var s__23293__$2 = temp__4126__auto__;
                  if (cljs.core.chunked_seq_QMARK_.call(null, s__23293__$2)) {
                    var c__4510__auto__ = cljs.core.chunk_first.call(null, s__23293__$2);
                    var size__4511__auto__ = cljs.core.count.call(null, c__4510__auto__);
                    var b__23295 = cljs.core.chunk_buffer.call(null, size__4511__auto__);
                    if (function() {
                      var i__23294 = 0;
                      while (true) {
                        if (i__23294 < size__4511__auto__) {
                          var vec__23298 = cljs.core._nth.call(null, c__4510__auto__, i__23294);
                          var k = cljs.core.nth.call(null, vec__23298, 0, null);
                          var v = cljs.core.nth.call(null, vec__23298, 1, null);
                          cljs.core.chunk_append.call(null, b__23295, cljs.core.sequential_QMARK_.call(null, v) ? join.call(null, cljs.core.mapv.call(null, cljs.core.partial.call(null, param, k), function() {
                            var or__3761__auto__ = cljs.core.seq.call(null, v);
                            if (or__3761__auto__) {
                              return or__3761__auto__;
                            } else {
                              return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [""], null);
                            }
                          }())) : param.call(null, k, v));
                          var G__23300 = i__23294 + 1;
                          i__23294 = G__23300;
                          continue;
                        } else {
                          return true;
                        }
                        break;
                      }
                    }()) {
                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23295), iter__23292.call(null, cljs.core.chunk_rest.call(null, s__23293__$2)));
                    } else {
                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23295), null);
                    }
                  } else {
                    var vec__23299 = cljs.core.first.call(null, s__23293__$2);
                    var k = cljs.core.nth.call(null, vec__23299, 0, null);
                    var v = cljs.core.nth.call(null, vec__23299, 1, null);
                    return cljs.core.cons.call(null, cljs.core.sequential_QMARK_.call(null, v) ? join.call(null, cljs.core.mapv.call(null, cljs.core.partial.call(null, param, k), function() {
                      var or__3761__auto__ = cljs.core.seq.call(null, v);
                      if (or__3761__auto__) {
                        return or__3761__auto__;
                      } else {
                        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [""], null);
                      }
                    }())) : param.call(null, k, v), iter__23292.call(null, cljs.core.rest.call(null, s__23293__$2)));
                  }
                } else {
                  return null;
                }
                break;
              }
            };
          }(param, join), null, null);
        };
      }(param, join);
      return iter__4512__auto__.call(null, m);
    }());
  }
};
taoensso.encore.assoc_conj = function assoc_conj(m, k, v) {
  return cljs.core.assoc.call(null, m, k, function() {
    var temp__4124__auto__ = cljs.core.get.call(null, m, k);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var cur = temp__4124__auto__;
      if (cljs.core.vector_QMARK_.call(null, cur)) {
        return cljs.core.conj.call(null, cur, v);
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cur, v], null);
      }
    } else {
      return v;
    }
  }());
};
taoensso.encore.parse_query_params = function() {
  var parse_query_params__delegate = function(s, p__23301) {
    var vec__23304 = p__23301;
    var keywordize_QMARK_ = cljs.core.nth.call(null, vec__23304, 0, null);
    var encoding = cljs.core.nth.call(null, vec__23304, 1, null);
    var _PERCENT_ = cljs.core.truth_(clojure.string.blank_QMARK_.call(null, s)) ? cljs.core.PersistentArrayMap.EMPTY : function() {
      var s__$1 = taoensso.encore.str_starts_with_QMARK_.call(null, s, "?") ? taoensso.encore.substr.call(null, s, 1) : s;
      if (!taoensso.encore.str_contains_QMARK_.call(null, s__$1, "\x3d")) {
        return cljs.core.PersistentArrayMap.EMPTY;
      } else {
        var m = cljs.core.reduce.call(null, function(s__$1, vec__23304, keywordize_QMARK_, encoding) {
          return function(m, param) {
            var temp__4124__auto__ = clojure.string.split.call(null, param, /=/, 2);
            if (cljs.core.truth_(temp__4124__auto__)) {
              var vec__23305 = temp__4124__auto__;
              var k = cljs.core.nth.call(null, vec__23305, 0, null);
              var v = cljs.core.nth.call(null, vec__23305, 1, null);
              return taoensso.encore.assoc_conj.call(null, m, taoensso.encore.url_decode.call(null, k, encoding), taoensso.encore.url_decode.call(null, v, encoding));
            } else {
              return m;
            }
          };
        }(s__$1, vec__23304, keywordize_QMARK_, encoding), cljs.core.PersistentArrayMap.EMPTY, clojure.string.split.call(null, s__$1, /&/));
        if (cljs.core.not.call(null, keywordize_QMARK_)) {
          return m;
        } else {
          return taoensso.encore.keywordize_map.call(null, m);
        }
      }
    }();
    if (function() {
      taoensso.encore.hcond.call(null, false, "taoensso.encore", null, new cljs.core.Delay(function(_PERCENT_, vec__23304, keywordize_QMARK_, encoding) {
        return function() {
          return _PERCENT_;
        };
      }(_PERCENT_, vec__23304, keywordize_QMARK_, encoding), null), new cljs.core.Symbol(null, "%", "%", -950237169, null), cljs.core.map_QMARK_, new cljs.core.Symbol(null, "map?", "map?", -1780568534, null));
      return true;
    }()) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "%", "%", -950237169, null))))].join(""));
    }
    return _PERCENT_;
  };
  var parse_query_params = function(s, var_args) {
    var p__23301 = null;
    if (arguments.length > 1) {
      p__23301 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return parse_query_params__delegate.call(this, s, p__23301);
  };
  parse_query_params.cljs$lang$maxFixedArity = 1;
  parse_query_params.cljs$lang$applyTo = function(arglist__23306) {
    var s = cljs.core.first(arglist__23306);
    var p__23301 = cljs.core.rest(arglist__23306);
    return parse_query_params__delegate(s, p__23301);
  };
  parse_query_params.cljs$core$IFn$_invoke$arity$variadic = parse_query_params__delegate;
  return parse_query_params;
}();
taoensso.encore.merge_url_with_query_string = function merge_url_with_query_string(url, m) {
  var vec__23308 = clojure.string.split.call(null, [cljs.core.str(url)].join(""), /\?/, 2);
  var url__$1 = cljs.core.nth.call(null, vec__23308, 0, null);
  var _QMARK_qstr = cljs.core.nth.call(null, vec__23308, 1, null);
  var qmap = cljs.core.merge.call(null, cljs.core.truth_(_QMARK_qstr) ? taoensso.encore.keywordize_map.call(null, taoensso.encore.parse_query_params.call(null, _QMARK_qstr)) : null, taoensso.encore.keywordize_map.call(null, m));
  return[cljs.core.str(url__$1), cljs.core.str(function() {
    var temp__4126__auto__ = taoensso.encore.format_query_string.call(null, qmap);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var qstr = temp__4126__auto__;
      return[cljs.core.str("?"), cljs.core.str(qstr)].join("");
    } else {
      return null;
    }
  }())].join("");
};
taoensso.encore.memoize_1 = taoensso.encore.memoize1;
taoensso.encore.logging_level = cljs.core.atom.call(null, new cljs.core.Keyword(null, "debug", "debug", -1608172596));
taoensso.encore.set_exp_backoff_timeout_BANG_ = function() {
  var set_exp_backoff_timeout_BANG___delegate = function(nullary_f, p__23309) {
    var vec__23311 = p__23309;
    var nattempt = cljs.core.nth.call(null, vec__23311, 0, null);
    return window.setTimeout(nullary_f, taoensso.encore.exp_backoff.call(null, function() {
      var or__3761__auto__ = nattempt;
      if (cljs.core.truth_(or__3761__auto__)) {
        return or__3761__auto__;
      } else {
        return 0;
      }
    }()));
  };
  var set_exp_backoff_timeout_BANG_ = function(nullary_f, var_args) {
    var p__23309 = null;
    if (arguments.length > 1) {
      p__23309 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return set_exp_backoff_timeout_BANG___delegate.call(this, nullary_f, p__23309);
  };
  set_exp_backoff_timeout_BANG_.cljs$lang$maxFixedArity = 1;
  set_exp_backoff_timeout_BANG_.cljs$lang$applyTo = function(arglist__23312) {
    var nullary_f = cljs.core.first(arglist__23312);
    var p__23309 = cljs.core.rest(arglist__23312);
    return set_exp_backoff_timeout_BANG___delegate(nullary_f, p__23309);
  };
  set_exp_backoff_timeout_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_exp_backoff_timeout_BANG___delegate;
  return set_exp_backoff_timeout_BANG_;
}();
taoensso.encore.keys_EQ_ = function keys_EQ_(m, ks) {
  return taoensso.encore.ks_EQ_.call(null, ks, m);
};
taoensso.encore.keys_LT__EQ_ = function keys_LT__EQ_(m, ks) {
  return taoensso.encore.ks_LT__EQ_.call(null, ks, m);
};
taoensso.encore.keys_GT__EQ_ = function keys_GT__EQ_(m, ks) {
  return taoensso.encore.ks_GT__EQ_.call(null, ks, m);
};
taoensso.encore.keys_EQ_nnil_QMARK_ = function keys_EQ_nnil_QMARK_(m, ks) {
  return taoensso.encore.ks_nnil_QMARK_.call(null, ks, m);
};
taoensso.encore.parse_bool = taoensso.encore.as__QMARK_bool;
taoensso.encore.parse_int = taoensso.encore.as__QMARK_int;
taoensso.encore.parse_float = taoensso.encore.as__QMARK_float;
taoensso.encore.as_bool = function as_bool(x) {
  if (cljs.core.truth_(x)) {
    return taoensso.encore.hcond.call(null, false, "taoensso.encore", 2191, new cljs.core.Delay(function() {
      return taoensso.encore.as__QMARK_bool.call(null, x);
    }, null), cljs.core.list(new cljs.core.Symbol(null, "as-?bool", "as-?bool", 1645711161, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)), taoensso.encore.nnil_QMARK_, new cljs.core.Symbol("taoensso.encore", "nnil?", "taoensso.encore/nnil?", -1813154343, null));
  } else {
    return null;
  }
};
taoensso.encore.as_int = function as_int(x) {
  if (cljs.core.truth_(x)) {
    return taoensso.encore.hcond.call(null, false, "taoensso.encore", 2192, new cljs.core.Delay(function() {
      return taoensso.encore.as__QMARK_int.call(null, x);
    }, null), cljs.core.list(new cljs.core.Symbol(null, "as-?int", "as-?int", 2107097360, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)), taoensso.encore.nnil_QMARK_, new cljs.core.Symbol("taoensso.encore", "nnil?", "taoensso.encore/nnil?", -1813154343, null));
  } else {
    return null;
  }
};
taoensso.encore.as_float = function as_float(x) {
  if (cljs.core.truth_(x)) {
    return taoensso.encore.hcond.call(null, false, "taoensso.encore", 2193, new cljs.core.Delay(function() {
      return taoensso.encore.as__QMARK_float.call(null, x);
    }, null), cljs.core.list(new cljs.core.Symbol(null, "as-?float", "as-?float", 2124831706, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)), taoensso.encore.nnil_QMARK_, new cljs.core.Symbol("taoensso.encore", "nnil?", "taoensso.encore/nnil?", -1813154343, null));
  } else {
    return null;
  }
};
taoensso.encore.merge_deep_with = taoensso.encore.nested_merge_with;
taoensso.encore.merge_deep = taoensso.encore.nested_merge;
taoensso.encore.rate_limiter = function rate_limiter(ncalls_limit, window_ms) {
  return taoensso.encore.rate_limiter_STAR_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ncalls_limit, window_ms], null)], null));
};
taoensso.encore.rate_limited = function rate_limited(ncalls_limit, window_ms, f) {
  var rl = taoensso.encore.rate_limiter_STAR_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ncalls_limit, window_ms], null)], null));
  return function(rl) {
    return function() {
      var G__23313__delegate = function(args) {
        var temp__4124__auto__ = rl.call(null);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var backoff_ms = temp__4124__auto__;
          return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "backoff-ms", "backoff-ms", 1679281507), backoff_ms], null);
        } else {
          return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "result", "result", 1415092211), f.call(null)], null);
        }
      };
      var G__23313 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__23313__delegate.call(this, args);
      };
      G__23313.cljs$lang$maxFixedArity = 0;
      G__23313.cljs$lang$applyTo = function(arglist__23314) {
        var args = cljs.core.seq(arglist__23314);
        return G__23313__delegate(args);
      };
      G__23313.cljs$core$IFn$_invoke$arity$variadic = G__23313__delegate;
      return G__23313;
    }();
  }(rl);
};
if (typeof taoensso.encore._STAR_log_level_STAR_ !== "undefined") {
} else {
  taoensso.encore._STAR_log_level_STAR_ = new cljs.core.Keyword(null, "debug", "debug", -1608172596);
}
taoensso.encore.log_QMARK_ = function() {
  var __GT_n = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "trace", "trace", -1082747415), 1, new cljs.core.Keyword(null, "debug", "debug", -1608172596), 2, new cljs.core.Keyword(null, "info", "info", -317069002), 3, new cljs.core.Keyword(null, "warn", "warn", -436710552), 4, new cljs.core.Keyword(null, "error", "error", -978969032), 5, new cljs.core.Keyword(null, "fatal", "fatal", 1874419888), 6, new cljs.core.Keyword(null, "report", "report", 1394055010), 7], null);
  return function(__GT_n) {
    return function(level) {
      return __GT_n.call(null, level) >= __GT_n.call(null, taoensso.encore._STAR_log_level_STAR_);
    };
  }(__GT_n);
}();
taoensso.encore.tracef = function() {
  var tracef__delegate = function(fmt, xs) {
    if (cljs.core.truth_(taoensso.encore.log_QMARK_.call(null, new cljs.core.Keyword(null, "trace", "trace", -1082747415)))) {
      return cljs.core.apply.call(null, taoensso.encore.logf, fmt, xs);
    } else {
      return null;
    }
  };
  var tracef = function(fmt, var_args) {
    var xs = null;
    if (arguments.length > 1) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tracef__delegate.call(this, fmt, xs);
  };
  tracef.cljs$lang$maxFixedArity = 1;
  tracef.cljs$lang$applyTo = function(arglist__23315) {
    var fmt = cljs.core.first(arglist__23315);
    var xs = cljs.core.rest(arglist__23315);
    return tracef__delegate(fmt, xs);
  };
  tracef.cljs$core$IFn$_invoke$arity$variadic = tracef__delegate;
  return tracef;
}();
taoensso.encore.debugf = function() {
  var debugf__delegate = function(fmt, xs) {
    if (cljs.core.truth_(taoensso.encore.log_QMARK_.call(null, new cljs.core.Keyword(null, "debug", "debug", -1608172596)))) {
      return cljs.core.apply.call(null, taoensso.encore.logf, fmt, xs);
    } else {
      return null;
    }
  };
  var debugf = function(fmt, var_args) {
    var xs = null;
    if (arguments.length > 1) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return debugf__delegate.call(this, fmt, xs);
  };
  debugf.cljs$lang$maxFixedArity = 1;
  debugf.cljs$lang$applyTo = function(arglist__23316) {
    var fmt = cljs.core.first(arglist__23316);
    var xs = cljs.core.rest(arglist__23316);
    return debugf__delegate(fmt, xs);
  };
  debugf.cljs$core$IFn$_invoke$arity$variadic = debugf__delegate;
  return debugf;
}();
taoensso.encore.infof = function() {
  var infof__delegate = function(fmt, xs) {
    if (cljs.core.truth_(taoensso.encore.log_QMARK_.call(null, new cljs.core.Keyword(null, "info", "info", -317069002)))) {
      return cljs.core.apply.call(null, taoensso.encore.logf, fmt, xs);
    } else {
      return null;
    }
  };
  var infof = function(fmt, var_args) {
    var xs = null;
    if (arguments.length > 1) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return infof__delegate.call(this, fmt, xs);
  };
  infof.cljs$lang$maxFixedArity = 1;
  infof.cljs$lang$applyTo = function(arglist__23317) {
    var fmt = cljs.core.first(arglist__23317);
    var xs = cljs.core.rest(arglist__23317);
    return infof__delegate(fmt, xs);
  };
  infof.cljs$core$IFn$_invoke$arity$variadic = infof__delegate;
  return infof;
}();
taoensso.encore.warnf = function() {
  var warnf__delegate = function(fmt, xs) {
    if (cljs.core.truth_(taoensso.encore.log_QMARK_.call(null, new cljs.core.Keyword(null, "warn", "warn", -436710552)))) {
      return cljs.core.apply.call(null, taoensso.encore.logf, [cljs.core.str("WARN: "), cljs.core.str(fmt)].join(""), xs);
    } else {
      return null;
    }
  };
  var warnf = function(fmt, var_args) {
    var xs = null;
    if (arguments.length > 1) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return warnf__delegate.call(this, fmt, xs);
  };
  warnf.cljs$lang$maxFixedArity = 1;
  warnf.cljs$lang$applyTo = function(arglist__23318) {
    var fmt = cljs.core.first(arglist__23318);
    var xs = cljs.core.rest(arglist__23318);
    return warnf__delegate(fmt, xs);
  };
  warnf.cljs$core$IFn$_invoke$arity$variadic = warnf__delegate;
  return warnf;
}();
taoensso.encore.errorf = function() {
  var errorf__delegate = function(fmt, xs) {
    if (cljs.core.truth_(taoensso.encore.log_QMARK_.call(null, new cljs.core.Keyword(null, "error", "error", -978969032)))) {
      return cljs.core.apply.call(null, taoensso.encore.logf, [cljs.core.str("ERROR: "), cljs.core.str(fmt)].join(""), xs);
    } else {
      return null;
    }
  };
  var errorf = function(fmt, var_args) {
    var xs = null;
    if (arguments.length > 1) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return errorf__delegate.call(this, fmt, xs);
  };
  errorf.cljs$lang$maxFixedArity = 1;
  errorf.cljs$lang$applyTo = function(arglist__23319) {
    var fmt = cljs.core.first(arglist__23319);
    var xs = cljs.core.rest(arglist__23319);
    return errorf__delegate(fmt, xs);
  };
  errorf.cljs$core$IFn$_invoke$arity$variadic = errorf__delegate;
  return errorf;
}();
taoensso.encore.fatalf = function() {
  var fatalf__delegate = function(fmt, xs) {
    if (cljs.core.truth_(taoensso.encore.log_QMARK_.call(null, new cljs.core.Keyword(null, "fatal", "fatal", 1874419888)))) {
      return cljs.core.apply.call(null, taoensso.encore.logf, [cljs.core.str("FATAL: "), cljs.core.str(fmt)].join(""), xs);
    } else {
      return null;
    }
  };
  var fatalf = function(fmt, var_args) {
    var xs = null;
    if (arguments.length > 1) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fatalf__delegate.call(this, fmt, xs);
  };
  fatalf.cljs$lang$maxFixedArity = 1;
  fatalf.cljs$lang$applyTo = function(arglist__23320) {
    var fmt = cljs.core.first(arglist__23320);
    var xs = cljs.core.rest(arglist__23320);
    return fatalf__delegate(fmt, xs);
  };
  fatalf.cljs$core$IFn$_invoke$arity$variadic = fatalf__delegate;
  return fatalf;
}();
taoensso.encore.reportf = function() {
  var reportf__delegate = function(fmt, xs) {
    if (cljs.core.truth_(taoensso.encore.log_QMARK_.call(null, new cljs.core.Keyword(null, "report", "report", 1394055010)))) {
      return cljs.core.apply.call(null, taoensso.encore.logf, fmt, xs);
    } else {
      return null;
    }
  };
  var reportf = function(fmt, var_args) {
    var xs = null;
    if (arguments.length > 1) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return reportf__delegate.call(this, fmt, xs);
  };
  reportf.cljs$lang$maxFixedArity = 1;
  reportf.cljs$lang$applyTo = function(arglist__23321) {
    var fmt = cljs.core.first(arglist__23321);
    var xs = cljs.core.rest(arglist__23321);
    return reportf__delegate(fmt, xs);
  };
  reportf.cljs$core$IFn$_invoke$arity$variadic = reportf__delegate;
  return reportf;
}();
goog.provide("taoensso.sente");
goog.require("cljs.core");
goog.require("taoensso.encore");
goog.require("cljs.core.async");
goog.require("taoensso.sente.interfaces");
goog.require("taoensso.sente.interfaces");
goog.require("taoensso.encore");
goog.require("taoensso.encore");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("clojure.string");
goog.require("clojure.string");
taoensso.sente.set_logging_level_BANG_ = function set_logging_level_BANG_(level) {
  return taoensso.encore._STAR_log_level_STAR_ = level;
};
taoensso.sente.ajax_call = taoensso.encore.ajax_lite;
taoensso.sente.validate_event = function validate_event(x) {
  if (!cljs.core.vector_QMARK_.call(null, x)) {
    return new cljs.core.Keyword(null, "wrong-type", "wrong-type", 929556915);
  } else {
    if (cljs.core.not.call(null, (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [1, null, 2, null], null), null)).call(null, cljs.core.count.call(null, x)))) {
      return new cljs.core.Keyword(null, "wrong-length", "wrong-length", 1367572281);
    } else {
      var vec__22371 = x;
      var ev_id = cljs.core.nth.call(null, vec__22371, 0, null);
      var _ = cljs.core.nth.call(null, vec__22371, 1, null);
      if (!(ev_id instanceof cljs.core.Keyword)) {
        return new cljs.core.Keyword(null, "wrong-id-type", "wrong-id-type", -1213601689);
      } else {
        if (cljs.core.not.call(null, cljs.core.namespace.call(null, ev_id))) {
          return new cljs.core.Keyword(null, "unnamespaced-id", "unnamespaced-id", 1976189772);
        } else {
          return null;
        }
      }
    }
  }
};
taoensso.sente.event_QMARK_ = function event_QMARK_(x) {
  return taoensso.sente.validate_event.call(null, x) == null;
};
taoensso.sente.as_event = function as_event(x) {
  if (taoensso.sente.event_QMARK_.call(null, x)) {
    return x;
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("chsk", "bad-event", "chsk/bad-event", -565206930), x], null);
  }
};
taoensso.sente.assert_event = function assert_event(x) {
  var temp__4126__auto__ = taoensso.sente.validate_event.call(null, x);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var _QMARK_err = temp__4126__auto__;
    var err_fmt = [cljs.core.str(function() {
      var G__22373 = _QMARK_err instanceof cljs.core.Keyword ? _QMARK_err.fqn : null;
      switch(G__22373) {
        case "else":
          return "Malformed event (unknown error).";
          break;
        case "unnamespaced-id":
          return "Malformed event (`ev-id` should be a namespaced keyword).";
          break;
        case "wrong-id-type":
          return "Malformed event (`ev-id` should be a namespaced keyword).";
          break;
        case "wrong-length":
          return "Malformed event (wrong length).";
          break;
        case "wrong-type":
          return "Malformed event (wrong type).";
          break;
        default:
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(_QMARK_err)].join(""));;
      }
    }()), cljs.core.str(" Event should be of `[ev-id ?ev-data]` form: %s")].join("");
    throw cljs.core.ex_info.call(null, taoensso.encore.format.call(null, err_fmt, [cljs.core.str(x)].join("")), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "malformed-event", "malformed-event", -2090896605), x], null));
  } else {
    return null;
  }
};
taoensso.sente.event_msg_QMARK_ = function event_msg_QMARK_(x) {
  var and__3749__auto__ = cljs.core.map_QMARK_.call(null, x);
  if (and__3749__auto__) {
    var and__3749__auto____$1 = taoensso.encore.keys_EQ_.call(null, x, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "ch-recv", "ch-recv", -990916861), null, new cljs.core.Keyword(null, "state", "state", -1988618099), null, new cljs.core.Keyword(null, "event", "event", 301435442), null, new cljs.core.Keyword(null, "id", "id", -1388402092), null, new cljs.core.Keyword(null, "?data", "?data", -9471433), null, new cljs.core.Keyword(null, 
    "send-fn", "send-fn", 351002041), null], null), null));
    if (and__3749__auto____$1) {
      var map__22380 = x;
      var map__22380__$1 = cljs.core.seq_QMARK_.call(null, map__22380) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22380) : map__22380;
      var event = cljs.core.get.call(null, map__22380__$1, new cljs.core.Keyword(null, "event", "event", 301435442));
      var state = cljs.core.get.call(null, map__22380__$1, new cljs.core.Keyword(null, "state", "state", -1988618099));
      var send_fn = cljs.core.get.call(null, map__22380__$1, new cljs.core.Keyword(null, "send-fn", "send-fn", 351002041));
      var ch_recv = cljs.core.get.call(null, map__22380__$1, new cljs.core.Keyword(null, "ch-recv", "ch-recv", -990916861));
      return taoensso.encore.chan_QMARK_.call(null, ch_recv) && cljs.core.ifn_QMARK_.call(null, send_fn) && taoensso.encore.atom_QMARK_.call(null, state) && taoensso.sente.event_QMARK_.call(null, event);
    } else {
      return and__3749__auto____$1;
    }
  } else {
    return and__3749__auto__;
  }
};
taoensso.sente.cb_success_QMARK_ = function cb_success_QMARK_(cb_reply_clj) {
  return cljs.core.not.call(null, (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword("chsk", "closed", "chsk/closed", -922855264), null, new cljs.core.Keyword("chsk", "error", "chsk/error", -984175439), null, new cljs.core.Keyword("chsk", "timeout", "chsk/timeout", -319776489), null], null), null)).call(null, cb_reply_clj));
};
taoensso.sente.unpack_STAR_ = function unpack_STAR_(packer, pstr) {
  try {
    return taoensso.sente.interfaces.unpack.call(null, packer, taoensso.encore.hcond.call(null, false, "taoensso.sente", 215, new cljs.core.Delay(function() {
      return pstr;
    }, null), new cljs.core.Symbol(null, "pstr", "pstr", 221763868, null), cljs.core.string_QMARK_, new cljs.core.Symbol(null, "string?", "string?", -1129175764, null)));
  } catch (e22382) {
    var t = e22382;
    taoensso.encore.debugf.call(null, "Bad package: %s (%s)", pstr, t);
    throw t;
  }
};
taoensso.sente.with__QMARK_meta = function with__QMARK_meta(x, _QMARK_m) {
  if (cljs.core.seq.call(null, _QMARK_m)) {
    return cljs.core.with_meta.call(null, x, _QMARK_m);
  } else {
    return x;
  }
};
taoensso.sente.pack_STAR_ = function() {
  var pack_STAR_ = null;
  var pack_STAR___3 = function(packer, _QMARK_packer_meta, clj) {
    return[cljs.core.str("-"), cljs.core.str(taoensso.sente.interfaces.pack.call(null, packer, taoensso.sente.with__QMARK_meta.call(null, clj, _QMARK_packer_meta)))].join("");
  };
  var pack_STAR___4 = function(packer, _QMARK_packer_meta, clj, _QMARK_cb_uuid) {
    var _QMARK_cb_uuid__$1 = cljs.core._EQ_.call(null, _QMARK_cb_uuid, new cljs.core.Keyword(null, "ajax-cb", "ajax-cb", -807060321)) ? 0 : _QMARK_cb_uuid;
    var wrapped_clj = cljs.core.truth_(_QMARK_cb_uuid__$1) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj, _QMARK_cb_uuid__$1], null) : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj], null);
    return[cljs.core.str("+"), cljs.core.str(taoensso.sente.interfaces.pack.call(null, packer, taoensso.sente.with__QMARK_meta.call(null, wrapped_clj, _QMARK_packer_meta)))].join("");
  };
  pack_STAR_ = function(packer, _QMARK_packer_meta, clj, _QMARK_cb_uuid) {
    switch(arguments.length) {
      case 3:
        return pack_STAR___3.call(this, packer, _QMARK_packer_meta, clj);
      case 4:
        return pack_STAR___4.call(this, packer, _QMARK_packer_meta, clj, _QMARK_cb_uuid);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pack_STAR_.cljs$core$IFn$_invoke$arity$3 = pack_STAR___3;
  pack_STAR_.cljs$core$IFn$_invoke$arity$4 = pack_STAR___4;
  return pack_STAR_;
}();
taoensso.sente.pack = function() {
  var pack__delegate = function(args) {
    var pstr = cljs.core.apply.call(null, taoensso.sente.pack_STAR_, args);
    taoensso.encore.tracef.call(null, "Packing: %s -\x3e %s", args, pstr);
    return pstr;
  };
  var pack = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pack__delegate.call(this, args);
  };
  pack.cljs$lang$maxFixedArity = 0;
  pack.cljs$lang$applyTo = function(arglist__22383) {
    var args = cljs.core.seq(arglist__22383);
    return pack__delegate(args);
  };
  pack.cljs$core$IFn$_invoke$arity$variadic = pack__delegate;
  return pack;
}();
taoensso.sente.unpack = function unpack(packer, prefixed_pstr) {
  taoensso.encore.hcond.call(null, false, "taoensso.sente", null, new cljs.core.Delay(function() {
    return prefixed_pstr;
  }, null), new cljs.core.Symbol(null, "prefixed-pstr", "prefixed-pstr", -515747107, null), cljs.core.string_QMARK_, new cljs.core.Symbol(null, "string?", "string?", -1129175764, null));
  var prefix = taoensso.encore.substr.call(null, prefixed_pstr, 0, 1);
  var pstr = taoensso.encore.substr.call(null, prefixed_pstr, 1);
  var clj = taoensso.sente.unpack_STAR_.call(null, packer, pstr);
  var wrapped_QMARK_ = function() {
    var G__22387 = prefix;
    switch(G__22387) {
      case "-":
        return false;
        break;
      case "+":
        return true;
        break;
      default:
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(prefix)].join(""));;
    }
  }();
  var vec__22386 = cljs.core.truth_(wrapped_QMARK_) ? clj : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj, null], null);
  var clj__$1 = cljs.core.nth.call(null, vec__22386, 0, null);
  var _QMARK_cb_uuid = cljs.core.nth.call(null, vec__22386, 1, null);
  var _QMARK_cb_uuid__$1 = cljs.core._EQ_.call(null, 0, _QMARK_cb_uuid) ? new cljs.core.Keyword(null, "ajax-cb", "ajax-cb", -807060321) : _QMARK_cb_uuid;
  taoensso.encore.tracef.call(null, "Unpacking: %s -\x3e %s", prefixed_pstr, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj__$1, _QMARK_cb_uuid__$1], null));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj__$1, _QMARK_cb_uuid__$1], null);
};
taoensso.sente.IChSocket = function() {
  var obj22390 = {};
  return obj22390;
}();
taoensso.sente.chsk_init_BANG_ = function chsk_init_BANG_(chsk) {
  if (function() {
    var and__3749__auto__ = chsk;
    if (and__3749__auto__) {
      return chsk.taoensso$sente$IChSocket$chsk_init_BANG_$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return chsk.taoensso$sente$IChSocket$chsk_init_BANG_$arity$1(chsk);
  } else {
    var x__4400__auto__ = chsk == null ? null : chsk;
    return function() {
      var or__3761__auto__ = taoensso.sente.chsk_init_BANG_[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = taoensso.sente.chsk_init_BANG_["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChSocket.chsk-init!", chsk);
        }
      }
    }().call(null, chsk);
  }
};
taoensso.sente.chsk_destroy_BANG_ = function chsk_destroy_BANG_(chsk) {
  if (function() {
    var and__3749__auto__ = chsk;
    if (and__3749__auto__) {
      return chsk.taoensso$sente$IChSocket$chsk_destroy_BANG_$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return chsk.taoensso$sente$IChSocket$chsk_destroy_BANG_$arity$1(chsk);
  } else {
    var x__4400__auto__ = chsk == null ? null : chsk;
    return function() {
      var or__3761__auto__ = taoensso.sente.chsk_destroy_BANG_[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = taoensso.sente.chsk_destroy_BANG_["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChSocket.chsk-destroy!", chsk);
        }
      }
    }().call(null, chsk);
  }
};
taoensso.sente.chsk_reconnect_BANG_ = function chsk_reconnect_BANG_(chsk) {
  if (function() {
    var and__3749__auto__ = chsk;
    if (and__3749__auto__) {
      return chsk.taoensso$sente$IChSocket$chsk_reconnect_BANG_$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return chsk.taoensso$sente$IChSocket$chsk_reconnect_BANG_$arity$1(chsk);
  } else {
    var x__4400__auto__ = chsk == null ? null : chsk;
    return function() {
      var or__3761__auto__ = taoensso.sente.chsk_reconnect_BANG_[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = taoensso.sente.chsk_reconnect_BANG_["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChSocket.chsk-reconnect!", chsk);
        }
      }
    }().call(null, chsk);
  }
};
taoensso.sente.chsk_send_BANG__STAR_ = function chsk_send_BANG__STAR_(chsk, ev, opts) {
  if (function() {
    var and__3749__auto__ = chsk;
    if (and__3749__auto__) {
      return chsk.taoensso$sente$IChSocket$chsk_send_BANG__STAR_$arity$3;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return chsk.taoensso$sente$IChSocket$chsk_send_BANG__STAR_$arity$3(chsk, ev, opts);
  } else {
    var x__4400__auto__ = chsk == null ? null : chsk;
    return function() {
      var or__3761__auto__ = taoensso.sente.chsk_send_BANG__STAR_[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = taoensso.sente.chsk_send_BANG__STAR_["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChSocket.chsk-send!*", chsk);
        }
      }
    }().call(null, chsk, ev, opts);
  }
};
taoensso.sente.chsk_send_BANG_ = function() {
  var chsk_send_BANG_ = null;
  var chsk_send_BANG___2 = function(chsk, ev) {
    return chsk_send_BANG_.call(null, chsk, ev, cljs.core.PersistentArrayMap.EMPTY);
  };
  var chsk_send_BANG___3 = function(chsk, ev, opts) {
    taoensso.encore.tracef.call(null, "Chsk send: (%s) %s", cljs.core.assoc.call(null, opts, new cljs.core.Keyword(null, "cb", "cb", 589947841), cljs.core.boolean$.call(null, (new cljs.core.Keyword(null, "cb", "cb", 589947841)).cljs$core$IFn$_invoke$arity$1(opts))), ev);
    return taoensso.sente.chsk_send_BANG__STAR_.call(null, chsk, ev, opts);
  };
  var chsk_send_BANG___4 = function(chsk, ev, _QMARK_timeout_ms, _QMARK_cb) {
    return chsk_send_BANG_.call(null, chsk, ev, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406), _QMARK_timeout_ms, new cljs.core.Keyword(null, "cb", "cb", 589947841), _QMARK_cb], null));
  };
  chsk_send_BANG_ = function(chsk, ev, _QMARK_timeout_ms, _QMARK_cb) {
    switch(arguments.length) {
      case 2:
        return chsk_send_BANG___2.call(this, chsk, ev);
      case 3:
        return chsk_send_BANG___3.call(this, chsk, ev, _QMARK_timeout_ms);
      case 4:
        return chsk_send_BANG___4.call(this, chsk, ev, _QMARK_timeout_ms, _QMARK_cb);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chsk_send_BANG_.cljs$core$IFn$_invoke$arity$2 = chsk_send_BANG___2;
  chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3 = chsk_send_BANG___3;
  chsk_send_BANG_.cljs$core$IFn$_invoke$arity$4 = chsk_send_BANG___4;
  return chsk_send_BANG_;
}();
taoensso.sente.assert_send_args = function assert_send_args(x, _QMARK_timeout_ms, _QMARK_cb) {
  taoensso.sente.assert_event.call(null, x);
  if (_QMARK_timeout_ms == null && _QMARK_cb == null || taoensso.encore.nneg_int_QMARK_.call(null, _QMARK_timeout_ms)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(taoensso.encore.format.call(null, "cb requires a timeout; timeout-ms should be a +ive integer: %s", _QMARK_timeout_ms)), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, 
    "?timeout-ms", "?timeout-ms", -651193632, null)), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "?cb", "?cb", -1346810436, null))), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol("enc", "nneg-int?", "enc/nneg-int?", 803640858, null), new cljs.core.Symbol(null, "?timeout-ms", "?timeout-ms", -651193632, null))))))].join(""));
  }
  if (_QMARK_cb == null || cljs.core.ifn_QMARK_.call(null, _QMARK_cb) || taoensso.encore.chan_QMARK_.call(null, _QMARK_cb)) {
    return null;
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(taoensso.encore.format.call(null, "cb should be nil, an ifn, or a channel: %s", cljs.core.type.call(null, _QMARK_cb))), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "?cb", "?cb", -1346810436, null)), cljs.core.list(new cljs.core.Symbol(null, 
    "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "?cb", "?cb", -1346810436, null)), cljs.core.list(new cljs.core.Symbol("enc", "chan?", "enc/chan?", 1377166, null), new cljs.core.Symbol(null, "?cb", "?cb", -1346810436, null)))))].join(""));
  }
};
taoensso.sente.pull_unused_cb_fn_BANG_ = function pull_unused_cb_fn_BANG_(cbs_waiting_, _QMARK_cb_uuid) {
  var temp__4126__auto__ = _QMARK_cb_uuid;
  if (cljs.core.truth_(temp__4126__auto__)) {
    var cb_uuid = temp__4126__auto__;
    return taoensso.encore.swap_in_BANG_.call(null, cbs_waiting_, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cb_uuid], null), function(cb_uuid, temp__4126__auto__) {
      return function(_QMARK_f) {
        return taoensso.encore.swapped.call(null, new cljs.core.Keyword("swap", "dissoc", "swap/dissoc", -605373782), _QMARK_f);
      };
    }(cb_uuid, temp__4126__auto__));
  } else {
    return null;
  }
};
taoensso.sente.merge_GT_chsk_state_BANG_ = function merge_GT_chsk_state_BANG_(p__22391, merge_state) {
  var map__22394 = p__22391;
  var map__22394__$1 = cljs.core.seq_QMARK_.call(null, map__22394) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22394) : map__22394;
  var chsk = map__22394__$1;
  var state_ = cljs.core.get.call(null, map__22394__$1, new cljs.core.Keyword(null, "state_", "state_", 957667102));
  var chs = cljs.core.get.call(null, map__22394__$1, new cljs.core.Keyword(null, "chs", "chs", 376886120));
  var vec__22395 = taoensso.encore.swap_in_BANG_.call(null, state_, cljs.core.PersistentVector.EMPTY, function(map__22394, map__22394__$1, chsk, state_, chs) {
    return function(old_state) {
      var new_state = cljs.core.merge.call(null, old_state, merge_state);
      var new_state__$1 = cljs.core.not.call(null, function() {
        var and__3749__auto__ = (new cljs.core.Keyword(null, "requested-reconnect-pending?", "requested-reconnect-pending?", -299841116)).cljs$core$IFn$_invoke$arity$1(old_state);
        if (cljs.core.truth_(and__3749__auto__)) {
          var and__3749__auto____$1 = (new cljs.core.Keyword(null, "open?", "open?", 1238443125)).cljs$core$IFn$_invoke$arity$1(new_state);
          if (cljs.core.truth_(and__3749__auto____$1)) {
            return cljs.core.not.call(null, (new cljs.core.Keyword(null, "open?", "open?", 1238443125)).cljs$core$IFn$_invoke$arity$1(old_state));
          } else {
            return and__3749__auto____$1;
          }
        } else {
          return and__3749__auto__;
        }
      }()) ? new_state : cljs.core.assoc.call(null, cljs.core.dissoc.call(null, new_state, new cljs.core.Keyword(null, "requested-reconnect-pending?", "requested-reconnect-pending?", -299841116)), new cljs.core.Keyword(null, "requested-reconnect?", "requested-reconnect?", -1504983666), true);
      return taoensso.encore.swapped.call(null, new_state__$1, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_state, new_state__$1], null));
    };
  }(map__22394, map__22394__$1, chsk, state_, chs));
  var old_state = cljs.core.nth.call(null, vec__22395, 0, null);
  var new_state = cljs.core.nth.call(null, vec__22395, 1, null);
  if (cljs.core.not_EQ_.call(null, old_state, new_state)) {
    cljs.core.async.put_BANG_.call(null, (new cljs.core.Keyword(null, "state", "state", -1988618099)).cljs$core$IFn$_invoke$arity$1(chs), new_state);
    return new_state;
  } else {
    return null;
  }
};
taoensso.sente.cb_chan_as_fn = function cb_chan_as_fn(_QMARK_cb, ev) {
  if (_QMARK_cb == null || cljs.core.ifn_QMARK_.call(null, _QMARK_cb)) {
    return _QMARK_cb;
  } else {
    taoensso.encore.hcond.call(null, false, "taoensso.sente", null, new cljs.core.Delay(function() {
      return _QMARK_cb;
    }, null), new cljs.core.Symbol(null, "?cb", "?cb", -1346810436, null), taoensso.encore.chan_QMARK_, new cljs.core.Symbol("enc", "chan?", "enc/chan?", 1377166, null));
    taoensso.sente.assert_event.call(null, ev);
    var vec__22397 = ev;
    var ev_id = cljs.core.nth.call(null, vec__22397, 0, null);
    var _ = cljs.core.nth.call(null, vec__22397, 1, null);
    var cb_ch = _QMARK_cb;
    return function(vec__22397, ev_id, _, cb_ch) {
      return function(reply) {
        return cljs.core.async.put_BANG_.call(null, cb_ch, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, [cljs.core.str(taoensso.encore.fq_name.call(null, ev_id)), cljs.core.str(".cb")].join("")), reply], null));
      };
    }(vec__22397, ev_id, _, cb_ch);
  }
};
taoensso.sente.receive_buffered_evs_BANG_ = function receive_buffered_evs_BANG_(chs, clj) {
  taoensso.encore.tracef.call(null, "receive-buffered-evs!: %s", clj);
  var buffered_evs = taoensso.encore.hcond.call(null, false, "taoensso.sente", 739, new cljs.core.Delay(function() {
    return clj;
  }, null), new cljs.core.Symbol(null, "clj", "clj", 980036099, null), cljs.core.vector_QMARK_, new cljs.core.Symbol(null, "vector?", "vector?", -61367869, null));
  var seq__22402 = cljs.core.seq.call(null, buffered_evs);
  var chunk__22403 = null;
  var count__22404 = 0;
  var i__22405 = 0;
  while (true) {
    if (i__22405 < count__22404) {
      var ev = cljs.core._nth.call(null, chunk__22403, i__22405);
      taoensso.sente.assert_event.call(null, ev);
      cljs.core.async.put_BANG_.call(null, (new cljs.core.Keyword(null, "\x3cserver", "\x3cserver", -2135373537)).cljs$core$IFn$_invoke$arity$1(chs), ev);
      var G__22406 = seq__22402;
      var G__22407 = chunk__22403;
      var G__22408 = count__22404;
      var G__22409 = i__22405 + 1;
      seq__22402 = G__22406;
      chunk__22403 = G__22407;
      count__22404 = G__22408;
      i__22405 = G__22409;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__22402);
      if (temp__4126__auto__) {
        var seq__22402__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__22402__$1)) {
          var c__4543__auto__ = cljs.core.chunk_first.call(null, seq__22402__$1);
          var G__22410 = cljs.core.chunk_rest.call(null, seq__22402__$1);
          var G__22411 = c__4543__auto__;
          var G__22412 = cljs.core.count.call(null, c__4543__auto__);
          var G__22413 = 0;
          seq__22402 = G__22410;
          chunk__22403 = G__22411;
          count__22404 = G__22412;
          i__22405 = G__22413;
          continue;
        } else {
          var ev = cljs.core.first.call(null, seq__22402__$1);
          taoensso.sente.assert_event.call(null, ev);
          cljs.core.async.put_BANG_.call(null, (new cljs.core.Keyword(null, "\x3cserver", "\x3cserver", -2135373537)).cljs$core$IFn$_invoke$arity$1(chs), ev);
          var G__22414 = cljs.core.next.call(null, seq__22402__$1);
          var G__22415 = null;
          var G__22416 = 0;
          var G__22417 = 0;
          seq__22402 = G__22414;
          chunk__22403 = G__22415;
          count__22404 = G__22416;
          i__22405 = G__22417;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
taoensso.sente.handle_when_handshake_BANG_ = function handle_when_handshake_BANG_(chsk, chs, clj) {
  var handshake_QMARK_ = cljs.core.vector_QMARK_.call(null, clj) && cljs.core._EQ_.call(null, cljs.core.first.call(null, clj), new cljs.core.Keyword("chsk", "handshake", "chsk/handshake", 64910686));
  taoensso.encore.tracef.call(null, "handle-when-handshake (%s): %s", handshake_QMARK_ ? new cljs.core.Keyword(null, "handshake", "handshake", 68079331) : new cljs.core.Keyword(null, "non-handshake", "non-handshake", 576986062), clj);
  if (handshake_QMARK_) {
    var vec__22420 = clj;
    var _ = cljs.core.nth.call(null, vec__22420, 0, null);
    var vec__22421 = cljs.core.nth.call(null, vec__22420, 1, null);
    var _QMARK_uid = cljs.core.nth.call(null, vec__22421, 0, null);
    var _QMARK_csrf_token = cljs.core.nth.call(null, vec__22421, 1, null);
    var _QMARK_handshake_data = cljs.core.nth.call(null, vec__22421, 2, null);
    var handshake_ev = vec__22420;
    if (cljs.core.truth_(clojure.string.blank_QMARK_.call(null, _QMARK_csrf_token))) {
      taoensso.encore.warnf.call(null, "SECURITY WARNING: no CSRF token available for use by Sente");
    } else {
    }
    taoensso.sente.merge_GT_chsk_state_BANG_.call(null, chsk, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "open?", "open?", 1238443125), true, new cljs.core.Keyword(null, "uid", "uid", -1447769400), _QMARK_uid, new cljs.core.Keyword(null, "csrf-token", "csrf-token", -1872302856), _QMARK_csrf_token], null));
    taoensso.sente.assert_event.call(null, handshake_ev);
    cljs.core.async.put_BANG_.call(null, (new cljs.core.Keyword(null, "internal", "internal", -854870097)).cljs$core$IFn$_invoke$arity$1(chs), handshake_ev);
    return new cljs.core.Keyword(null, "handled", "handled", 1889700151);
  } else {
    return null;
  }
};
taoensso.sente.set_exp_backoff_timeout_BANG_ = function() {
  var set_exp_backoff_timeout_BANG___delegate = function(nullary_f, p__22422) {
    var vec__22424 = p__22422;
    var nattempt = cljs.core.nth.call(null, vec__22424, 0, null);
    return window.setTimeout(nullary_f, taoensso.encore.exp_backoff.call(null, function() {
      var or__3761__auto__ = nattempt;
      if (cljs.core.truth_(or__3761__auto__)) {
        return or__3761__auto__;
      } else {
        return 0;
      }
    }()));
  };
  var set_exp_backoff_timeout_BANG_ = function(nullary_f, var_args) {
    var p__22422 = null;
    if (arguments.length > 1) {
      p__22422 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return set_exp_backoff_timeout_BANG___delegate.call(this, nullary_f, p__22422);
  };
  set_exp_backoff_timeout_BANG_.cljs$lang$maxFixedArity = 1;
  set_exp_backoff_timeout_BANG_.cljs$lang$applyTo = function(arglist__22425) {
    var nullary_f = cljs.core.first(arglist__22425);
    var p__22422 = cljs.core.rest(arglist__22425);
    return set_exp_backoff_timeout_BANG___delegate(nullary_f, p__22422);
  };
  set_exp_backoff_timeout_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_exp_backoff_timeout_BANG___delegate;
  return set_exp_backoff_timeout_BANG_;
}();
taoensso.sente.ChWebSocket = function(client_id, url, chs, socket_, kalive_ms, kalive_timer_, kalive_due_QMARK__, nattempt_, cbs_waiting_, state_, packer, __meta, __extmap) {
  this.client_id = client_id;
  this.url = url;
  this.chs = chs;
  this.socket_ = socket_;
  this.kalive_ms = kalive_ms;
  this.kalive_timer_ = kalive_timer_;
  this.kalive_due_QMARK__ = kalive_due_QMARK__;
  this.nattempt_ = nattempt_;
  this.cbs_waiting_ = cbs_waiting_;
  this.state_ = state_;
  this.packer = packer;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 11) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
taoensso.sente.ChWebSocket.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4359__auto__, k__4360__auto__) {
  var self__ = this;
  var this__4359__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4359__auto____$1, k__4360__auto__, null);
};
taoensso.sente.ChWebSocket.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4361__auto__, k22427, else__4362__auto__) {
  var self__ = this;
  var this__4361__auto____$1 = this;
  var G__22429 = k22427 instanceof cljs.core.Keyword ? k22427.fqn : null;
  switch(G__22429) {
    case "client-id":
      return self__.client_id;
      break;
    case "kalive-ms":
      return self__.kalive_ms;
      break;
    case "nattempt_":
      return self__.nattempt_;
      break;
    case "packer":
      return self__.packer;
      break;
    case "chs":
      return self__.chs;
      break;
    case "socket_":
      return self__.socket_;
      break;
    case "url":
      return self__.url;
      break;
    case "kalive-due?_":
      return self__.kalive_due_QMARK__;
      break;
    case "cbs-waiting_":
      return self__.cbs_waiting_;
      break;
    case "kalive-timer_":
      return self__.kalive_timer_;
      break;
    case "state_":
      return self__.state_;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k22427, else__4362__auto__);
  }
};
taoensso.sente.ChWebSocket.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4373__auto__, writer__4374__auto__, opts__4375__auto__) {
  var self__ = this;
  var this__4373__auto____$1 = this;
  var pr_pair__4376__auto__ = function(this__4373__auto____$1) {
    return function(keyval__4377__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4374__auto__, cljs.core.pr_writer, "", " ", "", opts__4375__auto__, keyval__4377__auto__);
    };
  }(this__4373__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4374__auto__, pr_pair__4376__auto__, "#taoensso.sente.ChWebSocket{", ", ", "}", opts__4375__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), self__.client_id], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "url", "url", 276297046), self__.url], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "chs", "chs", 376886120), self__.chs], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "socket_", "socket_", -361048908), self__.socket_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "kalive-ms", "kalive-ms", 210734021), self__.kalive_ms], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kalive-timer_", "kalive-timer_", 1558413149), self__.kalive_timer_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kalive-due?_", "kalive-due?_", 39438072), self__.kalive_due_QMARK__], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "nattempt_", "nattempt_", 1980196552), self__.nattempt_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cbs-waiting_", "cbs-waiting_", -1519029061), self__.cbs_waiting_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state_", "state_", 957667102), self__.state_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "packer", "packer", 66077544), self__.packer], null)], null), self__.__extmap));
};
taoensso.sente.ChWebSocket.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4357__auto__) {
  var self__ = this;
  var this__4357__auto____$1 = this;
  return self__.__meta;
};
taoensso.sente.ChWebSocket.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4353__auto__) {
  var self__ = this;
  var this__4353__auto____$1 = this;
  return new taoensso.sente.ChWebSocket(self__.client_id, self__.url, self__.chs, self__.socket_, self__.kalive_ms, self__.kalive_timer_, self__.kalive_due_QMARK__, self__.nattempt_, self__.cbs_waiting_, self__.state_, self__.packer, self__.__meta, self__.__extmap, self__.__hash);
};
taoensso.sente.ChWebSocket.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4363__auto__) {
  var self__ = this;
  var this__4363__auto____$1 = this;
  return 11 + cljs.core.count.call(null, self__.__extmap);
};
taoensso.sente.ChWebSocket.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4354__auto__) {
  var self__ = this;
  var this__4354__auto____$1 = this;
  var h__4177__auto__ = self__.__hash;
  if (!(h__4177__auto__ == null)) {
    return h__4177__auto__;
  } else {
    var h__4177__auto____$1 = cljs.core.hash_imap.call(null, this__4354__auto____$1);
    self__.__hash = h__4177__auto____$1;
    return h__4177__auto____$1;
  }
};
taoensso.sente.ChWebSocket.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4355__auto__, other__4356__auto__) {
  var self__ = this;
  var this__4355__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3749__auto__ = other__4356__auto__;
    if (cljs.core.truth_(and__3749__auto__)) {
      return this__4355__auto____$1.constructor === other__4356__auto__.constructor && cljs.core.equiv_map.call(null, this__4355__auto____$1, other__4356__auto__);
    } else {
      return and__3749__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
taoensso.sente.ChWebSocket.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4368__auto__, k__4369__auto__) {
  var self__ = this;
  var this__4368__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 11, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), null, new cljs.core.Keyword(null, "kalive-ms", "kalive-ms", 210734021), null, new cljs.core.Keyword(null, "nattempt_", "nattempt_", 1980196552), null, new cljs.core.Keyword(null, "packer", "packer", 66077544), null, new cljs.core.Keyword(null, "chs", "chs", 376886120), null, new cljs.core.Keyword(null, "socket_", 
  "socket_", -361048908), null, new cljs.core.Keyword(null, "url", "url", 276297046), null, new cljs.core.Keyword(null, "kalive-due?_", "kalive-due?_", 39438072), null, new cljs.core.Keyword(null, "cbs-waiting_", "cbs-waiting_", -1519029061), null, new cljs.core.Keyword(null, "kalive-timer_", "kalive-timer_", 1558413149), null, new cljs.core.Keyword(null, "state_", "state_", 957667102), null], null), null), k__4369__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4368__auto____$1), self__.__meta), k__4369__auto__);
  } else {
    return new taoensso.sente.ChWebSocket(self__.client_id, self__.url, self__.chs, self__.socket_, self__.kalive_ms, self__.kalive_timer_, self__.kalive_due_QMARK__, self__.nattempt_, self__.cbs_waiting_, self__.state_, self__.packer, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4369__auto__)), null);
  }
};
taoensso.sente.ChWebSocket.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4366__auto__, k__4367__auto__, G__22426) {
  var self__ = this;
  var this__4366__auto____$1 = this;
  var pred__22430 = cljs.core.keyword_identical_QMARK_;
  var expr__22431 = k__4367__auto__;
  if (cljs.core.truth_(pred__22430.call(null, new cljs.core.Keyword(null, "client-id", "client-id", -464622140), expr__22431))) {
    return new taoensso.sente.ChWebSocket(G__22426, self__.url, self__.chs, self__.socket_, self__.kalive_ms, self__.kalive_timer_, self__.kalive_due_QMARK__, self__.nattempt_, self__.cbs_waiting_, self__.state_, self__.packer, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__22430.call(null, new cljs.core.Keyword(null, "url", "url", 276297046), expr__22431))) {
      return new taoensso.sente.ChWebSocket(self__.client_id, G__22426, self__.chs, self__.socket_, self__.kalive_ms, self__.kalive_timer_, self__.kalive_due_QMARK__, self__.nattempt_, self__.cbs_waiting_, self__.state_, self__.packer, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__22430.call(null, new cljs.core.Keyword(null, "chs", "chs", 376886120), expr__22431))) {
        return new taoensso.sente.ChWebSocket(self__.client_id, self__.url, G__22426, self__.socket_, self__.kalive_ms, self__.kalive_timer_, self__.kalive_due_QMARK__, self__.nattempt_, self__.cbs_waiting_, self__.state_, self__.packer, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__22430.call(null, new cljs.core.Keyword(null, "socket_", "socket_", -361048908), expr__22431))) {
          return new taoensso.sente.ChWebSocket(self__.client_id, self__.url, self__.chs, G__22426, self__.kalive_ms, self__.kalive_timer_, self__.kalive_due_QMARK__, self__.nattempt_, self__.cbs_waiting_, self__.state_, self__.packer, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__22430.call(null, new cljs.core.Keyword(null, "kalive-ms", "kalive-ms", 210734021), expr__22431))) {
            return new taoensso.sente.ChWebSocket(self__.client_id, self__.url, self__.chs, self__.socket_, G__22426, self__.kalive_timer_, self__.kalive_due_QMARK__, self__.nattempt_, self__.cbs_waiting_, self__.state_, self__.packer, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__22430.call(null, new cljs.core.Keyword(null, "kalive-timer_", "kalive-timer_", 1558413149), expr__22431))) {
              return new taoensso.sente.ChWebSocket(self__.client_id, self__.url, self__.chs, self__.socket_, self__.kalive_ms, G__22426, self__.kalive_due_QMARK__, self__.nattempt_, self__.cbs_waiting_, self__.state_, self__.packer, self__.__meta, self__.__extmap, null);
            } else {
              if (cljs.core.truth_(pred__22430.call(null, new cljs.core.Keyword(null, "kalive-due?_", "kalive-due?_", 39438072), expr__22431))) {
                return new taoensso.sente.ChWebSocket(self__.client_id, self__.url, self__.chs, self__.socket_, self__.kalive_ms, self__.kalive_timer_, G__22426, self__.nattempt_, self__.cbs_waiting_, self__.state_, self__.packer, self__.__meta, self__.__extmap, null);
              } else {
                if (cljs.core.truth_(pred__22430.call(null, new cljs.core.Keyword(null, "nattempt_", "nattempt_", 1980196552), expr__22431))) {
                  return new taoensso.sente.ChWebSocket(self__.client_id, self__.url, self__.chs, self__.socket_, self__.kalive_ms, self__.kalive_timer_, self__.kalive_due_QMARK__, G__22426, self__.cbs_waiting_, self__.state_, self__.packer, self__.__meta, self__.__extmap, null);
                } else {
                  if (cljs.core.truth_(pred__22430.call(null, new cljs.core.Keyword(null, "cbs-waiting_", "cbs-waiting_", -1519029061), expr__22431))) {
                    return new taoensso.sente.ChWebSocket(self__.client_id, self__.url, self__.chs, self__.socket_, self__.kalive_ms, self__.kalive_timer_, self__.kalive_due_QMARK__, self__.nattempt_, G__22426, self__.state_, self__.packer, self__.__meta, self__.__extmap, null);
                  } else {
                    if (cljs.core.truth_(pred__22430.call(null, new cljs.core.Keyword(null, "state_", "state_", 957667102), expr__22431))) {
                      return new taoensso.sente.ChWebSocket(self__.client_id, self__.url, self__.chs, self__.socket_, self__.kalive_ms, self__.kalive_timer_, self__.kalive_due_QMARK__, self__.nattempt_, self__.cbs_waiting_, G__22426, self__.packer, self__.__meta, self__.__extmap, null);
                    } else {
                      if (cljs.core.truth_(pred__22430.call(null, new cljs.core.Keyword(null, "packer", "packer", 66077544), expr__22431))) {
                        return new taoensso.sente.ChWebSocket(self__.client_id, self__.url, self__.chs, self__.socket_, self__.kalive_ms, self__.kalive_timer_, self__.kalive_due_QMARK__, self__.nattempt_, self__.cbs_waiting_, self__.state_, G__22426, self__.__meta, self__.__extmap, null);
                      } else {
                        return new taoensso.sente.ChWebSocket(self__.client_id, self__.url, self__.chs, self__.socket_, self__.kalive_ms, self__.kalive_timer_, self__.kalive_due_QMARK__, self__.nattempt_, self__.cbs_waiting_, self__.state_, self__.packer, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4367__auto__, G__22426), null);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
taoensso.sente.ChWebSocket.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4371__auto__) {
  var self__ = this;
  var this__4371__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), self__.client_id], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "url", "url", 276297046), self__.url], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "chs", "chs", 376886120), self__.chs], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "socket_", "socket_", -361048908), self__.socket_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kalive-ms", "kalive-ms", 210734021), self__.kalive_ms], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kalive-timer_", "kalive-timer_", 1558413149), self__.kalive_timer_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kalive-due?_", "kalive-due?_", 39438072), self__.kalive_due_QMARK__], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "nattempt_", "nattempt_", 1980196552), self__.nattempt_], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cbs-waiting_", "cbs-waiting_", -1519029061), self__.cbs_waiting_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state_", "state_", 957667102), self__.state_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "packer", "packer", 66077544), 
  self__.packer], null)], null), self__.__extmap));
};
taoensso.sente.ChWebSocket.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4358__auto__, G__22426) {
  var self__ = this;
  var this__4358__auto____$1 = this;
  return new taoensso.sente.ChWebSocket(self__.client_id, self__.url, self__.chs, self__.socket_, self__.kalive_ms, self__.kalive_timer_, self__.kalive_due_QMARK__, self__.nattempt_, self__.cbs_waiting_, self__.state_, self__.packer, G__22426, self__.__extmap, self__.__hash);
};
taoensso.sente.ChWebSocket.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4364__auto__, entry__4365__auto__) {
  var self__ = this;
  var this__4364__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4365__auto__)) {
    return cljs.core._assoc.call(null, this__4364__auto____$1, cljs.core._nth.call(null, entry__4365__auto__, 0), cljs.core._nth.call(null, entry__4365__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4364__auto____$1, entry__4365__auto__);
  }
};
taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$ = true;
taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$chsk_send_BANG__STAR_$arity$3 = function(chsk, ev, p__22433) {
  var self__ = this;
  var map__22434 = p__22433;
  var map__22434__$1 = cljs.core.seq_QMARK_.call(null, map__22434) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22434) : map__22434;
  var opts = map__22434__$1;
  var flush_QMARK_ = cljs.core.get.call(null, map__22434__$1, new cljs.core.Keyword(null, "flush?", "flush?", -108887231));
  var _QMARK_timeout_ms = cljs.core.get.call(null, map__22434__$1, new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406));
  var _QMARK_cb = cljs.core.get.call(null, map__22434__$1, new cljs.core.Keyword(null, "cb", "cb", 589947841));
  var chsk__$1 = this;
  taoensso.sente.assert_send_args.call(null, ev, _QMARK_timeout_ms, _QMARK_cb);
  var _QMARK_cb_fn = taoensso.sente.cb_chan_as_fn.call(null, _QMARK_cb, ev);
  if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "open?", "open?", 1238443125)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.state_)))) {
    taoensso.encore.warnf.call(null, "Chsk send against closed chsk.");
    if (cljs.core.truth_(_QMARK_cb_fn)) {
      return _QMARK_cb_fn.call(null, new cljs.core.Keyword("chsk", "closed", "chsk/closed", -922855264));
    } else {
      return null;
    }
  } else {
    var _QMARK_cb_uuid = cljs.core.truth_(_QMARK_cb_fn) ? taoensso.encore.uuid_str.call(null, 6) : null;
    var ppstr = taoensso.sente.pack.call(null, self__.packer, cljs.core.meta.call(null, ev), ev, _QMARK_cb_uuid);
    var temp__4126__auto___22467 = _QMARK_cb_uuid;
    if (cljs.core.truth_(temp__4126__auto___22467)) {
      var cb_uuid_22468 = temp__4126__auto___22467;
      taoensso.encore.reset_in_BANG_.call(null, self__.cbs_waiting_, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cb_uuid_22468], null), taoensso.encore.hcond.call(null, false, "taoensso.sente", 804, new cljs.core.Delay(function(cb_uuid_22468, temp__4126__auto___22467, _QMARK_cb_uuid, ppstr, _QMARK_cb_fn, chsk__$1, map__22434, map__22434__$1, opts, flush_QMARK_, _QMARK_timeout_ms, _QMARK_cb) {
        return function() {
          return _QMARK_cb_fn;
        };
      }(cb_uuid_22468, temp__4126__auto___22467, _QMARK_cb_uuid, ppstr, _QMARK_cb_fn, chsk__$1, map__22434, map__22434__$1, opts, flush_QMARK_, _QMARK_timeout_ms, _QMARK_cb), null), new cljs.core.Symbol(null, "?cb-fn", "?cb-fn", -1734331361, null), taoensso.encore.nnil_QMARK_, new cljs.core.Symbol("taoensso.encore", "nnil?", "taoensso.encore/nnil?", -1813154343, null)));
      var temp__4126__auto___22469__$1 = _QMARK_timeout_ms;
      if (cljs.core.truth_(temp__4126__auto___22469__$1)) {
        var timeout_ms_22470 = temp__4126__auto___22469__$1;
        var c__6670__auto___22471 = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function(c__6670__auto___22471, timeout_ms_22470, temp__4126__auto___22469__$1, cb_uuid_22468, temp__4126__auto___22467, _QMARK_cb_uuid, ppstr, _QMARK_cb_fn, chsk__$1, map__22434, map__22434__$1, opts, flush_QMARK_, _QMARK_timeout_ms, _QMARK_cb) {
          return function() {
            var f__6671__auto__ = function() {
              var switch__6655__auto__ = function(c__6670__auto___22471, timeout_ms_22470, temp__4126__auto___22469__$1, cb_uuid_22468, temp__4126__auto___22467, _QMARK_cb_uuid, ppstr, _QMARK_cb_fn, chsk__$1, map__22434, map__22434__$1, opts, flush_QMARK_, _QMARK_timeout_ms, _QMARK_cb) {
                return function(state_22445) {
                  var state_val_22446 = state_22445[1];
                  if (state_val_22446 === 5) {
                    var inst_22443 = state_22445[2];
                    var state_22445__$1 = state_22445;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22445__$1, inst_22443);
                  } else {
                    if (state_val_22446 === 4) {
                      var state_22445__$1 = state_22445;
                      var statearr_22447_22472 = state_22445__$1;
                      statearr_22447_22472[2] = null;
                      statearr_22447_22472[1] = 5;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_22446 === 3) {
                        var inst_22438 = state_22445[7];
                        var inst_22440 = inst_22438.call(null, new cljs.core.Keyword("chsk", "timeout", "chsk/timeout", -319776489));
                        var state_22445__$1 = state_22445;
                        var statearr_22448_22473 = state_22445__$1;
                        statearr_22448_22473[2] = inst_22440;
                        statearr_22448_22473[1] = 5;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_22446 === 2) {
                          var inst_22438 = state_22445[7];
                          var inst_22437 = state_22445[2];
                          var inst_22438__$1 = taoensso.sente.pull_unused_cb_fn_BANG_.call(null, self__.cbs_waiting_, _QMARK_cb_uuid);
                          var state_22445__$1 = function() {
                            var statearr_22449 = state_22445;
                            statearr_22449[8] = inst_22437;
                            statearr_22449[7] = inst_22438__$1;
                            return statearr_22449;
                          }();
                          if (cljs.core.truth_(inst_22438__$1)) {
                            var statearr_22450_22474 = state_22445__$1;
                            statearr_22450_22474[1] = 3;
                          } else {
                            var statearr_22451_22475 = state_22445__$1;
                            statearr_22451_22475[1] = 4;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_22446 === 1) {
                            var inst_22435 = cljs.core.async.timeout.call(null, timeout_ms_22470);
                            var state_22445__$1 = state_22445;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_22445__$1, 2, inst_22435);
                          } else {
                            return null;
                          }
                        }
                      }
                    }
                  }
                };
              }(c__6670__auto___22471, timeout_ms_22470, temp__4126__auto___22469__$1, cb_uuid_22468, temp__4126__auto___22467, _QMARK_cb_uuid, ppstr, _QMARK_cb_fn, chsk__$1, map__22434, map__22434__$1, opts, flush_QMARK_, _QMARK_timeout_ms, _QMARK_cb);
              return function(switch__6655__auto__, c__6670__auto___22471, timeout_ms_22470, temp__4126__auto___22469__$1, cb_uuid_22468, temp__4126__auto___22467, _QMARK_cb_uuid, ppstr, _QMARK_cb_fn, chsk__$1, map__22434, map__22434__$1, opts, flush_QMARK_, _QMARK_timeout_ms, _QMARK_cb) {
                return function() {
                  var state_machine__6656__auto__ = null;
                  var state_machine__6656__auto____0 = function() {
                    var statearr_22455 = [null, null, null, null, null, null, null, null, null];
                    statearr_22455[0] = state_machine__6656__auto__;
                    statearr_22455[1] = 1;
                    return statearr_22455;
                  };
                  var state_machine__6656__auto____1 = function(state_22445) {
                    while (true) {
                      var ret_value__6657__auto__ = function() {
                        try {
                          while (true) {
                            var result__6658__auto__ = switch__6655__auto__.call(null, state_22445);
                            if (cljs.core.keyword_identical_QMARK_.call(null, result__6658__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              continue;
                            } else {
                              return result__6658__auto__;
                            }
                            break;
                          }
                        } catch (e22456) {
                          if (e22456 instanceof Object) {
                            var ex__6659__auto__ = e22456;
                            var statearr_22457_22476 = state_22445;
                            statearr_22457_22476[5] = ex__6659__auto__;
                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22445);
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            throw e22456;
                          }
                        }
                      }();
                      if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6657__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var G__22477 = state_22445;
                        state_22445 = G__22477;
                        continue;
                      } else {
                        return ret_value__6657__auto__;
                      }
                      break;
                    }
                  };
                  state_machine__6656__auto__ = function(state_22445) {
                    switch(arguments.length) {
                      case 0:
                        return state_machine__6656__auto____0.call(this);
                      case 1:
                        return state_machine__6656__auto____1.call(this, state_22445);
                    }
                    throw new Error("Invalid arity: " + arguments.length);
                  };
                  state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6656__auto____0;
                  state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6656__auto____1;
                  return state_machine__6656__auto__;
                }();
              }(switch__6655__auto__, c__6670__auto___22471, timeout_ms_22470, temp__4126__auto___22469__$1, cb_uuid_22468, temp__4126__auto___22467, _QMARK_cb_uuid, ppstr, _QMARK_cb_fn, chsk__$1, map__22434, map__22434__$1, opts, flush_QMARK_, _QMARK_timeout_ms, _QMARK_cb);
            }();
            var state__6672__auto__ = function() {
              var statearr_22458 = f__6671__auto__.call(null);
              statearr_22458[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6670__auto___22471;
              return statearr_22458;
            }();
            return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6672__auto__);
          };
        }(c__6670__auto___22471, timeout_ms_22470, temp__4126__auto___22469__$1, cb_uuid_22468, temp__4126__auto___22467, _QMARK_cb_uuid, ppstr, _QMARK_cb_fn, chsk__$1, map__22434, map__22434__$1, opts, flush_QMARK_, _QMARK_timeout_ms, _QMARK_cb));
      } else {
      }
    } else {
    }
    try {
      cljs.core.deref.call(null, self__.socket_).send(ppstr);
      cljs.core.reset_BANG_.call(null, self__.kalive_due_QMARK__, false);
      return new cljs.core.Keyword(null, "apparent-success", "apparent-success", 242592222);
    } catch (e22459) {
      if (e22459 instanceof Error) {
        var e = e22459;
        taoensso.encore.errorf.call(null, "Chsk send error: %s", e);
        var temp__4126__auto___22478 = _QMARK_cb_uuid;
        if (cljs.core.truth_(temp__4126__auto___22478)) {
          var cb_uuid_22479 = temp__4126__auto___22478;
          var cb_fn_STAR__22480 = function() {
            var or__3761__auto__ = taoensso.sente.pull_unused_cb_fn_BANG_.call(null, self__.cbs_waiting_, cb_uuid_22479);
            if (cljs.core.truth_(or__3761__auto__)) {
              return or__3761__auto__;
            } else {
              return taoensso.encore.hcond.call(null, false, "taoensso.sente", 818, new cljs.core.Delay(function(or__3761__auto__, cb_uuid_22479, temp__4126__auto___22478, e, _QMARK_cb_uuid, ppstr, _QMARK_cb_fn, chsk__$1, map__22434, map__22434__$1, opts, flush_QMARK_, _QMARK_timeout_ms, _QMARK_cb) {
                return function() {
                  return _QMARK_cb_fn;
                };
              }(or__3761__auto__, cb_uuid_22479, temp__4126__auto___22478, e, _QMARK_cb_uuid, ppstr, _QMARK_cb_fn, chsk__$1, map__22434, map__22434__$1, opts, flush_QMARK_, _QMARK_timeout_ms, _QMARK_cb), null), new cljs.core.Symbol(null, "?cb-fn", "?cb-fn", -1734331361, null), taoensso.encore.nnil_QMARK_, new cljs.core.Symbol("taoensso.encore", "nnil?", "taoensso.encore/nnil?", -1813154343, null));
            }
          }();
          cb_fn_STAR__22480.call(null, new cljs.core.Keyword("chsk", "error", "chsk/error", -984175439));
        } else {
        }
        return false;
      } else {
        throw e22459;
      }
    }
  }
};
taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$chsk_reconnect_BANG_$arity$1 = function(chsk) {
  var self__ = this;
  var chsk__$1 = this;
  taoensso.sente.merge_GT_chsk_state_BANG_.call(null, chsk__$1, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "open?", "open?", 1238443125), false, new cljs.core.Keyword(null, "requested-reconnect-pending?", "requested-reconnect-pending?", -299841116), true], null));
  var temp__4126__auto__ = cljs.core.deref.call(null, self__.socket_);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var s = temp__4126__auto__;
    return s.close(3E3, "SENTE_RECONNECT");
  } else {
    return null;
  }
};
taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$chsk_destroy_BANG_$arity$1 = function(chsk) {
  var self__ = this;
  var chsk__$1 = this;
  taoensso.sente.merge_GT_chsk_state_BANG_.call(null, chsk__$1, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "open?", "open?", 1238443125), false, new cljs.core.Keyword(null, "destroyed?", "destroyed?", 1049634064), true], null));
  var temp__4126__auto__ = cljs.core.deref.call(null, self__.socket_);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var s = temp__4126__auto__;
    return s.close(1E3, "CLOSE_NORMAL");
  } else {
    return null;
  }
};
taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$chsk_init_BANG_$arity$1 = function(chsk) {
  var self__ = this;
  var chsk__$1 = this;
  var temp__4126__auto__ = function() {
    var or__3761__auto__ = window["WebSocket"];
    if (cljs.core.truth_(or__3761__auto__)) {
      return or__3761__auto__;
    } else {
      return window["MozWebSocket"];
    }
  }();
  if (cljs.core.truth_(temp__4126__auto__)) {
    var WebSocket = temp__4126__auto__;
    (function(WebSocket, temp__4126__auto__, chsk__$1) {
      return function connect_BANG_() {
        if (cljs.core.truth_((new cljs.core.Keyword(null, "destroyed?", "destroyed?", 1049634064)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.state_)))) {
          return null;
        } else {
          var retry_BANG_ = function(WebSocket, temp__4126__auto__, chsk__$1) {
            return function() {
              var nattempt_STAR_ = cljs.core.swap_BANG_.call(null, self__.nattempt_, cljs.core.inc);
              window.clearInterval(cljs.core.deref.call(null, self__.kalive_timer_));
              taoensso.encore.warnf.call(null, "Chsk is closed: will try reconnect (%s).", nattempt_STAR_);
              return taoensso.sente.set_exp_backoff_timeout_BANG_.call(null, connect_BANG_, nattempt_STAR_);
            };
          }(WebSocket, temp__4126__auto__, chsk__$1);
          var temp__4124__auto__ = function() {
            try {
              return new WebSocket(taoensso.encore.merge_url_with_query_string.call(null, self__.url, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), self__.client_id], null)));
            } catch (e22463) {
              if (e22463 instanceof Error) {
                var e = e22463;
                taoensso.encore.errorf.call(null, "WebSocket js/Error: %s", e);
                return null;
              } else {
                throw e22463;
              }
            }
          }();
          if (cljs.core.truth_(temp__4124__auto__)) {
            var socket = temp__4124__auto__;
            return cljs.core.reset_BANG_.call(null, self__.socket_, function() {
              var G__22464 = socket;
              G__22464["onerror"] = function(G__22464, socket, temp__4124__auto__, retry_BANG_, WebSocket, temp__4126__auto__, chsk__$1) {
                return function(ws_ev) {
                  return taoensso.encore.errorf.call(null, "WebSocket error: %s", ws_ev);
                };
              }(G__22464, socket, temp__4124__auto__, retry_BANG_, WebSocket, temp__4126__auto__, chsk__$1);
              G__22464["onmessage"] = function(G__22464, socket, temp__4124__auto__, retry_BANG_, WebSocket, temp__4126__auto__, chsk__$1) {
                return function(ws_ev) {
                  var ppstr = ws_ev["data"];
                  var vec__22465 = taoensso.sente.unpack.call(null, self__.packer, ppstr);
                  var clj = cljs.core.nth.call(null, vec__22465, 0, null);
                  var _QMARK_cb_uuid = cljs.core.nth.call(null, vec__22465, 1, null);
                  var or__3761__auto__ = function() {
                    var and__3749__auto__ = taoensso.sente.handle_when_handshake_BANG_.call(null, chsk__$1, self__.chs, clj);
                    if (cljs.core.truth_(and__3749__auto__)) {
                      return cljs.core.reset_BANG_.call(null, self__.nattempt_, 0);
                    } else {
                      return and__3749__auto__;
                    }
                  }();
                  if (cljs.core.truth_(or__3761__auto__)) {
                    return or__3761__auto__;
                  } else {
                    var temp__4124__auto____$1 = _QMARK_cb_uuid;
                    if (cljs.core.truth_(temp__4124__auto____$1)) {
                      var cb_uuid = temp__4124__auto____$1;
                      var temp__4124__auto____$2 = taoensso.sente.pull_unused_cb_fn_BANG_.call(null, self__.cbs_waiting_, cb_uuid);
                      if (cljs.core.truth_(temp__4124__auto____$2)) {
                        var cb_fn = temp__4124__auto____$2;
                        return cb_fn.call(null, clj);
                      } else {
                        return taoensso.encore.warnf.call(null, "Cb reply w/o local cb-fn: %s", clj);
                      }
                    } else {
                      var buffered_evs = clj;
                      return taoensso.sente.receive_buffered_evs_BANG_.call(null, self__.chs, buffered_evs);
                    }
                  }
                };
              }(G__22464, socket, temp__4124__auto__, retry_BANG_, WebSocket, temp__4126__auto__, chsk__$1);
              G__22464["onopen"] = function(G__22464, socket, temp__4124__auto__, retry_BANG_, WebSocket, temp__4126__auto__, chsk__$1) {
                return function(_ws_ev) {
                  return cljs.core.reset_BANG_.call(null, self__.kalive_timer_, window.setInterval(function(G__22464, socket, temp__4124__auto__, retry_BANG_, WebSocket, temp__4126__auto__, chsk__$1) {
                    return function() {
                      if (cljs.core.truth_(cljs.core.deref.call(null, self__.kalive_due_QMARK__))) {
                        taoensso.sente.chsk_send_BANG_.call(null, chsk__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("chsk", "ws-ping", "chsk/ws-ping", 191675304)], null));
                      } else {
                      }
                      return cljs.core.reset_BANG_.call(null, self__.kalive_due_QMARK__, true);
                    };
                  }(G__22464, socket, temp__4124__auto__, retry_BANG_, WebSocket, temp__4126__auto__, chsk__$1), self__.kalive_ms));
                };
              }(G__22464, socket, temp__4124__auto__, retry_BANG_, WebSocket, temp__4126__auto__, chsk__$1);
              G__22464["onclose"] = function(G__22464, socket, temp__4124__auto__, retry_BANG_, WebSocket, temp__4126__auto__, chsk__$1) {
                return function(_ws_ev) {
                  taoensso.sente.merge_GT_chsk_state_BANG_.call(null, chsk__$1, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "open?", "open?", 1238443125), false], null));
                  return retry_BANG_.call(null);
                };
              }(G__22464, socket, temp__4124__auto__, retry_BANG_, WebSocket, temp__4126__auto__, chsk__$1);
              return G__22464;
            }());
          } else {
            return retry_BANG_.call(null);
          }
        }
      };
    })(WebSocket, temp__4126__auto__, chsk__$1).call(null);
    return chsk__$1;
  } else {
    return null;
  }
};
taoensso.sente.ChWebSocket.cljs$lang$type = true;
taoensso.sente.ChWebSocket.cljs$lang$ctorPrSeq = function(this__4393__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "taoensso.sente/ChWebSocket");
};
taoensso.sente.ChWebSocket.cljs$lang$ctorPrWriter = function(this__4393__auto__, writer__4394__auto__) {
  return cljs.core._write.call(null, writer__4394__auto__, "taoensso.sente/ChWebSocket");
};
taoensso.sente.__GT_ChWebSocket = function __GT_ChWebSocket(client_id, url, chs, socket_, kalive_ms, kalive_timer_, kalive_due_QMARK__, nattempt_, cbs_waiting_, state_, packer) {
  return new taoensso.sente.ChWebSocket(client_id, url, chs, socket_, kalive_ms, kalive_timer_, kalive_due_QMARK__, nattempt_, cbs_waiting_, state_, packer);
};
taoensso.sente.map__GT_ChWebSocket = function map__GT_ChWebSocket(G__22428) {
  return new taoensso.sente.ChWebSocket((new cljs.core.Keyword(null, "client-id", "client-id", -464622140)).cljs$core$IFn$_invoke$arity$1(G__22428), (new cljs.core.Keyword(null, "url", "url", 276297046)).cljs$core$IFn$_invoke$arity$1(G__22428), (new cljs.core.Keyword(null, "chs", "chs", 376886120)).cljs$core$IFn$_invoke$arity$1(G__22428), (new cljs.core.Keyword(null, "socket_", "socket_", -361048908)).cljs$core$IFn$_invoke$arity$1(G__22428), (new cljs.core.Keyword(null, "kalive-ms", "kalive-ms", 
  210734021)).cljs$core$IFn$_invoke$arity$1(G__22428), (new cljs.core.Keyword(null, "kalive-timer_", "kalive-timer_", 1558413149)).cljs$core$IFn$_invoke$arity$1(G__22428), (new cljs.core.Keyword(null, "kalive-due?_", "kalive-due?_", 39438072)).cljs$core$IFn$_invoke$arity$1(G__22428), (new cljs.core.Keyword(null, "nattempt_", "nattempt_", 1980196552)).cljs$core$IFn$_invoke$arity$1(G__22428), (new cljs.core.Keyword(null, "cbs-waiting_", "cbs-waiting_", -1519029061)).cljs$core$IFn$_invoke$arity$1(G__22428), 
  (new cljs.core.Keyword(null, "state_", "state_", 957667102)).cljs$core$IFn$_invoke$arity$1(G__22428), (new cljs.core.Keyword(null, "packer", "packer", 66077544)).cljs$core$IFn$_invoke$arity$1(G__22428), null, cljs.core.dissoc.call(null, G__22428, new cljs.core.Keyword(null, "client-id", "client-id", -464622140), new cljs.core.Keyword(null, "url", "url", 276297046), new cljs.core.Keyword(null, "chs", "chs", 376886120), new cljs.core.Keyword(null, "socket_", "socket_", -361048908), new cljs.core.Keyword(null, 
  "kalive-ms", "kalive-ms", 210734021), new cljs.core.Keyword(null, "kalive-timer_", "kalive-timer_", 1558413149), new cljs.core.Keyword(null, "kalive-due?_", "kalive-due?_", 39438072), new cljs.core.Keyword(null, "nattempt_", "nattempt_", 1980196552), new cljs.core.Keyword(null, "cbs-waiting_", "cbs-waiting_", -1519029061), new cljs.core.Keyword(null, "state_", "state_", 957667102), new cljs.core.Keyword(null, "packer", "packer", 66077544)));
};
taoensso.sente.ChAjaxSocket = function(client_id, url, chs, timeout_ms, ajax_opts, curr_xhr_, state_, packer, __meta, __extmap) {
  this.client_id = client_id;
  this.url = url;
  this.chs = chs;
  this.timeout_ms = timeout_ms;
  this.ajax_opts = ajax_opts;
  this.curr_xhr_ = curr_xhr_;
  this.state_ = state_;
  this.packer = packer;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 8) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4359__auto__, k__4360__auto__) {
  var self__ = this;
  var this__4359__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4359__auto____$1, k__4360__auto__, null);
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4361__auto__, k22482, else__4362__auto__) {
  var self__ = this;
  var this__4361__auto____$1 = this;
  var G__22484 = k22482 instanceof cljs.core.Keyword ? k22482.fqn : null;
  switch(G__22484) {
    case "packer":
      return self__.packer;
      break;
    case "state_":
      return self__.state_;
      break;
    case "curr-xhr_":
      return self__.curr_xhr_;
      break;
    case "ajax-opts":
      return self__.ajax_opts;
      break;
    case "timeout-ms":
      return self__.timeout_ms;
      break;
    case "chs":
      return self__.chs;
      break;
    case "url":
      return self__.url;
      break;
    case "client-id":
      return self__.client_id;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k22482, else__4362__auto__);
  }
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4373__auto__, writer__4374__auto__, opts__4375__auto__) {
  var self__ = this;
  var this__4373__auto____$1 = this;
  var pr_pair__4376__auto__ = function(this__4373__auto____$1) {
    return function(keyval__4377__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4374__auto__, cljs.core.pr_writer, "", " ", "", opts__4375__auto__, keyval__4377__auto__);
    };
  }(this__4373__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4374__auto__, pr_pair__4376__auto__, "#taoensso.sente.ChAjaxSocket{", ", ", "}", opts__4375__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), self__.client_id], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "url", "url", 276297046), self__.url], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "chs", "chs", 376886120), self__.chs], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406), self__.timeout_ms], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "ajax-opts", "ajax-opts", -518239109), self__.ajax_opts], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "curr-xhr_", "curr-xhr_", -1318773696), self__.curr_xhr_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state_", "state_", 957667102), self__.state_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "packer", "packer", 66077544), self__.packer], null)], null), self__.__extmap));
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4357__auto__) {
  var self__ = this;
  var this__4357__auto____$1 = this;
  return self__.__meta;
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4353__auto__) {
  var self__ = this;
  var this__4353__auto____$1 = this;
  return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.url, self__.chs, self__.timeout_ms, self__.ajax_opts, self__.curr_xhr_, self__.state_, self__.packer, self__.__meta, self__.__extmap, self__.__hash);
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4363__auto__) {
  var self__ = this;
  var this__4363__auto____$1 = this;
  return 8 + cljs.core.count.call(null, self__.__extmap);
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4354__auto__) {
  var self__ = this;
  var this__4354__auto____$1 = this;
  var h__4177__auto__ = self__.__hash;
  if (!(h__4177__auto__ == null)) {
    return h__4177__auto__;
  } else {
    var h__4177__auto____$1 = cljs.core.hash_imap.call(null, this__4354__auto____$1);
    self__.__hash = h__4177__auto____$1;
    return h__4177__auto____$1;
  }
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4355__auto__, other__4356__auto__) {
  var self__ = this;
  var this__4355__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3749__auto__ = other__4356__auto__;
    if (cljs.core.truth_(and__3749__auto__)) {
      return this__4355__auto____$1.constructor === other__4356__auto__.constructor && cljs.core.equiv_map.call(null, this__4355__auto____$1, other__4356__auto__);
    } else {
      return and__3749__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4368__auto__, k__4369__auto__) {
  var self__ = this;
  var this__4368__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "curr-xhr_", "curr-xhr_", -1318773696), null, new cljs.core.Keyword(null, "client-id", "client-id", -464622140), null, new cljs.core.Keyword(null, "packer", "packer", 66077544), null, new cljs.core.Keyword(null, "chs", "chs", 376886120), null, new cljs.core.Keyword(null, "url", "url", 276297046), null, new cljs.core.Keyword(null, "ajax-opts", "ajax-opts", 
  -518239109), null, new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406), null, new cljs.core.Keyword(null, "state_", "state_", 957667102), null], null), null), k__4369__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4368__auto____$1), self__.__meta), k__4369__auto__);
  } else {
    return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.url, self__.chs, self__.timeout_ms, self__.ajax_opts, self__.curr_xhr_, self__.state_, self__.packer, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4369__auto__)), null);
  }
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4366__auto__, k__4367__auto__, G__22481) {
  var self__ = this;
  var this__4366__auto____$1 = this;
  var pred__22485 = cljs.core.keyword_identical_QMARK_;
  var expr__22486 = k__4367__auto__;
  if (cljs.core.truth_(pred__22485.call(null, new cljs.core.Keyword(null, "client-id", "client-id", -464622140), expr__22486))) {
    return new taoensso.sente.ChAjaxSocket(G__22481, self__.url, self__.chs, self__.timeout_ms, self__.ajax_opts, self__.curr_xhr_, self__.state_, self__.packer, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__22485.call(null, new cljs.core.Keyword(null, "url", "url", 276297046), expr__22486))) {
      return new taoensso.sente.ChAjaxSocket(self__.client_id, G__22481, self__.chs, self__.timeout_ms, self__.ajax_opts, self__.curr_xhr_, self__.state_, self__.packer, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__22485.call(null, new cljs.core.Keyword(null, "chs", "chs", 376886120), expr__22486))) {
        return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.url, G__22481, self__.timeout_ms, self__.ajax_opts, self__.curr_xhr_, self__.state_, self__.packer, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__22485.call(null, new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406), expr__22486))) {
          return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.url, self__.chs, G__22481, self__.ajax_opts, self__.curr_xhr_, self__.state_, self__.packer, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__22485.call(null, new cljs.core.Keyword(null, "ajax-opts", "ajax-opts", -518239109), expr__22486))) {
            return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.url, self__.chs, self__.timeout_ms, G__22481, self__.curr_xhr_, self__.state_, self__.packer, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__22485.call(null, new cljs.core.Keyword(null, "curr-xhr_", "curr-xhr_", -1318773696), expr__22486))) {
              return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.url, self__.chs, self__.timeout_ms, self__.ajax_opts, G__22481, self__.state_, self__.packer, self__.__meta, self__.__extmap, null);
            } else {
              if (cljs.core.truth_(pred__22485.call(null, new cljs.core.Keyword(null, "state_", "state_", 957667102), expr__22486))) {
                return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.url, self__.chs, self__.timeout_ms, self__.ajax_opts, self__.curr_xhr_, G__22481, self__.packer, self__.__meta, self__.__extmap, null);
              } else {
                if (cljs.core.truth_(pred__22485.call(null, new cljs.core.Keyword(null, "packer", "packer", 66077544), expr__22486))) {
                  return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.url, self__.chs, self__.timeout_ms, self__.ajax_opts, self__.curr_xhr_, self__.state_, G__22481, self__.__meta, self__.__extmap, null);
                } else {
                  return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.url, self__.chs, self__.timeout_ms, self__.ajax_opts, self__.curr_xhr_, self__.state_, self__.packer, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4367__auto__, G__22481), null);
                }
              }
            }
          }
        }
      }
    }
  }
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4371__auto__) {
  var self__ = this;
  var this__4371__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), self__.client_id], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "url", "url", 276297046), self__.url], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "chs", "chs", 376886120), self__.chs], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406), self__.timeout_ms], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ajax-opts", "ajax-opts", -518239109), self__.ajax_opts], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "curr-xhr_", "curr-xhr_", -1318773696), self__.curr_xhr_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state_", "state_", 957667102), self__.state_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "packer", "packer", 66077544), self__.packer], null)], null), self__.__extmap));
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4358__auto__, G__22481) {
  var self__ = this;
  var this__4358__auto____$1 = this;
  return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.url, self__.chs, self__.timeout_ms, self__.ajax_opts, self__.curr_xhr_, self__.state_, self__.packer, G__22481, self__.__extmap, self__.__hash);
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4364__auto__, entry__4365__auto__) {
  var self__ = this;
  var this__4364__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4365__auto__)) {
    return cljs.core._assoc.call(null, this__4364__auto____$1, cljs.core._nth.call(null, entry__4365__auto__, 0), cljs.core._nth.call(null, entry__4365__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4364__auto____$1, entry__4365__auto__);
  }
};
taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$ = true;
taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$chsk_send_BANG__STAR_$arity$3 = function(chsk, ev, p__22488) {
  var self__ = this;
  var map__22489 = p__22488;
  var map__22489__$1 = cljs.core.seq_QMARK_.call(null, map__22489) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22489) : map__22489;
  var opts = map__22489__$1;
  var flush_QMARK_ = cljs.core.get.call(null, map__22489__$1, new cljs.core.Keyword(null, "flush?", "flush?", -108887231));
  var _QMARK_timeout_ms = cljs.core.get.call(null, map__22489__$1, new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406));
  var _QMARK_cb = cljs.core.get.call(null, map__22489__$1, new cljs.core.Keyword(null, "cb", "cb", 589947841));
  var chsk__$1 = this;
  taoensso.sente.assert_send_args.call(null, ev, _QMARK_timeout_ms, _QMARK_cb);
  var _QMARK_cb_fn = taoensso.sente.cb_chan_as_fn.call(null, _QMARK_cb, ev);
  if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "open?", "open?", 1238443125)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.state_)))) {
    taoensso.encore.warnf.call(null, "Chsk send against closed chsk.");
    if (cljs.core.truth_(_QMARK_cb_fn)) {
      return _QMARK_cb_fn.call(null, new cljs.core.Keyword("chsk", "closed", "chsk/closed", -922855264));
    } else {
      return null;
    }
  } else {
    taoensso.sente.ajax_call.call(null, self__.url, cljs.core.merge.call(null, self__.ajax_opts, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "post", "post", 269697687), new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406), _QMARK_timeout_ms, new cljs.core.Keyword(null, "resp-type", "resp-type", 1050675962), new cljs.core.Keyword(null, "text", "text", -1790561697), new cljs.core.Keyword(null, "params", 
    "params", 710516235), function() {
      var ppstr = taoensso.sente.pack.call(null, self__.packer, cljs.core.meta.call(null, ev), ev, cljs.core.truth_(_QMARK_cb_fn) ? new cljs.core.Keyword(null, "ajax-cb", "ajax-cb", -807060321) : null);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "_", "_", 1453416199), taoensso.encore.now_udt.call(null), new cljs.core.Keyword(null, "csrf-token", "csrf-token", -1872302856), (new cljs.core.Keyword(null, "csrf-token", "csrf-token", -1872302856)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.state_)), new cljs.core.Keyword(null, "ppstr", "ppstr", 1557495252), ppstr], null);
    }()], null)), function(_QMARK_cb_fn, chsk__$1, map__22489, map__22489__$1, opts, flush_QMARK_, _QMARK_timeout_ms, _QMARK_cb) {
      return function ajax_cb(p__22490) {
        var map__22493 = p__22490;
        var map__22493__$1 = cljs.core.seq_QMARK_.call(null, map__22493) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22493) : map__22493;
        var _QMARK_content = cljs.core.get.call(null, map__22493__$1, new cljs.core.Keyword(null, "?content", "?content", 1697782054));
        var _QMARK_error = cljs.core.get.call(null, map__22493__$1, new cljs.core.Keyword(null, "?error", "?error", 1070752222));
        if (cljs.core.truth_(_QMARK_error)) {
          if (cljs.core._EQ_.call(null, _QMARK_error, new cljs.core.Keyword(null, "timeout", "timeout", -318625318))) {
            if (cljs.core.truth_(_QMARK_cb_fn)) {
              return _QMARK_cb_fn.call(null, new cljs.core.Keyword("chsk", "timeout", "chsk/timeout", -319776489));
            } else {
              return null;
            }
          } else {
            taoensso.sente.merge_GT_chsk_state_BANG_.call(null, chsk__$1, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "open?", "open?", 1238443125), false], null));
            if (cljs.core.truth_(_QMARK_cb_fn)) {
              return _QMARK_cb_fn.call(null, new cljs.core.Keyword("chsk", "error", "chsk/error", -984175439));
            } else {
              return null;
            }
          }
        } else {
          var content = _QMARK_content;
          var resp_ppstr = content;
          var vec__22494 = taoensso.sente.unpack.call(null, self__.packer, resp_ppstr);
          var resp_clj = cljs.core.nth.call(null, vec__22494, 0, null);
          var _ = cljs.core.nth.call(null, vec__22494, 1, null);
          if (cljs.core.truth_(_QMARK_cb_fn)) {
            _QMARK_cb_fn.call(null, resp_clj);
          } else {
            if (cljs.core.not_EQ_.call(null, resp_clj, new cljs.core.Keyword("chsk", "dummy-cb-200", "chsk/dummy-cb-200", -1663130337))) {
              taoensso.encore.warnf.call(null, "Cb reply w/o local cb-fn: %s", resp_clj);
            } else {
            }
          }
          return taoensso.sente.merge_GT_chsk_state_BANG_.call(null, chsk__$1, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "open?", "open?", 1238443125), true], null));
        }
      };
    }(_QMARK_cb_fn, chsk__$1, map__22489, map__22489__$1, opts, flush_QMARK_, _QMARK_timeout_ms, _QMARK_cb));
    return new cljs.core.Keyword(null, "apparent-success", "apparent-success", 242592222);
  }
};
taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$chsk_reconnect_BANG_$arity$1 = function(chsk) {
  var self__ = this;
  var chsk__$1 = this;
  taoensso.sente.merge_GT_chsk_state_BANG_.call(null, chsk__$1, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "open?", "open?", 1238443125), false, new cljs.core.Keyword(null, "requested-reconnect-pending?", "requested-reconnect-pending?", -299841116), true], null));
  var temp__4126__auto__ = cljs.core.deref.call(null, self__.curr_xhr_);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var x = temp__4126__auto__;
    return x.abort();
  } else {
    return null;
  }
};
taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$chsk_destroy_BANG_$arity$1 = function(chsk) {
  var self__ = this;
  var chsk__$1 = this;
  taoensso.sente.merge_GT_chsk_state_BANG_.call(null, chsk__$1, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "open?", "open?", 1238443125), false, new cljs.core.Keyword(null, "destroyed?", "destroyed?", 1049634064), true], null));
  var temp__4126__auto__ = cljs.core.deref.call(null, self__.curr_xhr_);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var x = temp__4126__auto__;
    return x.abort();
  } else {
    return null;
  }
};
taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$chsk_init_BANG_$arity$1 = function(chsk) {
  var self__ = this;
  var chsk__$1 = this;
  (function(chsk__$1) {
    return function async_poll_for_update_BANG_(nattempt) {
      taoensso.encore.tracef.call(null, "async-poll-for-update!");
      if (cljs.core.truth_((new cljs.core.Keyword(null, "destroyed?", "destroyed?", 1049634064)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.state_)))) {
        return null;
      } else {
        var retry_BANG_ = function(chsk__$1) {
          return function() {
            var nattempt_STAR_ = nattempt + 1;
            taoensso.encore.warnf.call(null, "Chsk is closed: will try reconnect (%s).", nattempt_STAR_);
            return taoensso.sente.set_exp_backoff_timeout_BANG_.call(null, cljs.core.partial.call(null, async_poll_for_update_BANG_, nattempt_STAR_), nattempt_STAR_);
          };
        }(chsk__$1);
        return cljs.core.reset_BANG_.call(null, self__.curr_xhr_, taoensso.sente.ajax_call.call(null, self__.url, cljs.core.merge.call(null, self__.ajax_opts, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "get", "get", 1683182755), new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406), self__.timeout_ms, new cljs.core.Keyword(null, "resp-type", "resp-type", 1050675962), new cljs.core.Keyword(null, "text", 
        "text", -1790561697), new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "_", "_", 1453416199), taoensso.encore.now_udt.call(null), new cljs.core.Keyword(null, "client-id", "client-id", -464622140), self__.client_id], null), cljs.core.truth_((new cljs.core.Keyword(null, "open?", "open?", 1238443125)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.state_))) ? null : new cljs.core.PersistentArrayMap(null, 
        1, [new cljs.core.Keyword(null, "handshake?", "handshake?", -423743093), true], null))], null)), function(retry_BANG_, chsk__$1) {
          return function ajax_cb(p__22500) {
            var map__22503 = p__22500;
            var map__22503__$1 = cljs.core.seq_QMARK_.call(null, map__22503) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22503) : map__22503;
            var _QMARK_content = cljs.core.get.call(null, map__22503__$1, new cljs.core.Keyword(null, "?content", "?content", 1697782054));
            var _QMARK_error = cljs.core.get.call(null, map__22503__$1, new cljs.core.Keyword(null, "?error", "?error", 1070752222));
            if (cljs.core.truth_(_QMARK_error)) {
              if (cljs.core._EQ_.call(null, _QMARK_error, new cljs.core.Keyword(null, "timeout", "timeout", -318625318))) {
                return async_poll_for_update_BANG_.call(null, 0);
              } else {
                taoensso.sente.merge_GT_chsk_state_BANG_.call(null, chsk__$1, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "open?", "open?", 1238443125), false], null));
                return retry_BANG_.call(null);
              }
            } else {
              var content = _QMARK_content;
              var ppstr = content;
              var vec__22504 = taoensso.sente.unpack.call(null, self__.packer, ppstr);
              var clj = cljs.core.nth.call(null, vec__22504, 0, null);
              var _ = cljs.core.nth.call(null, vec__22504, 1, null);
              var or__3761__auto___22506 = taoensso.sente.handle_when_handshake_BANG_.call(null, chsk__$1, self__.chs, clj);
              if (cljs.core.truth_(or__3761__auto___22506)) {
              } else {
                var buffered_evs_22507 = clj;
                taoensso.sente.receive_buffered_evs_BANG_.call(null, self__.chs, buffered_evs_22507);
                taoensso.sente.merge_GT_chsk_state_BANG_.call(null, chsk__$1, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "open?", "open?", 1238443125), true], null));
              }
              return async_poll_for_update_BANG_.call(null, 0);
            }
          };
        }(retry_BANG_, chsk__$1)));
      }
    };
  })(chsk__$1).call(null, 0);
  return chsk__$1;
};
taoensso.sente.ChAjaxSocket.cljs$lang$type = true;
taoensso.sente.ChAjaxSocket.cljs$lang$ctorPrSeq = function(this__4393__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "taoensso.sente/ChAjaxSocket");
};
taoensso.sente.ChAjaxSocket.cljs$lang$ctorPrWriter = function(this__4393__auto__, writer__4394__auto__) {
  return cljs.core._write.call(null, writer__4394__auto__, "taoensso.sente/ChAjaxSocket");
};
taoensso.sente.__GT_ChAjaxSocket = function __GT_ChAjaxSocket(client_id, url, chs, timeout_ms, ajax_opts, curr_xhr_, state_, packer) {
  return new taoensso.sente.ChAjaxSocket(client_id, url, chs, timeout_ms, ajax_opts, curr_xhr_, state_, packer);
};
taoensso.sente.map__GT_ChAjaxSocket = function map__GT_ChAjaxSocket(G__22483) {
  return new taoensso.sente.ChAjaxSocket((new cljs.core.Keyword(null, "client-id", "client-id", -464622140)).cljs$core$IFn$_invoke$arity$1(G__22483), (new cljs.core.Keyword(null, "url", "url", 276297046)).cljs$core$IFn$_invoke$arity$1(G__22483), (new cljs.core.Keyword(null, "chs", "chs", 376886120)).cljs$core$IFn$_invoke$arity$1(G__22483), (new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406)).cljs$core$IFn$_invoke$arity$1(G__22483), (new cljs.core.Keyword(null, "ajax-opts", "ajax-opts", 
  -518239109)).cljs$core$IFn$_invoke$arity$1(G__22483), (new cljs.core.Keyword(null, "curr-xhr_", "curr-xhr_", -1318773696)).cljs$core$IFn$_invoke$arity$1(G__22483), (new cljs.core.Keyword(null, "state_", "state_", 957667102)).cljs$core$IFn$_invoke$arity$1(G__22483), (new cljs.core.Keyword(null, "packer", "packer", 66077544)).cljs$core$IFn$_invoke$arity$1(G__22483), null, cljs.core.dissoc.call(null, G__22483, new cljs.core.Keyword(null, "client-id", "client-id", -464622140), new cljs.core.Keyword(null, 
  "url", "url", 276297046), new cljs.core.Keyword(null, "chs", "chs", 376886120), new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406), new cljs.core.Keyword(null, "ajax-opts", "ajax-opts", -518239109), new cljs.core.Keyword(null, "curr-xhr_", "curr-xhr_", -1318773696), new cljs.core.Keyword(null, "state_", "state_", 957667102), new cljs.core.Keyword(null, "packer", "packer", 66077544)));
};
taoensso.sente.default_chsk_url_fn = function default_chsk_url_fn(path, p__22508, websocket_QMARK_) {
  var map__22510 = p__22508;
  var map__22510__$1 = cljs.core.seq_QMARK_.call(null, map__22510) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22510) : map__22510;
  var window_location = map__22510__$1;
  var pathname = cljs.core.get.call(null, map__22510__$1, new cljs.core.Keyword(null, "pathname", "pathname", -1420497528));
  var host = cljs.core.get.call(null, map__22510__$1, new cljs.core.Keyword(null, "host", "host", -1558485167));
  var protocol = cljs.core.get.call(null, map__22510__$1, new cljs.core.Keyword(null, "protocol", "protocol", 652470118));
  return[cljs.core.str(cljs.core.not.call(null, websocket_QMARK_) ? protocol : cljs.core._EQ_.call(null, protocol, "https:") ? "wss:" : "ws:"), cljs.core.str("//"), cljs.core.str(host), cljs.core.str(function() {
    var or__3761__auto__ = path;
    if (cljs.core.truth_(or__3761__auto__)) {
      return or__3761__auto__;
    } else {
      return pathname;
    }
  }())].join("");
};
taoensso.sente.make_channel_socket_BANG_ = function() {
  var make_channel_socket_BANG___delegate = function(path, p__22511) {
    var vec__22516 = p__22511;
    var map__22517 = cljs.core.nth.call(null, vec__22516, 0, null);
    var map__22517__$1 = cljs.core.seq_QMARK_.call(null, map__22517) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22517) : map__22517;
    var opts = map__22517__$1;
    var ajax_opts = cljs.core.get.call(null, map__22517__$1, new cljs.core.Keyword(null, "ajax-opts", "ajax-opts", -518239109));
    var client_id = cljs.core.get.call(null, map__22517__$1, new cljs.core.Keyword(null, "client-id", "client-id", -464622140), function() {
      var or__3761__auto__ = (new cljs.core.Keyword(null, "client-uuid", "client-uuid", -1717531965)).cljs$core$IFn$_invoke$arity$1(opts);
      if (cljs.core.truth_(or__3761__auto__)) {
        return or__3761__auto__;
      } else {
        return taoensso.encore.uuid_str.call(null);
      }
    }());
    var packer = cljs.core.get.call(null, map__22517__$1, new cljs.core.Keyword(null, "packer", "packer", 66077544), new cljs.core.Keyword(null, "edn", "edn", 1317840885));
    var chsk_url_fn = cljs.core.get.call(null, map__22517__$1, new cljs.core.Keyword(null, "chsk-url-fn", "chsk-url-fn", 1968894294), taoensso.sente.default_chsk_url_fn);
    var lp_timeout_ms = cljs.core.get.call(null, map__22517__$1, new cljs.core.Keyword(null, "lp-timeout-ms", "lp-timeout-ms", -1451963133), 25E3);
    var ws_kalive_ms = cljs.core.get.call(null, map__22517__$1, new cljs.core.Keyword(null, "ws-kalive-ms", "ws-kalive-ms", 1442179968), 25E3);
    var recv_buf_or_n = cljs.core.get.call(null, map__22517__$1, new cljs.core.Keyword(null, "recv-buf-or-n", "recv-buf-or-n", 1363950355), cljs.core.async.sliding_buffer.call(null, 2048));
    var type = cljs.core.get.call(null, map__22517__$1, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "auto", "auto", -566279492));
    var _deprecated_more_opts = cljs.core.nth.call(null, vec__22516, 1, null);
    if (function() {
      taoensso.encore.hcond.call(null, false, "taoensso.sente", null, new cljs.core.Delay(function(vec__22516, map__22517, map__22517__$1, opts, ajax_opts, client_id, packer, chsk_url_fn, lp_timeout_ms, ws_kalive_ms, recv_buf_or_n, type, _deprecated_more_opts) {
        return function() {
          return type;
        };
      }(vec__22516, map__22517, map__22517__$1, opts, ajax_opts, client_id, packer, chsk_url_fn, lp_timeout_ms, ws_kalive_ms, recv_buf_or_n, type, _deprecated_more_opts), null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "in", "in", -1531184865), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "ws", "ws", 86841443), 
      null, new cljs.core.Keyword(null, "ajax", "ajax", 814345549), null, new cljs.core.Keyword(null, "auto", "auto", -566279492), null], null), null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "in", "in", -1531184865), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "ws", "ws", 86841443), null, new cljs.core.Keyword(null, "ajax", "ajax", 814345549), null, new cljs.core.Keyword(null, 
      "auto", "auto", -566279492), null], null), null)], null));
      return true;
    }()) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "in", "in", -1531184865), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "ws", "ws", 86841443), null, new cljs.core.Keyword(null, "ajax", "ajax", 814345549), 
      null, new cljs.core.Keyword(null, "auto", "auto", -566279492), null], null), null)], null), new cljs.core.Symbol(null, "type", "type", -1480165421, null))))].join(""));
    }
    if (function() {
      taoensso.encore.hcond.call(null, false, "taoensso.sente", null, new cljs.core.Delay(function(vec__22516, map__22517, map__22517__$1, opts, ajax_opts, client_id, packer, chsk_url_fn, lp_timeout_ms, ws_kalive_ms, recv_buf_or_n, type, _deprecated_more_opts) {
        return function() {
          return client_id;
        };
      }(vec__22516, map__22517, map__22517__$1, opts, ajax_opts, client_id, packer, chsk_url_fn, lp_timeout_ms, ws_kalive_ms, recv_buf_or_n, type, _deprecated_more_opts), null), new cljs.core.Symbol(null, "client-id", "client-id", 1175909387, null), taoensso.encore.nblank_str_QMARK_, new cljs.core.Symbol("enc", "nblank-str?", "enc/nblank-str?", 19952870, null));
      return true;
    }()) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.Symbol("enc", "nblank-str?", "enc/nblank-str?", 19952870, null), new cljs.core.Symbol(null, "client-id", "client-id", 1175909387, null))))].join(""));
    }
    if (!(_deprecated_more_opts == null)) {
      taoensso.encore.warnf.call(null, "`make-channel-socket!` fn signature CHANGED with Sente v0.10.0.");
    } else {
    }
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "lp-timeout", "lp-timeout", 1149461302))) {
      taoensso.encore.warnf.call(null, ":lp-timeout opt has CHANGED; please use :lp-timout-ms.");
    } else {
    }
    var packer__$1 = taoensso.sente.interfaces.coerce_packer.call(null, packer);
    var window_location = taoensso.encore.get_window_location.call(null);
    var private_chs = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "state", "state", -1988618099), cljs.core.async.chan.call(null, cljs.core.async.sliding_buffer.call(null, 10)), new cljs.core.Keyword(null, "internal", "internal", -854870097), cljs.core.async.chan.call(null, cljs.core.async.sliding_buffer.call(null, 10)), new cljs.core.Keyword(null, "\x3cserver", "\x3cserver", -2135373537), cljs.core.async.chan.call(null, recv_buf_or_n)], null);
    var ever_opened_QMARK__ = cljs.core.atom.call(null, false);
    var state_STAR_ = function(packer__$1, window_location, private_chs, ever_opened_QMARK__, vec__22516, map__22517, map__22517__$1, opts, ajax_opts, client_id, packer, chsk_url_fn, lp_timeout_ms, ws_kalive_ms, recv_buf_or_n, type, _deprecated_more_opts) {
      return function(state) {
        if (cljs.core.truth_(function() {
          var or__3761__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "open?", "open?", 1238443125)).cljs$core$IFn$_invoke$arity$1(state));
          if (or__3761__auto__) {
            return or__3761__auto__;
          } else {
            return cljs.core.deref.call(null, ever_opened_QMARK__);
          }
        }())) {
          return state;
        } else {
          cljs.core.reset_BANG_.call(null, ever_opened_QMARK__, true);
          return cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "first-open?", "first-open?", 396686530), true);
        }
      };
    }(packer__$1, window_location, private_chs, ever_opened_QMARK__, vec__22516, map__22517, map__22517__$1, opts, ajax_opts, client_id, packer, chsk_url_fn, lp_timeout_ms, ws_kalive_ms, recv_buf_or_n, type, _deprecated_more_opts);
    var public_ch_recv = cljs.core.async.merge.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "internal", "internal", -854870097)).cljs$core$IFn$_invoke$arity$1(private_chs), cljs.core.async.map_LT_.call(null, function(packer__$1, window_location, private_chs, ever_opened_QMARK__, state_STAR_, vec__22516, map__22517, map__22517__$1, opts, ajax_opts, client_id, packer, chsk_url_fn, lp_timeout_ms, ws_kalive_ms, recv_buf_or_n, 
    type, _deprecated_more_opts) {
      return function(state) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("chsk", "state", "chsk/state", -1991397620), state_STAR_.call(null, state)], null);
      };
    }(packer__$1, window_location, private_chs, ever_opened_QMARK__, state_STAR_, vec__22516, map__22517, map__22517__$1, opts, ajax_opts, client_id, packer, chsk_url_fn, lp_timeout_ms, ws_kalive_ms, recv_buf_or_n, type, _deprecated_more_opts), (new cljs.core.Keyword(null, "state", "state", -1988618099)).cljs$core$IFn$_invoke$arity$1(private_chs)), cljs.core.async.map_LT_.call(null, function(packer__$1, window_location, private_chs, ever_opened_QMARK__, state_STAR_, vec__22516, map__22517, map__22517__$1, 
    opts, ajax_opts, client_id, packer, chsk_url_fn, lp_timeout_ms, ws_kalive_ms, recv_buf_or_n, type, _deprecated_more_opts) {
      return function(ev) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("chsk", "recv", "chsk/recv", 561097091), ev], null);
      };
    }(packer__$1, window_location, private_chs, ever_opened_QMARK__, state_STAR_, vec__22516, map__22517, map__22517__$1, opts, ajax_opts, client_id, packer, chsk_url_fn, lp_timeout_ms, ws_kalive_ms, recv_buf_or_n, type, _deprecated_more_opts), (new cljs.core.Keyword(null, "\x3cserver", "\x3cserver", -2135373537)).cljs$core$IFn$_invoke$arity$1(private_chs))], null));
    var chsk = function() {
      var or__3761__auto__ = function() {
        var and__3749__auto__ = cljs.core.not_EQ_.call(null, type, new cljs.core.Keyword(null, "ajax", "ajax", 814345549));
        if (and__3749__auto__) {
          return taoensso.sente.chsk_init_BANG_.call(null, taoensso.sente.map__GT_ChWebSocket.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "client-id", "client-id", -464622140), new cljs.core.Keyword(null, "kalive-ms", "kalive-ms", 210734021), new cljs.core.Keyword(null, "nattempt_", "nattempt_", 1980196552), new cljs.core.Keyword(null, "packer", "packer", 66077544), new cljs.core.Keyword(null, "chs", "chs", 376886120), new cljs.core.Keyword(null, "socket_", "socket_", 
          -361048908), new cljs.core.Keyword(null, "url", "url", 276297046), new cljs.core.Keyword(null, "kalive-due?_", "kalive-due?_", 39438072), new cljs.core.Keyword(null, "cbs-waiting_", "cbs-waiting_", -1519029061), new cljs.core.Keyword(null, "kalive-timer_", "kalive-timer_", 1558413149), new cljs.core.Keyword(null, "state_", "state_", 957667102)], [client_id, ws_kalive_ms, cljs.core.atom.call(null, 0), packer__$1, private_chs, cljs.core.atom.call(null, null), chsk_url_fn.call(null, path, 
          window_location, new cljs.core.Keyword(null, "ws", "ws", 86841443)), cljs.core.atom.call(null, true), cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), cljs.core.atom.call(null, null), cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "ws", "ws", 86841443), new cljs.core.Keyword(null, "open?", "open?", 1238443125), false, new cljs.core.Keyword(null, "destroyed?", "destroyed?", 
          1049634064), false], null))])));
        } else {
          return and__3749__auto__;
        }
      }();
      if (cljs.core.truth_(or__3761__auto__)) {
        return or__3761__auto__;
      } else {
        var and__3749__auto__ = cljs.core.not_EQ_.call(null, type, new cljs.core.Keyword(null, "ws", "ws", 86841443));
        if (and__3749__auto__) {
          return taoensso.sente.chsk_init_BANG_.call(null, taoensso.sente.map__GT_ChAjaxSocket.call(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), client_id, new cljs.core.Keyword(null, "url", "url", 276297046), chsk_url_fn.call(null, path, window_location, cljs.core.not.call(null, new cljs.core.Keyword(null, "ws", "ws", 86841443))), new cljs.core.Keyword(null, "chs", "chs", 376886120), private_chs, new cljs.core.Keyword(null, "packer", 
          "packer", 66077544), packer__$1, new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406), lp_timeout_ms, new cljs.core.Keyword(null, "ajax-opts", "ajax-opts", -518239109), ajax_opts, new cljs.core.Keyword(null, "curr-xhr_", "curr-xhr_", -1318773696), cljs.core.atom.call(null, null), new cljs.core.Keyword(null, "state_", "state_", 957667102), cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, 
          "ajax", "ajax", 814345549), new cljs.core.Keyword(null, "open?", "open?", 1238443125), false, new cljs.core.Keyword(null, "destroyed?", "destroyed?", 1049634064), false], null))], null)));
        } else {
          return and__3749__auto__;
        }
      }
    }();
    var _ = cljs.core.truth_(chsk) ? null : function() {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Failed to create channel socket"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "chsk", "chsk", 776828446, null)))].join(""));
    }();
    var send_fn = cljs.core.partial.call(null, taoensso.sente.chsk_send_BANG_, chsk);
    var public_ch_recv__$1 = cljs.core.async.map_LT_.call(null, function(packer__$1, window_location, private_chs, ever_opened_QMARK__, state_STAR_, public_ch_recv, chsk, _, send_fn, vec__22516, map__22517, map__22517__$1, opts, ajax_opts, client_id, packer, chsk_url_fn, lp_timeout_ms, ws_kalive_ms, recv_buf_or_n, type, _deprecated_more_opts) {
      return function ev__GT_ev_msg(ev) {
        var vec__22519 = taoensso.sente.as_event.call(null, ev);
        var ev_id = cljs.core.nth.call(null, vec__22519, 0, null);
        var ev__QMARK_data = cljs.core.nth.call(null, vec__22519, 1, null);
        var ev__$1 = vec__22519;
        return new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "ch-recv", "ch-recv", -990916861), public_ch_recv, new cljs.core.Keyword(null, "send-fn", "send-fn", 351002041), send_fn, new cljs.core.Keyword(null, "state", "state", -1988618099), (new cljs.core.Keyword(null, "state_", "state_", 957667102)).cljs$core$IFn$_invoke$arity$1(chsk), new cljs.core.Keyword(null, "event", "event", 301435442), ev__$1, new cljs.core.Keyword(null, "id", "id", -1388402092), ev_id, new cljs.core.Keyword(null, 
        "?data", "?data", -9471433), ev__QMARK_data], null);
      };
    }(packer__$1, window_location, private_chs, ever_opened_QMARK__, state_STAR_, public_ch_recv, chsk, _, send_fn, vec__22516, map__22517, map__22517__$1, opts, ajax_opts, client_id, packer, chsk_url_fn, lp_timeout_ms, ws_kalive_ms, recv_buf_or_n, type, _deprecated_more_opts), public_ch_recv);
    if (cljs.core.truth_(chsk)) {
      return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "chsk", "chsk", -863703081), chsk, new cljs.core.Keyword(null, "ch-recv", "ch-recv", -990916861), public_ch_recv__$1, new cljs.core.Keyword(null, "send-fn", "send-fn", 351002041), send_fn, new cljs.core.Keyword(null, "state", "state", -1988618099), (new cljs.core.Keyword(null, "state_", "state_", 957667102)).cljs$core$IFn$_invoke$arity$1(chsk)], null);
    } else {
      return null;
    }
  };
  var make_channel_socket_BANG_ = function(path, var_args) {
    var p__22511 = null;
    if (arguments.length > 1) {
      p__22511 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return make_channel_socket_BANG___delegate.call(this, path, p__22511);
  };
  make_channel_socket_BANG_.cljs$lang$maxFixedArity = 1;
  make_channel_socket_BANG_.cljs$lang$applyTo = function(arglist__22520) {
    var path = cljs.core.first(arglist__22520);
    var p__22511 = cljs.core.rest(arglist__22520);
    return make_channel_socket_BANG___delegate(path, p__22511);
  };
  make_channel_socket_BANG_.cljs$core$IFn$_invoke$arity$variadic = make_channel_socket_BANG___delegate;
  return make_channel_socket_BANG_;
}();
taoensso.sente.start_chsk_router_BANG_ = function() {
  var start_chsk_router_BANG___delegate = function(ch_recv, event_msg_handler, p__22521) {
    var vec__22623 = p__22521;
    var map__22624 = cljs.core.nth.call(null, vec__22623, 0, null);
    var map__22624__$1 = cljs.core.seq_QMARK_.call(null, map__22624) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22624) : map__22624;
    var opts = map__22624__$1;
    var trace_evs_QMARK_ = cljs.core.get.call(null, map__22624__$1, new cljs.core.Keyword(null, "trace-evs?", "trace-evs?", 1502453512));
    var ch_ctrl = cljs.core.async.chan.call(null);
    var c__6670__auto___22724 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6670__auto___22724, ch_ctrl, vec__22623, map__22624, map__22624__$1, opts, trace_evs_QMARK_) {
      return function() {
        var f__6671__auto__ = function() {
          var switch__6655__auto__ = function(c__6670__auto___22724, ch_ctrl, vec__22623, map__22624, map__22624__$1, opts, trace_evs_QMARK_) {
            return function(state_22683) {
              var state_val_22684 = state_22683[1];
              if (state_val_22684 === 7) {
                var inst_22636 = state_22683[2];
                var inst_22637 = cljs.core.nth.call(null, inst_22636, 0, null);
                var inst_22638 = cljs.core.nth.call(null, inst_22636, 1, null);
                var inst_22639 = taoensso.encore.kw_identical_QMARK_.call(null, inst_22638, ch_ctrl);
                var state_22683__$1 = function() {
                  var statearr_22685 = state_22683;
                  statearr_22685[7] = inst_22637;
                  return statearr_22685;
                }();
                if (cljs.core.truth_(inst_22639)) {
                  var statearr_22686_22725 = state_22683__$1;
                  statearr_22686_22725[1] = 8;
                } else {
                  var statearr_22687_22726 = state_22683__$1;
                  statearr_22687_22726[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22684 === 20) {
                  var inst_22649 = state_22683[8];
                  var inst_22663 = taoensso.encore.errorf.call(null, "Bad event: %s", inst_22649);
                  var state_22683__$1 = state_22683;
                  var statearr_22688_22727 = state_22683__$1;
                  statearr_22688_22727[2] = inst_22663;
                  statearr_22688_22727[1] = 22;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22684 === 1) {
                    var state_22683__$1 = state_22683;
                    var statearr_22689_22728 = state_22683__$1;
                    statearr_22689_22728[2] = null;
                    statearr_22689_22728[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_22684 === 24) {
                      var state_22683__$1 = state_22683;
                      var statearr_22690_22729 = state_22683__$1;
                      statearr_22690_22729[2] = null;
                      statearr_22690_22729[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_22684 === 4) {
                        var inst_22673 = state_22683[2];
                        var inst_22674 = taoensso.encore.kw_identical_QMARK_.call(null, new cljs.core.Keyword("taoensso.sente", "stop", "taoensso.sente/stop", -1361782571), inst_22673);
                        var state_22683__$1 = state_22683;
                        if (cljs.core.truth_(inst_22674)) {
                          var statearr_22691_22730 = state_22683__$1;
                          statearr_22691_22730[1] = 23;
                        } else {
                          var statearr_22692_22731 = state_22683__$1;
                          statearr_22692_22731[1] = 24;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_22684 === 15) {
                          var inst_22649 = state_22683[8];
                          var inst_22650 = state_22683[2];
                          var inst_22651 = taoensso.encore.errorf.call(null, "Chsk router handling error (%s): %s", inst_22649, inst_22650);
                          var state_22683__$1 = state_22683;
                          var statearr_22693_22732 = state_22683__$1;
                          statearr_22693_22732[2] = inst_22651;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22683__$1);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_22684 === 21) {
                            var inst_22648 = state_22683[9];
                            var inst_22665 = event_msg_handler.call(null, inst_22648);
                            var state_22683__$1 = state_22683;
                            var statearr_22694_22733 = state_22683__$1;
                            statearr_22694_22733[2] = inst_22665;
                            statearr_22694_22733[1] = 22;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_22684 === 13) {
                              var inst_22648 = state_22683[9];
                              var inst_22648__$1 = state_22683[2];
                              var inst_22649 = cljs.core.get.call(null, inst_22648__$1, new cljs.core.Keyword(null, "event", "event", 301435442));
                              var state_22683__$1 = function() {
                                var statearr_22695 = state_22683;
                                statearr_22695[8] = inst_22649;
                                statearr_22695[9] = inst_22648__$1;
                                return statearr_22695;
                              }();
                              var statearr_22696_22734 = state_22683__$1;
                              statearr_22696_22734[2] = null;
                              statearr_22696_22734[1] = 16;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_22684 === 22) {
                                var inst_22667 = state_22683[2];
                                var state_22683__$1 = function() {
                                  var statearr_22697 = state_22683;
                                  statearr_22697[10] = inst_22667;
                                  return statearr_22697;
                                }();
                                var statearr_22698_22735 = state_22683__$1;
                                statearr_22698_22735[2] = null;
                                cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22683__$1);
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_22684 === 6) {
                                  var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_22683, 5, Error, null, 4);
                                  var inst_22632 = cljs.core.PersistentVector.EMPTY_NODE;
                                  var inst_22633 = [ch_recv, ch_ctrl];
                                  var inst_22634 = new cljs.core.PersistentVector(null, 2, 5, inst_22632, inst_22633, null);
                                  var state_22683__$1 = state_22683;
                                  return cljs.core.async.ioc_alts_BANG_.call(null, state_22683__$1, 7, inst_22634);
                                } else {
                                  if (state_val_22684 === 25) {
                                    var inst_22679 = state_22683[2];
                                    var state_22683__$1 = state_22683;
                                    var statearr_22699_22736 = state_22683__$1;
                                    statearr_22699_22736[2] = inst_22679;
                                    statearr_22699_22736[1] = 3;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_22684 === 17) {
                                      var inst_22649 = state_22683[8];
                                      var inst_22656 = taoensso.encore.tracef.call(null, "Pre-handler event: %s", inst_22649);
                                      var state_22683__$1 = state_22683;
                                      var statearr_22700_22737 = state_22683__$1;
                                      statearr_22700_22737[2] = inst_22656;
                                      statearr_22700_22737[1] = 19;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_22684 === 3) {
                                        var inst_22681 = state_22683[2];
                                        var state_22683__$1 = state_22683;
                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22683__$1, inst_22681);
                                      } else {
                                        if (state_val_22684 === 12) {
                                          var inst_22637 = state_22683[7];
                                          var state_22683__$1 = state_22683;
                                          var statearr_22701_22738 = state_22683__$1;
                                          statearr_22701_22738[2] = inst_22637;
                                          statearr_22701_22738[1] = 13;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_22684 === 2) {
                                            var state_22683__$1 = state_22683;
                                            var statearr_22702_22739 = state_22683__$1;
                                            statearr_22702_22739[2] = null;
                                            statearr_22702_22739[1] = 6;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_22684 === 23) {
                                              var state_22683__$1 = state_22683;
                                              var statearr_22703_22740 = state_22683__$1;
                                              statearr_22703_22740[2] = null;
                                              statearr_22703_22740[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_22684 === 19) {
                                                var inst_22648 = state_22683[9];
                                                var inst_22659 = state_22683[2];
                                                var inst_22660 = taoensso.sente.event_msg_QMARK_.call(null, inst_22648);
                                                var inst_22661 = !inst_22660;
                                                var state_22683__$1 = function() {
                                                  var statearr_22704 = state_22683;
                                                  statearr_22704[11] = inst_22659;
                                                  return statearr_22704;
                                                }();
                                                if (inst_22661) {
                                                  var statearr_22705_22741 = state_22683__$1;
                                                  statearr_22705_22741[1] = 20;
                                                } else {
                                                  var statearr_22706_22742 = state_22683__$1;
                                                  statearr_22706_22742[1] = 21;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_22684 === 11) {
                                                  var inst_22637 = state_22683[7];
                                                  var inst_22645 = cljs.core.apply.call(null, cljs.core.hash_map, inst_22637);
                                                  var state_22683__$1 = state_22683;
                                                  var statearr_22707_22743 = state_22683__$1;
                                                  statearr_22707_22743[2] = inst_22645;
                                                  statearr_22707_22743[1] = 13;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_22684 === 9) {
                                                    var inst_22637 = state_22683[7];
                                                    var inst_22643 = cljs.core.seq_QMARK_.call(null, inst_22637);
                                                    var state_22683__$1 = state_22683;
                                                    if (inst_22643) {
                                                      var statearr_22708_22744 = state_22683__$1;
                                                      statearr_22708_22744[1] = 11;
                                                    } else {
                                                      var statearr_22709_22745 = state_22683__$1;
                                                      statearr_22709_22745[1] = 12;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_22684 === 5) {
                                                      var inst_22626 = state_22683[2];
                                                      var inst_22627 = taoensso.encore.errorf.call(null, "Chsk router channel error (%s)!", inst_22626);
                                                      var state_22683__$1 = state_22683;
                                                      var statearr_22710_22746 = state_22683__$1;
                                                      statearr_22710_22746[2] = inst_22627;
                                                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22683__$1);
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_22684 === 14) {
                                                        var inst_22669 = state_22683[2];
                                                        var state_22683__$1 = state_22683;
                                                        var statearr_22711_22747 = state_22683__$1;
                                                        statearr_22711_22747[2] = inst_22669;
                                                        statearr_22711_22747[1] = 10;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_22684 === 16) {
                                                          var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_22683, 15, Error, null, 14);
                                                          var state_22683__$1 = state_22683;
                                                          if (cljs.core.truth_(trace_evs_QMARK_)) {
                                                            var statearr_22712_22748 = state_22683__$1;
                                                            statearr_22712_22748[1] = 17;
                                                          } else {
                                                            var statearr_22713_22749 = state_22683__$1;
                                                            statearr_22713_22749[1] = 18;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_22684 === 10) {
                                                            var inst_22671 = state_22683[2];
                                                            var state_22683__$1 = state_22683;
                                                            var statearr_22714_22750 = state_22683__$1;
                                                            statearr_22714_22750[2] = inst_22671;
                                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22683__$1);
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_22684 === 18) {
                                                              var state_22683__$1 = state_22683;
                                                              var statearr_22715_22751 = state_22683__$1;
                                                              statearr_22715_22751[2] = null;
                                                              statearr_22715_22751[1] = 19;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_22684 === 8) {
                                                                var state_22683__$1 = state_22683;
                                                                var statearr_22716_22752 = state_22683__$1;
                                                                statearr_22716_22752[2] = new cljs.core.Keyword("taoensso.sente", "stop", "taoensso.sente/stop", -1361782571);
                                                                statearr_22716_22752[1] = 10;
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6670__auto___22724, ch_ctrl, vec__22623, map__22624, map__22624__$1, opts, trace_evs_QMARK_);
          return function(switch__6655__auto__, c__6670__auto___22724, ch_ctrl, vec__22623, map__22624, map__22624__$1, opts, trace_evs_QMARK_) {
            return function() {
              var state_machine__6656__auto__ = null;
              var state_machine__6656__auto____0 = function() {
                var statearr_22720 = [null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_22720[0] = state_machine__6656__auto__;
                statearr_22720[1] = 1;
                return statearr_22720;
              };
              var state_machine__6656__auto____1 = function(state_22683) {
                while (true) {
                  var ret_value__6657__auto__ = function() {
                    try {
                      while (true) {
                        var result__6658__auto__ = switch__6655__auto__.call(null, state_22683);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6658__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6658__auto__;
                        }
                        break;
                      }
                    } catch (e22721) {
                      if (e22721 instanceof Object) {
                        var ex__6659__auto__ = e22721;
                        var statearr_22722_22753 = state_22683;
                        statearr_22722_22753[5] = ex__6659__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22683);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e22721;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6657__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__22754 = state_22683;
                    state_22683 = G__22754;
                    continue;
                  } else {
                    return ret_value__6657__auto__;
                  }
                  break;
                }
              };
              state_machine__6656__auto__ = function(state_22683) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6656__auto____0.call(this);
                  case 1:
                    return state_machine__6656__auto____1.call(this, state_22683);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6656__auto____0;
              state_machine__6656__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6656__auto____1;
              return state_machine__6656__auto__;
            }();
          }(switch__6655__auto__, c__6670__auto___22724, ch_ctrl, vec__22623, map__22624, map__22624__$1, opts, trace_evs_QMARK_);
        }();
        var state__6672__auto__ = function() {
          var statearr_22723 = f__6671__auto__.call(null);
          statearr_22723[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6670__auto___22724;
          return statearr_22723;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6672__auto__);
      };
    }(c__6670__auto___22724, ch_ctrl, vec__22623, map__22624, map__22624__$1, opts, trace_evs_QMARK_));
    return function(ch_ctrl, vec__22623, map__22624, map__22624__$1, opts, trace_evs_QMARK_) {
      return function stop_BANG_() {
        return cljs.core.async.close_BANG_.call(null, ch_ctrl);
      };
    }(ch_ctrl, vec__22623, map__22624, map__22624__$1, opts, trace_evs_QMARK_);
  };
  var start_chsk_router_BANG_ = function(ch_recv, event_msg_handler, var_args) {
    var p__22521 = null;
    if (arguments.length > 2) {
      p__22521 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return start_chsk_router_BANG___delegate.call(this, ch_recv, event_msg_handler, p__22521);
  };
  start_chsk_router_BANG_.cljs$lang$maxFixedArity = 2;
  start_chsk_router_BANG_.cljs$lang$applyTo = function(arglist__22755) {
    var ch_recv = cljs.core.first(arglist__22755);
    arglist__22755 = cljs.core.next(arglist__22755);
    var event_msg_handler = cljs.core.first(arglist__22755);
    var p__22521 = cljs.core.rest(arglist__22755);
    return start_chsk_router_BANG___delegate(ch_recv, event_msg_handler, p__22521);
  };
  start_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic = start_chsk_router_BANG___delegate;
  return start_chsk_router_BANG_;
}();
taoensso.sente.start_chsk_router_loop_BANG_ = function start_chsk_router_loop_BANG_(event_handler, ch_recv) {
  return taoensso.sente.start_chsk_router_BANG_.call(null, ch_recv, function(ev_msg) {
    return event_handler.call(null, (new cljs.core.Keyword(null, "event", "event", 301435442)).cljs$core$IFn$_invoke$arity$1(ev_msg), (new cljs.core.Keyword(null, "ch-recv", "ch-recv", -990916861)).cljs$core$IFn$_invoke$arity$1(ev_msg));
  });
};
goog.provide("goog.net.xpc.NixTransport");
goog.require("goog.log");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.reflect");
goog.net.xpc.NixTransport = function(channel, opt_domHelper) {
  goog.net.xpc.NixTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.authToken_ = channel[goog.net.xpc.CfgFields.AUTH_TOKEN] || "";
  this.remoteAuthToken_ = channel[goog.net.xpc.CfgFields.REMOTE_AUTH_TOKEN] || "";
  goog.net.xpc.NixTransport.conductGlobalSetup_(this.getWindow());
  this[goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE] = this.handleMessage_;
  this[goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL] = this.createChannel_;
};
goog.inherits(goog.net.xpc.NixTransport, goog.net.xpc.Transport);
goog.net.xpc.NixTransport.NIX_WRAPPER = "GCXPC____NIXVBS_wrapper";
goog.net.xpc.NixTransport.NIX_GET_WRAPPER = "GCXPC____NIXVBS_get_wrapper";
goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE = "GCXPC____NIXJS_handle_message";
goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL = "GCXPC____NIXJS_create_channel";
goog.net.xpc.NixTransport.NIX_ID_FIELD = "GCXPC____NIXVBS_container";
goog.net.xpc.NixTransport.isNixSupported = function() {
  var isSupported = false;
  try {
    var oldOpener = window.opener;
    window.opener = ({});
    isSupported = goog.reflect.canAccessProperty(window, "opener");
    window.opener = oldOpener;
  } catch (e) {
  }
  return isSupported;
};
goog.net.xpc.NixTransport.conductGlobalSetup_ = function(listenWindow) {
  if (listenWindow["nix_setup_complete"]) {
    return;
  }
  var vbscript = "Class " + goog.net.xpc.NixTransport.NIX_WRAPPER + "\n " + "Private m_Transport\n" + "Private m_Auth\n" + "Public Sub SetTransport(transport)\n" + "If isEmpty(m_Transport) Then\n" + "Set m_Transport \x3d transport\n" + "End If\n" + "End Sub\n" + "Public Sub SetAuth(auth)\n" + "If isEmpty(m_Auth) Then\n" + "m_Auth \x3d auth\n" + "End If\n" + "End Sub\n" + "Public Function GetAuthToken()\n " + "GetAuthToken \x3d m_Auth\n" + "End Function\n" + "Public Sub SendMessage(service, payload)\n " + 
  "Call m_Transport." + goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE + "(service, payload)\n" + "End Sub\n" + "Public Sub CreateChannel(channel)\n " + "Call m_Transport." + goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL + "(channel)\n" + "End Sub\n" + "Public Sub " + goog.net.xpc.NixTransport.NIX_ID_FIELD + "()\n " + "End Sub\n" + "End Class\n " + "Function " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + "(transport, auth)\n" + "Dim wrap\n" + "Set wrap \x3d New " + goog.net.xpc.NixTransport.NIX_WRAPPER + 
  "\n" + "wrap.SetTransport transport\n" + "wrap.SetAuth auth\n" + "Set " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + " \x3d wrap\n" + "End Function";
  try {
    listenWindow.execScript(vbscript, "vbscript");
    listenWindow["nix_setup_complete"] = true;
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "exception caught while attempting global setup: " + e);
  }
};
goog.net.xpc.NixTransport.prototype.transportType = goog.net.xpc.TransportTypes.NIX;
goog.net.xpc.NixTransport.prototype.localSetupCompleted_ = false;
goog.net.xpc.NixTransport.prototype.nixChannel_ = null;
goog.net.xpc.NixTransport.prototype.connect = function() {
  if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.attemptOuterSetup_();
  } else {
    this.attemptInnerSetup_();
  }
};
goog.net.xpc.NixTransport.prototype.attemptOuterSetup_ = function() {
  if (this.localSetupCompleted_) {
    return;
  }
  var innerFrame = this.channel_.getIframeElement();
  try {
    var theWindow = this.getWindow();
    var getWrapper = theWindow[goog.net.xpc.NixTransport.NIX_GET_WRAPPER];
    innerFrame.contentWindow.opener = getWrapper(this, this.authToken_);
    this.localSetupCompleted_ = true;
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "exception caught while attempting setup: " + e);
  }
  if (!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptOuterSetup_, this), 100);
  }
};
goog.net.xpc.NixTransport.prototype.attemptInnerSetup_ = function() {
  if (this.localSetupCompleted_) {
    return;
  }
  try {
    var opener = this.getWindow().opener;
    if (opener && goog.net.xpc.NixTransport.NIX_ID_FIELD in opener) {
      this.nixChannel_ = opener;
      var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
      if (remoteAuthToken != this.remoteAuthToken_) {
        goog.log.error(goog.net.xpc.logger, "Invalid auth token from other party");
        return;
      }
      var theWindow = this.getWindow();
      var getWrapper = theWindow[goog.net.xpc.NixTransport.NIX_GET_WRAPPER];
      this.nixChannel_["CreateChannel"](getWrapper(this, this.authToken_));
      this.localSetupCompleted_ = true;
      this.channel_.notifyConnected();
    }
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "exception caught while attempting setup: " + e);
    return;
  }
  if (!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptInnerSetup_, this), 100);
  }
};
goog.net.xpc.NixTransport.prototype.createChannel_ = function(channel) {
  if (typeof channel != "unknown" || !(goog.net.xpc.NixTransport.NIX_ID_FIELD in channel)) {
    goog.log.error(goog.net.xpc.logger, "Invalid NIX channel given to createChannel_");
  }
  this.nixChannel_ = channel;
  var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
  if (remoteAuthToken != this.remoteAuthToken_) {
    goog.log.error(goog.net.xpc.logger, "Invalid auth token from other party");
    return;
  }
  this.channel_.notifyConnected();
};
goog.net.xpc.NixTransport.prototype.handleMessage_ = function(serviceName, payload) {
  var deliveryHandler = function() {
    this.channel_.xpcDeliver(serviceName, payload);
  };
  this.getWindow().setTimeout(goog.bind(deliveryHandler, this), 1);
};
goog.net.xpc.NixTransport.prototype.send = function(service, payload) {
  if (typeof this.nixChannel_ !== "unknown") {
    goog.log.error(goog.net.xpc.logger, "NIX channel not connected");
  }
  this.nixChannel_["SendMessage"](service, payload);
};
goog.net.xpc.NixTransport.prototype.disposeInternal = function() {
  goog.net.xpc.NixTransport.base(this, "disposeInternal");
  this.nixChannel_ = null;
};
goog.provide("goog.dom.tags");
goog.require("goog.object");
goog.dom.tags.VOID_TAGS_ = goog.object.createSet(("area,base,br,col,command," + "embed,hr,img,input,keygen,link,meta,param,source,track,wbr").split(","));
goog.dom.tags.isVoidTag = function(tagName) {
  return goog.dom.tags.VOID_TAGS_[tagName] === true;
};
goog.provide("goog.string.TypedString");
goog.string.TypedString = function() {
};
goog.string.TypedString.prototype.implementsGoogStringTypedString;
goog.string.TypedString.prototype.getTypedStringValue;
goog.provide("goog.string.Const");
goog.require("goog.asserts");
goog.require("goog.string.TypedString");
goog.string.Const = function() {
  this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = "";
  this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ = goog.string.Const.TYPE_MARKER_;
};
goog.string.Const.prototype.implementsGoogStringTypedString = true;
goog.string.Const.prototype.getTypedStringValue = function() {
  return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
};
goog.string.Const.prototype.toString = function() {
  return "Const{" + this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ + "}";
};
goog.string.Const.unwrap = function(stringConst) {
  if (stringConst instanceof goog.string.Const && stringConst.constructor === goog.string.Const && stringConst.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ === goog.string.Const.TYPE_MARKER_) {
    return stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
  } else {
    goog.asserts.fail("expected object of type Const, got '" + stringConst + "'");
    return "type_error:Const";
  }
};
goog.string.Const.from = function(s) {
  return goog.string.Const.create__googStringSecurityPrivate_(s);
};
goog.string.Const.TYPE_MARKER_ = {};
goog.string.Const.create__googStringSecurityPrivate_ = function(s) {
  var stringConst = new goog.string.Const;
  stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = s;
  return stringConst;
};
goog.provide("goog.html.SafeStyle");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeStyle = function() {
  this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = "";
  this.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeStyle.prototype.implementsGoogStringTypedString = true;
goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeStyle.fromConstant = function(style) {
  var styleString = goog.string.Const.unwrap(style);
  if (styleString.length === 0) {
    return goog.html.SafeStyle.EMPTY;
  }
  goog.html.SafeStyle.checkStyle_(styleString);
  goog.asserts.assert(goog.string.endsWith(styleString, ";"), "Last character of style string is not ';': " + styleString);
  goog.asserts.assert(goog.string.contains(styleString, ":"), "Style string must contain at least one ':', to " + 'specify a "name: value" pair: ' + styleString);
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(styleString);
};
goog.html.SafeStyle.checkStyle_ = function(style) {
  goog.asserts.assert(!/[<>]/.test(style), "Forbidden characters in style string: " + style);
};
goog.html.SafeStyle.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeStyleWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeStyle.prototype.toString = function() {
    return "SafeStyle{" + this.privateDoNotAccessOrElseSafeStyleWrappedValue_ + "}";
  };
}
goog.html.SafeStyle.unwrap = function(safeStyle) {
  if (safeStyle instanceof goog.html.SafeStyle && safeStyle.constructor === goog.html.SafeStyle && safeStyle.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeStyle.privateDoNotAccessOrElseSafeStyleWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeStyle, got '" + safeStyle + "'");
    return "type_error:SafeStyle";
  }
};
goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse = function(style) {
  var safeStyle = new goog.html.SafeStyle;
  safeStyle.privateDoNotAccessOrElseSafeStyleWrappedValue_ = style;
  return safeStyle;
};
goog.html.SafeStyle.EMPTY = goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse("");
goog.html.SafeStyle.INNOCUOUS_STRING = "zClosurez";
goog.html.SafeStyle.PropertyMap;
goog.html.SafeStyle.create = function(map) {
  var style = "";
  for (var name in map) {
    if (!/^[-_a-zA-Z0-9]+$/.test(name)) {
      throw Error("Name allows only [-_a-zA-Z0-9], got: " + name);
    }
    var value = map[name];
    if (value == null) {
      continue;
    }
    if (value instanceof goog.string.Const) {
      value = goog.string.Const.unwrap(value);
      goog.asserts.assert(!/[{;}]/.test(value), "Value does not allow [{;}].");
    } else {
      if (!goog.html.SafeStyle.VALUE_RE_.test(value)) {
        goog.asserts.fail("String value allows only [-.%_!# a-zA-Z0-9], got: " + value);
        value = goog.html.SafeStyle.INNOCUOUS_STRING;
      }
    }
    style += name + ":" + value + ";";
  }
  if (!style) {
    return goog.html.SafeStyle.EMPTY;
  }
  goog.html.SafeStyle.checkStyle_(style);
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.html.SafeStyle.VALUE_RE_ = /^[-.%_!# a-zA-Z0-9]+$/;
goog.html.SafeStyle.concat = function(var_args) {
  var style = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      style += goog.html.SafeStyle.unwrap(argument);
    }
  };
  goog.array.forEach(arguments, addArgument);
  if (!style) {
    return goog.html.SafeStyle.EMPTY;
  }
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.provide("goog.i18n.bidi");
goog.provide("goog.i18n.bidi.Dir");
goog.provide("goog.i18n.bidi.DirectionalString");
goog.provide("goog.i18n.bidi.Format");
goog.define("goog.i18n.bidi.FORCE_RTL", false);
goog.i18n.bidi.IS_RTL = goog.i18n.bidi.FORCE_RTL || (goog.LOCALE.substring(0, 2).toLowerCase() == "ar" || goog.LOCALE.substring(0, 2).toLowerCase() == "fa" || goog.LOCALE.substring(0, 2).toLowerCase() == "he" || goog.LOCALE.substring(0, 2).toLowerCase() == "iw" || goog.LOCALE.substring(0, 2).toLowerCase() == "ps" || goog.LOCALE.substring(0, 2).toLowerCase() == "sd" || goog.LOCALE.substring(0, 2).toLowerCase() == "ug" || goog.LOCALE.substring(0, 2).toLowerCase() == "ur" || goog.LOCALE.substring(0, 
2).toLowerCase() == "yi") && (goog.LOCALE.length == 2 || goog.LOCALE.substring(2, 3) == "-" || goog.LOCALE.substring(2, 3) == "_") || goog.LOCALE.length >= 3 && goog.LOCALE.substring(0, 3).toLowerCase() == "ckb" && (goog.LOCALE.length == 3 || goog.LOCALE.substring(3, 4) == "-" || goog.LOCALE.substring(3, 4) == "_");
goog.i18n.bidi.Format = {LRE:"\u202a", RLE:"\u202b", PDF:"\u202c", LRM:"\u200e", RLM:"\u200f"};
goog.i18n.bidi.Dir = {LTR:1, RTL:-1, NEUTRAL:0, UNKNOWN:0};
goog.i18n.bidi.RIGHT = "right";
goog.i18n.bidi.LEFT = "left";
goog.i18n.bidi.I18N_RIGHT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.LEFT : goog.i18n.bidi.RIGHT;
goog.i18n.bidi.I18N_LEFT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
goog.i18n.bidi.toDir = function(givenDir, opt_noNeutral) {
  if (typeof givenDir == "number") {
    return givenDir > 0 ? goog.i18n.bidi.Dir.LTR : givenDir < 0 ? goog.i18n.bidi.Dir.RTL : opt_noNeutral ? null : goog.i18n.bidi.Dir.NEUTRAL;
  } else {
    if (givenDir == null) {
      return null;
    } else {
      return givenDir ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
    }
  }
};
goog.i18n.bidi.ltrChars_ = "A-Za-z\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u02b8\u0300-\u0590\u0800-\u1fff" + "\u200e\u2c00-\ufb1c\ufe00-\ufe6f\ufefd-\uffff";
goog.i18n.bidi.rtlChars_ = "\u0591-\u07ff\u200f\ufb1d-\ufdff\ufe70-\ufefc";
goog.i18n.bidi.htmlSkipReg_ = /<[^>]*>|&[^;]+;/g;
goog.i18n.bidi.stripHtmlIfNeeded_ = function(str, opt_isStripNeeded) {
  return opt_isStripNeeded ? str.replace(goog.i18n.bidi.htmlSkipReg_, "") : str;
};
goog.i18n.bidi.rtlCharReg_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.ltrCharReg_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.hasAnyRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.hasRtlChar = goog.i18n.bidi.hasAnyRtl;
goog.i18n.bidi.hasAnyLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.ltrRe_ = new RegExp("^[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlRe_ = new RegExp("^[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.isRtlChar = function(str) {
  return goog.i18n.bidi.rtlRe_.test(str);
};
goog.i18n.bidi.isLtrChar = function(str) {
  return goog.i18n.bidi.ltrRe_.test(str);
};
goog.i18n.bidi.isNeutralChar = function(str) {
  return!goog.i18n.bidi.isLtrChar(str) && !goog.i18n.bidi.isRtlChar(str);
};
goog.i18n.bidi.ltrDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.rtlChars_ + "]*[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.ltrChars_ + "]*[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.startsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlText = goog.i18n.bidi.startsWithRtl;
goog.i18n.bidi.startsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrText = goog.i18n.bidi.startsWithLtr;
goog.i18n.bidi.isRequiredLtrRe_ = /^http:\/\/.*/;
goog.i18n.bidi.isNeutralText = function(str, opt_isHtml) {
  str = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml);
  return goog.i18n.bidi.isRequiredLtrRe_.test(str) || !goog.i18n.bidi.hasAnyLtr(str) && !goog.i18n.bidi.hasAnyRtl(str);
};
goog.i18n.bidi.ltrExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "][^" + goog.i18n.bidi.rtlChars_ + "]*$");
goog.i18n.bidi.rtlExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "][^" + goog.i18n.bidi.ltrChars_ + "]*$");
goog.i18n.bidi.endsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrExitText = goog.i18n.bidi.endsWithLtr;
goog.i18n.bidi.endsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlExitText = goog.i18n.bidi.endsWithRtl;
goog.i18n.bidi.rtlLocalesRe_ = new RegExp("^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|" + ".*[-_](Arab|Hebr|Thaa|Nkoo|Tfng))" + "(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)", "i");
goog.i18n.bidi.isRtlLanguage = function(lang) {
  return goog.i18n.bidi.rtlLocalesRe_.test(lang);
};
goog.i18n.bidi.bracketGuardHtmlRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(&lt;.*?(&gt;)+)/g;
goog.i18n.bidi.bracketGuardTextRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(<.*?>+)/g;
goog.i18n.bidi.guardBracketInHtml = function(s, opt_isRtlContext) {
  var useRtl = opt_isRtlContext === undefined ? goog.i18n.bidi.hasAnyRtl(s) : opt_isRtlContext;
  if (useRtl) {
    return s.replace(goog.i18n.bidi.bracketGuardHtmlRe_, "\x3cspan dir\x3drtl\x3e$\x26\x3c/span\x3e");
  }
  return s.replace(goog.i18n.bidi.bracketGuardHtmlRe_, "\x3cspan dir\x3dltr\x3e$\x26\x3c/span\x3e");
};
goog.i18n.bidi.guardBracketInText = function(s, opt_isRtlContext) {
  var useRtl = opt_isRtlContext === undefined ? goog.i18n.bidi.hasAnyRtl(s) : opt_isRtlContext;
  var mark = useRtl ? goog.i18n.bidi.Format.RLM : goog.i18n.bidi.Format.LRM;
  return s.replace(goog.i18n.bidi.bracketGuardTextRe_, mark + "$\x26" + mark);
};
goog.i18n.bidi.enforceRtlInHtml = function(html) {
  if (html.charAt(0) == "\x3c") {
    return html.replace(/<\w+/, "$\x26 dir\x3drtl");
  }
  return "\n\x3cspan dir\x3drtl\x3e" + html + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceRtlInText = function(text) {
  return goog.i18n.bidi.Format.RLE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.enforceLtrInHtml = function(html) {
  if (html.charAt(0) == "\x3c") {
    return html.replace(/<\w+/, "$\x26 dir\x3dltr");
  }
  return "\n\x3cspan dir\x3dltr\x3e" + html + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceLtrInText = function(text) {
  return goog.i18n.bidi.Format.LRE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.dimensionsRe_ = /:\s*([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)/g;
goog.i18n.bidi.leftRe_ = /left/gi;
goog.i18n.bidi.rightRe_ = /right/gi;
goog.i18n.bidi.tempRe_ = /%%%%/g;
goog.i18n.bidi.mirrorCSS = function(cssStr) {
  return cssStr.replace(goog.i18n.bidi.dimensionsRe_, ":$1 $4 $3 $2").replace(goog.i18n.bidi.leftRe_, "%%%%").replace(goog.i18n.bidi.rightRe_, goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_, goog.i18n.bidi.RIGHT);
};
goog.i18n.bidi.doubleQuoteSubstituteRe_ = /([\u0591-\u05f2])"/g;
goog.i18n.bidi.singleQuoteSubstituteRe_ = /([\u0591-\u05f2])'/g;
goog.i18n.bidi.normalizeHebrewQuote = function(str) {
  return str.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_, "$1\u05f4").replace(goog.i18n.bidi.singleQuoteSubstituteRe_, "$1\u05f3");
};
goog.i18n.bidi.wordSeparatorRe_ = /\s+/;
goog.i18n.bidi.hasNumeralsRe_ = /\d/;
goog.i18n.bidi.rtlDetectionThreshold_ = .4;
goog.i18n.bidi.estimateDirection = function(str, opt_isHtml) {
  var rtlCount = 0;
  var totalCount = 0;
  var hasWeaklyLtr = false;
  var tokens = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml).split(goog.i18n.bidi.wordSeparatorRe_);
  for (var i = 0;i < tokens.length;i++) {
    var token = tokens[i];
    if (goog.i18n.bidi.startsWithRtl(token)) {
      rtlCount++;
      totalCount++;
    } else {
      if (goog.i18n.bidi.isRequiredLtrRe_.test(token)) {
        hasWeaklyLtr = true;
      } else {
        if (goog.i18n.bidi.hasAnyLtr(token)) {
          totalCount++;
        } else {
          if (goog.i18n.bidi.hasNumeralsRe_.test(token)) {
            hasWeaklyLtr = true;
          }
        }
      }
    }
  }
  return totalCount == 0 ? hasWeaklyLtr ? goog.i18n.bidi.Dir.LTR : goog.i18n.bidi.Dir.NEUTRAL : rtlCount / totalCount > goog.i18n.bidi.rtlDetectionThreshold_ ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
};
goog.i18n.bidi.detectRtlDirectionality = function(str, opt_isHtml) {
  return goog.i18n.bidi.estimateDirection(str, opt_isHtml) == goog.i18n.bidi.Dir.RTL;
};
goog.i18n.bidi.setElementDirAndAlign = function(element, dir) {
  if (element) {
    dir = goog.i18n.bidi.toDir(dir);
    if (dir) {
      element.style.textAlign = dir == goog.i18n.bidi.Dir.RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
      element.dir = dir == goog.i18n.bidi.Dir.RTL ? "rtl" : "ltr";
    }
  }
};
goog.i18n.bidi.DirectionalString = function() {
};
goog.i18n.bidi.DirectionalString.prototype.implementsGoogI18nBidiDirectionalString;
goog.i18n.bidi.DirectionalString.prototype.getDirection;
goog.provide("goog.html.SafeUrl");
goog.require("goog.asserts");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeUrl = function() {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
  this.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeUrl.INNOCUOUS_STRING = "about:invalid#zClosurez";
goog.html.SafeUrl.prototype.implementsGoogStringTypedString = true;
goog.html.SafeUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
};
goog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.SafeUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
if (goog.DEBUG) {
  goog.html.SafeUrl.prototype.toString = function() {
    return "SafeUrl{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
  };
}
goog.html.SafeUrl.unwrap = function(safeUrl) {
  if (safeUrl instanceof goog.html.SafeUrl && safeUrl.constructor === goog.html.SafeUrl && safeUrl.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeUrl, got '" + safeUrl + "'");
    return "type_error:SafeUrl";
  }
};
goog.html.SafeUrl.fromConstant = function(url) {
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));
};
goog.html.SAFE_URL_PATTERN_ = /^(?:(?:https?|mailto):|[^&:/?#]*(?:[/?#]|$))/i;
goog.html.SafeUrl.sanitize = function(url) {
  if (url instanceof goog.html.SafeUrl) {
    return url;
  } else {
    if (url.implementsGoogStringTypedString) {
      url = url.getTypedStringValue();
    } else {
      url = String(url);
    }
  }
  if (!goog.html.SAFE_URL_PATTERN_.test(url)) {
    url = goog.html.SafeUrl.INNOCUOUS_STRING;
  } else {
    url = goog.html.SafeUrl.normalize_(url);
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.SafeUrl.normalize_ = function(url) {
  try {
    var normalized = encodeURI(url);
  } catch (e) {
    return goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return normalized.replace(goog.html.SafeUrl.NORMALIZE_MATCHER_, function(match) {
    return goog.html.SafeUrl.NORMALIZE_REPLACER_MAP_[match];
  });
};
goog.html.SafeUrl.NORMALIZE_MATCHER_ = /[()']|%5B|%5D|%25/g;
goog.html.SafeUrl.NORMALIZE_REPLACER_MAP_ = {"'":"%27", "(":"%28", ")":"%29", "%5B":"[", "%5D":"]", "%25":"%"};
goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse = function(url) {
  var safeUrl = new goog.html.SafeUrl;
  safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = url;
  return safeUrl;
};
goog.provide("goog.html.SafeHtml");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.tags");
goog.require("goog.html.SafeStyle");
goog.require("goog.html.SafeUrl");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeHtml = function() {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
  this.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
  this.dir_ = null;
};
goog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.SafeHtml.prototype.getDirection = function() {
  return this.dir_;
};
goog.html.SafeHtml.prototype.implementsGoogStringTypedString = true;
goog.html.SafeHtml.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeHtml.prototype.toString = function() {
    return "SafeHtml{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
  };
}
goog.html.SafeHtml.unwrap = function(safeHtml) {
  if (safeHtml instanceof goog.html.SafeHtml && safeHtml.constructor === goog.html.SafeHtml && safeHtml.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeHtml.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeHtml, got '" + safeHtml + "'");
    return "type_error:SafeHtml";
  }
};
goog.html.SafeHtml.TextOrHtml_;
goog.html.SafeHtml.htmlEscape = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var dir = null;
  if (textOrHtml.implementsGoogI18nBidiDirectionalString) {
    dir = textOrHtml.getDirection();
  }
  var textAsString;
  if (textOrHtml.implementsGoogStringTypedString) {
    textAsString = textOrHtml.getTypedStringValue();
  } else {
    textAsString = String(textOrHtml);
  }
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.htmlEscape(textAsString), dir);
};
goog.html.SafeHtml.htmlEscapePreservingNewlines = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.newLineToBr(goog.html.SafeHtml.unwrap(html)), html.getDirection());
};
goog.html.SafeHtml.from = goog.html.SafeHtml.htmlEscape;
goog.html.SafeHtml.VALID_NAMES_IN_TAG_ = /^[a-zA-Z0-9-]+$/;
goog.html.SafeHtml.URL_ATTRIBUTES_ = goog.object.createSet("action", "cite", "data", "formaction", "href", "manifest", "poster", "src");
goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_ = goog.object.createSet("link", "script", "style");
goog.html.SafeHtml.AttributeValue_;
goog.html.SafeHtml.create = function(tagName, opt_attributes, opt_content) {
  if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(tagName)) {
    throw Error("Invalid tag name \x3c" + tagName + "\x3e.");
  }
  if (tagName.toLowerCase() in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_) {
    throw Error("Tag name \x3c" + tagName + "\x3e is not allowed for SafeHtml.");
  }
  var dir = null;
  var result = "\x3c" + tagName;
  if (opt_attributes) {
    for (var name in opt_attributes) {
      if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(name)) {
        throw Error('Invalid attribute name "' + name + '".');
      }
      var value = opt_attributes[name];
      if (value == null) {
        continue;
      }
      if (value instanceof goog.string.Const) {
        value = goog.string.Const.unwrap(value);
      } else {
        if (name.toLowerCase() == "style") {
          value = goog.html.SafeHtml.getStyleValue_(value);
        } else {
          if (/^on/i.test(name)) {
            throw Error('Attribute "' + name + '" requires goog.string.Const value, "' + value + '" given.');
          } else {
            if (value instanceof goog.html.SafeUrl) {
              value = goog.html.SafeUrl.unwrap(value);
            } else {
              if (name.toLowerCase() in goog.html.SafeHtml.URL_ATTRIBUTES_) {
                throw Error('Attribute "' + name + '" requires goog.string.Const or goog.html.SafeUrl value, "' + value + '" given.');
              }
            }
          }
        }
      }
      goog.asserts.assert(goog.isString(value) || goog.isNumber(value), "String or number value expected, got " + typeof value + " with value: " + value);
      result += " " + name + '\x3d"' + goog.string.htmlEscape(String(value)) + '"';
    }
  }
  var content = opt_content;
  if (!goog.isDef(content)) {
    content = [];
  } else {
    if (!goog.isArray(content)) {
      content = [content];
    }
  }
  if (goog.dom.tags.isVoidTag(tagName.toLowerCase())) {
    goog.asserts.assert(!content.length, "Void tag \x3c" + tagName + "\x3e does not allow content.");
    result += "\x3e";
  } else {
    var html = goog.html.SafeHtml.concat(content);
    result += "\x3e" + goog.html.SafeHtml.unwrap(html) + "\x3c/" + tagName + "\x3e";
    dir = html.getDirection();
  }
  var dirAttribute = opt_attributes && opt_attributes["dir"];
  if (dirAttribute) {
    if (/^(ltr|rtl|auto)$/i.test(dirAttribute)) {
      dir = goog.i18n.bidi.Dir.NEUTRAL;
    } else {
      dir = null;
    }
  }
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(result, dir);
};
goog.html.SafeHtml.getStyleValue_ = function(value) {
  if (!goog.isObject(value)) {
    throw Error('The "style" attribute requires goog.html.SafeStyle or map ' + "of style properties, " + typeof value + " given: " + value);
  }
  if (!(value instanceof goog.html.SafeStyle)) {
    value = goog.html.SafeStyle.create(value);
  }
  return goog.html.SafeStyle.unwrap(value);
};
goog.html.SafeHtml.createWithDir = function(dir, tagName, opt_attributes, opt_content) {
  var html = goog.html.SafeHtml.create(tagName, opt_attributes, opt_content);
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.concat = function(var_args) {
  var dir = goog.i18n.bidi.Dir.NEUTRAL;
  var content = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      var html = goog.html.SafeHtml.htmlEscape(argument);
      content += goog.html.SafeHtml.unwrap(html);
      var htmlDir = html.getDirection();
      if (dir == goog.i18n.bidi.Dir.NEUTRAL) {
        dir = htmlDir;
      } else {
        if (htmlDir != goog.i18n.bidi.Dir.NEUTRAL && dir != htmlDir) {
          dir = null;
        }
      }
    }
  };
  goog.array.forEach(arguments, addArgument);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, dir);
};
goog.html.SafeHtml.concatWithDir = function(dir, var_args) {
  var html = goog.html.SafeHtml.concat(goog.array.slice(arguments, 1));
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse = function(html, dir) {
  var safeHtml = new goog.html.SafeHtml;
  safeHtml.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = html;
  safeHtml.dir_ = dir;
  return safeHtml;
};
goog.html.SafeHtml.EMPTY = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("", goog.i18n.bidi.Dir.NEUTRAL);
goog.provide("goog.dom.safe");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.SafeUrl");
goog.dom.safe.setInnerHtml = function(elem, html) {
  elem.innerHTML = goog.html.SafeHtml.unwrap(html);
};
goog.dom.safe.setOuterHtml = function(elem, html) {
  elem.outerHTML = goog.html.SafeHtml.unwrap(html);
};
goog.dom.safe.documentWrite = function(doc, html) {
  doc.write(goog.html.SafeHtml.unwrap(html));
};
goog.dom.safe.setAnchorHref = function(anchor, url) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitize(url);
  }
  anchor.href = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setLocationHref = function(loc, url) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitize(url);
  }
  loc.href = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.provide("goog.Delay");
goog.provide("goog.async.Delay");
goog.require("goog.Disposable");
goog.require("goog.Timer");
goog.async.Delay = function(listener, opt_interval, opt_handler) {
  goog.Disposable.call(this);
  this.listener_ = listener;
  this.interval_ = opt_interval || 0;
  this.handler_ = opt_handler;
  this.callback_ = goog.bind(this.doAction_, this);
};
goog.inherits(goog.async.Delay, goog.Disposable);
goog.Delay = goog.async.Delay;
goog.async.Delay.prototype.id_ = 0;
goog.async.Delay.prototype.disposeInternal = function() {
  goog.async.Delay.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.listener_;
  delete this.handler_;
};
goog.async.Delay.prototype.start = function(opt_interval) {
  this.stop();
  this.id_ = goog.Timer.callOnce(this.callback_, goog.isDef(opt_interval) ? opt_interval : this.interval_);
};
goog.async.Delay.prototype.stop = function() {
  if (this.isActive()) {
    goog.Timer.clear(this.id_);
  }
  this.id_ = 0;
};
goog.async.Delay.prototype.fire = function() {
  this.stop();
  this.doAction_();
};
goog.async.Delay.prototype.fireIfActive = function() {
  if (this.isActive()) {
    this.fire();
  }
};
goog.async.Delay.prototype.isActive = function() {
  return this.id_ != 0;
};
goog.async.Delay.prototype.doAction_ = function() {
  this.id_ = 0;
  if (this.listener_) {
    this.listener_.call(this.handler_);
  }
};
goog.provide("goog.messaging.MessageChannel");
goog.messaging.MessageChannel = function() {
};
goog.messaging.MessageChannel.prototype.connect = function(opt_connectCb) {
};
goog.messaging.MessageChannel.prototype.isConnected = function() {
};
goog.messaging.MessageChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
};
goog.messaging.MessageChannel.prototype.registerDefaultService = function(callback) {
};
goog.messaging.MessageChannel.prototype.send = function(serviceName, payload) {
};
goog.provide("goog.messaging.AbstractChannel");
goog.require("goog.Disposable");
goog.require("goog.debug");
goog.require("goog.json");
goog.require("goog.log");
goog.require("goog.messaging.MessageChannel");
goog.messaging.AbstractChannel = function() {
  goog.messaging.AbstractChannel.base(this, "constructor");
  this.services_ = {};
};
goog.inherits(goog.messaging.AbstractChannel, goog.Disposable);
goog.messaging.AbstractChannel.prototype.defaultService_;
goog.messaging.AbstractChannel.prototype.logger = goog.log.getLogger("goog.messaging.AbstractChannel");
goog.messaging.AbstractChannel.prototype.connect = function(opt_connectCb) {
  if (opt_connectCb) {
    opt_connectCb();
  }
};
goog.messaging.AbstractChannel.prototype.isConnected = function() {
  return true;
};
goog.messaging.AbstractChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
  this.services_[serviceName] = {callback:callback, objectPayload:!!opt_objectPayload};
};
goog.messaging.AbstractChannel.prototype.registerDefaultService = function(callback) {
  this.defaultService_ = callback;
};
goog.messaging.AbstractChannel.prototype.send = goog.abstractMethod;
goog.messaging.AbstractChannel.prototype.deliver = function(serviceName, payload) {
  var service = this.getService(serviceName, payload);
  if (!service) {
    return;
  }
  var decodedPayload = this.decodePayload(serviceName, payload, service.objectPayload);
  if (goog.isDefAndNotNull(decodedPayload)) {
    service.callback(decodedPayload);
  }
};
goog.messaging.AbstractChannel.prototype.getService = function(serviceName, payload) {
  var service = this.services_[serviceName];
  if (service) {
    return service;
  } else {
    if (this.defaultService_) {
      var callback = goog.partial(this.defaultService_, serviceName);
      var objectPayload = goog.isObject(payload);
      return{callback:callback, objectPayload:objectPayload};
    }
  }
  goog.log.warning(this.logger, 'Unknown service name "' + serviceName + '"');
  return null;
};
goog.messaging.AbstractChannel.prototype.decodePayload = function(serviceName, payload, objectPayload) {
  if (objectPayload && goog.isString(payload)) {
    try {
      return goog.json.parse(payload);
    } catch (err) {
      goog.log.warning(this.logger, "Expected JSON payload for " + serviceName + ', was "' + payload + '"');
      return null;
    }
  } else {
    if (!objectPayload && !goog.isString(payload)) {
      return goog.json.serialize(payload);
    }
  }
  return payload;
};
goog.messaging.AbstractChannel.prototype.disposeInternal = function() {
  goog.messaging.AbstractChannel.base(this, "disposeInternal");
  delete this.logger;
  delete this.services_;
  delete this.defaultService_;
};
goog.provide("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.log");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.net.xpc.FrameElementMethodTransport = function(channel, opt_domHelper) {
  goog.net.xpc.FrameElementMethodTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.queue_ = [];
  this.deliverQueuedCb_ = goog.bind(this.deliverQueued_, this);
};
goog.inherits(goog.net.xpc.FrameElementMethodTransport, goog.net.xpc.Transport);
goog.net.xpc.FrameElementMethodTransport.prototype.transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
goog.net.xpc.FrameElementMethodTransport.prototype.recursive_ = false;
goog.net.xpc.FrameElementMethodTransport.prototype.timer_ = 0;
goog.net.xpc.FrameElementMethodTransport.outgoing_ = null;
goog.net.xpc.FrameElementMethodTransport.prototype.connect = function() {
  if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.iframeElm_ = this.channel_.getIframeElement();
    this.iframeElm_["XPC_toOuter"] = goog.bind(this.incoming_, this);
  } else {
    this.attemptSetup_();
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.attemptSetup_ = function() {
  var retry = true;
  try {
    if (!this.iframeElm_) {
      this.iframeElm_ = this.getWindow().frameElement;
    }
    if (this.iframeElm_ && this.iframeElm_["XPC_toOuter"]) {
      this.outgoing_ = this.iframeElm_["XPC_toOuter"];
      this.iframeElm_["XPC_toOuter"]["XPC_toInner"] = goog.bind(this.incoming_, this);
      retry = false;
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      this.channel_.notifyConnected();
    }
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "exception caught while attempting setup: " + e);
  }
  if (retry) {
    if (!this.attemptSetupCb_) {
      this.attemptSetupCb_ = goog.bind(this.attemptSetup_, this);
    }
    this.getWindow().setTimeout(this.attemptSetupCb_, 100);
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.transportServiceHandler = function(payload) {
  if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER && !this.channel_.isConnected() && payload == goog.net.xpc.SETUP_ACK_) {
    this.outgoing_ = this.iframeElm_["XPC_toOuter"]["XPC_toInner"];
    this.channel_.notifyConnected();
  } else {
    throw Error("Got unexpected transport message.");
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.incoming_ = function(serviceName, payload) {
  if (!this.recursive_ && this.queue_.length == 0) {
    this.channel_.xpcDeliver(serviceName, payload);
  } else {
    this.queue_.push({serviceName:serviceName, payload:payload});
    if (this.queue_.length == 1) {
      this.timer_ = this.getWindow().setTimeout(this.deliverQueuedCb_, 1);
    }
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.deliverQueued_ = function() {
  while (this.queue_.length) {
    var msg = this.queue_.shift();
    this.channel_.xpcDeliver(msg.serviceName, msg.payload);
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.send = function(service, payload) {
  this.recursive_ = true;
  this.outgoing_(service, payload);
  this.recursive_ = false;
};
goog.net.xpc.FrameElementMethodTransport.prototype.disposeInternal = function() {
  goog.net.xpc.FrameElementMethodTransport.superClass_.disposeInternal.call(this);
  this.outgoing_ = null;
  this.iframeElm_ = null;
};
goog.provide("goog.net.xpc.IframeRelayTransport");
goog.require("goog.dom");
goog.require("goog.dom.safe");
goog.require("goog.events");
goog.require("goog.html.SafeHtml");
goog.require("goog.log");
goog.require("goog.log.Level");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.userAgent");
goog.net.xpc.IframeRelayTransport = function(channel, opt_domHelper) {
  goog.net.xpc.IframeRelayTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.peerRelayUri_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.PEER_RELAY_URI];
  this.peerIframeId_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.IFRAME_ID];
  if (goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.startCleanupTimer_();
  }
};
goog.inherits(goog.net.xpc.IframeRelayTransport, goog.net.xpc.Transport);
if (goog.userAgent.WEBKIT) {
  goog.net.xpc.IframeRelayTransport.iframeRefs_ = [];
  goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_ = 1E3;
  goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_ = 3E3;
  goog.net.xpc.IframeRelayTransport.cleanupTimer_ = 0;
  goog.net.xpc.IframeRelayTransport.startCleanupTimer_ = function() {
    if (!goog.net.xpc.IframeRelayTransport.cleanupTimer_) {
      goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(function() {
        goog.net.xpc.IframeRelayTransport.cleanup_();
      }, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_);
    }
  };
  goog.net.xpc.IframeRelayTransport.cleanup_ = function(opt_maxAge) {
    var now = goog.now();
    var maxAge = opt_maxAge || goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_;
    while (goog.net.xpc.IframeRelayTransport.iframeRefs_.length && now - goog.net.xpc.IframeRelayTransport.iframeRefs_[0].timestamp >= maxAge) {
      var ifr = goog.net.xpc.IframeRelayTransport.iframeRefs_.shift().iframeElement;
      goog.dom.removeNode(ifr);
      goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "iframe removed");
    }
    goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(goog.net.xpc.IframeRelayTransport.cleanupCb_, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_);
  };
  goog.net.xpc.IframeRelayTransport.cleanupCb_ = function() {
    goog.net.xpc.IframeRelayTransport.cleanup_();
  };
}
goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_ = 1800;
goog.net.xpc.IframeRelayTransport.FragmentInfo;
goog.net.xpc.IframeRelayTransport.fragmentMap_ = {};
goog.net.xpc.IframeRelayTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
goog.net.xpc.IframeRelayTransport.prototype.connect = function() {
  if (!this.getWindow()["xpcRelay"]) {
    this.getWindow()["xpcRelay"] = goog.net.xpc.IframeRelayTransport.receiveMessage_;
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
};
goog.net.xpc.IframeRelayTransport.receiveMessage_ = function(channelName, frame) {
  var pos = frame.indexOf(":");
  var header = frame.substr(0, pos);
  var payload = frame.substr(pos + 1);
  if (!goog.userAgent.IE || (pos = header.indexOf("|")) == -1) {
    var service = header
  } else {
    var service = header.substr(0, pos);
    var fragmentIdStr = header.substr(pos + 1);
    pos = fragmentIdStr.indexOf("+");
    var messageIdStr = fragmentIdStr.substr(0, pos);
    var fragmentNum = parseInt(fragmentIdStr.substr(pos + 1), 10);
    var fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
    if (!fragmentInfo) {
      fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr] = {fragments:[], received:0, expected:0};
    }
    if (goog.string.contains(fragmentIdStr, "++")) {
      fragmentInfo.expected = fragmentNum + 1;
    }
    fragmentInfo.fragments[fragmentNum] = payload;
    fragmentInfo.received++;
    if (fragmentInfo.received != fragmentInfo.expected) {
      return;
    }
    payload = fragmentInfo.fragments.join("");
    delete goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
  }
  goog.net.xpc.channels[channelName].xpcDeliver(service, decodeURIComponent(payload));
};
goog.net.xpc.IframeRelayTransport.prototype.transportServiceHandler = function(payload) {
  if (payload == goog.net.xpc.SETUP) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    this.channel_.notifyConnected();
  } else {
    if (payload == goog.net.xpc.SETUP_ACK_) {
      this.channel_.notifyConnected();
    }
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send = function(service, payload) {
  var encodedPayload = encodeURIComponent(payload);
  var encodedLen = encodedPayload.length;
  var maxSize = goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_;
  if (goog.userAgent.IE && encodedLen > maxSize) {
    var messageIdStr = goog.string.getRandomString();
    for (var startIndex = 0, fragmentNum = 0;startIndex < encodedLen;fragmentNum++) {
      var payloadFragment = encodedPayload.substr(startIndex, maxSize);
      startIndex += maxSize;
      var fragmentIdStr = messageIdStr + (startIndex >= encodedLen ? "++" : "+") + fragmentNum;
      this.send_(service, payloadFragment, fragmentIdStr);
    }
  } else {
    this.send_(service, encodedPayload);
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send_ = function(service, encodedPayload, opt_fragmentIdStr) {
  if (goog.userAgent.IE) {
    var div = this.getWindow().document.createElement("div");
    goog.dom.safe.setInnerHtml(div, goog.html.SafeHtml.create("iframe", {"onload":goog.string.Const.from("this.xpcOnload()")}));
    var ifr = div.childNodes[0];
    div = null;
    ifr["xpcOnload"] = goog.net.xpc.IframeRelayTransport.iframeLoadHandler_;
  } else {
    var ifr = this.getWindow().document.createElement("iframe");
    if (goog.userAgent.WEBKIT) {
      goog.net.xpc.IframeRelayTransport.iframeRefs_.push({timestamp:goog.now(), iframeElement:ifr});
    } else {
      goog.events.listen(ifr, "load", goog.net.xpc.IframeRelayTransport.iframeLoadHandler_);
    }
  }
  var style = ifr.style;
  style.visibility = "hidden";
  style.width = ifr.style.height = "0px";
  style.position = "absolute";
  var url = this.peerRelayUri_;
  url += "#" + this.channel_.name;
  if (this.peerIframeId_) {
    url += "," + this.peerIframeId_;
  }
  url += "|" + service;
  if (opt_fragmentIdStr) {
    url += "|" + opt_fragmentIdStr;
  }
  url += ":" + encodedPayload;
  ifr.src = url;
  this.getWindow().document.body.appendChild(ifr);
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "msg sent: " + url);
};
goog.net.xpc.IframeRelayTransport.iframeLoadHandler_ = function() {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "iframe-load");
  goog.dom.removeNode(this);
  this.xpcOnload = null;
};
goog.net.xpc.IframeRelayTransport.prototype.disposeInternal = function() {
  goog.net.xpc.IframeRelayTransport.base(this, "disposeInternal");
  if (goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.cleanup_(0);
  }
};
goog.provide("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.Timer");
goog.require("goog.asserts");
goog.require("goog.async.Deferred");
goog.require("goog.events");
goog.require("goog.events.EventHandler");
goog.require("goog.log");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.net.xpc.NativeMessagingTransport = function(channel, peerHostname, opt_domHelper, opt_oneSidedHandshake, opt_protocolVersion) {
  goog.net.xpc.NativeMessagingTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.protocolVersion_ = opt_protocolVersion || 2;
  goog.asserts.assert(this.protocolVersion_ >= 1);
  goog.asserts.assert(this.protocolVersion_ <= 2);
  this.peerHostname_ = peerHostname || "*";
  this.eventHandler_ = new goog.events.EventHandler(this);
  this.maybeAttemptToConnectTimer_ = new goog.Timer(100, this.getWindow());
  this.oneSidedHandshake_ = !!opt_oneSidedHandshake;
  this.setupAckReceived_ = new goog.async.Deferred;
  this.setupAckSent_ = new goog.async.Deferred;
  this.connected_ = new goog.async.Deferred;
  this.endpointId_ = goog.net.xpc.getRandomString(10);
  this.peerEndpointId_ = null;
  if (this.oneSidedHandshake_) {
    if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER) {
      this.connected_.awaitDeferred(this.setupAckReceived_);
    } else {
      this.connected_.awaitDeferred(this.setupAckSent_);
    }
  } else {
    this.connected_.awaitDeferred(this.setupAckReceived_);
    if (this.protocolVersion_ == 2) {
      this.connected_.awaitDeferred(this.setupAckSent_);
    }
  }
  this.connected_.addCallback(this.notifyConnected_, this);
  this.connected_.callback(true);
  this.eventHandler_.listen(this.maybeAttemptToConnectTimer_, goog.Timer.TICK, this.maybeAttemptToConnect_);
  goog.log.info(goog.net.xpc.logger, "NativeMessagingTransport created.  " + "protocolVersion\x3d" + this.protocolVersion_ + ", oneSidedHandshake\x3d" + this.oneSidedHandshake_ + ", role\x3d" + this.channel_.getRole());
};
goog.inherits(goog.net.xpc.NativeMessagingTransport, goog.net.xpc.Transport);
goog.net.xpc.NativeMessagingTransport.CONNECTION_DELAY_MS_ = 200;
goog.net.xpc.NativeMessagingTransport.prototype.peerProtocolVersion_ = null;
goog.net.xpc.NativeMessagingTransport.prototype.initialized_ = false;
goog.net.xpc.NativeMessagingTransport.prototype.transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_ = ",";
goog.net.xpc.NativeMessagingTransport.activeCount_ = {};
goog.net.xpc.NativeMessagingTransport.sendTimerId_ = 0;
goog.net.xpc.NativeMessagingTransport.prototype.couldPeerVersionBe_ = function(version) {
  return this.peerProtocolVersion_ == null || this.peerProtocolVersion_ == version;
};
goog.net.xpc.NativeMessagingTransport.initialize_ = function(listenWindow) {
  var uid = goog.getUid(listenWindow);
  var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
  if (!goog.isNumber(value)) {
    value = 0;
  }
  if (value == 0) {
    goog.events.listen(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport);
  }
  goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value + 1;
};
goog.net.xpc.NativeMessagingTransport.messageReceived_ = function(msgEvt) {
  var data = msgEvt.getBrowserEvent().data;
  if (!goog.isString(data)) {
    return false;
  }
  var headDelim = data.indexOf("|");
  var serviceDelim = data.indexOf(":");
  if (headDelim == -1 || serviceDelim == -1) {
    return false;
  }
  var channelName = data.substring(0, headDelim);
  var service = data.substring(headDelim + 1, serviceDelim);
  var payload = data.substring(serviceDelim + 1);
  goog.log.fine(goog.net.xpc.logger, "messageReceived: channel\x3d" + channelName + ", service\x3d" + service + ", payload\x3d" + payload);
  var channel = goog.net.xpc.channels[channelName];
  if (channel) {
    channel.xpcDeliver(service, payload, msgEvt.getBrowserEvent().origin);
    return true;
  }
  var transportMessageType = goog.net.xpc.NativeMessagingTransport.parseTransportPayload_(payload)[0];
  for (var staleChannelName in goog.net.xpc.channels) {
    var staleChannel = goog.net.xpc.channels[staleChannelName];
    if (staleChannel.getRole() == goog.net.xpc.CrossPageChannelRole.INNER && !staleChannel.isConnected() && service == goog.net.xpc.TRANSPORT_SERVICE_ && (transportMessageType == goog.net.xpc.SETUP || transportMessageType == goog.net.xpc.SETUP_NTPV2)) {
      staleChannel.updateChannelNameAndCatalog(channelName);
      staleChannel.xpcDeliver(service, payload);
      return true;
    }
  }
  goog.log.info(goog.net.xpc.logger, 'channel name mismatch; message ignored"');
  return false;
};
goog.net.xpc.NativeMessagingTransport.prototype.transportServiceHandler = function(payload) {
  var transportParts = goog.net.xpc.NativeMessagingTransport.parseTransportPayload_(payload);
  var transportMessageType = transportParts[0];
  var peerEndpointId = transportParts[1];
  switch(transportMessageType) {
    case goog.net.xpc.SETUP_ACK_:
      this.setPeerProtocolVersion_(1);
      if (!this.setupAckReceived_.hasFired()) {
        this.setupAckReceived_.callback(true);
      }
      break;
    case goog.net.xpc.SETUP_ACK_NTPV2:
      if (this.protocolVersion_ == 2) {
        this.setPeerProtocolVersion_(2);
        if (!this.setupAckReceived_.hasFired()) {
          this.setupAckReceived_.callback(true);
        }
      }
      break;
    case goog.net.xpc.SETUP:
      this.setPeerProtocolVersion_(1);
      this.sendSetupAckMessage_(1);
      break;
    case goog.net.xpc.SETUP_NTPV2:
      if (this.protocolVersion_ == 2) {
        var prevPeerProtocolVersion = this.peerProtocolVersion_;
        this.setPeerProtocolVersion_(2);
        this.sendSetupAckMessage_(2);
        if ((prevPeerProtocolVersion == 1 || this.peerEndpointId_ != null) && this.peerEndpointId_ != peerEndpointId) {
          goog.log.info(goog.net.xpc.logger, "Sending SETUP and changing peer ID to: " + peerEndpointId);
          this.sendSetupMessage_();
        }
        this.peerEndpointId_ = peerEndpointId;
      }
      break;
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.sendSetupMessage_ = function() {
  goog.asserts.assert(!(this.protocolVersion_ == 1 && this.peerProtocolVersion_ == 2));
  if (this.protocolVersion_ == 2 && this.couldPeerVersionBe_(2)) {
    var payload = goog.net.xpc.SETUP_NTPV2;
    payload += goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_;
    payload += this.endpointId_;
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, payload);
  }
  if (this.couldPeerVersionBe_(1)) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.sendSetupAckMessage_ = function(protocolVersion) {
  goog.asserts.assert(this.protocolVersion_ != 1 || protocolVersion != 2, "Shouldn't try to send a v2 setup ack in v1 mode.");
  if (this.protocolVersion_ == 2 && this.couldPeerVersionBe_(2) && protocolVersion == 2) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_NTPV2);
  } else {
    if (this.couldPeerVersionBe_(1) && protocolVersion == 1) {
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    } else {
      return;
    }
  }
  if (!this.setupAckSent_.hasFired()) {
    this.setupAckSent_.callback(true);
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.setPeerProtocolVersion_ = function(version) {
  if (version > this.peerProtocolVersion_) {
    this.peerProtocolVersion_ = version;
  }
  if (this.peerProtocolVersion_ == 1) {
    if (!this.setupAckSent_.hasFired() && !this.oneSidedHandshake_) {
      this.setupAckSent_.callback(true);
    }
    this.peerEndpointId_ = null;
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.connect = function() {
  goog.net.xpc.NativeMessagingTransport.initialize_(this.getWindow());
  this.initialized_ = true;
  this.maybeAttemptToConnect_();
};
goog.net.xpc.NativeMessagingTransport.prototype.maybeAttemptToConnect_ = function() {
  var outerFrame = this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER;
  if (this.oneSidedHandshake_ && outerFrame || this.channel_.isConnected() || this.isDisposed()) {
    this.maybeAttemptToConnectTimer_.stop();
    return;
  }
  this.maybeAttemptToConnectTimer_.start();
  this.sendSetupMessage_();
};
goog.net.xpc.NativeMessagingTransport.prototype.send = function(service, payload) {
  var win = this.channel_.getPeerWindowObject();
  if (!win) {
    goog.log.fine(goog.net.xpc.logger, "send(): window not ready");
    return;
  }
  this.send = function(service, payload) {
    var transport = this;
    var channelName = this.channel_.name;
    var sendFunctor = function() {
      transport.sendTimerId_ = 0;
      try {
        var obj = win.postMessage ? win : win.document;
        if (!obj.postMessage) {
          goog.log.warning(goog.net.xpc.logger, "Peer window had no postMessage function.");
          return;
        }
        obj.postMessage(channelName + "|" + service + ":" + payload, transport.peerHostname_);
        goog.log.fine(goog.net.xpc.logger, "send(): service\x3d" + service + " payload\x3d" + payload + " to hostname\x3d" + transport.peerHostname_);
      } catch (error) {
        goog.log.warning(goog.net.xpc.logger, "Error performing postMessage, ignoring.", error);
      }
    };
    this.sendTimerId_ = goog.Timer.callOnce(sendFunctor, 0);
  };
  this.send(service, payload);
};
goog.net.xpc.NativeMessagingTransport.prototype.notifyConnected_ = function() {
  var delay = this.protocolVersion_ == 1 || this.peerProtocolVersion_ == 1 ? goog.net.xpc.NativeMessagingTransport.CONNECTION_DELAY_MS_ : undefined;
  this.channel_.notifyConnected(delay);
};
goog.net.xpc.NativeMessagingTransport.prototype.disposeInternal = function() {
  if (this.initialized_) {
    var listenWindow = this.getWindow();
    var uid = goog.getUid(listenWindow);
    var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
    goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value - 1;
    if (value == 1) {
      goog.events.unlisten(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport);
    }
  }
  if (this.sendTimerId_) {
    goog.Timer.clear(this.sendTimerId_);
    this.sendTimerId_ = 0;
  }
  goog.dispose(this.eventHandler_);
  delete this.eventHandler_;
  goog.dispose(this.maybeAttemptToConnectTimer_);
  delete this.maybeAttemptToConnectTimer_;
  this.setupAckReceived_.cancel();
  delete this.setupAckReceived_;
  this.setupAckSent_.cancel();
  delete this.setupAckSent_;
  this.connected_.cancel();
  delete this.connected_;
  delete this.send;
  goog.net.xpc.NativeMessagingTransport.base(this, "disposeInternal");
};
goog.net.xpc.NativeMessagingTransport.parseTransportPayload_ = function(payload) {
  var transportParts = (payload.split(goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_));
  transportParts[1] = transportParts[1] || null;
  return transportParts;
};
goog.provide("goog.net.xpc.CrossPageChannel");
goog.require("goog.Uri");
goog.require("goog.async.Deferred");
goog.require("goog.async.Delay");
goog.require("goog.dispose");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventType");
goog.require("goog.json");
goog.require("goog.log");
goog.require("goog.messaging.AbstractChannel");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.ChannelStates");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.DirectTransport");
goog.require("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc.IframePollingTransport");
goog.require("goog.net.xpc.IframeRelayTransport");
goog.require("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.net.xpc.UriCfgFields");
goog.require("goog.string");
goog.require("goog.uri.utils");
goog.require("goog.userAgent");
goog.net.xpc.CrossPageChannel = function(cfg, opt_domHelper) {
  goog.net.xpc.CrossPageChannel.base(this, "constructor");
  for (var i = 0, uriField;uriField = goog.net.xpc.UriCfgFields[i];i++) {
    if (uriField in cfg && !/^https?:\/\//.test(cfg[uriField])) {
      throw Error("URI " + cfg[uriField] + " is invalid for field " + uriField);
    }
  }
  this.cfg_ = cfg;
  this.name = this.cfg_[goog.net.xpc.CfgFields.CHANNEL_NAME] || goog.net.xpc.getRandomString(10);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
  this.deferredDeliveries_ = [];
  this.peerLoadHandler_ = new goog.events.EventHandler(this);
  cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] || goog.uri.utils.getHost(this.domHelper_.getWindow().location.href) + "/robots.txt";
  cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] || goog.uri.utils.getHost(cfg[goog.net.xpc.CfgFields.PEER_URI] || "") + "/robots.txt";
  goog.net.xpc.channels[this.name] = this;
  if (!goog.events.getListener(window, goog.events.EventType.UNLOAD, goog.net.xpc.CrossPageChannel.disposeAll_)) {
    goog.events.listenOnce(window, goog.events.EventType.UNLOAD, goog.net.xpc.CrossPageChannel.disposeAll_);
  }
  goog.log.info(goog.net.xpc.logger, "CrossPageChannel created: " + this.name);
};
goog.inherits(goog.net.xpc.CrossPageChannel, goog.messaging.AbstractChannel);
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_ = new RegExp("^%*" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_ = new RegExp("^%+" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.prototype.connectionDelay_ = null;
goog.net.xpc.CrossPageChannel.prototype.peerWindowDeferred_ = null;
goog.net.xpc.CrossPageChannel.prototype.transport_ = null;
goog.net.xpc.CrossPageChannel.prototype.state_ = goog.net.xpc.ChannelStates.NOT_CONNECTED;
goog.net.xpc.CrossPageChannel.prototype.isConnected = function() {
  return this.state_ == goog.net.xpc.ChannelStates.CONNECTED;
};
goog.net.xpc.CrossPageChannel.prototype.peerWindowObject_ = null;
goog.net.xpc.CrossPageChannel.prototype.iframeElement_ = null;
goog.net.xpc.CrossPageChannel.prototype.getConfig = function() {
  return this.cfg_;
};
goog.net.xpc.CrossPageChannel.prototype.getIframeElement = function() {
  return this.iframeElement_;
};
goog.net.xpc.CrossPageChannel.prototype.setPeerWindowObject = function(peerWindowObject) {
  this.peerWindowObject_ = peerWindowObject;
};
goog.net.xpc.CrossPageChannel.prototype.getPeerWindowObject = function() {
  return this.peerWindowObject_;
};
goog.net.xpc.CrossPageChannel.prototype.isPeerAvailable = function() {
  try {
    return!!this.peerWindowObject_ && !Boolean(this.peerWindowObject_.closed);
  } catch (e) {
    return false;
  }
};
goog.net.xpc.CrossPageChannel.prototype.determineTransportType_ = function() {
  var transportType;
  if (goog.isFunction(document.postMessage) || goog.isFunction(window.postMessage) || goog.userAgent.IE && window.postMessage) {
    transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
  } else {
    if (goog.userAgent.GECKO) {
      transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
    } else {
      if (goog.userAgent.IE && this.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI]) {
        transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
      } else {
        if (goog.userAgent.IE && goog.net.xpc.NixTransport.isNixSupported()) {
          transportType = goog.net.xpc.TransportTypes.NIX;
        } else {
          transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
        }
      }
    }
  }
  return transportType;
};
goog.net.xpc.CrossPageChannel.prototype.createTransport_ = function() {
  if (this.transport_) {
    return;
  }
  var CfgFields = goog.net.xpc.CfgFields;
  if (!this.cfg_[CfgFields.TRANSPORT]) {
    this.cfg_[CfgFields.TRANSPORT] = this.determineTransportType_();
  }
  switch(this.cfg_[CfgFields.TRANSPORT]) {
    case goog.net.xpc.TransportTypes.NATIVE_MESSAGING:
      var protocolVersion = this.cfg_[CfgFields.NATIVE_TRANSPORT_PROTOCOL_VERSION] || 2;
      this.transport_ = new goog.net.xpc.NativeMessagingTransport(this, this.cfg_[CfgFields.PEER_HOSTNAME], this.domHelper_, !!this.cfg_[CfgFields.ONE_SIDED_HANDSHAKE], protocolVersion);
      break;
    case goog.net.xpc.TransportTypes.NIX:
      this.transport_ = new goog.net.xpc.NixTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD:
      this.transport_ = new goog.net.xpc.FrameElementMethodTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_RELAY:
      this.transport_ = new goog.net.xpc.IframeRelayTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_POLLING:
      this.transport_ = new goog.net.xpc.IframePollingTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.DIRECT:
      if (this.peerWindowObject_ && goog.net.xpc.DirectTransport.isSupported((this.peerWindowObject_))) {
        this.transport_ = new goog.net.xpc.DirectTransport(this, this.domHelper_);
      } else {
        goog.log.info(goog.net.xpc.logger, "DirectTransport not supported for this window, peer window in" + " different security context or not set yet.");
      }
      break;
  }
  if (this.transport_) {
    goog.log.info(goog.net.xpc.logger, "Transport created: " + this.transport_.getName());
  } else {
    throw Error("CrossPageChannel: No suitable transport found!");
  }
};
goog.net.xpc.CrossPageChannel.prototype.getTransportType = function() {
  return this.transport_.getType();
};
goog.net.xpc.CrossPageChannel.prototype.getTransportName = function() {
  return this.transport_.getName();
};
goog.net.xpc.CrossPageChannel.prototype.getPeerConfiguration = function() {
  var peerCfg = {};
  peerCfg[goog.net.xpc.CfgFields.CHANNEL_NAME] = this.name;
  peerCfg[goog.net.xpc.CfgFields.TRANSPORT] = this.cfg_[goog.net.xpc.CfgFields.TRANSPORT];
  peerCfg[goog.net.xpc.CfgFields.ONE_SIDED_HANDSHAKE] = this.cfg_[goog.net.xpc.CfgFields.ONE_SIDED_HANDSHAKE];
  if (this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_RELAY_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI];
  }
  if (this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  }
  if (this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI];
  }
  var role = this.cfg_[goog.net.xpc.CfgFields.ROLE];
  if (role) {
    peerCfg[goog.net.xpc.CfgFields.ROLE] = role == goog.net.xpc.CrossPageChannelRole.INNER ? goog.net.xpc.CrossPageChannelRole.OUTER : goog.net.xpc.CrossPageChannelRole.INNER;
  }
  return peerCfg;
};
goog.net.xpc.CrossPageChannel.prototype.createPeerIframe = function(parentElm, opt_configureIframeCb, opt_addCfgParam) {
  goog.log.info(goog.net.xpc.logger, "createPeerIframe()");
  var iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if (!iframeId) {
    iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID] = "xpcpeer" + goog.net.xpc.getRandomString(4);
  }
  var iframeElm = goog.dom.getDomHelper(parentElm).createElement("IFRAME");
  iframeElm.id = iframeElm.name = iframeId;
  if (opt_configureIframeCb) {
    opt_configureIframeCb(iframeElm);
  } else {
    iframeElm.style.width = iframeElm.style.height = "100%";
  }
  this.cleanUpIncompleteConnection_();
  this.peerWindowDeferred_ = new goog.async.Deferred(undefined, this);
  var peerUri = this.getPeerUri(opt_addCfgParam);
  this.peerLoadHandler_.listenOnceWithScope(iframeElm, "load", this.peerWindowDeferred_.callback, false, this.peerWindowDeferred_);
  if (goog.userAgent.GECKO || goog.userAgent.WEBKIT) {
    window.setTimeout(goog.bind(function() {
      parentElm.appendChild(iframeElm);
      iframeElm.src = peerUri.toString();
      goog.log.info(goog.net.xpc.logger, "peer iframe created (" + iframeId + ")");
    }, this), 1);
  } else {
    iframeElm.src = peerUri.toString();
    parentElm.appendChild(iframeElm);
    goog.log.info(goog.net.xpc.logger, "peer iframe created (" + iframeId + ")");
  }
  return(iframeElm);
};
goog.net.xpc.CrossPageChannel.prototype.cleanUpIncompleteConnection_ = function() {
  if (this.peerWindowDeferred_) {
    this.peerWindowDeferred_.cancel();
    this.peerWindowDeferred_ = null;
  }
  this.deferredDeliveries_.length = 0;
  this.peerLoadHandler_.removeAll();
};
goog.net.xpc.CrossPageChannel.prototype.getPeerUri = function(opt_addCfgParam) {
  var peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI];
  if (goog.isString(peerUri)) {
    peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI] = new goog.Uri(peerUri);
  }
  if (opt_addCfgParam !== false) {
    peerUri.setParameterValue("xpc", goog.json.serialize(this.getPeerConfiguration()));
  }
  return peerUri;
};
goog.net.xpc.CrossPageChannel.prototype.connect = function(opt_connectCb) {
  this.connectCb_ = opt_connectCb || goog.nullFunction;
  if (this.peerWindowDeferred_) {
    this.peerWindowDeferred_.addCallback(this.continueConnection_);
  } else {
    this.continueConnection_();
  }
};
goog.net.xpc.CrossPageChannel.prototype.continueConnection_ = function() {
  goog.log.info(goog.net.xpc.logger, "continueConnection_()");
  this.peerWindowDeferred_ = null;
  if (this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]) {
    this.iframeElement_ = this.domHelper_.getElement(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]);
  }
  if (this.iframeElement_) {
    var winObj = this.iframeElement_.contentWindow;
    if (!winObj) {
      winObj = window.frames[this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]];
    }
    this.setPeerWindowObject(winObj);
  }
  if (!this.peerWindowObject_) {
    if (window == window.top) {
      throw Error("CrossPageChannel: Can't connect, peer window-object not set.");
    } else {
      this.setPeerWindowObject(window.parent);
    }
  }
  this.createTransport_();
  this.transport_.connect();
  while (this.deferredDeliveries_.length > 0) {
    this.deferredDeliveries_.shift()();
  }
};
goog.net.xpc.CrossPageChannel.prototype.close = function() {
  this.cleanUpIncompleteConnection_();
  this.state_ = goog.net.xpc.ChannelStates.CLOSED;
  goog.dispose(this.transport_);
  this.transport_ = null;
  this.connectCb_ = null;
  goog.dispose(this.connectionDelay_);
  this.connectionDelay_ = null;
  goog.log.info(goog.net.xpc.logger, 'Channel "' + this.name + '" closed');
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected = function(opt_delay) {
  if (this.isConnected() || this.connectionDelay_ && this.connectionDelay_.isActive()) {
    return;
  }
  this.state_ = goog.net.xpc.ChannelStates.CONNECTED;
  goog.log.info(goog.net.xpc.logger, 'Channel "' + this.name + '" connected');
  goog.dispose(this.connectionDelay_);
  if (goog.isDef(opt_delay)) {
    this.connectionDelay_ = new goog.async.Delay(this.connectCb_, opt_delay);
    this.connectionDelay_.start();
  } else {
    this.connectionDelay_ = null;
    this.connectCb_();
  }
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected_ = goog.net.xpc.CrossPageChannel.prototype.notifyConnected;
goog.net.xpc.CrossPageChannel.prototype.notifyTransportError = function() {
  goog.log.info(goog.net.xpc.logger, "Transport Error");
  this.close();
};
goog.net.xpc.CrossPageChannel.prototype.send = function(serviceName, payload) {
  if (!this.isConnected()) {
    goog.log.error(goog.net.xpc.logger, "Can't send. Channel not connected.");
    return;
  }
  if (!this.isPeerAvailable()) {
    goog.log.error(goog.net.xpc.logger, "Peer has disappeared.");
    this.close();
    return;
  }
  if (goog.isObject(payload)) {
    payload = goog.json.serialize(payload);
  }
  this.transport_.send(this.escapeServiceName_(serviceName), payload);
};
goog.net.xpc.CrossPageChannel.prototype.xpcDeliver = function(serviceName, payload, opt_origin) {
  if (this.peerWindowDeferred_) {
    this.deferredDeliveries_.push(goog.bind(this.xpcDeliver, this, serviceName, payload, opt_origin));
    return;
  }
  if (!this.isMessageOriginAcceptable_(opt_origin)) {
    goog.log.warning(goog.net.xpc.logger, 'Message received from unapproved origin "' + opt_origin + '" - rejected.');
    return;
  }
  if (this.isDisposed()) {
    goog.log.warning(goog.net.xpc.logger, "CrossPageChannel::xpcDeliver(): Disposed.");
  } else {
    if (!serviceName || serviceName == goog.net.xpc.TRANSPORT_SERVICE_) {
      this.transport_.transportServiceHandler(payload);
    } else {
      if (this.isConnected()) {
        this.deliver(this.unescapeServiceName_(serviceName), payload);
      } else {
        goog.log.info(goog.net.xpc.logger, "CrossPageChannel::xpcDeliver(): Not connected.");
      }
    }
  }
};
goog.net.xpc.CrossPageChannel.prototype.escapeServiceName_ = function(name) {
  if (goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_.test(name)) {
    name = "%" + name;
  }
  return name.replace(/[%:|]/g, encodeURIComponent);
};
goog.net.xpc.CrossPageChannel.prototype.unescapeServiceName_ = function(name) {
  name = name.replace(/%[0-9a-f]{2}/gi, decodeURIComponent);
  if (goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_.test(name)) {
    return name.substring(1);
  } else {
    return name;
  }
};
goog.net.xpc.CrossPageChannel.prototype.getRole = function() {
  var role = this.cfg_[goog.net.xpc.CfgFields.ROLE];
  if (goog.isNumber(role)) {
    return role;
  } else {
    return window.parent == this.peerWindowObject_ ? goog.net.xpc.CrossPageChannelRole.INNER : goog.net.xpc.CrossPageChannelRole.OUTER;
  }
};
goog.net.xpc.CrossPageChannel.prototype.updateChannelNameAndCatalog = function(name) {
  goog.log.fine(goog.net.xpc.logger, "changing channel name to " + name);
  delete goog.net.xpc.channels[this.name];
  this.name = name;
  goog.net.xpc.channels[name] = this;
};
goog.net.xpc.CrossPageChannel.prototype.isMessageOriginAcceptable_ = function(opt_origin) {
  var peerHostname = this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
  return goog.string.isEmptySafe(opt_origin) || goog.string.isEmptySafe(peerHostname) || opt_origin == this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
};
goog.net.xpc.CrossPageChannel.prototype.disposeInternal = function() {
  this.close();
  this.peerWindowObject_ = null;
  this.iframeElement_ = null;
  delete goog.net.xpc.channels[this.name];
  goog.dispose(this.peerLoadHandler_);
  delete this.peerLoadHandler_;
  goog.net.xpc.CrossPageChannel.base(this, "disposeInternal");
};
goog.net.xpc.CrossPageChannel.disposeAll_ = function() {
  for (var name in goog.net.xpc.channels) {
    goog.dispose(goog.net.xpc.channels[name]);
  }
};
goog.provide("clojure.browser.event");
goog.require("cljs.core");
goog.require("goog.events.EventType");
goog.require("goog.events.EventTarget");
goog.require("goog.events");
goog.require("goog.events");
clojure.browser.event.IEventType = function() {
  var obj19146 = {};
  return obj19146;
}();
clojure.browser.event.event_types = function event_types(this$) {
  if (function() {
    var and__3749__auto__ = this$;
    if (and__3749__auto__) {
      return this$.clojure$browser$event$IEventType$event_types$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return this$.clojure$browser$event$IEventType$event_types$arity$1(this$);
  } else {
    var x__4400__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3761__auto__ = clojure.browser.event.event_types[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = clojure.browser.event.event_types["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEventType.event-types", this$);
        }
      }
    }().call(null, this$);
  }
};
goog.events.EventTarget.prototype.clojure$browser$event$IEventType$ = true;
goog.events.EventTarget.prototype.clojure$browser$event$IEventType$event_types$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
    return function(p__19147) {
      var vec__19148 = p__19147;
      var k = cljs.core.nth.call(null, vec__19148, 0, null);
      var v = cljs.core.nth.call(null, vec__19148, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
    };
  }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))));
};
if (typeof Element !== "undefined") {
  Element.prototype.clojure$browser$event$IEventType$ = true;
  Element.prototype.clojure$browser$event$IEventType$event_types$arity$1 = function(this$) {
    var this$__$1 = this;
    return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
      return function(p__19149) {
        var vec__19150 = p__19149;
        var k = cljs.core.nth.call(null, vec__19150, 0, null);
        var v = cljs.core.nth.call(null, vec__19150, 1, null);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
      };
    }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))));
  };
} else {
}
clojure.browser.event.listen = function() {
  var listen = null;
  var listen__3 = function(src, type, fn) {
    return listen.call(null, src, type, fn, false);
  };
  var listen__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listen(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_);
  };
  listen = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen__3.call(this, src, type, fn);
      case 4:
        return listen__4.call(this, src, type, fn, capture_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen.cljs$core$IFn$_invoke$arity$3 = listen__3;
  listen.cljs$core$IFn$_invoke$arity$4 = listen__4;
  return listen;
}();
clojure.browser.event.listen_once = function() {
  var listen_once = null;
  var listen_once__3 = function(src, type, fn) {
    return listen_once.call(null, src, type, fn, false);
  };
  var listen_once__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listenOnce(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_);
  };
  listen_once = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen_once__3.call(this, src, type, fn);
      case 4:
        return listen_once__4.call(this, src, type, fn, capture_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen_once.cljs$core$IFn$_invoke$arity$3 = listen_once__3;
  listen_once.cljs$core$IFn$_invoke$arity$4 = listen_once__4;
  return listen_once;
}();
clojure.browser.event.unlisten = function() {
  var unlisten = null;
  var unlisten__3 = function(src, type, fn) {
    return unlisten.call(null, src, type, fn, false);
  };
  var unlisten__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.unlisten(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_);
  };
  unlisten = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return unlisten__3.call(this, src, type, fn);
      case 4:
        return unlisten__4.call(this, src, type, fn, capture_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unlisten.cljs$core$IFn$_invoke$arity$3 = unlisten__3;
  unlisten.cljs$core$IFn$_invoke$arity$4 = unlisten__4;
  return unlisten;
}();
clojure.browser.event.unlisten_by_key = function unlisten_by_key(key) {
  return goog.events.unlistenByKey(key);
};
clojure.browser.event.dispatch_event = function dispatch_event(src, event) {
  return goog.events.dispatchEvent(src, event);
};
clojure.browser.event.expose = function expose(e) {
  return goog.events.expose(e);
};
clojure.browser.event.fire_listeners = function fire_listeners(obj, type, capture, event) {
  return null;
};
clojure.browser.event.total_listener_count = function total_listener_count() {
  return goog.events.getTotalListenerCount();
};
clojure.browser.event.get_listener = function get_listener(src, type, listener, opt_capt, opt_handler) {
  return null;
};
clojure.browser.event.all_listeners = function all_listeners(obj, type, capture) {
  return null;
};
clojure.browser.event.unique_event_id = function unique_event_id(event_type) {
  return null;
};
clojure.browser.event.has_listener = function has_listener(obj, opt_type, opt_capture) {
  return null;
};
clojure.browser.event.remove_all = function remove_all(opt_obj, opt_type, opt_capt) {
  return null;
};
goog.provide("clojure.browser.net");
goog.require("cljs.core");
goog.require("goog.Uri");
goog.require("goog.net.xpc.CrossPageChannel");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.EventType");
goog.require("goog.net.XhrIo");
goog.require("goog.json");
goog.require("goog.json");
goog.require("clojure.browser.event");
goog.require("clojure.browser.event");
clojure.browser.net._STAR_timeout_STAR_ = 1E4;
clojure.browser.net.event_types = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__19151) {
  var vec__19152 = p__19151;
  var k = cljs.core.nth.call(null, vec__19152, 0, null);
  var v = cljs.core.nth.call(null, vec__19152, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
}, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
clojure.browser.net.IConnection = function() {
  var obj19154 = {};
  return obj19154;
}();
clojure.browser.net.connect = function() {
  var connect = null;
  var connect__1 = function(this$) {
    if (function() {
      var and__3749__auto__ = this$;
      if (and__3749__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$1;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$1(this$);
    } else {
      var x__4400__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3761__auto__ = clojure.browser.net.connect[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = clojure.browser.net.connect["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var connect__2 = function(this$, opt1) {
    if (function() {
      var and__3749__auto__ = this$;
      if (and__3749__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$2;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$2(this$, opt1);
    } else {
      var x__4400__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3761__auto__ = clojure.browser.net.connect[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = clojure.browser.net.connect["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1);
    }
  };
  var connect__3 = function(this$, opt1, opt2) {
    if (function() {
      var and__3749__auto__ = this$;
      if (and__3749__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$3;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$3(this$, opt1, opt2);
    } else {
      var x__4400__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3761__auto__ = clojure.browser.net.connect[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = clojure.browser.net.connect["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2);
    }
  };
  var connect__4 = function(this$, opt1, opt2, opt3) {
    if (function() {
      var and__3749__auto__ = this$;
      if (and__3749__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$4;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$4(this$, opt1, opt2, opt3);
    } else {
      var x__4400__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3761__auto__ = clojure.browser.net.connect[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = clojure.browser.net.connect["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2, opt3);
    }
  };
  connect = function(this$, opt1, opt2, opt3) {
    switch(arguments.length) {
      case 1:
        return connect__1.call(this, this$);
      case 2:
        return connect__2.call(this, this$, opt1);
      case 3:
        return connect__3.call(this, this$, opt1, opt2);
      case 4:
        return connect__4.call(this, this$, opt1, opt2, opt3);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  connect.cljs$core$IFn$_invoke$arity$1 = connect__1;
  connect.cljs$core$IFn$_invoke$arity$2 = connect__2;
  connect.cljs$core$IFn$_invoke$arity$3 = connect__3;
  connect.cljs$core$IFn$_invoke$arity$4 = connect__4;
  return connect;
}();
clojure.browser.net.transmit = function() {
  var transmit = null;
  var transmit__2 = function(this$, opt) {
    if (function() {
      var and__3749__auto__ = this$;
      if (and__3749__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$2;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$2(this$, opt);
    } else {
      var x__4400__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3761__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt);
    }
  };
  var transmit__3 = function(this$, opt, opt2) {
    if (function() {
      var and__3749__auto__ = this$;
      if (and__3749__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$3;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$3(this$, opt, opt2);
    } else {
      var x__4400__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3761__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2);
    }
  };
  var transmit__4 = function(this$, opt, opt2, opt3) {
    if (function() {
      var and__3749__auto__ = this$;
      if (and__3749__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$4;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$4(this$, opt, opt2, opt3);
    } else {
      var x__4400__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3761__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3);
    }
  };
  var transmit__5 = function(this$, opt, opt2, opt3, opt4) {
    if (function() {
      var and__3749__auto__ = this$;
      if (and__3749__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$5;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$5(this$, opt, opt2, opt3, opt4);
    } else {
      var x__4400__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3761__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4);
    }
  };
  var transmit__6 = function(this$, opt, opt2, opt3, opt4, opt5) {
    if (function() {
      var and__3749__auto__ = this$;
      if (and__3749__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$6;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$6(this$, opt, opt2, opt3, opt4, opt5);
    } else {
      var x__4400__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3761__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4, opt5);
    }
  };
  transmit = function(this$, opt, opt2, opt3, opt4, opt5) {
    switch(arguments.length) {
      case 2:
        return transmit__2.call(this, this$, opt);
      case 3:
        return transmit__3.call(this, this$, opt, opt2);
      case 4:
        return transmit__4.call(this, this$, opt, opt2, opt3);
      case 5:
        return transmit__5.call(this, this$, opt, opt2, opt3, opt4);
      case 6:
        return transmit__6.call(this, this$, opt, opt2, opt3, opt4, opt5);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transmit.cljs$core$IFn$_invoke$arity$2 = transmit__2;
  transmit.cljs$core$IFn$_invoke$arity$3 = transmit__3;
  transmit.cljs$core$IFn$_invoke$arity$4 = transmit__4;
  transmit.cljs$core$IFn$_invoke$arity$5 = transmit__5;
  transmit.cljs$core$IFn$_invoke$arity$6 = transmit__6;
  return transmit;
}();
clojure.browser.net.close = function close(this$) {
  if (function() {
    var and__3749__auto__ = this$;
    if (and__3749__auto__) {
      return this$.clojure$browser$net$IConnection$close$arity$1;
    } else {
      return and__3749__auto__;
    }
  }()) {
    return this$.clojure$browser$net$IConnection$close$arity$1(this$);
  } else {
    var x__4400__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3761__auto__ = clojure.browser.net.close[goog.typeOf(x__4400__auto__)];
      if (or__3761__auto__) {
        return or__3761__auto__;
      } else {
        var or__3761__auto____$1 = clojure.browser.net.close["_"];
        if (or__3761__auto____$1) {
          return or__3761__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IConnection.close", this$);
        }
      }
    }().call(null, this$);
  }
};
goog.net.XhrIo.prototype.clojure$browser$event$IEventType$ = true;
goog.net.XhrIo.prototype.clojure$browser$event$IEventType$event_types$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
    return function(p__19155) {
      var vec__19156 = p__19155;
      var k = cljs.core.nth.call(null, vec__19156, 0, null);
      var v = cljs.core.nth.call(null, vec__19156, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
    };
  }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$ = true;
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, uri) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, "GET", null, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, uri, method) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, method, null, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$4 = function(this$, uri, method, content) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, method, content, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$5 = function(this$, uri, method, content, headers) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, method, content, headers, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$6 = function(this$, uri, method, content, headers, timeout) {
  var this$__$1 = this;
  this$__$1.setTimeoutInterval(timeout);
  return this$__$1.send(uri, method, content, headers);
};
clojure.browser.net.xpc_config_fields = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__19157) {
  var vec__19158 = p__19157;
  var k = cljs.core.nth.call(null, vec__19158, 0, null);
  var v = cljs.core.nth.call(null, vec__19158, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
}, cljs.core.js__GT_clj.call(null, goog.net.xpc.CfgFields)));
clojure.browser.net.xhr_connection = function xhr_connection() {
  return new goog.net.XhrIo;
};
clojure.browser.net.ICrossPageChannel = function() {
  var obj19160 = {};
  return obj19160;
}();
clojure.browser.net.register_service = function() {
  var register_service = null;
  var register_service__3 = function(this$, service_name, fn) {
    if (function() {
      var and__3749__auto__ = this$;
      if (and__3749__auto__) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3(this$, service_name, fn);
    } else {
      var x__4400__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3761__auto__ = clojure.browser.net.register_service[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = clojure.browser.net.register_service["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn);
    }
  };
  var register_service__4 = function(this$, service_name, fn, encode_json_QMARK_) {
    if (function() {
      var and__3749__auto__ = this$;
      if (and__3749__auto__) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4;
      } else {
        return and__3749__auto__;
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4(this$, service_name, fn, encode_json_QMARK_);
    } else {
      var x__4400__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3761__auto__ = clojure.browser.net.register_service[goog.typeOf(x__4400__auto__)];
        if (or__3761__auto__) {
          return or__3761__auto__;
        } else {
          var or__3761__auto____$1 = clojure.browser.net.register_service["_"];
          if (or__3761__auto____$1) {
            return or__3761__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn, encode_json_QMARK_);
    }
  };
  register_service = function(this$, service_name, fn, encode_json_QMARK_) {
    switch(arguments.length) {
      case 3:
        return register_service__3.call(this, this$, service_name, fn);
      case 4:
        return register_service__4.call(this, this$, service_name, fn, encode_json_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  register_service.cljs$core$IFn$_invoke$arity$3 = register_service__3;
  register_service.cljs$core$IFn$_invoke$arity$4 = register_service__4;
  return register_service;
}();
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$1 = function(this$) {
  var this$__$1 = this;
  return clojure.browser.net.connect.call(null, this$__$1, null);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, on_connect_fn) {
  var this$__$1 = this;
  return this$__$1.connect(on_connect_fn);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, on_connect_fn, config_iframe_fn) {
  var this$__$1 = this;
  return clojure.browser.net.connect.call(null, this$__$1, on_connect_fn, config_iframe_fn, document.body);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$4 = function(this$, on_connect_fn, config_iframe_fn, iframe_parent) {
  var this$__$1 = this;
  this$__$1.createPeerIframe(iframe_parent, config_iframe_fn);
  return this$__$1.connect(on_connect_fn);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, service_name, payload) {
  var this$__$1 = this;
  return this$__$1.send(cljs.core.name.call(null, service_name), payload);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.close();
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$3 = function(this$, service_name, fn) {
  var this$__$1 = this;
  return clojure.browser.net.register_service.call(null, this$__$1, service_name, fn, false);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$4 = function(this$, service_name, fn, encode_json_QMARK_) {
  var this$__$1 = this;
  return this$__$1.registerService(cljs.core.name.call(null, service_name), fn, encode_json_QMARK_);
};
clojure.browser.net.xpc_connection = function() {
  var xpc_connection = null;
  var xpc_connection__0 = function() {
    var temp__4126__auto__ = (new goog.Uri(window.location.href)).getParameterValue("xpc");
    if (cljs.core.truth_(temp__4126__auto__)) {
      var config = temp__4126__auto__;
      return new goog.net.xpc.CrossPageChannel(goog.json.parse(config));
    } else {
      return null;
    }
  };
  var xpc_connection__1 = function(config) {
    return new goog.net.xpc.CrossPageChannel(cljs.core.reduce.call(null, function(sum, p__19166) {
      var vec__19167 = p__19166;
      var k = cljs.core.nth.call(null, vec__19167, 0, null);
      var v = cljs.core.nth.call(null, vec__19167, 1, null);
      var temp__4124__auto__ = cljs.core.get.call(null, clojure.browser.net.xpc_config_fields, k);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var field = temp__4124__auto__;
        var G__19168 = sum;
        G__19168[field] = v;
        return G__19168;
      } else {
        return sum;
      }
    }, function() {
      var obj19170 = {};
      return obj19170;
    }(), config));
  };
  xpc_connection = function(config) {
    switch(arguments.length) {
      case 0:
        return xpc_connection__0.call(this);
      case 1:
        return xpc_connection__1.call(this, config);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  xpc_connection.cljs$core$IFn$_invoke$arity$0 = xpc_connection__0;
  xpc_connection.cljs$core$IFn$_invoke$arity$1 = xpc_connection__1;
  return xpc_connection;
}();
goog.provide("clojure.browser.repl");
goog.require("cljs.core");
goog.require("clojure.browser.event");
goog.require("clojure.browser.event");
goog.require("clojure.browser.net");
goog.require("clojure.browser.net");
clojure.browser.repl.xpc_connection = cljs.core.atom.call(null, null);
clojure.browser.repl.repl_print = function repl_print(data) {
  var temp__4124__auto__ = cljs.core.deref.call(null, clojure.browser.repl.xpc_connection);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var conn = temp__4124__auto__;
    return clojure.browser.net.transmit.call(null, conn, new cljs.core.Keyword(null, "print", "print", 1299562414), cljs.core.pr_str.call(null, data));
  } else {
    return null;
  }
};
clojure.browser.repl.evaluate_javascript = function evaluate_javascript(conn, block) {
  var result = function() {
    try {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "status", "status", -1997798413), new cljs.core.Keyword(null, "success", "success", 1890645906), new cljs.core.Keyword(null, "value", "value", 305978217), [cljs.core.str(eval(block))].join("")], null);
    } catch (e19144) {
      var e = e19144;
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "status", "status", -1997798413), new cljs.core.Keyword(null, "exception", "exception", -335277064), new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.pr_str.call(null, e), new cljs.core.Keyword(null, "stacktrace", "stacktrace", -95588394), cljs.core.truth_(e.hasOwnProperty("stack")) ? e.stack : "No stacktrace available."], null);
    }
  }();
  return cljs.core.pr_str.call(null, result);
};
clojure.browser.repl.send_result = function send_result(connection, url, data) {
  return clojure.browser.net.transmit.call(null, connection, url, "POST", data, null, 0);
};
clojure.browser.repl.send_print = function() {
  var send_print = null;
  var send_print__2 = function(url, data) {
    return send_print.call(null, url, data, 0);
  };
  var send_print__3 = function(url, data, n) {
    var conn = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, conn, new cljs.core.Keyword(null, "error", "error", -978969032), function(conn) {
      return function(_) {
        if (n < 10) {
          return send_print.call(null, url, data, n + 1);
        } else {
          return console.log([cljs.core.str("Could not send "), cljs.core.str(data), cljs.core.str(" after "), cljs.core.str(n), cljs.core.str(" attempts.")].join(""));
        }
      };
    }(conn));
    return clojure.browser.net.transmit.call(null, conn, url, "POST", data, null, 0);
  };
  send_print = function(url, data, n) {
    switch(arguments.length) {
      case 2:
        return send_print__2.call(this, url, data);
      case 3:
        return send_print__3.call(this, url, data, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  send_print.cljs$core$IFn$_invoke$arity$2 = send_print__2;
  send_print.cljs$core$IFn$_invoke$arity$3 = send_print__3;
  return send_print;
}();
clojure.browser.repl.order = cljs.core.atom.call(null, 0);
clojure.browser.repl.wrap_message = function wrap_message(t, data) {
  return cljs.core.pr_str.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), t, new cljs.core.Keyword(null, "content", "content", 15833224), data, new cljs.core.Keyword(null, "order", "order", -1254677256), cljs.core.swap_BANG_.call(null, clojure.browser.repl.order, cljs.core.inc)], null));
};
clojure.browser.repl.start_evaluator = function start_evaluator(url) {
  var temp__4124__auto__ = clojure.browser.net.xpc_connection.call(null);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var repl_connection = temp__4124__auto__;
    var connection = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, connection, new cljs.core.Keyword(null, "success", "success", 1890645906), function(connection, repl_connection, temp__4124__auto__) {
      return function(e) {
        return clojure.browser.net.transmit.call(null, repl_connection, new cljs.core.Keyword(null, "evaluate-javascript", "evaluate-javascript", -315749780), e.currentTarget.getResponseText(cljs.core.List.EMPTY));
      };
    }(connection, repl_connection, temp__4124__auto__));
    clojure.browser.net.register_service.call(null, repl_connection, new cljs.core.Keyword(null, "send-result", "send-result", 35388249), function(connection, repl_connection, temp__4124__auto__) {
      return function(data) {
        return clojure.browser.repl.send_result.call(null, connection, url, clojure.browser.repl.wrap_message.call(null, new cljs.core.Keyword(null, "result", "result", 1415092211), data));
      };
    }(connection, repl_connection, temp__4124__auto__));
    clojure.browser.net.register_service.call(null, repl_connection, new cljs.core.Keyword(null, "print", "print", 1299562414), function(connection, repl_connection, temp__4124__auto__) {
      return function(data) {
        return clojure.browser.repl.send_print.call(null, url, clojure.browser.repl.wrap_message.call(null, new cljs.core.Keyword(null, "print", "print", 1299562414), data));
      };
    }(connection, repl_connection, temp__4124__auto__));
    clojure.browser.net.connect.call(null, repl_connection, cljs.core.constantly.call(null, null));
    return setTimeout(function(connection, repl_connection, temp__4124__auto__) {
      return function() {
        return clojure.browser.repl.send_result.call(null, connection, url, clojure.browser.repl.wrap_message.call(null, new cljs.core.Keyword(null, "ready", "ready", 1086465795), "ready"));
      };
    }(connection, repl_connection, temp__4124__auto__), 50);
  } else {
    return alert("No 'xpc' param provided to child iframe.");
  }
};
clojure.browser.repl.connect = function connect(repl_server_url) {
  var repl_connection = clojure.browser.net.xpc_connection.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "peer_uri", "peer_uri", 910305997), repl_server_url], null));
  cljs.core.swap_BANG_.call(null, clojure.browser.repl.xpc_connection, cljs.core.constantly.call(null, repl_connection));
  clojure.browser.net.register_service.call(null, repl_connection, new cljs.core.Keyword(null, "evaluate-javascript", "evaluate-javascript", -315749780), function(repl_connection) {
    return function(js) {
      return clojure.browser.net.transmit.call(null, repl_connection, new cljs.core.Keyword(null, "send-result", "send-result", 35388249), clojure.browser.repl.evaluate_javascript.call(null, repl_connection, js));
    };
  }(repl_connection));
  return clojure.browser.net.connect.call(null, repl_connection, cljs.core.constantly.call(null, null), function(repl_connection) {
    return function(iframe) {
      return iframe.style.display = "none";
    };
  }(repl_connection));
};
goog.provide("logging_dashboard.connect");
goog.require("cljs.core");
goog.require("clojure.browser.repl");
goog.require("clojure.browser.repl");
clojure.browser.repl.connect.call(null, "http://localhost:9000/repl");
goog.provide("logging_dashboard.server");
goog.require("cljs.core");
goog.require("taoensso.sente");
goog.require("logging_dashboard.routes");
goog.require("taoensso.encore");
goog.require("cljs.core.async");
goog.require("taoensso.sente");
goog.require("taoensso.sente");
goog.require("logging_dashboard.routes");
goog.require("logging_dashboard.routes");
goog.require("taoensso.encore");
goog.require("taoensso.encore");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
var rand_chsk_type_17634 = cljs.core.rand.call(null) >= .5 ? new cljs.core.Keyword(null, "ajax", "ajax", 814345549) : new cljs.core.Keyword(null, "auto", "auto", -566279492);
var map__17633_17635 = taoensso.sente.make_channel_socket_BANG_.call(null, "/chsk", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), rand_chsk_type_17634], null));
var map__17633_17636__$1 = cljs.core.seq_QMARK_.call(null, map__17633_17635) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17633_17635) : map__17633_17635;
var state_17637 = cljs.core.get.call(null, map__17633_17636__$1, new cljs.core.Keyword(null, "state", "state", -1988618099));
var send_fn_17638 = cljs.core.get.call(null, map__17633_17636__$1, new cljs.core.Keyword(null, "send-fn", "send-fn", 351002041));
var ch_recv_17639 = cljs.core.get.call(null, map__17633_17636__$1, new cljs.core.Keyword(null, "ch-recv", "ch-recv", -990916861));
var chsk_17640 = cljs.core.get.call(null, map__17633_17636__$1, new cljs.core.Keyword(null, "chsk", "chsk", -863703081));
logging_dashboard.server.chsk = chsk_17640;
logging_dashboard.server.ch_chsk = ch_recv_17639;
logging_dashboard.server.chsk_send_BANG_ = send_fn_17638;
logging_dashboard.server.chsk_state = state_17637;
logging_dashboard.server.event_msg_handler = function() {
  var method_table__4653__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4654__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4655__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4656__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4657__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn(cljs.core.symbol.call(null, "logging-dashboard.server", "event-msg-handler"), new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4657__auto__, method_table__4653__auto__, prefer_table__4654__auto__, method_cache__4655__auto__, cached_hierarchy__4656__auto__);
}();
logging_dashboard.server.event_msg_handler_STAR_ = function event_msg_handler_STAR_(p__17641) {
  var map__17643 = p__17641;
  var map__17643__$1 = cljs.core.seq_QMARK_.call(null, map__17643) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17643) : map__17643;
  var ev_msg = map__17643__$1;
  var event = cljs.core.get.call(null, map__17643__$1, new cljs.core.Keyword(null, "event", "event", 301435442));
  var _QMARK_data = cljs.core.get.call(null, map__17643__$1, new cljs.core.Keyword(null, "?data", "?data", -9471433));
  var id = cljs.core.get.call(null, map__17643__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
  taoensso.encore.debugf.call(null, "Event: %s", event);
  return logging_dashboard.server.event_msg_handler.call(null, ev_msg);
};
cljs.core._add_method.call(null, logging_dashboard.server.event_msg_handler, new cljs.core.Keyword(null, "default", "default", -1987822328), function(p__17644) {
  var map__17645 = p__17644;
  var map__17645__$1 = cljs.core.seq_QMARK_.call(null, map__17645) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17645) : map__17645;
  var ev_msg = map__17645__$1;
  var event = cljs.core.get.call(null, map__17645__$1, new cljs.core.Keyword(null, "event", "event", 301435442));
  return taoensso.encore.debugf.call(null, "Unhandled event: %s", event);
});
cljs.core._add_method.call(null, logging_dashboard.server.event_msg_handler, new cljs.core.Keyword("some", "broadcast", "some/broadcast", 1765715220), function(p__17646) {
  var map__17647 = p__17646;
  var map__17647__$1 = cljs.core.seq_QMARK_.call(null, map__17647) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17647) : map__17647;
  var ev_msg = map__17647__$1;
  var _QMARK_data = cljs.core.get.call(null, map__17647__$1, new cljs.core.Keyword(null, "?data", "?data", -9471433));
  return taoensso.encore.debugf.call(null, "Broadcast: %s", _QMARK_data);
});
var temp__4126__auto___17648 = document.getElementById("btn1");
if (cljs.core.truth_(temp__4126__auto___17648)) {
  var target_el_17649 = temp__4126__auto___17648;
  target_el_17649.addEventListener("click", function(target_el_17649, temp__4126__auto___17648) {
    return function(ev) {
      taoensso.encore.debugf.call(null, "Triggering event");
      return logging_dashboard.server.chsk_send_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("test", "echo", "test/echo", 1458372903), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "message", "message", -406056002), "1234"], null)], null), 1E4, function(target_el_17649, temp__4126__auto___17648) {
        return function(cb_reply) {
          return taoensso.encore.debugf.call(null, "Reply - %s", cb_reply);
        };
      }(target_el_17649, temp__4126__auto___17648));
    };
  }(target_el_17649, temp__4126__auto___17648));
} else {
}
logging_dashboard.server.router_ = cljs.core.atom.call(null, null);
logging_dashboard.server.stop_server_router_BANG_ = function stop_server_router_BANG_() {
  var temp__4126__auto__ = cljs.core.deref.call(null, logging_dashboard.server.router_);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var stop_f = temp__4126__auto__;
    return stop_f.call(null);
  } else {
    return null;
  }
};
logging_dashboard.server.start_server_router_BANG_ = function start_server_router_BANG_() {
  logging_dashboard.server.stop_server_router_BANG_.call(null);
  return cljs.core.reset_BANG_.call(null, logging_dashboard.server.router_, taoensso.sente.start_chsk_router_BANG_.call(null, logging_dashboard.server.ch_chsk, logging_dashboard.server.event_msg_handler_STAR_));
};
goog.provide("logging_dashboard.main");
goog.require("cljs.core");
goog.require("logging_dashboard.server");
goog.require("logging_dashboard.routes");
goog.require("taoensso.encore");
goog.require("logging_dashboard.server");
goog.require("logging_dashboard.server");
goog.require("logging_dashboard.routes");
goog.require("logging_dashboard.routes");
goog.require("taoensso.encore");
goog.require("taoensso.encore");
taoensso.encore.debugf.call(null, "ClojureScript loaded correctly.");
logging_dashboard.main.start_BANG_ = function start_BANG_() {
  logging_dashboard.server.start_server_router_BANG_.call(null);
  logging_dashboard.routes.init.call(null);
  return taoensso.encore.debugf.call(null, "Started App.");
};
logging_dashboard.main.start_BANG_.call(null);

//# sourceMappingURL=logging-dashboard.js.map